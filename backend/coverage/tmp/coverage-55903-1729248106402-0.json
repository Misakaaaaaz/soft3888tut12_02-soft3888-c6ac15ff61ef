{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9499,"endOffset":9570,"count":155}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9575,"endOffset":9624,"count":1262}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9629,"endOffset":9674,"count":63}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11239,"endOffset":11306,"count":98}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":11964,"endOffset":11992,"count":1576}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12293,"endOffset":12321,"count":286}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12745,"endOffset":12801,"count":2}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":12954,"endOffset":12992,"count":15}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13140,"endOffset":13182,"count":42}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13686,"endOffset":13960,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13831,"endOffset":13955,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13861,"endOffset":13910,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15280,"endOffset":15836,"count":309}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15315,"endOffset":15835,"count":309}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15706,"endOffset":15815,"count":672}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16178,"endOffset":16631,"count":906}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16213,"endOffset":16630,"count":906}],"isBlockCoverage":false},{"functionName":"onFulfilled","ranges":[{"startOffset":16345,"endOffset":16422,"count":1721}],"isBlockCoverage":false}]},{"scriptId":"7","url":"node:internal/per_context/domexception","functions":[{"functionName":"DOMException","ranges":[{"startOffset":1102,"endOffset":1728,"count":3}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/per_context/messageport","functions":[{"functionName":"","ranges":[{"startOffset":407,"endOffset":993,"count":1}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/realm","functions":[{"functionName":"binding","ranges":[{"startOffset":4659,"endOffset":5501,"count":1},{"startOffset":4784,"endOffset":4809,"count":0},{"startOffset":4996,"endOffset":5183,"count":0},{"startOffset":5303,"endOffset":5500,"count":0}],"isBlockCoverage":true},{"functionName":"internalBinding","ranges":[{"startOffset":5981,"endOffset":6243,"count":111}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6509,"endOffset":6663,"count":558},{"startOffset":6645,"endOffset":6660,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9476,"endOffset":9551,"count":217}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9562,"endOffset":9656,"count":928}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9667,"endOffset":10012,"count":618},{"startOffset":9743,"endOffset":9905,"count":0},{"startOffset":9961,"endOffset":9985,"count":84},{"startOffset":9985,"endOffset":10011,"count":534}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10275,"endOffset":10384,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10542,"endOffset":11205,"count":108},{"startOffset":10623,"endOffset":10815,"count":0},{"startOffset":10879,"endOffset":11176,"count":24},{"startOffset":11138,"endOffset":11142,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":11209,"endOffset":11843,"count":23},{"startOffset":11247,"endOffset":11266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11580,"endOffset":11683,"count":23}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":12139,"endOffset":12483,"count":23},{"startOffset":12258,"endOffset":12473,"count":558},{"startOffset":12335,"endOffset":12344,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12487,"endOffset":13309,"count":1809}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13504,"endOffset":13869,"count":1703}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/errors","functions":[{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2771,"endOffset":2862,"count":1}],"isBlockCoverage":true},{"functionName":"hideStackFrames","ranges":[{"startOffset":14657,"endOffset":14954,"count":11}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":14690,"endOffset":14896,"count":2620}],"isBlockCoverage":false},{"functionName":"lazyUv","ranges":[{"startOffset":17119,"endOffset":17199,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":17256,"endOffset":17408,"count":1}],"isBlockCoverage":true},{"functionName":"UVExceptionWithHostPort","ranges":[{"startOffset":18830,"endOffset":19335,"count":1},{"startOffset":18924,"endOffset":18942,"count":0},{"startOffset":19091,"endOffset":19148,"count":0}],"isBlockCoverage":true},{"functionName":"AbortError","ranges":[{"startOffset":26985,"endOffset":27294,"count":3},{"startOffset":27121,"endOffset":27202,"count":0}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":581},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3830,"endOffset":3880,"count":28}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3886,"endOffset":3944,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4086,"endOffset":4122,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4128,"endOffset":4547,"count":2},{"startOffset":4187,"endOffset":4469,"count":1},{"startOffset":4252,"endOffset":4266,"count":0},{"startOffset":4267,"endOffset":4315,"count":0},{"startOffset":4317,"endOffset":4352,"count":0},{"startOffset":4469,"endOffset":4518,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8066,"endOffset":8228,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8330,"endOffset":8526,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11924,"endOffset":11974,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13082,"endOffset":13118,"count":74}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13988,"endOffset":14023,"count":3}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4385,"endOffset":4410,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5763,"endOffset":6041,"count":2},{"startOffset":5989,"endOffset":6039,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":6147,"endOffset":7193,"count":1},{"startOffset":6295,"endOffset":6647,"count":0},{"startOffset":7004,"endOffset":7011,"count":0}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7587,"endOffset":7726,"count":1}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7935,"endOffset":8241,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8816,"endOffset":8997,"count":1},{"startOffset":8859,"endOffset":8934,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9618,"endOffset":9784,"count":1}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9786,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":11102,"endOffset":11841,"count":1}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12905,"endOffset":12976,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":13290,"endOffset":15223,"count":1},{"startOffset":13369,"endOffset":13393,"count":0},{"startOffset":13830,"endOffset":13845,"count":0},{"startOffset":14162,"endOffset":14258,"count":0},{"startOffset":14795,"endOffset":14820,"count":0},{"startOffset":14978,"endOffset":14999,"count":0},{"startOffset":15150,"endOffset":15179,"count":0}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":18542,"endOffset":18864,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":18868,"endOffset":19134,"count":1}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14549,"endOffset":14619,"count":29}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14994,"endOffset":15284,"count":29},{"startOffset":15208,"endOffset":15250,"count":20},{"startOffset":15250,"endOffset":15283,"count":9}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":15601,"endOffset":16094,"count":9},{"startOffset":15711,"endOffset":15742,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16096,"endOffset":16159,"count":141}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16161,"endOffset":16220,"count":28}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16222,"endOffset":16277,"count":29}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16338,"endOffset":16399,"count":28}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16890,"endOffset":17066,"count":28},{"startOffset":17038,"endOffset":17064,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17069,"endOffset":17189,"count":28},{"startOffset":17133,"endOffset":17158,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17534,"endOffset":18104,"count":28},{"startOffset":17754,"endOffset":17804,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18169,"endOffset":18780,"count":28},{"startOffset":18285,"endOffset":18298,"count":0},{"startOffset":18377,"endOffset":18483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1069,"endOffset":1128,"count":265}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1863,"endOffset":2174,"count":8},{"startOffset":1956,"endOffset":2124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2420,"endOffset":2801,"count":3},{"startOffset":2540,"endOffset":2594,"count":0},{"startOffset":2634,"endOffset":2688,"count":0},{"startOffset":2731,"endOffset":2797,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3045,"endOffset":3508,"count":2},{"startOffset":3217,"endOffset":3285,"count":0},{"startOffset":3319,"endOffset":3387,"count":0},{"startOffset":3424,"endOffset":3504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3739,"endOffset":4171,"count":8},{"startOffset":3809,"endOffset":3873,"count":0},{"startOffset":3905,"endOffset":3969,"count":0},{"startOffset":3993,"endOffset":3996,"count":0},{"startOffset":4093,"endOffset":4169,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4363,"endOffset":4475,"count":5834}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4717,"endOffset":5163,"count":17},{"startOffset":4795,"endOffset":4849,"count":0},{"startOffset":4902,"endOffset":4916,"count":12},{"startOffset":4939,"endOffset":4953,"count":0},{"startOffset":4979,"endOffset":5161,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5351,"endOffset":5684,"count":2},{"startOffset":5422,"endOffset":5682,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5495,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5880,"endOffset":5994,"count":2},{"startOffset":5937,"endOffset":5992,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6576,"endOffset":7595,"count":5927},{"startOffset":6667,"endOffset":6907,"count":1974},{"startOffset":6718,"endOffset":6790,"count":0},{"startOffset":6829,"endOffset":6901,"count":0},{"startOffset":6907,"endOffset":7591,"count":3953},{"startOffset":7020,"endOffset":7037,"count":3951},{"startOffset":7039,"endOffset":7111,"count":0},{"startOffset":7209,"endOffset":7231,"count":0},{"startOffset":7233,"endOffset":7305,"count":0},{"startOffset":7461,"endOffset":7511,"count":0},{"startOffset":7513,"endOffset":7585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8549,"endOffset":8827,"count":2},{"startOffset":8611,"endOffset":8674,"count":0},{"startOffset":8707,"endOffset":8825,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12143,"endOffset":12504,"count":5},{"startOffset":12220,"endOffset":12247,"count":0},{"startOffset":12284,"endOffset":12325,"count":0},{"startOffset":12404,"endOffset":12417,"count":1},{"startOffset":12420,"endOffset":12483,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12674,"endOffset":12891,"count":3960},{"startOffset":12721,"endOffset":12817,"count":6},{"startOffset":12819,"endOffset":12889,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13091,"endOffset":13207,"count":185}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2401,"endOffset":3050,"count":27}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2500,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2547,"endOffset":3047,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":3799,"endOffset":4853,"count":27}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4163,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5123,"endOffset":5197,"count":1},{"startOffset":5169,"endOffset":5195,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5376,"endOffset":5507,"count":276},{"startOffset":5446,"endOffset":5464,"count":11},{"startOffset":5480,"endOffset":5506,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":7920,"endOffset":8076,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7971,"endOffset":8073,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":9051,"endOffset":9372,"count":2},{"startOffset":9124,"endOffset":9161,"count":0},{"startOffset":9167,"endOffset":9181,"count":0},{"startOffset":9329,"endOffset":9371,"count":0}],"isBlockCoverage":true},{"functionName":"getCWDURL","ranges":[{"startOffset":10043,"endOffset":10553,"count":1},{"startOffset":10371,"endOffset":10420,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":10919,"endOffset":12780,"count":20},{"startOffset":11039,"endOffset":11095,"count":1},{"startOffset":11182,"endOffset":11459,"count":1},{"startOffset":11459,"endOffset":12566,"count":19},{"startOffset":12566,"endOffset":12728,"count":61},{"startOffset":12728,"endOffset":12779,"count":19}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":11659,"endOffset":12178,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":13338,"endOffset":13465,"count":1},{"startOffset":13419,"endOffset":13449,"count":0}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":15952,"endOffset":16172,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":16671,"endOffset":17604,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16890,"endOffset":17033,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17136,"endOffset":17332,"count":14}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":17606,"endOffset":18506,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17818,"endOffset":18054,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18159,"endOffset":18230,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":18508,"endOffset":18608,"count":1}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":19803,"endOffset":19993,"count":4395}],"isBlockCoverage":true},{"functionName":"getLazy","ranges":[{"startOffset":22014,"endOffset":22226,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22095,"endOffset":22223,"count":1022},{"startOffset":22139,"endOffset":22201,"count":2}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":22351,"endOffset":23028,"count":1},{"startOffset":22821,"endOffset":22998,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":23101,"endOffset":23198,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23200,"endOffset":23744,"count":15}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":23275,"endOffset":23342,"count":15}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":23346,"endOffset":23564,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":23568,"endOffset":23696,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23700,"endOffset":23742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":495,"endOffset":623,"count":738},{"startOffset":553,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"getCLIOptionsInfoFromBinding","ranges":[{"startOffset":625,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":745,"endOffset":889,"count":5},{"startOffset":801,"endOffset":861,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":891,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":949,"endOffset":1072,"count":738}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/util/types","functions":[{"functionName":"isTypedArray","ranges":[{"startOffset":131,"endOffset":234,"count":3}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":550}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/linkedlist","functions":[{"functionName":"remove","ranges":[{"startOffset":260,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":543,"endOffset":995,"count":1},{"startOffset":594,"endOffset":611,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":692,"endOffset":875,"count":1},{"startOffset":826,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1646,"endOffset":2134,"count":1},{"startOffset":1821,"endOffset":2043,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util/inspect","functions":[{"functionName":"formatWithOptions","ranges":[{"startOffset":72780,"endOffset":72972,"count":1}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":73342,"endOffset":77366,"count":1},{"startOffset":73562,"endOffset":77165,"count":0},{"startOffset":77169,"endOffset":77365,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":503,"endOffset":976,"count":1},{"startOffset":595,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":870,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":958,"endOffset":969,"count":22}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1404,"endOffset":1412,"count":11326}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1533,"endOffset":2091,"count":17},{"startOffset":1608,"endOffset":2063,"count":13},{"startOffset":1627,"endOffset":2016,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1716,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2311,"endOffset":3337,"count":24}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2342,"endOffset":2438,"count":22}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2453,"endOffset":2847,"count":17},{"startOffset":2656,"endOffset":2666,"count":12},{"startOffset":2700,"endOffset":2730,"count":7},{"startOffset":2737,"endOffset":2776,"count":6},{"startOffset":2783,"endOffset":2837,"count":4}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2877,"endOffset":2946,"count":5}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2908,"endOffset":2921,"count":20}],"isBlockCoverage":true},{"functionName":"logger","ranges":[{"startOffset":2965,"endOffset":3160,"count":27},{"startOffset":3013,"endOffset":3043,"count":14},{"startOffset":3050,"endOffset":3089,"count":9},{"startOffset":3096,"endOffset":3150,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3231,"endOffset":3265,"count":25}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":3132,"endOffset":6443,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3677,"endOffset":3781,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3839,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4317,"endOffset":4841,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4978,"endOffset":5348,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5409,"endOffset":5597,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5657,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5908,"endOffset":6113,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6203,"endOffset":6392,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6577,"endOffset":6646,"count":63}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7131,"endOffset":7187,"count":1}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":8097,"endOffset":8175,"count":132}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8283,"endOffset":8331,"count":983}],"isBlockCoverage":false},{"functionName":"EventEmitter.setMaxListeners","ranges":[{"startOffset":8994,"endOffset":9806,"count":1},{"startOffset":9127,"endOffset":9165,"count":0},{"startOffset":9531,"endOffset":9788,"count":0}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9973,"endOffset":10641,"count":63}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":10644,"endOffset":11203,"count":2},{"startOffset":10731,"endOffset":11150,"count":0},{"startOffset":11155,"endOffset":11201,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10932,"endOffset":11142,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12014,"endOffset":12129,"count":4}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12132,"endOffset":12281,"count":8}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13438,"endOffset":15741,"count":74}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15744,"endOffset":17660,"count":70}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17838,"endOffset":17930,"count":68}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18217,"endOffset":18320,"count":2}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":18323,"endOffset":18587,"count":12},{"startOffset":18486,"endOffset":18525,"count":11},{"startOffset":18525,"endOffset":18585,"count":1}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":18589,"endOffset":18830,"count":25}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19021,"endOffset":19147,"count":25}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19757,"endOffset":21162,"count":37},{"startOffset":19906,"endOffset":19918,"count":0},{"startOffset":19991,"endOffset":20003,"count":1},{"startOffset":20003,"endOffset":20033,"count":36},{"startOffset":20033,"endOffset":20062,"count":8},{"startOffset":20064,"endOffset":20435,"count":30},{"startOffset":20129,"endOffset":20176,"count":0},{"startOffset":20211,"endOffset":20268,"count":1},{"startOffset":20268,"endOffset":20427,"count":29},{"startOffset":20356,"endOffset":20417,"count":13},{"startOffset":20435,"endOffset":21136,"count":6},{"startOffset":20473,"endOffset":21136,"count":5},{"startOffset":20554,"endOffset":20693,"count":11},{"startOffset":20591,"endOffset":20623,"count":10},{"startOffset":20625,"endOffset":20683,"count":5},{"startOffset":20731,"endOffset":20743,"count":0},{"startOffset":20783,"endOffset":20796,"count":4},{"startOffset":20796,"endOffset":20957,"count":1},{"startOffset":21000,"endOffset":21023,"count":3},{"startOffset":21084,"endOffset":21128,"count":1},{"startOffset":21136,"endOffset":21161,"count":36}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":21482,"endOffset":22879,"count":1},{"startOffset":21593,"endOffset":21605,"count":0},{"startOffset":21841,"endOffset":22027,"count":0},{"startOffset":22090,"endOffset":22878,"count":0}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24473,"endOffset":25178,"count":25}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":25430,"endOffset":25903,"count":32}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":27987,"endOffset":29705,"count":5},{"startOffset":28143,"endOffset":28152,"count":3},{"startOffset":28158,"endOffset":28217,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28239,"endOffset":29701,"count":5},{"startOffset":29042,"endOffset":29079,"count":4},{"startOffset":29081,"endOffset":29276,"count":4},{"startOffset":29546,"endOffset":29697,"count":3}],"isBlockCoverage":true},{"functionName":"errorListener","ranges":[{"startOffset":28288,"endOffset":28480,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":28503,"endOffset":28777,"count":3},{"startOffset":28666,"endOffset":28750,"count":1}],"isBlockCoverage":true},{"functionName":"abortListener","ranges":[{"startOffset":29281,"endOffset":29521,"count":2}],"isBlockCoverage":true},{"functionName":"createIterResult","ranges":[{"startOffset":29819,"endOffset":29887,"count":2}],"isBlockCoverage":true},{"functionName":"eventTargetAgnosticRemoveListener","ranges":[{"startOffset":29889,"endOffset":30274,"count":7},{"startOffset":30018,"endOffset":30067,"count":6},{"startOffset":30067,"endOffset":30272,"count":1},{"startOffset":30189,"endOffset":30272,"count":0}],"isBlockCoverage":true},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":30276,"endOffset":30708,"count":10},{"startOffset":30390,"endOffset":30507,"count":7},{"startOffset":30405,"endOffset":30411,"count":5},{"startOffset":30413,"endOffset":30456,"count":5},{"startOffset":30456,"endOffset":30503,"count":2},{"startOffset":30507,"endOffset":30706,"count":3},{"startOffset":30623,"endOffset":30706,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":31013,"endOffset":35489,"count":1},{"startOffset":31203,"endOffset":31262,"count":0},{"startOffset":34098,"endOffset":34112,"count":0},{"startOffset":34348,"endOffset":34356,"count":0},{"startOffset":34358,"endOffset":34483,"count":0},{"startOffset":34568,"endOffset":34574,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":32029,"endOffset":32888,"count":2},{"startOffset":32099,"endOffset":32344,"count":0},{"startOffset":32499,"endOffset":32629,"count":0},{"startOffset":32705,"endOffset":32727,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32791,"endOffset":32880,"count":2}],"isBlockCoverage":true},{"functionName":"return","ranges":[{"startOffset":32895,"endOffset":32940,"count":0}],"isBlockCoverage":false},{"functionName":"throw","ranges":[{"startOffset":32947,"endOffset":33166,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectSetPrototypeOf","ranges":[{"startOffset":33172,"endOffset":33222,"count":1}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":33306,"endOffset":33347,"count":0}],"isBlockCoverage":false},{"functionName":"get low","ranges":[{"startOffset":33459,"endOffset":33507,"count":0}],"isBlockCoverage":false},{"functionName":"get high","ranges":[{"startOffset":33620,"endOffset":33670,"count":0}],"isBlockCoverage":false},{"functionName":"get isPaused","ranges":[{"startOffset":33782,"endOffset":33829,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34115,"endOffset":34169,"count":1}],"isBlockCoverage":true},{"functionName":"abortListener","ranges":[{"startOffset":34599,"endOffset":34701,"count":1}],"isBlockCoverage":true},{"functionName":"eventHandler","ranges":[{"startOffset":34705,"endOffset":35009,"count":1},{"startOffset":34774,"endOffset":34932,"count":0}],"isBlockCoverage":true},{"functionName":"errorHandler","ranges":[{"startOffset":35013,"endOffset":35166,"count":1},{"startOffset":35080,"endOffset":35092,"count":0}],"isBlockCoverage":true},{"functionName":"closeHandler","ranges":[{"startOffset":35170,"endOffset":35487,"count":1},{"startOffset":35382,"endOffset":35443,"count":0}],"isBlockCoverage":true},{"functionName":"listenersController","ranges":[{"startOffset":35491,"endOffset":35937,"count":1}],"isBlockCoverage":true},{"functionName":"addEventListener","ranges":[{"startOffset":35564,"endOffset":35761,"count":2}],"isBlockCoverage":true},{"functionName":"removeAll","ranges":[{"startOffset":35767,"endOffset":35929,"count":1},{"startOffset":35816,"endOffset":35923,"count":2}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/events/abort_listener","functions":[{"functionName":"addAbortListener","ranges":[{"startOffset":375,"endOffset":1257,"count":2},{"startOffset":449,"endOffset":523,"count":0},{"startOffset":657,"endOffset":779,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":757,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":1085,"endOffset":1151,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1193,"endOffset":1249,"count":1}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:buffer","functions":[{"functionName":"alignPool","ranges":[{"startOffset":4056,"endOffset":4178,"count":7}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8070,"endOffset":8098,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8356,"endOffset":9321,"count":14}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11140,"endOffset":11412,"count":5},{"startOffset":11251,"endOffset":11264,"count":0},{"startOffset":11265,"endOffset":11276,"count":0},{"startOffset":11278,"endOffset":11379,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11934,"endOffset":12050,"count":7}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12705,"endOffset":13251,"count":8}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13253,"endOffset":13680,"count":8}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13682,"endOffset":14379,"count":6},{"startOffset":13826,"endOffset":13922,"count":0},{"startOffset":13999,"endOffset":14044,"count":0},{"startOffset":14103,"endOffset":14326,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":15122,"endOffset":15176,"count":5}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":15544,"endOffset":15695,"count":271}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16911,"endOffset":17179,"count":3},{"startOffset":17033,"endOffset":17041,"count":2},{"startOffset":17117,"endOffset":17125,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17314,"endOffset":17378,"count":1}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17391,"endOffset":17437,"count":7}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18769,"endOffset":18794,"count":4}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18807,"endOffset":18872,"count":4}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19256,"endOffset":19307,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19320,"endOffset":19386,"count":2}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20706,"endOffset":22530,"count":14},{"startOffset":20793,"endOffset":21092,"count":3},{"startOffset":20856,"endOffset":21092,"count":0},{"startOffset":21097,"endOffset":21516,"count":8},{"startOffset":21137,"endOffset":21219,"count":4},{"startOffset":21219,"endOffset":21516,"count":0},{"startOffset":21521,"endOffset":21675,"count":0},{"startOffset":21680,"endOffset":21836,"count":0},{"startOffset":21841,"endOffset":22222,"count":3},{"startOffset":21915,"endOffset":21941,"count":0},{"startOffset":22001,"endOffset":22113,"count":0},{"startOffset":22123,"endOffset":22222,"count":0},{"startOffset":22227,"endOffset":22359,"count":0},{"startOffset":22364,"endOffset":22524,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":23934,"endOffset":24513,"count":7},{"startOffset":24006,"endOffset":24054,"count":0},{"startOffset":24106,"endOffset":24116,"count":0},{"startOffset":24146,"endOffset":24156,"count":0},{"startOffset":24205,"endOffset":24217,"count":0},{"startOffset":24233,"endOffset":24254,"count":0},{"startOffset":24280,"endOffset":24290,"count":0},{"startOffset":24326,"endOffset":24360,"count":0},{"startOffset":24431,"endOffset":24472,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":38466,"endOffset":38501,"count":1}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26365,"endOffset":26465,"count":26}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30291,"endOffset":30427,"count":7}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30682,"endOffset":30754,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/process/per_thread","functions":[{"functionName":"hrtimeBigInt","ranges":[{"startOffset":2355,"endOffset":2436,"count":2}],"isBlockCoverage":true},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":8027,"endOffset":12182,"count":1},{"startOffset":8368,"endOffset":8659,"count":176},{"startOffset":8420,"endOffset":8655,"count":137},{"startOffset":8517,"endOffset":8649,"count":72},{"startOffset":9127,"endOffset":9549,"count":24},{"startOffset":9181,"endOffset":9545,"count":12},{"startOffset":9270,"endOffset":9339,"count":3},{"startOffset":9404,"endOffset":9473,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8663,"endOffset":9075,"count":31},{"startOffset":8733,"endOffset":8747,"count":30},{"startOffset":8749,"endOffset":8761,"count":2},{"startOffset":8761,"endOffset":8838,"count":29},{"startOffset":8838,"endOffset":9007,"count":2},{"startOffset":8888,"endOffset":8935,"count":1},{"startOffset":9007,"endOffset":9074,"count":27}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9583,"endOffset":9645,"count":221}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9955,"endOffset":10031,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":10037,"endOffset":10106,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10112,"endOffset":10185,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10191,"endOffset":10243,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10249,"endOffset":11064,"count":1},{"startOffset":10975,"endOffset":11063,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":11070,"endOffset":11235,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11241,"endOffset":11418,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11424,"endOffset":11485,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11491,"endOffset":11654,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12372,"endOffset":12702,"count":1},{"startOffset":12452,"endOffset":12627,"count":0},{"startOffset":12659,"endOffset":12700,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3557,"endOffset":3757,"count":535},{"startOffset":3608,"endOffset":3639,"count":271},{"startOffset":3641,"endOffset":3755,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7391,"endOffset":8017,"count":537},{"startOffset":7475,"endOffset":7507,"count":535},{"startOffset":7509,"endOffset":7541,"count":2},{"startOffset":7541,"endOffset":7578,"count":535},{"startOffset":7578,"endOffset":7696,"count":271},{"startOffset":7696,"endOffset":7818,"count":264},{"startOffset":7735,"endOffset":7818,"count":0},{"startOffset":7818,"endOffset":7932,"count":535},{"startOffset":7932,"endOffset":7996,"count":0},{"startOffset":7996,"endOffset":8016,"count":535}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15001,"endOffset":16257,"count":273},{"startOffset":15082,"endOffset":15137,"count":0},{"startOffset":15160,"endOffset":15186,"count":0},{"startOffset":15243,"endOffset":15254,"count":0},{"startOffset":15276,"endOffset":15313,"count":0},{"startOffset":15318,"endOffset":15344,"count":0},{"startOffset":15349,"endOffset":15361,"count":0},{"startOffset":15383,"endOffset":15419,"count":0},{"startOffset":15425,"endOffset":15472,"count":0},{"startOffset":15477,"endOffset":15488,"count":0},{"startOffset":15510,"endOffset":15567,"count":0},{"startOffset":15573,"endOffset":15619,"count":0},{"startOffset":15624,"endOffset":15635,"count":0},{"startOffset":15657,"endOffset":15712,"count":0},{"startOffset":15718,"endOffset":15766,"count":0},{"startOffset":15771,"endOffset":15782,"count":0},{"startOffset":15804,"endOffset":15862,"count":0},{"startOffset":15867,"endOffset":15878,"count":0},{"startOffset":15900,"endOffset":15958,"count":0},{"startOffset":15964,"endOffset":16011,"count":0},{"startOffset":16016,"endOffset":16027,"count":0},{"startOffset":16049,"endOffset":16105,"count":0},{"startOffset":16110,"endOffset":16121,"count":0},{"startOffset":16143,"endOffset":16199,"count":0},{"startOffset":16203,"endOffset":16256,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18284,"endOffset":18996,"count":550},{"startOffset":18346,"endOffset":18368,"count":0},{"startOffset":18370,"endOffset":18477,"count":0},{"startOffset":18668,"endOffset":18688,"count":0},{"startOffset":18758,"endOffset":18826,"count":0},{"startOffset":18845,"endOffset":18995,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19041,"endOffset":19176,"count":286}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3494,"endOffset":4283,"count":538}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4062,"endOffset":4127,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4131,"endOffset":4206,"count":265}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4210,"endOffset":4281,"count":265}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":21737,"endOffset":21862,"count":649},{"startOffset":21788,"endOffset":21804,"count":143},{"startOffset":21805,"endOffset":21831,"count":143},{"startOffset":21832,"endOffset":21858,"count":143}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21864,"endOffset":32496,"count":538}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":21994,"endOffset":22482,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":22491,"endOffset":22807,"count":538},{"startOffset":22562,"endOffset":22610,"count":0},{"startOffset":22715,"endOffset":22746,"count":310}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22811,"endOffset":23531,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":23535,"endOffset":23869,"count":2},{"startOffset":23605,"endOffset":23868,"count":0}],"isBlockCoverage":true},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":23873,"endOffset":23984,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":23988,"endOffset":24427,"count":533},{"startOffset":24256,"endOffset":24423,"count":0}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":24675,"endOffset":26320,"count":499},{"startOffset":24784,"endOffset":24805,"count":2},{"startOffset":24806,"endOffset":24904,"count":0},{"startOffset":25600,"endOffset":26316,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":26324,"endOffset":26509,"count":152}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":26513,"endOffset":26698,"count":379}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":26702,"endOffset":26921,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":26939,"endOffset":27808,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":27812,"endOffset":27916,"count":350}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":27920,"endOffset":28093,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":28097,"endOffset":28324,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":28328,"endOffset":28501,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":28505,"endOffset":28728,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":28732,"endOffset":28905,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":28909,"endOffset":29340,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":29344,"endOffset":29509,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":29513,"endOffset":29795,"count":189},{"startOffset":29679,"endOffset":29704,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":29799,"endOffset":29972,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":29976,"endOffset":30084,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":30088,"endOffset":30253,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":30257,"endOffset":30549,"count":263},{"startOffset":30323,"endOffset":30373,"count":0},{"startOffset":30406,"endOffset":30454,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":30553,"endOffset":30726,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":30730,"endOffset":30927,"count":2}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":30931,"endOffset":31135,"count":2}],"isBlockCoverage":true},{"functionName":"get searchParams","ranges":[{"startOffset":31153,"endOffset":31511,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":31515,"endOffset":31730,"count":2},{"startOffset":31559,"endOffset":31621,"count":0},{"startOffset":31647,"endOffset":31729,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":31734,"endOffset":31899,"count":2}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":31903,"endOffset":32086,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":32097,"endOffset":32494,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":41696,"endOffset":42217,"count":189},{"startOffset":41759,"endOffset":41815,"count":0},{"startOffset":41893,"endOffset":42176,"count":18428},{"startOffset":41924,"endOffset":42172,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":42219,"endOffset":42631,"count":189},{"startOffset":42346,"endOffset":42367,"count":91},{"startOffset":42367,"endOffset":42461,"count":98},{"startOffset":42397,"endOffset":42461,"count":0},{"startOffset":42499,"endOffset":42540,"count":0},{"startOffset":42573,"endOffset":42600,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":43444,"endOffset":44293,"count":45},{"startOffset":43597,"endOffset":43668,"count":0},{"startOffset":43809,"endOffset":43882,"count":0},{"startOffset":43940,"endOffset":44011,"count":0},{"startOffset":44069,"endOffset":44147,"count":0},{"startOffset":44205,"endOffset":44272,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":44295,"endOffset":46458,"count":45},{"startOffset":44419,"endOffset":44465,"count":0},{"startOffset":44467,"endOffset":45257,"count":0},{"startOffset":45298,"endOffset":45328,"count":0},{"startOffset":45601,"endOffset":45675,"count":44},{"startOffset":45635,"endOffset":45674,"count":0},{"startOffset":45677,"endOffset":45728,"count":1},{"startOffset":45734,"endOffset":45750,"count":1},{"startOffset":46219,"endOffset":46291,"count":0},{"startOffset":46348,"endOffset":46416,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":46460,"endOffset":46597,"count":550},{"startOffset":46535,"endOffset":46556,"count":505},{"startOffset":46556,"endOffset":46596,"count":45}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":2037,"endOffset":2114,"count":208488}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2349,"endOffset":4297,"count":2173},{"startOffset":2566,"endOffset":4281,"count":208337},{"startOffset":2599,"endOffset":2641,"count":206164},{"startOffset":2641,"endOffset":2732,"count":2173},{"startOffset":2684,"endOffset":2690,"count":2022},{"startOffset":2690,"endOffset":2732,"count":151},{"startOffset":2732,"endOffset":2765,"count":206315},{"startOffset":2765,"endOffset":4182,"count":25035},{"startOffset":2797,"endOffset":2810,"count":22180},{"startOffset":2812,"endOffset":2837,"count":3085},{"startOffset":2837,"endOffset":4139,"count":21950},{"startOffset":2859,"endOffset":3894,"count":47},{"startOffset":2888,"endOffset":2914,"count":31},{"startOffset":2915,"endOffset":2989,"count":3},{"startOffset":2990,"endOffset":3064,"count":3},{"startOffset":3066,"endOffset":3754,"count":44},{"startOffset":3098,"endOffset":3575,"count":28},{"startOffset":3218,"endOffset":3294,"count":1},{"startOffset":3294,"endOffset":3492,"count":27},{"startOffset":3575,"endOffset":3744,"count":16},{"startOffset":3603,"endOffset":3744,"count":0},{"startOffset":3754,"endOffset":3783,"count":19},{"startOffset":3783,"endOffset":3886,"count":18},{"startOffset":3817,"endOffset":3835,"count":3},{"startOffset":3836,"endOffset":3842,"count":15},{"startOffset":3894,"endOffset":4139,"count":21903},{"startOffset":3940,"endOffset":4009,"count":19747},{"startOffset":4009,"endOffset":4084,"count":2156},{"startOffset":4139,"endOffset":4182,"count":25007},{"startOffset":4182,"endOffset":4277,"count":181280},{"startOffset":4210,"endOffset":4224,"count":2007},{"startOffset":4226,"endOffset":4247,"count":336},{"startOffset":4247,"endOffset":4277,"count":180944}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34497,"endOffset":34516,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":34641,"endOffset":35564,"count":2021},{"startOffset":34764,"endOffset":34784,"count":5441},{"startOffset":34791,"endOffset":35118,"count":3421},{"startOffset":34819,"endOffset":34828,"count":3420},{"startOffset":34829,"endOffset":34841,"count":1},{"startOffset":34944,"endOffset":34971,"count":0},{"startOffset":35503,"endOffset":35553,"count":0},{"startOffset":35554,"endOffset":35559,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":35630,"endOffset":36243,"count":152},{"startOffset":35716,"endOffset":35727,"count":0},{"startOffset":36055,"endOffset":36149,"count":1},{"startOffset":36087,"endOffset":36098,"count":0},{"startOffset":36137,"endOffset":36142,"count":0},{"startOffset":36149,"endOffset":36183,"count":151},{"startOffset":36183,"endOffset":36195,"count":0},{"startOffset":36195,"endOffset":36219,"count":151},{"startOffset":36219,"endOffset":36231,"count":10},{"startOffset":36232,"endOffset":36238,"count":141}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":36310,"endOffset":36466,"count":495}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":36535,"endOffset":36949,"count":23},{"startOffset":36584,"endOffset":36595,"count":0},{"startOffset":36654,"endOffset":36861,"count":33},{"startOffset":36790,"endOffset":36803,"count":23},{"startOffset":36803,"endOffset":36847,"count":10},{"startOffset":36898,"endOffset":36909,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":39465,"endOffset":39541,"count":1907}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":39607,"endOffset":40283,"count":819},{"startOffset":39690,"endOffset":39701,"count":0},{"startOffset":39875,"endOffset":40128,"count":8015},{"startOffset":39946,"endOffset":40030,"count":819},{"startOffset":40030,"endOffset":40122,"count":7196},{"startOffset":40156,"endOffset":40183,"count":0},{"startOffset":40200,"endOffset":40212,"count":815},{"startOffset":40220,"endOffset":40232,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":40379,"endOffset":42806,"count":226},{"startOffset":40440,"endOffset":40470,"count":1},{"startOffset":40602,"endOffset":40622,"count":1},{"startOffset":40623,"endOffset":40654,"count":1},{"startOffset":40656,"endOffset":42180,"count":1},{"startOffset":40693,"endOffset":40703,"count":0},{"startOffset":40824,"endOffset":42009,"count":8},{"startOffset":40924,"endOffset":41162,"count":1},{"startOffset":41162,"endOffset":42001,"count":7},{"startOffset":41209,"endOffset":41438,"count":1},{"startOffset":41466,"endOffset":41991,"count":1},{"startOffset":41587,"endOffset":41790,"count":0},{"startOffset":42044,"endOffset":42067,"count":0},{"startOffset":42103,"endOffset":42121,"count":0},{"startOffset":42180,"endOffset":42228,"count":225},{"startOffset":42228,"endOffset":42713,"count":2218},{"startOffset":42299,"endOffset":42523,"count":225},{"startOffset":42523,"endOffset":42707,"count":1993},{"startOffset":42545,"endOffset":42707,"count":225},{"startOffset":42713,"endOffset":42741,"count":225},{"startOffset":42741,"endOffset":42751,"count":0},{"startOffset":42751,"endOffset":42805,"count":225}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":42872,"endOffset":44562,"count":2},{"startOffset":43205,"endOffset":44167,"count":18},{"startOffset":43301,"endOffset":43547,"count":2},{"startOffset":43521,"endOffset":43547,"count":0},{"startOffset":43547,"endOffset":43570,"count":16},{"startOffset":43570,"endOffset":43727,"count":2},{"startOffset":43727,"endOffset":43757,"count":16},{"startOffset":43757,"endOffset":43957,"count":2},{"startOffset":43886,"endOffset":43949,"count":0},{"startOffset":43957,"endOffset":44161,"count":14},{"startOffset":43984,"endOffset":44161,"count":10},{"startOffset":44406,"endOffset":44438,"count":0},{"startOffset":44439,"endOffset":44477,"count":0},{"startOffset":44480,"endOffset":44504,"count":0}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":23},{"startOffset":1135,"endOffset":1138,"count":17},{"startOffset":1139,"endOffset":1142,"count":6}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":6},{"startOffset":1501,"endOffset":2304,"count":11},{"startOffset":1547,"endOffset":2279,"count":27},{"startOffset":1748,"endOffset":1781,"count":9},{"startOffset":1781,"endOffset":2155,"count":18},{"startOffset":1868,"endOffset":1901,"count":11},{"startOffset":1914,"endOffset":1956,"count":3},{"startOffset":1969,"endOffset":2020,"count":4},{"startOffset":2033,"endOffset":2093,"count":0},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":27},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":9},{"startOffset":2743,"endOffset":2780,"count":11},{"startOffset":2785,"endOffset":2836,"count":3},{"startOffset":2841,"endOffset":2906,"count":4},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3083,"endOffset":3109,"count":17},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"36","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":1267,"endOffset":1379,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1414,"endOffset":1569,"count":14},{"startOffset":1473,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":4097,"endOffset":4187,"count":7},{"startOffset":4177,"endOffset":4180,"count":1},{"startOffset":4181,"endOffset":4184,"count":6}],"isBlockCoverage":true},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":4596,"endOffset":5279,"count":4},{"startOffset":4696,"endOffset":4761,"count":1},{"startOffset":4784,"endOffset":4878,"count":1},{"startOffset":4883,"endOffset":4971,"count":1},{"startOffset":4976,"endOffset":5121,"count":1},{"startOffset":5054,"endOffset":5108,"count":0},{"startOffset":5126,"endOffset":5273,"count":1},{"startOffset":5205,"endOffset":5260,"count":0}],"isBlockCoverage":true},{"functionName":"unhandledRejection","ranges":[{"startOffset":6708,"endOffset":6922,"count":1}],"isBlockCoverage":true},{"functionName":"handledRejection","ranges":[{"startOffset":6960,"endOffset":7541,"count":1},{"startOffset":7109,"endOffset":7539,"count":0}],"isBlockCoverage":true},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":11313,"endOffset":11864,"count":1},{"startOffset":11469,"endOffset":11525,"count":0},{"startOffset":11530,"endOffset":11590,"count":0},{"startOffset":11595,"endOffset":11653,"count":0},{"startOffset":11658,"endOffset":11714,"count":0},{"startOffset":11719,"endOffset":11802,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":12037,"endOffset":13386,"count":6},{"startOffset":12197,"endOffset":12376,"count":0},{"startOffset":12582,"endOffset":13292,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/fixed_queue","functions":[{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":2}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":81}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":29}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":29}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":40},{"startOffset":3388,"endOffset":3400,"count":11},{"startOffset":3400,"endOffset":3509,"count":29}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":2}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":41}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":29},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":40},{"startOffset":4041,"endOffset":4062,"count":30},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:timers","functions":[{"functionName":"setTimeout","ranges":[{"startOffset":4071,"endOffset":4728,"count":1},{"startOffset":4238,"endOffset":4245,"count":0},{"startOffset":4275,"endOffset":4316,"count":0},{"startOffset":4321,"endOffset":4368,"count":0},{"startOffset":4373,"endOffset":4594,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":945,"endOffset":1275,"count":1},{"startOffset":1006,"endOffset":1273,"count":0}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":358,"endOffset":383,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1677,"endOffset":1740,"count":44}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1742,"endOffset":2326,"count":1},{"startOffset":1850,"endOffset":2033,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2328,"endOffset":2928,"count":43},{"startOffset":2630,"endOffset":2663,"count":0},{"startOffset":2716,"endOffset":2852,"count":0},{"startOffset":2854,"endOffset":2927,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3375,"endOffset":5256,"count":43},{"startOffset":3577,"endOffset":3597,"count":0},{"startOffset":3600,"endOffset":3607,"count":0},{"startOffset":3755,"endOffset":3851,"count":0},{"startOffset":3887,"endOffset":3953,"count":0},{"startOffset":4042,"endOffset":4059,"count":0},{"startOffset":4356,"endOffset":4370,"count":0},{"startOffset":4397,"endOffset":4582,"count":0},{"startOffset":4611,"endOffset":4877,"count":0},{"startOffset":5196,"endOffset":5250,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5788,"endOffset":6308,"count":43},{"startOffset":5925,"endOffset":6000,"count":2},{"startOffset":6007,"endOffset":6087,"count":0},{"startOffset":6098,"endOffset":6306,"count":41}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6498,"endOffset":7294,"count":43},{"startOffset":6669,"endOffset":7233,"count":485550},{"startOffset":7045,"endOffset":7068,"count":468723},{"startOffset":7069,"endOffset":7092,"count":468723},{"startOffset":7094,"endOffset":7229,"count":16827}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":7297,"endOffset":7577,"count":41},{"startOffset":7525,"endOffset":7575,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":7671,"endOffset":8342,"count":2},{"startOffset":8074,"endOffset":8080,"count":0},{"startOffset":8202,"endOffset":8258,"count":0},{"startOffset":8262,"endOffset":8340,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8614,"endOffset":9018,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8692,"endOffset":8875,"count":182},{"startOffset":8781,"endOffset":8829,"count":2},{"startOffset":8829,"endOffset":8874,"count":180}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1182,"endOffset":1207,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1676,"endOffset":1808,"count":262}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1924,"endOffset":2316,"count":1},{"startOffset":2103,"endOffset":2107,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2383,"endOffset":2510,"count":32},{"startOffset":2448,"endOffset":2484,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2737,"endOffset":3117,"count":108},{"startOffset":2826,"endOffset":2843,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3210,"endOffset":3323,"count":221},{"startOffset":3254,"endOffset":3302,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3912,"endOffset":6444,"count":221},{"startOffset":4051,"endOffset":4114,"count":0},{"startOffset":4181,"endOffset":5452,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4324,"endOffset":5447,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5474,"endOffset":5614,"count":369}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5800,"endOffset":5946,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":6091,"endOffset":6213,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6656,"endOffset":6811,"count":4},{"startOffset":6738,"endOffset":6791,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9313,"endOffset":9816,"count":43},{"startOffset":9418,"endOffset":9445,"count":0},{"startOffset":9528,"endOffset":9582,"count":5},{"startOffset":9582,"endOffset":9643,"count":38},{"startOffset":9643,"endOffset":9679,"count":0},{"startOffset":9681,"endOffset":9715,"count":38},{"startOffset":9715,"endOffset":9815,"count":0}],"isBlockCoverage":true},{"functionName":"urlToFilename","ranges":[{"startOffset":9886,"endOffset":10024,"count":39},{"startOffset":10008,"endOffset":10023,"count":0}],"isBlockCoverage":true},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":11359,"endOffset":11433,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":11437,"endOffset":11514,"count":220}],"isBlockCoverage":true},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":11518,"endOffset":11592,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":11596,"endOffset":11673,"count":9}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5176,"endOffset":5436,"count":4694},{"startOffset":5375,"endOffset":5395,"count":400}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7462,"endOffset":7633,"count":12},{"startOffset":7537,"endOffset":7566,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11293,"endOffset":12932,"count":265},{"startOffset":11415,"endOffset":11446,"count":2},{"startOffset":11619,"endOffset":11709,"count":0},{"startOffset":11710,"endOffset":11750,"count":0},{"startOffset":11838,"endOffset":11848,"count":0},{"startOffset":11849,"endOffset":11852,"count":0},{"startOffset":11982,"endOffset":12931,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":69352,"endOffset":69562,"count":228},{"startOffset":69419,"endOffset":69542,"count":456},{"startOffset":69497,"endOffset":69536,"count":228},{"startOffset":69542,"endOffset":69561,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":69567,"endOffset":69854,"count":228},{"startOffset":69652,"endOffset":69682,"count":0},{"startOffset":69702,"endOffset":69853,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":70260,"endOffset":70335,"count":2547}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":70509,"endOffset":74328,"count":264},{"startOffset":70633,"endOffset":70651,"count":0},{"startOffset":70812,"endOffset":70847,"count":36},{"startOffset":70847,"endOffset":71409,"count":228},{"startOffset":71409,"endOffset":71599,"count":0},{"startOffset":71599,"endOffset":71736,"count":228},{"startOffset":71736,"endOffset":74255,"count":2547},{"startOffset":71848,"endOffset":71979,"count":228},{"startOffset":71979,"endOffset":72137,"count":2319},{"startOffset":72254,"endOffset":72391,"count":2147},{"startOffset":72345,"endOffset":72369,"count":0},{"startOffset":72391,"endOffset":72457,"count":400},{"startOffset":72494,"endOffset":72543,"count":0},{"startOffset":72543,"endOffset":73732,"count":400},{"startOffset":72839,"endOffset":72864,"count":0},{"startOffset":72993,"endOffset":73652,"count":0},{"startOffset":73696,"endOffset":73726,"count":0},{"startOffset":73732,"endOffset":74047,"count":0},{"startOffset":74049,"endOffset":74251,"count":0},{"startOffset":74255,"endOffset":74269,"count":228}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":82594,"endOffset":82785,"count":5},{"startOffset":82642,"endOffset":82783,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":85124,"endOffset":85192,"count":2}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":85249,"endOffset":85319,"count":1}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":85511,"endOffset":85587,"count":1}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":85652,"endOffset":85730,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":86425,"endOffset":86521,"count":1}],"isBlockCoverage":true}]},{"scriptId":"47","url":"node:internal/encoding","functions":[{"functionName":"validateEncoder","ranges":[{"startOffset":1288,"endOffset":1413,"count":1},{"startOffset":1369,"endOffset":1411,"count":0}],"isBlockCoverage":true},{"functionName":"validateDecoder","ranges":[{"startOffset":1415,"endOffset":1540,"count":245},{"startOffset":1496,"endOffset":1538,"count":0}],"isBlockCoverage":true},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9337,"endOffset":9516,"count":2},{"startOffset":9448,"endOffset":9515,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":9540,"endOffset":9586,"count":3}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9661,"endOffset":9753,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":11074,"endOffset":11957,"count":2},{"startOffset":11330,"endOffset":11377,"count":0},{"startOffset":11461,"endOffset":11484,"count":0},{"startOffset":11525,"endOffset":11553,"count":0},{"startOffset":11908,"endOffset":11951,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":12234,"endOffset":12765,"count":245},{"startOffset":12469,"endOffset":12764,"count":0}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2502,"endOffset":2622,"count":3}],"isBlockCoverage":true},{"functionName":"callbackify","ranges":[{"startOffset":8830,"endOffset":10327,"count":2},{"startOffset":10089,"endOffset":10247,"count":4}],"isBlockCoverage":true},{"functionName":"callbackified","ranges":[{"startOffset":9116,"endOffset":9605,"count":0}],"isBlockCoverage":false},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":12418,"endOffset":12511,"count":1}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":12515,"endOffset":12616,"count":1}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":12620,"endOffset":12681,"count":1}],"isBlockCoverage":true}]},{"scriptId":"51","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":249,"endOffset":493,"count":784},{"startOffset":309,"endOffset":454,"count":1}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1936,"endOffset":2036,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5893,"endOffset":6538,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6102,"endOffset":6197,"count":3},{"startOffset":6135,"endOffset":6158,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6209,"endOffset":6239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6369,"endOffset":6468,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6480,"endOffset":6510,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8130,"endOffset":9666,"count":1},{"startOffset":8368,"endOffset":8382,"count":0},{"startOffset":8456,"endOffset":8482,"count":0},{"startOffset":8521,"endOffset":8716,"count":0},{"startOffset":8735,"endOffset":8787,"count":0},{"startOffset":8846,"endOffset":8874,"count":0},{"startOffset":9231,"endOffset":9258,"count":0},{"startOffset":9312,"endOffset":9596,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9761,"endOffset":10171,"count":1},{"startOffset":9975,"endOffset":10096,"count":0},{"startOffset":10140,"endOffset":10164,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10264,"endOffset":10444,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10875,"endOffset":11693,"count":1},{"startOffset":11145,"endOffset":11163,"count":0},{"startOffset":11186,"endOffset":11224,"count":0},{"startOffset":11226,"endOffset":11689,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11725,"endOffset":11812,"count":1}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20994,"endOffset":21984,"count":1},{"startOffset":21313,"endOffset":21983,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21879,"endOffset":21980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"node:internal/event_target","functions":[{"functionName":"isEvent","ranges":[{"startOffset":2317,"endOffset":2389,"count":3944}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2391,"endOffset":7233,"count":1270}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2707,"endOffset":3189,"count":1972},{"startOffset":2789,"endOffset":2824,"count":0},{"startOffset":3083,"endOffset":3120,"count":3}],"isBlockCoverage":true},{"functionName":"initEvent","ranges":[{"startOffset":3298,"endOffset":3584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3588,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4107,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":4470,"endOffset":4594,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":4635,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":4787,"endOffset":4905,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":4946,"endOffset":5061,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":5097,"endOffset":5204,"count":1972},{"startOffset":5140,"endOffset":5176,"count":0}],"isBlockCoverage":true},{"functionName":"get cancelable","ranges":[{"startOffset":5241,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5396,"endOffset":5546,"count":1972},{"startOffset":5451,"endOffset":5487,"count":0},{"startOffset":5516,"endOffset":5541,"count":0}],"isBlockCoverage":true},{"functionName":"get timeStamp","ranges":[{"startOffset":5582,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":5916,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":6100,"endOffset":6247,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":6284,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":6433,"endOffset":6547,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":6583,"endOffset":6740,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":6777,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":6942,"endOffset":7100,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":7104,"endOffset":7231,"count":0}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":10893,"endOffset":12357,"count":3950},{"startOffset":11228,"endOffset":11247,"count":5},{"startOffset":11271,"endOffset":11293,"count":0},{"startOffset":11317,"endOffset":11339,"count":0},{"startOffset":11375,"endOffset":11399,"count":3945},{"startOffset":11420,"endOffset":11439,"count":0},{"startOffset":11477,"endOffset":11513,"count":5},{"startOffset":11585,"endOffset":12041,"count":0},{"startOffset":12154,"endOffset":12353,"count":0}],"isBlockCoverage":true},{"functionName":"Listener.callback","ranges":[{"startOffset":12184,"endOffset":12314,"count":0}],"isBlockCoverage":false},{"functionName":"get once","ranges":[{"startOffset":12361,"endOffset":12421,"count":5}],"isBlockCoverage":true},{"functionName":"get capture","ranges":[{"startOffset":12424,"endOffset":12490,"count":5}],"isBlockCoverage":true},{"functionName":"get passive","ranges":[{"startOffset":12493,"endOffset":12559,"count":1}],"isBlockCoverage":true},{"functionName":"get isNodeStyleListener","ranges":[{"startOffset":12562,"endOffset":12642,"count":10}],"isBlockCoverage":true},{"functionName":"get weak","ranges":[{"startOffset":12645,"endOffset":12705,"count":3965}],"isBlockCoverage":true},{"functionName":"get removed","ranges":[{"startOffset":12805,"endOffset":12871,"count":5}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":12874,"endOffset":12991,"count":3955},{"startOffset":12916,"endOffset":12943,"count":5},{"startOffset":12943,"endOffset":12987,"count":3950}],"isBlockCoverage":true},{"functionName":"same","ranges":[{"startOffset":12995,"endOffset":13162,"count":5},{"startOffset":13054,"endOffset":13077,"count":0},{"startOffset":13130,"endOffset":13157,"count":1}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":13166,"endOffset":13423,"count":5},{"startOffset":13291,"endOffset":13326,"count":3},{"startOffset":13377,"endOffset":13419,"count":0}],"isBlockCoverage":true},{"functionName":"initEventTarget","ranges":[{"startOffset":13427,"endOffset":13646,"count":1974}],"isBlockCoverage":true},{"functionName":"EventTarget","ranges":[{"startOffset":13889,"endOffset":13935,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13939,"endOffset":14795,"count":3950},{"startOffset":14100,"endOffset":14148,"count":0},{"startOffset":14150,"endOffset":14791,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14798,"endOffset":14849,"count":5}],"isBlockCoverage":true},{"functionName":"addEventListener","ranges":[{"startOffset":15238,"endOffset":17956,"count":3950},{"startOffset":15333,"endOffset":15375,"count":0},{"startOffset":15412,"endOffset":15459,"count":0},{"startOffset":15851,"endOffset":16304,"count":0},{"startOffset":16368,"endOffset":16752,"count":0},{"startOffset":16823,"endOffset":17315,"count":3947},{"startOffset":17315,"endOffset":17470,"count":3},{"startOffset":17470,"endOffset":17505,"count":4},{"startOffset":17507,"endOffset":17570,"count":4},{"startOffset":17570,"endOffset":17603,"count":3},{"startOffset":17603,"endOffset":17645,"count":0},{"startOffset":17645,"endOffset":17955,"count":3}],"isBlockCoverage":true},{"functionName":"signal.addEventListener.__proto__","ranges":[{"startOffset":16583,"endOffset":16657,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":18114,"endOffset":18955,"count":2},{"startOffset":18212,"endOffset":18254,"count":0},{"startOffset":18291,"endOffset":18338,"count":0},{"startOffset":18387,"endOffset":18394,"count":0},{"startOffset":18593,"endOffset":18951,"count":1},{"startOffset":18798,"endOffset":18825,"count":0},{"startOffset":18915,"endOffset":18951,"count":0}],"isBlockCoverage":true},{"functionName":"dispatchEvent","ranges":[{"startOffset":19622,"endOffset":20083,"count":1972},{"startOffset":19681,"endOffset":19723,"count":0},{"startOffset":19760,"endOffset":19796,"count":0},{"startOffset":19839,"endOffset":19895,"count":0},{"startOffset":19938,"endOffset":19980,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20087,"endOffset":22383,"count":1973},{"startOffset":20386,"endOffset":20462,"count":1972},{"startOffset":20533,"endOffset":20559,"count":3},{"startOffset":20561,"endOffset":20661,"count":1970},{"startOffset":20661,"endOffset":20938,"count":3},{"startOffset":20938,"endOffset":22308,"count":5},{"startOffset":21079,"endOffset":21088,"count":4},{"startOffset":21098,"endOffset":21131,"count":0},{"startOffset":21134,"endOffset":21464,"count":0},{"startOffset":21489,"endOffset":21659,"count":4},{"startOffset":21731,"endOffset":21769,"count":1},{"startOffset":21769,"endOffset":21817,"count":4},{"startOffset":21856,"endOffset":21892,"count":0},{"startOffset":22064,"endOffset":22122,"count":4},{"startOffset":22166,"endOffset":22184,"count":1},{"startOffset":22196,"endOffset":22213,"count":1},{"startOffset":22222,"endOffset":22279,"count":0},{"startOffset":22308,"endOffset":22345,"count":3},{"startOffset":22345,"endOffset":22379,"count":2}],"isBlockCoverage":true},{"functionName":"createEvent","ranges":[{"startOffset":20155,"endOffset":20355,"count":4},{"startOffset":20194,"endOffset":20329,"count":0}],"isBlockCoverage":true},{"functionName":"iterationCondition","ranges":[{"startOffset":20738,"endOffset":20903,"count":8},{"startOffset":20779,"endOffset":20810,"count":3},{"startOffset":20810,"endOffset":20851,"count":5},{"startOffset":20851,"endOffset":20869,"count":1},{"startOffset":20870,"endOffset":20896,"count":1},{"startOffset":20878,"endOffset":20887,"count":0}],"isBlockCoverage":true},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":23188,"endOffset":23251,"count":1971}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":25193,"endOffset":25398,"count":3945},{"startOffset":25254,"endOffset":25300,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListener","ranges":[{"startOffset":27263,"endOffset":27635,"count":3952},{"startOffset":27343,"endOffset":27395,"count":0},{"startOffset":27419,"endOffset":27634,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":27637,"endOffset":28195,"count":3950},{"startOffset":27726,"endOffset":27754,"count":0},{"startOffset":27784,"endOffset":27804,"count":0},{"startOffset":28114,"endOffset":28122,"count":3945}],"isBlockCoverage":true},{"functionName":"isEventTarget","ranges":[{"startOffset":28500,"endOffset":28576,"count":5925}],"isBlockCoverage":true},{"functionName":"isNodeEventTarget","ranges":[{"startOffset":28578,"endOffset":28662,"count":3945}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":28664,"endOffset":28978,"count":1},{"startOffset":28756,"endOffset":28976,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28810,"endOffset":28970,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":29474,"endOffset":30940,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":29634,"endOffset":29770,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29869,"endOffset":30707,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":30968,"endOffset":31658,"count":1},{"startOffset":31399,"endOffset":31561,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":31037,"endOffset":31178,"count":7}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/webidl","functions":[{"functionName":"DOMString","ranges":[{"startOffset":4438,"endOffset":4568,"count":3952},{"startOffset":4491,"endOffset":4545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1424,"endOffset":3026,"count":2},{"startOffset":1716,"endOffset":1910,"count":0},{"startOffset":1916,"endOffset":1928,"count":0},{"startOffset":1933,"endOffset":2645,"count":0},{"startOffset":2651,"endOffset":2905,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2841,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3639,"endOffset":3730,"count":3},{"startOffset":3693,"endOffset":3728,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3732,"endOffset":4424,"count":12},{"startOffset":3769,"endOffset":3783,"count":11},{"startOffset":3783,"endOffset":4423,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4090,"endOffset":4268,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4426,"endOffset":5117,"count":11},{"startOffset":4463,"endOffset":4477,"count":10},{"startOffset":4477,"endOffset":5116,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4783,"endOffset":4961,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5119,"endOffset":7610,"count":3},{"startOffset":5154,"endOffset":5167,"count":2},{"startOffset":5167,"endOffset":5326,"count":1},{"startOffset":5332,"endOffset":5466,"count":0},{"startOffset":5472,"endOffset":5484,"count":0},{"startOffset":5489,"endOffset":6271,"count":0},{"startOffset":6277,"endOffset":6501,"count":0},{"startOffset":6505,"endOffset":6770,"count":1},{"startOffset":6772,"endOffset":7609,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":6458,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7080,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7128,"endOffset":7368,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7383,"endOffset":7456,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":433,"endOffset":504,"count":9}],"isBlockCoverage":false},{"functionName":"throwIfBuildingSnapshot","ranges":[{"startOffset":627,"endOffset":758,"count":1},{"startOffset":698,"endOffset":756,"count":0}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":831,"endOffset":1004,"count":1},{"startOffset":910,"endOffset":1002,"count":0}],"isBlockCoverage":true}]},{"scriptId":"62","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":18}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":908,"count":18}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":910,"endOffset":1105,"count":14},{"startOffset":1012,"endOffset":1048,"count":13},{"startOffset":1050,"endOffset":1103,"count":12}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4603,"endOffset":4694,"count":1},{"startOffset":4650,"endOffset":4686,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4743,"endOffset":4786,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":6198,"endOffset":6612,"count":1060},{"startOffset":6296,"endOffset":6394,"count":1011},{"startOffset":6372,"endOffset":6390,"count":215},{"startOffset":6394,"endOffset":6467,"count":845},{"startOffset":6467,"endOffset":6481,"count":796},{"startOffset":6483,"endOffset":6593,"count":296},{"startOffset":6593,"endOffset":6611,"count":845}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":7103,"endOffset":7305,"count":364},{"startOffset":7175,"endOffset":7185,"count":284},{"startOffset":7202,"endOffset":7255,"count":284},{"startOffset":7212,"endOffset":7254,"count":100},{"startOffset":7257,"endOffset":7303,"count":280}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":7422,"endOffset":7578,"count":553},{"startOffset":7503,"endOffset":7518,"count":0},{"startOffset":7520,"endOffset":7576,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":7762,"endOffset":8001,"count":18},{"startOffset":7863,"endOffset":7878,"count":0},{"startOffset":7880,"endOffset":7999,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7948,"endOffset":7990,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":8092,"endOffset":8842,"count":226},{"startOffset":8398,"endOffset":8408,"count":0},{"startOffset":8426,"endOffset":8790,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10825,"endOffset":10850,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":11570,"endOffset":12256,"count":1},{"startOffset":12125,"endOffset":12254,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":13140,"endOffset":14419,"count":70},{"startOffset":13262,"endOffset":13343,"count":26},{"startOffset":13343,"endOffset":13437,"count":44},{"startOffset":13437,"endOffset":13481,"count":3},{"startOffset":13482,"endOffset":13549,"count":0},{"startOffset":13575,"endOffset":14400,"count":0},{"startOffset":14400,"endOffset":14418,"count":44}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":14780,"endOffset":15043,"count":478},{"startOffset":14869,"endOffset":14880,"count":264},{"startOffset":14880,"endOffset":14909,"count":214},{"startOffset":14909,"endOffset":14937,"count":1},{"startOffset":14938,"endOffset":14961,"count":213},{"startOffset":14964,"endOffset":15007,"count":0},{"startOffset":15007,"endOffset":15042,"count":214}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":15308,"endOffset":15528,"count":228},{"startOffset":15397,"endOffset":15510,"count":402},{"startOffset":15476,"endOffset":15506,"count":141},{"startOffset":15510,"endOffset":15527,"count":87}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":15712,"endOffset":16188,"count":225},{"startOffset":15936,"endOffset":16170,"count":226},{"startOffset":15987,"endOffset":16000,"count":0},{"startOffset":16138,"endOffset":16166,"count":224},{"startOffset":16170,"endOffset":16187,"count":1}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16311,"endOffset":16604,"count":267},{"startOffset":16363,"endOffset":16380,"count":38},{"startOffset":16380,"endOffset":16438,"count":229},{"startOffset":16438,"endOffset":16602,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":16812,"endOffset":17740,"count":267},{"startOffset":16871,"endOffset":16888,"count":38},{"startOffset":16888,"endOffset":17010,"count":229},{"startOffset":17011,"endOffset":17036,"count":40},{"startOffset":17038,"endOffset":17061,"count":189},{"startOffset":17061,"endOffset":17108,"count":40},{"startOffset":17108,"endOffset":17134,"count":0},{"startOffset":17134,"endOffset":17300,"count":40},{"startOffset":17196,"endOffset":17271,"count":1},{"startOffset":17271,"endOffset":17300,"count":39},{"startOffset":17300,"endOffset":17589,"count":1},{"startOffset":17589,"endOffset":17738,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":18088,"endOffset":18906,"count":239},{"startOffset":18295,"endOffset":18310,"count":129},{"startOffset":18325,"endOffset":18336,"count":129},{"startOffset":18336,"endOffset":18437,"count":110},{"startOffset":18437,"endOffset":18459,"count":92},{"startOffset":18461,"endOffset":18904,"count":31},{"startOffset":18741,"endOffset":18900,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":18968,"endOffset":19463,"count":182},{"startOffset":19139,"endOffset":19462,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19387,"endOffset":19459,"count":0}],"isBlockCoverage":false},{"functionName":"Module._findPath","ranges":[{"startOffset":19756,"endOffset":23836,"count":267},{"startOffset":19866,"endOffset":19889,"count":39},{"startOffset":19889,"endOffset":19952,"count":228},{"startOffset":19929,"endOffset":19952,"count":0},{"startOffset":20085,"endOffset":20108,"count":7},{"startOffset":20108,"endOffset":20691,"count":260},{"startOffset":20251,"endOffset":20690,"count":259},{"startOffset":20330,"endOffset":20684,"count":0},{"startOffset":20766,"endOffset":21222,"count":129},{"startOffset":20872,"endOffset":20957,"count":15},{"startOffset":20892,"endOffset":20956,"count":0},{"startOffset":20958,"endOffset":21216,"count":15},{"startOffset":21127,"endOffset":21214,"count":0},{"startOffset":21267,"endOffset":21421,"count":129},{"startOffset":21384,"endOffset":21417,"count":15},{"startOffset":21421,"endOffset":21483,"count":260},{"startOffset":21483,"endOffset":23817,"count":389},{"startOffset":21624,"endOffset":21634,"count":374},{"startOffset":21635,"endOffset":21731,"count":335},{"startOffset":21669,"endOffset":21707,"count":0},{"startOffset":21738,"endOffset":21761,"count":111},{"startOffset":21761,"endOffset":21789,"count":278},{"startOffset":21789,"endOffset":21929,"count":239},{"startOffset":21882,"endOffset":21923,"count":31},{"startOffset":21929,"endOffset":22059,"count":247},{"startOffset":22059,"endOffset":23292,"count":246},{"startOffset":22081,"endOffset":23065,"count":47},{"startOffset":22169,"endOffset":22229,"count":0},{"startOffset":22303,"endOffset":23057,"count":0},{"startOffset":23088,"endOffset":23286,"count":199},{"startOffset":23168,"endOffset":23220,"count":181},{"startOffset":23292,"endOffset":23312,"count":247},{"startOffset":23312,"endOffset":23323,"count":88},{"startOffset":23325,"endOffset":23543,"count":70},{"startOffset":23427,"endOffset":23475,"count":1},{"startOffset":23543,"endOffset":23563,"count":247},{"startOffset":23563,"endOffset":23639,"count":229},{"startOffset":23639,"endOffset":23817,"count":18},{"startOffset":23817,"endOffset":23835,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":25913,"endOffset":27101,"count":269},{"startOffset":26185,"endOffset":26224,"count":0},{"startOffset":26545,"endOffset":26979,"count":24499},{"startOffset":26641,"endOffset":26849,"count":2712},{"startOffset":26668,"endOffset":26808,"count":2419},{"startOffset":26849,"endOffset":26973,"count":21787},{"startOffset":26869,"endOffset":26973,"count":6335},{"startOffset":26904,"endOffset":26930,"count":3916},{"startOffset":26930,"endOffset":26965,"count":2419}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":27236,"endOffset":28523,"count":267},{"startOffset":27316,"endOffset":27382,"count":0},{"startOffset":27467,"endOffset":27666,"count":134},{"startOffset":27547,"endOffset":27597,"count":117},{"startOffset":27598,"endOffset":27665,"count":0},{"startOffset":27668,"endOffset":27995,"count":133},{"startOffset":27728,"endOffset":27743,"count":95},{"startOffset":27745,"endOffset":27855,"count":95},{"startOffset":27855,"endOffset":27895,"count":38},{"startOffset":27984,"endOffset":27990,"count":0},{"startOffset":27995,"endOffset":28063,"count":134},{"startOffset":28064,"endOffset":28083,"count":134},{"startOffset":28085,"endOffset":28334,"count":0},{"startOffset":28334,"endOffset":28522,"count":134}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":31645,"endOffset":35523,"count":407},{"startOffset":31728,"endOffset":32556,"count":369},{"startOffset":32187,"endOffset":32552,"count":57},{"startOffset":32367,"endOffset":32439,"count":0},{"startOffset":32484,"endOffset":32552,"count":0},{"startOffset":32556,"endOffset":32609,"count":350},{"startOffset":32609,"endOffset":32881,"count":1},{"startOffset":32738,"endOffset":32798,"count":0},{"startOffset":32881,"endOffset":33034,"count":349},{"startOffset":33034,"endOffset":33960,"count":81},{"startOffset":33113,"endOffset":33155,"count":40},{"startOffset":33155,"endOffset":33368,"count":41},{"startOffset":33368,"endOffset":33432,"count":0},{"startOffset":33432,"endOffset":33735,"count":41},{"startOffset":33735,"endOffset":33799,"count":0},{"startOffset":33799,"endOffset":33960,"count":41},{"startOffset":33960,"endOffset":34020,"count":309},{"startOffset":34020,"endOffset":34103,"count":84},{"startOffset":34103,"endOffset":34202,"count":225},{"startOffset":34202,"endOffset":34233,"count":184},{"startOffset":34257,"endOffset":34634,"count":184},{"startOffset":34275,"endOffset":34460,"count":0},{"startOffset":34634,"endOffset":34664,"count":225},{"startOffset":34664,"endOffset":34733,"count":187},{"startOffset":34733,"endOffset":35495,"count":225},{"startOffset":34838,"endOffset":35241,"count":0},{"startOffset":35423,"endOffset":35491,"count":0},{"startOffset":35495,"endOffset":35522,"count":225}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":35985,"endOffset":39113,"count":351},{"startOffset":36082,"endOffset":36107,"count":84},{"startOffset":36107,"endOffset":36157,"count":267},{"startOffset":36157,"endOffset":36176,"count":0},{"startOffset":36178,"endOffset":37271,"count":0},{"startOffset":37271,"endOffset":37366,"count":267},{"startOffset":37366,"endOffset":37414,"count":0},{"startOffset":37416,"endOffset":38058,"count":0},{"startOffset":38058,"endOffset":38219,"count":267},{"startOffset":38219,"endOffset":38415,"count":1},{"startOffset":38290,"endOffset":38300,"count":0},{"startOffset":38415,"endOffset":38575,"count":266},{"startOffset":38575,"endOffset":39112,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":39540,"endOffset":40121,"count":32},{"startOffset":39738,"endOffset":39867,"count":0},{"startOffset":39986,"endOffset":40120,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":40770,"endOffset":41437,"count":225},{"startOffset":41105,"endOffset":41135,"count":0},{"startOffset":41137,"endOffset":41189,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":41724,"endOffset":42023,"count":369},{"startOffset":41784,"endOffset":41902,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":43273,"endOffset":45091,"count":220},{"startOffset":43493,"endOffset":44352,"count":0},{"startOffset":44513,"endOffset":44559,"count":0},{"startOffset":44560,"endOffset":44601,"count":0},{"startOffset":44603,"endOffset":44666,"count":0},{"startOffset":44752,"endOffset":44850,"count":5},{"startOffset":44875,"endOffset":45089,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":45507,"endOffset":47965,"count":220},{"startOffset":45617,"endOffset":45627,"count":0},{"startOffset":45645,"endOffset":45798,"count":0},{"startOffset":45962,"endOffset":46135,"count":0},{"startOffset":46486,"endOffset":46510,"count":0},{"startOffset":46512,"endOffset":47248,"count":0},{"startOffset":47471,"endOffset":47501,"count":38},{"startOffset":47590,"endOffset":47729,"count":0},{"startOffset":47925,"endOffset":47946,"count":38}],"isBlockCoverage":true},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":48219,"endOffset":48624,"count":220},{"startOffset":48382,"endOffset":48457,"count":41},{"startOffset":48457,"endOffset":48604,"count":179}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":48803,"endOffset":50720,"count":220},{"startOffset":49000,"endOffset":50672,"count":219},{"startOffset":49063,"endOffset":49085,"count":0},{"startOffset":49181,"endOffset":50668,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":50902,"endOffset":51308,"count":4},{"startOffset":51012,"endOffset":51022,"count":0},{"startOffset":51040,"endOffset":51142,"count":0},{"startOffset":51225,"endOffset":51306,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":51490,"endOffset":51832,"count":1},{"startOffset":51546,"endOffset":51556,"count":0},{"startOffset":51574,"endOffset":51723,"count":0}],"isBlockCoverage":true},{"functionName":"createRequireFromPath","ranges":[{"startOffset":51984,"endOffset":52445,"count":1},{"startOffset":52164,"endOffset":52206,"count":0},{"startOffset":52244,"endOffset":52280,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":52871,"endOffset":53416,"count":1},{"startOffset":53076,"endOffset":53208,"count":0},{"startOffset":53212,"endOffset":53372,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":53536,"endOffset":54501,"count":1},{"startOffset":53577,"endOffset":53602,"count":0},{"startOffset":53654,"endOffset":53677,"count":0},{"startOffset":53885,"endOffset":53927,"count":0},{"startOffset":54226,"endOffset":54368,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":1112,"endOffset":3862,"count":999},{"startOffset":1208,"endOffset":1245,"count":841},{"startOffset":1245,"endOffset":1922,"count":158},{"startOffset":1922,"endOffset":1931,"count":0},{"startOffset":1932,"endOffset":1946,"count":0},{"startOffset":1947,"endOffset":1969,"count":158},{"startOffset":1993,"endOffset":3812,"count":100},{"startOffset":2061,"endOffset":2657,"count":0},{"startOffset":2947,"endOffset":2981,"count":68},{"startOffset":2983,"endOffset":3023,"count":68},{"startOffset":3083,"endOffset":3129,"count":16},{"startOffset":3189,"endOffset":3235,"count":1},{"startOffset":3346,"endOffset":3405,"count":2},{"startOffset":3377,"endOffset":3404,"count":1},{"startOffset":3407,"endOffset":3447,"count":2},{"startOffset":3481,"endOffset":3677,"count":1},{"startOffset":3602,"endOffset":3655,"count":0},{"startOffset":3705,"endOffset":3808,"count":0},{"startOffset":3812,"endOffset":3861,"count":158}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":3930,"endOffset":4020,"count":996}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4237,"endOffset":5057,"count":449},{"startOffset":4424,"endOffset":4994,"count":816},{"startOffset":4673,"endOffset":4719,"count":0},{"startOffset":4721,"endOffset":4748,"count":0},{"startOffset":4815,"endOffset":4842,"count":0},{"startOffset":4913,"endOffset":4990,"count":449},{"startOffset":4994,"endOffset":5056,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1284,"endOffset":1390,"count":3}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1520,"endOffset":1635,"count":2}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1785,"endOffset":2167,"count":1},{"startOffset":1968,"endOffset":1972,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":2237,"endOffset":2596,"count":2},{"startOffset":2350,"endOffset":2558,"count":0}],"isBlockCoverage":true},{"functionName":"defaultInitializeImportMetaForModule","ranges":[{"startOffset":5687,"endOffset":5916,"count":8}],"isBlockCoverage":true},{"functionName":"initializeImportMetaObject","ranges":[{"startOffset":6230,"endOffset":6685,"count":8},{"startOffset":6408,"endOffset":6683,"count":0}],"isBlockCoverage":true},{"functionName":"defaultImportModuleDynamicallyForModule","ranges":[{"startOffset":7096,"endOffset":7351,"count":8}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":8690,"endOffset":10167,"count":8},{"startOffset":8985,"endOffset":9146,"count":0},{"startOffset":9371,"endOffset":9465,"count":0},{"startOffset":9706,"endOffset":10166,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":10479,"endOffset":10865,"count":1}],"isBlockCoverage":true},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":10993,"endOffset":11056,"count":1}],"isBlockCoverage":true},{"functionName":"compileSourceTextModule","ranges":[{"startOffset":12697,"endOffset":13158,"count":247},{"startOffset":12837,"endOffset":12848,"count":0},{"startOffset":12954,"endOffset":12976,"count":0},{"startOffset":13055,"endOffset":13141,"count":38}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1089,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":2503,"endOffset":4697,"count":1},{"startOffset":3464,"endOffset":3568,"count":0},{"startOffset":4456,"endOffset":4618,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4699,"endOffset":5434,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":5436,"endOffset":6184,"count":1},{"startOffset":5806,"endOffset":5837,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6186,"endOffset":6242,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":6669,"endOffset":9034,"count":1},{"startOffset":7682,"endOffset":7734,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9036,"endOffset":9317,"count":13},{"startOffset":9157,"endOffset":9315,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9319,"endOffset":9839,"count":1},{"startOffset":9694,"endOffset":9833,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9723,"endOffset":9825,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":9914,"endOffset":10333,"count":1},{"startOffset":9988,"endOffset":10148,"count":0},{"startOffset":10242,"endOffset":10331,"count":0}],"isBlockCoverage":true},{"functionName":"setupWebCrypto","ranges":[{"startOffset":10437,"endOffset":11389,"count":1},{"startOffset":10572,"endOffset":10589,"count":0},{"startOffset":11078,"endOffset":11387,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":10763,"endOffset":10939,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":11240,"endOffset":11339,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":11391,"endOffset":11912,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":12018,"endOffset":12295,"count":1},{"startOffset":12157,"endOffset":12174,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":12297,"endOffset":12522,"count":1},{"startOffset":12399,"endOffset":12521,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":12524,"endOffset":12773,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12669,"endOffset":12764,"count":1}],"isBlockCoverage":true},{"functionName":"setupDebugEnv","ranges":[{"startOffset":12775,"endOffset":13006,"count":1},{"startOffset":12926,"endOffset":13004,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":13068,"endOffset":13256,"count":1},{"startOffset":13156,"endOffset":13254,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":13258,"endOffset":13992,"count":1},{"startOffset":13453,"endOffset":13990,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":13566,"endOffset":13720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13912,"endOffset":13984,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":13994,"endOffset":14253,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":14255,"endOffset":14837,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":15032,"endOffset":16984,"count":1},{"startOffset":15744,"endOffset":16046,"count":16},{"startOffset":15789,"endOffset":16021,"count":0},{"startOffset":16363,"endOffset":16560,"count":0},{"startOffset":16588,"endOffset":16982,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":16986,"endOffset":17551,"count":1},{"startOffset":17062,"endOffset":17549,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":17553,"endOffset":17823,"count":1},{"startOffset":17640,"endOffset":17821,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":17825,"endOffset":19822,"count":1},{"startOffset":17967,"endOffset":19396,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":17991,"endOffset":18078,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19654,"endOffset":19814,"count":6},{"startOffset":19732,"endOffset":19808,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":19824,"endOffset":21643,"count":1},{"startOffset":19952,"endOffset":21641,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":21645,"endOffset":21766,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":21768,"endOffset":22351,"count":1},{"startOffset":22104,"endOffset":22349,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22353,"endOffset":22551,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":22553,"endOffset":22740,"count":1},{"startOffset":22638,"endOffset":22738,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":22847,"endOffset":23195,"count":1},{"startOffset":23041,"endOffset":23193,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23197,"endOffset":23291,"count":1}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":633,"endOffset":1792,"count":1},{"startOffset":807,"endOffset":911,"count":0},{"startOffset":1204,"endOffset":1215,"count":0},{"startOffset":1442,"endOffset":1766,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1953,"endOffset":3406,"count":1},{"startOffset":2059,"endOffset":2075,"count":0},{"startOffset":2549,"endOffset":2565,"count":0},{"startOffset":2681,"endOffset":2697,"count":0},{"startOffset":2760,"endOffset":2777,"count":0},{"startOffset":3039,"endOffset":3075,"count":0},{"startOffset":3080,"endOffset":3400,"count":0}],"isBlockCoverage":true},{"functionName":"asyncRunEntryPointWithESMLoader","ranges":[{"startOffset":3775,"endOffset":4605,"count":1},{"startOffset":4064,"endOffset":4252,"count":0},{"startOffset":4345,"endOffset":4545,"count":0}],"isBlockCoverage":true},{"functionName":"runEntryPointWithESMLoader","ranges":[{"startOffset":4989,"endOffset":5117,"count":1}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":5664,"endOffset":6392,"count":1},{"startOffset":5880,"endOffset":5887,"count":0},{"startOffset":6217,"endOffset":6390,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5971,"endOffset":6211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":484,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":935,"endOffset":1082,"count":1}],"isBlockCoverage":true},{"functionName":"validateTries","ranges":[{"startOffset":1084,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"ResolverBase","ranges":[{"startOffset":1613,"endOffset":1962,"count":1},{"startOffset":1856,"endOffset":1913,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1966,"endOffset":2102,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDns","ranges":[{"startOffset":5468,"endOffset":5949,"count":1},{"startOffset":5611,"endOffset":5816,"count":0},{"startOffset":5864,"endOffset":5948,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5889,"endOffset":5945,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6210,"endOffset":6491,"count":1}],"isBlockCoverage":true},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6566,"endOffset":6788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6699,"endOffset":6784,"count":15}],"isBlockCoverage":true},{"functionName":"getDefaultResultOrder","ranges":[{"startOffset":7549,"endOffset":7604,"count":3}],"isBlockCoverage":true},{"functionName":"createResolverClass","ranges":[{"startOffset":7606,"endOffset":8714,"count":1}],"isBlockCoverage":true}]},{"scriptId":"72","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":1023,"endOffset":1296,"count":3}],"isBlockCoverage":true},{"functionName":"isIPv6","ranges":[{"startOffset":1298,"endOffset":1571,"count":1}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":1573,"endOffset":1659,"count":3},{"startOffset":1609,"endOffset":1618,"count":2},{"startOffset":1618,"endOffset":1645,"count":1},{"startOffset":1645,"endOffset":1658,"count":0}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3781,"endOffset":3884,"count":3},{"startOffset":3833,"endOffset":3862,"count":1}],"isBlockCoverage":true}]},{"scriptId":"80","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1182,"count":1}],"isBlockCoverage":false}]},{"scriptId":"81","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28810,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":1481,"endOffset":1611,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1765,"endOffset":1886,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":2048,"endOffset":2170,"count":310}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2924,"endOffset":21602,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":3998,"endOffset":4191,"count":1},{"startOffset":4086,"endOffset":4143,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5731,"endOffset":5975,"count":2},{"startOffset":5834,"endOffset":5971,"count":1}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5979,"endOffset":6449,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7184,"endOffset":7419,"count":681}],"isBlockCoverage":true},{"functionName":"getModuleJobSync","ranges":[{"startOffset":7423,"endOffset":7660,"count":0}],"isBlockCoverage":false},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":7664,"endOffset":8248,"count":681},{"startOffset":8038,"endOffset":8100,"count":0},{"startOffset":8129,"endOffset":8227,"count":309}],"isBlockCoverage":true},{"functionName":"importSyncForRequire","ranges":[{"startOffset":8743,"endOffset":10645,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleWrapForRequire","ranges":[{"startOffset":11069,"endOffset":14703,"count":0}],"isBlockCoverage":false},{"functionName":"#createModuleJob","ranges":[{"startOffset":15341,"endOffset":16547,"count":309},{"startOffset":15834,"endOffset":15910,"count":0},{"startOffset":16080,"endOffset":16120,"count":1},{"startOffset":16175,"endOffset":16190,"count":0},{"startOffset":16192,"endOffset":16246,"count":0}],"isBlockCoverage":true},{"functionName":"callTranslator","ranges":[{"startOffset":15435,"endOffset":15749,"count":309},{"startOffset":15579,"endOffset":15659,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15842,"endOffset":15910,"count":0}],"isBlockCoverage":false},{"functionName":"moduleProvider","ranges":[{"startOffset":15919,"endOffset":15995,"count":309}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":17009,"endOffset":17234,"count":9}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":17300,"endOffset":17823,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":18282,"endOffset":18868,"count":681},{"startOffset":18370,"endOffset":18468,"count":678},{"startOffset":18468,"endOffset":18664,"count":3},{"startOffset":18664,"endOffset":18698,"count":0},{"startOffset":18698,"endOffset":18867,"count":3}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":19026,"endOffset":19304,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":19516,"endOffset":19856,"count":3}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":20140,"endOffset":20444,"count":309},{"startOffset":20277,"endOffset":20331,"count":306},{"startOffset":20331,"endOffset":20370,"count":3},{"startOffset":20371,"endOffset":20411,"count":3}],"isBlockCoverage":true},{"functionName":"loadSync","ranges":[{"startOffset":20448,"endOffset":20979,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":20983,"endOffset":21134,"count":309},{"startOffset":21041,"endOffset":21130,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":21138,"endOffset":21473,"count":8},{"startOffset":21206,"endOffset":21290,"count":7},{"startOffset":21290,"endOffset":21472,"count":1}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":21534,"endOffset":21600,"count":1},{"startOffset":21577,"endOffset":21593,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21656,"endOffset":24166,"count":1}],"isBlockCoverage":false},{"functionName":"CustomizedModuleLoader","ranges":[{"startOffset":21814,"endOffset":21854,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":22438,"endOffset":22603,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":23062,"endOffset":23233,"count":678}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":23237,"endOffset":23509,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":23793,"endOffset":23890,"count":306}],"isBlockCoverage":true},{"functionName":"loadSync","ranges":[{"startOffset":23893,"endOffset":23993,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":23997,"endOffset":24106,"count":7}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":24110,"endOffset":24164,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":24550,"endOffset":26212,"count":1},{"startOffset":24995,"endOffset":26162,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":25070,"endOffset":25565,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25885,"endOffset":25973,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":26325,"endOffset":26501,"count":1}],"isBlockCoverage":true},{"functionName":"getOrInitializeCascadedLoader","ranges":[{"startOffset":27003,"endOffset":27115,"count":18}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":28357,"endOffset":28702,"count":1},{"startOffset":28477,"endOffset":28497,"count":0},{"startOffset":28499,"endOffset":28564,"count":0},{"startOffset":28638,"endOffset":28648,"count":0},{"startOffset":28661,"endOffset":28667,"count":0},{"startOffset":28680,"endOffset":28694,"count":0}],"isBlockCoverage":true}]},{"scriptId":"82","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1326,"endOffset":1364,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1785,"endOffset":3160,"count":3},{"startOffset":1981,"endOffset":2108,"count":0},{"startOffset":2180,"endOffset":2325,"count":0},{"startOffset":2590,"endOffset":2650,"count":0},{"startOffset":2656,"endOffset":2764,"count":0},{"startOffset":2770,"endOffset":3154,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3392,"endOffset":3806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3889,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":281,"endOffset":306,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":850,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1224,"endOffset":1836,"count":3},{"startOffset":1633,"endOffset":1835,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1752,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1840,"endOffset":2056,"count":6},{"startOffset":1954,"endOffset":2026,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2231,"endOffset":2333,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2473,"endOffset":2602,"count":3}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2606,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2844,"endOffset":2872,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2921,"endOffset":3064,"count":681},{"startOffset":3051,"endOffset":3059,"count":372}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3067,"endOffset":3674,"count":309},{"startOffset":3298,"endOffset":3334,"count":0},{"startOffset":3336,"endOffset":3406,"count":0},{"startOffset":3490,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3677,"endOffset":3834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19015,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":512,"endOffset":628,"count":490},{"startOffset":558,"endOffset":576,"count":489},{"startOffset":576,"endOffset":627,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1318,"endOffset":1343,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":1992,"endOffset":2120,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParse","ranges":[{"startOffset":2416,"endOffset":2722,"count":1},{"startOffset":2490,"endOffset":2519,"count":0},{"startOffset":2677,"endOffset":2716,"count":0}],"isBlockCoverage":true},{"functionName":"initCJSParseSync","ranges":[{"startOffset":2724,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":3600,"endOffset":4021,"count":492},{"startOffset":3677,"endOffset":3704,"count":247},{"startOffset":3706,"endOffset":3723,"count":2},{"startOffset":3723,"endOffset":3817,"count":490},{"startOffset":3817,"endOffset":3842,"count":0},{"startOffset":3844,"endOffset":3861,"count":490},{"startOffset":3861,"endOffset":3940,"count":0},{"startOffset":3941,"endOffset":3945,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":4245,"endOffset":4512,"count":286},{"startOffset":4304,"endOffset":4320,"count":41},{"startOffset":4320,"endOffset":4449,"count":245},{"startOffset":4449,"endOffset":4468,"count":1},{"startOffset":4469,"endOffset":4478,"count":244}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":4632,"endOffset":4777,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":4859,"endOffset":5182,"count":247}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":5407,"endOffset":5929,"count":0}],"isBlockCoverage":false},{"functionName":"loadCJSModule","ranges":[{"startOffset":6521,"endOffset":8629,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":9113,"endOffset":10545,"count":39},{"startOffset":9382,"endOffset":9415,"count":0},{"startOffset":9580,"endOffset":9602,"count":3},{"startOffset":9603,"endOffset":9632,"count":36},{"startOffset":9649,"endOffset":9705,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9765,"endOffset":10533,"count":39},{"startOffset":9842,"endOffset":9895,"count":38},{"startOffset":10046,"endOffset":10089,"count":0},{"startOffset":10132,"endOffset":10489,"count":64},{"startOffset":10235,"endOffset":10262,"count":3},{"startOffset":10262,"endOffset":10386,"count":61},{"startOffset":10386,"endOffset":10442,"count":0},{"startOffset":10442,"endOffset":10489,"count":61}],"isBlockCoverage":true},{"functionName":"requireCommonJS","ranges":[{"startOffset":10580,"endOffset":10893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11055,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":11335,"endOffset":12223,"count":39},{"startOffset":11467,"endOffset":11498,"count":1},{"startOffset":11970,"endOffset":11985,"count":0},{"startOffset":12110,"endOffset":12158,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":11745,"endOffset":11969,"count":38},{"startOffset":11884,"endOffset":11965,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":12412,"endOffset":14957,"count":41},{"startOffset":12594,"endOffset":12637,"count":0},{"startOffset":12639,"endOffset":12708,"count":0},{"startOffset":13093,"endOffset":13098,"count":0},{"startOffset":13106,"endOffset":13155,"count":0},{"startOffset":13321,"endOffset":14920,"count":2},{"startOffset":14182,"endOffset":14215,"count":0},{"startOffset":14431,"endOffset":14448,"count":0},{"startOffset":14449,"endOffset":14479,"count":0},{"startOffset":14858,"endOffset":14902,"count":1}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":15081,"endOffset":15487,"count":23},{"startOffset":15360,"endOffset":15412,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":15599,"endOffset":17873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17939,"endOffset":19012,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46192,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2799,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3945,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5124,"endOffset":6304,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7395,"endOffset":8155,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":8939,"endOffset":10409,"count":2},{"startOffset":9075,"endOffset":9228,"count":0},{"startOffset":9290,"endOffset":9474,"count":0},{"startOffset":9563,"endOffset":9599,"count":0},{"startOffset":9665,"endOffset":9757,"count":0},{"startOffset":9780,"endOffset":10068,"count":0},{"startOffset":10314,"endOffset":10319,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":10823,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11430,"endOffset":11625,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12263,"endOffset":12646,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13102,"endOffset":13480,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":14836,"endOffset":17589,"count":33},{"startOffset":15005,"endOffset":15016,"count":0},{"startOffset":15017,"endOffset":15053,"count":0},{"startOffset":15055,"endOffset":15139,"count":0},{"startOffset":15189,"endOffset":15746,"count":0},{"startOffset":15838,"endOffset":16448,"count":0},{"startOffset":16667,"endOffset":16751,"count":0},{"startOffset":16795,"endOffset":17588,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15521,"endOffset":15534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16047,"endOffset":16060,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16193,"endOffset":16206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16930,"endOffset":16943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17170,"endOffset":17183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17523,"endOffset":17536,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":17781,"endOffset":17925,"count":7},{"startOffset":17877,"endOffset":17922,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":18720,"endOffset":20970,"count":36},{"startOffset":18913,"endOffset":19067,"count":33},{"startOffset":19067,"endOffset":20853,"count":3},{"startOffset":19099,"endOffset":19945,"count":0},{"startOffset":20098,"endOffset":20326,"count":7},{"startOffset":20156,"endOffset":20320,"count":0},{"startOffset":20369,"endOffset":20778,"count":5},{"startOffset":20426,"endOffset":20448,"count":4},{"startOffset":20450,"endOffset":20772,"count":3},{"startOffset":20721,"endOffset":20734,"count":0},{"startOffset":20778,"endOffset":20853,"count":0},{"startOffset":20853,"endOffset":20969,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21254,"endOffset":22197,"count":33},{"startOffset":21386,"endOffset":21402,"count":0},{"startOffset":21458,"endOffset":21475,"count":0},{"startOffset":21615,"endOffset":22166,"count":206},{"startOffset":21725,"endOffset":21782,"count":33},{"startOffset":21782,"endOffset":22162,"count":173},{"startOffset":21838,"endOffset":22162,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":22694,"endOffset":25269,"count":33},{"startOffset":22902,"endOffset":22939,"count":0},{"startOffset":23341,"endOffset":23415,"count":0},{"startOffset":23446,"endOffset":25268,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":25643,"endOffset":26198,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":26685,"endOffset":29142,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":29256,"endOffset":29369,"count":1}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":29534,"endOffset":30592,"count":1},{"startOffset":29725,"endOffset":29953,"count":0},{"startOffset":29999,"endOffset":30014,"count":0},{"startOffset":30240,"endOffset":30275,"count":0},{"startOffset":30302,"endOffset":30421,"count":0},{"startOffset":30477,"endOffset":30481,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":30916,"endOffset":32988,"count":1},{"startOffset":31030,"endOffset":31076,"count":0},{"startOffset":31375,"endOffset":31412,"count":0},{"startOffset":31414,"endOffset":31531,"count":0},{"startOffset":31965,"endOffset":32242,"count":0},{"startOffset":32540,"endOffset":32987,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33099,"endOffset":33209,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33328,"endOffset":33607,"count":5},{"startOffset":33398,"endOffset":33589,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":33756,"endOffset":33947,"count":5},{"startOffset":33842,"endOffset":33859,"count":0},{"startOffset":33888,"endOffset":33904,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":34310,"endOffset":35682,"count":2},{"startOffset":34501,"endOffset":34520,"count":0},{"startOffset":34823,"endOffset":35047,"count":0},{"startOffset":35103,"endOffset":35175,"count":0},{"startOffset":35236,"endOffset":35549,"count":1},{"startOffset":35271,"endOffset":35326,"count":0},{"startOffset":35328,"endOffset":35481,"count":0},{"startOffset":35591,"endOffset":35617,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":35882,"endOffset":37708,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":38088,"endOffset":39460,"count":3},{"startOffset":38182,"endOffset":39458,"count":2},{"startOffset":38394,"endOffset":39454,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":39600,"endOffset":39873,"count":3},{"startOffset":39677,"endOffset":39728,"count":1},{"startOffset":39728,"endOffset":39765,"count":2},{"startOffset":39765,"endOffset":39785,"count":0},{"startOffset":39787,"endOffset":39871,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":40497,"endOffset":44495,"count":3},{"startOffset":40645,"endOffset":40664,"count":2},{"startOffset":40654,"endOffset":40664,"count":0},{"startOffset":40666,"endOffset":41475,"count":0},{"startOffset":41517,"endOffset":41622,"count":2},{"startOffset":41579,"endOffset":41618,"count":0},{"startOffset":41716,"endOffset":41775,"count":0},{"startOffset":41823,"endOffset":41958,"count":2},{"startOffset":41958,"endOffset":42003,"count":0},{"startOffset":42004,"endOffset":42039,"count":0},{"startOffset":42041,"endOffset":42204,"count":0},{"startOffset":42204,"endOffset":42367,"count":2},{"startOffset":42271,"endOffset":42359,"count":0},{"startOffset":42374,"endOffset":42433,"count":0},{"startOffset":42438,"endOffset":42553,"count":1},{"startOffset":42503,"endOffset":42525,"count":0},{"startOffset":42887,"endOffset":42910,"count":0},{"startOffset":42983,"endOffset":42993,"count":0},{"startOffset":43023,"endOffset":43070,"count":1},{"startOffset":43070,"endOffset":43129,"count":2},{"startOffset":43129,"endOffset":43636,"count":1},{"startOffset":43589,"endOffset":43632,"count":0},{"startOffset":43636,"endOffset":43792,"count":2},{"startOffset":43792,"endOffset":43814,"count":1},{"startOffset":43815,"endOffset":43833,"count":1},{"startOffset":43846,"endOffset":44269,"count":0},{"startOffset":44269,"endOffset":44494,"count":2}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":44758,"endOffset":45371,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":45797,"endOffset":46188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1072,"endOffset":2165,"count":2},{"startOffset":1324,"endOffset":1344,"count":0},{"startOffset":1569,"endOffset":1906,"count":0},{"startOffset":1910,"endOffset":2164,"count":0}],"isBlockCoverage":true}]},{"scriptId":"87","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6669,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":953,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1049,"endOffset":1265,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1540,"endOffset":1899,"count":2},{"startOffset":1640,"endOffset":1884,"count":7},{"startOffset":1702,"endOffset":1737,"count":0},{"startOffset":1745,"endOffset":1874,"count":2},{"startOffset":1833,"endOffset":1837,"count":0},{"startOffset":1884,"endOffset":1898,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2129,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2491,"endOffset":5330,"count":2},{"startOffset":2660,"endOffset":3874,"count":1},{"startOffset":2772,"endOffset":3264,"count":0},{"startOffset":3271,"endOffset":3394,"count":0},{"startOffset":3401,"endOffset":3864,"count":0},{"startOffset":3874,"endOffset":3894,"count":1},{"startOffset":3894,"endOffset":5038,"count":0},{"startOffset":5038,"endOffset":5114,"count":1},{"startOffset":5114,"endOffset":5329,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":5466,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":5956,"endOffset":6191,"count":2},{"startOffset":6110,"endOffset":6132,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":6336,"endOffset":6559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1798,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":660,"endOffset":998,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1368,"endOffset":1704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11151,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":478,"endOffset":503,"count":1}],"isBlockCoverage":true},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1100,"endOffset":1231,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJobBase","ranges":[{"startOffset":1258,"endOffset":1511,"count":309}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1626,"endOffset":9354,"count":309}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1754,"endOffset":3780,"count":309},{"startOffset":2233,"endOffset":2336,"count":0}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":2507,"endOffset":3397,"count":309}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2963,"endOffset":3233,"count":672}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3784,"endOffset":3929,"count":9}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3933,"endOffset":7662,"count":9},{"startOffset":4466,"endOffset":4643,"count":0},{"startOffset":4700,"endOffset":7415,"count":0},{"startOffset":7462,"endOffset":7658,"count":597}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":4032,"endOffset":4365,"count":1058},{"startOffset":4166,"endOffset":4191,"count":461},{"startOffset":4191,"endOffset":4364,"count":597}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":7666,"endOffset":8103,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":8107,"endOffset":9352,"count":9},{"startOffset":8319,"endOffset":9295,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9545,"endOffset":11031,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7988,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1236,"endOffset":2463,"count":2},{"startOffset":1504,"endOffset":2329,"count":0},{"startOffset":2342,"endOffset":2352,"count":0},{"startOffset":2354,"endOffset":2410,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceSync","ranges":[{"startOffset":2646,"endOffset":3385,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":3506,"endOffset":5104,"count":3},{"startOffset":3690,"endOffset":3725,"count":0},{"startOffset":3726,"endOffset":3758,"count":0},{"startOffset":3760,"endOffset":3967,"count":0},{"startOffset":4119,"endOffset":4169,"count":1},{"startOffset":4169,"endOffset":4779,"count":2},{"startOffset":4201,"endOffset":4228,"count":0},{"startOffset":4410,"endOffset":4775,"count":0},{"startOffset":4936,"endOffset":4986,"count":0},{"startOffset":4988,"endOffset":5023,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoadSync","ranges":[{"startOffset":5617,"endOffset":6447,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":6635,"endOffset":7267,"count":3},{"startOffset":6865,"endOffset":6892,"count":1},{"startOffset":6893,"endOffset":6920,"count":1},{"startOffset":6921,"endOffset":7050,"count":0},{"startOffset":7055,"endOffset":7265,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":7646,"endOffset":7884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34384,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3287,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3441,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3553,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":3888,"endOffset":4018,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4020,"endOffset":10138,"count":7}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":4161,"endOffset":4338,"count":7},{"startOffset":4275,"endOffset":4279,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":4342,"endOffset":4399,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4403,"endOffset":4439,"count":14}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4443,"endOffset":4525,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4529,"endOffset":4585,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4589,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4657,"endOffset":4709,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4713,"endOffset":4757,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4761,"endOffset":4870,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":4874,"endOffset":4955,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":4959,"endOffset":5026,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":5030,"endOffset":5173,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5177,"endOffset":5237,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":5241,"endOffset":5305,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":5309,"endOffset":5383,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5387,"endOffset":5498,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5502,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5589,"endOffset":5670,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5682,"endOffset":6474,"count":7},{"startOffset":5716,"endOffset":5754,"count":0},{"startOffset":5785,"endOffset":5826,"count":0},{"startOffset":6052,"endOffset":6413,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5994,"endOffset":6036,"count":7}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":6137,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6252,"endOffset":6397,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6479,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":6733,"endOffset":8419,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":8717,"endOffset":8868,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9172,"endOffset":9326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9330,"endOffset":9730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9734,"endOffset":9787,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9791,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9882,"endOffset":9915,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9919,"endOffset":10136,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10140,"endOffset":10511,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10251,"endOffset":10310,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10297,"endOffset":10309,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10316,"endOffset":10503,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10513,"endOffset":10796,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":10798,"endOffset":11258,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11260,"endOffset":11380,"count":29},{"startOffset":11304,"endOffset":11313,"count":0},{"startOffset":11319,"endOffset":11378,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11382,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12526,"endOffset":14927,"count":7},{"startOffset":12678,"endOffset":12708,"count":5},{"startOffset":13062,"endOffset":13100,"count":5},{"startOffset":13101,"endOffset":13107,"count":2},{"startOffset":13133,"endOffset":13181,"count":0},{"startOffset":13214,"endOffset":13252,"count":0},{"startOffset":13523,"endOffset":13595,"count":0},{"startOffset":13779,"endOffset":13783,"count":0},{"startOffset":13868,"endOffset":13935,"count":0},{"startOffset":14029,"endOffset":14040,"count":0},{"startOffset":14097,"endOffset":14157,"count":0},{"startOffset":14180,"endOffset":14358,"count":2},{"startOffset":14201,"endOffset":14215,"count":0},{"startOffset":14217,"endOffset":14327,"count":0},{"startOffset":14358,"endOffset":14433,"count":5},{"startOffset":14433,"endOffset":14586,"count":0},{"startOffset":14587,"endOffset":14601,"count":0},{"startOffset":14621,"endOffset":14921,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":15080,"endOffset":15318,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15320,"endOffset":15589,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":15591,"endOffset":15973,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16093,"endOffset":16481,"count":8},{"startOffset":16477,"endOffset":16480,"count":7}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":16483,"endOffset":17924,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":17926,"endOffset":18290,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18292,"endOffset":19650,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":19652,"endOffset":20117,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20119,"endOffset":20495,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20497,"endOffset":20630,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20632,"endOffset":20871,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":20873,"endOffset":21075,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21077,"endOffset":21526,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":21528,"endOffset":21697,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":21699,"endOffset":21860,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":21862,"endOffset":22409,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":22411,"endOffset":24433,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24435,"endOffset":24946,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":24948,"endOffset":25262,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":25264,"endOffset":26564,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":26566,"endOffset":26818,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":26820,"endOffset":27145,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":27147,"endOffset":27469,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":27471,"endOffset":27800,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":27802,"endOffset":28195,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":28197,"endOffset":28415,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":28417,"endOffset":28630,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":28632,"endOffset":28898,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":28900,"endOffset":29128,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":29130,"endOffset":29462,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":29464,"endOffset":29741,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":29743,"endOffset":30073,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":30075,"endOffset":30412,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":30414,"endOffset":30693,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":30695,"endOffset":31037,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":31039,"endOffset":31321,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":31323,"endOffset":31631,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":31633,"endOffset":32507,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":32509,"endOffset":32623,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":32625,"endOffset":32866,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":32868,"endOffset":33212,"count":8},{"startOffset":32985,"endOffset":32991,"count":0},{"startOffset":33032,"endOffset":33069,"count":0},{"startOffset":33147,"endOffset":33211,"count":7}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":33214,"endOffset":33873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8077,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1177,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1997,"endOffset":2040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2044,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3845,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4103,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4686,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5666,"endOffset":6355,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6359,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":6740,"endOffset":7003,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7183,"endOffset":7763,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7765,"endOffset":8020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5141,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2172,"endOffset":2422,"count":5},{"startOffset":2272,"endOffset":2405,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2633,"endOffset":2832,"count":5}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3155,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3817,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4219,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4514,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4819,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4975,"endOffset":5090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11262,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1420,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1470,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1820,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2565,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3624,"endOffset":3632,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3878,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4248,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4706,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5021,"endOffset":5271,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5275,"endOffset":6247,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6784,"endOffset":7698,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7915,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8046,"endOffset":8383,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8412,"endOffset":8481,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8512,"endOffset":8583,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8586,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8862,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8902,"endOffset":8943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8979,"endOffset":11130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7216,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":716,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":833,"endOffset":7162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8934,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":1117,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1536,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1758,"endOffset":1957,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1959,"endOffset":2230,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":2232,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2448,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2618,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2787,"endOffset":2899,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2901,"endOffset":3231,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":3233,"endOffset":3496,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3520,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3839,"endOffset":4236,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":4265,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4591,"endOffset":4939,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4941,"endOffset":5241,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":5243,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5542,"endOffset":5856,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5858,"endOffset":6070,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":6072,"endOffset":6284,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":6286,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6793,"endOffset":7045,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":7047,"endOffset":7174,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":7176,"endOffset":7364,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7366,"endOffset":7704,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":7706,"endOffset":7851,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7853,"endOffset":8158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39089,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3853,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9586,"endOffset":9686,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9689,"endOffset":9801,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9910,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10055,"endOffset":10098,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10102,"endOffset":10293,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10432,"endOffset":10686,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10690,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11001,"endOffset":11243,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11247,"endOffset":11334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11338,"endOffset":11506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11510,"endOffset":11707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11711,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12893,"endOffset":13898,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13982,"endOffset":14153,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14234,"endOffset":14365,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14457,"endOffset":14593,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14864,"endOffset":15023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15027,"endOffset":16761,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16765,"endOffset":17434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17438,"endOffset":17837,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17841,"endOffset":20050,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20054,"endOffset":20515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20519,"endOffset":20777,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20781,"endOffset":21263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21267,"endOffset":21748,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21752,"endOffset":22512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22516,"endOffset":22943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22947,"endOffset":23225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23229,"endOffset":23487,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23491,"endOffset":23751,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23755,"endOffset":23910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23914,"endOffset":24589,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24593,"endOffset":24742,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24746,"endOffset":24900,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24904,"endOffset":25091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25095,"endOffset":25403,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25407,"endOffset":25715,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26150,"endOffset":26784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26788,"endOffset":27496,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27571,"endOffset":28511,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28688,"endOffset":28857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28976,"endOffset":29533,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29570,"endOffset":37820,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38128,"endOffset":38508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12396,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11840,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11870,"endOffset":12283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/ace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":806,"count":1}],"isBlockCoverage":true}]},{"scriptId":"101","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ts-node-maintained/register/esm.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true}]},{"scriptId":"102","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12184,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4050,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4164,"endOffset":4242,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4280,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4395,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4600,"endOffset":10134,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":10189,"endOffset":10258,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":10348,"endOffset":11281,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":11348,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":11855,"endOffset":12134,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2412,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":756,"endOffset":1507,"count":8}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1019,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1809,"endOffset":2364,"count":8}],"isBlockCoverage":true}]},{"scriptId":"105","url":"node:internal/modules/esm/hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26543,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1711,"endOffset":1736,"count":1}],"isBlockCoverage":true},{"functionName":"emitImportAssertionWarning","ranges":[{"startOffset":1810,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"defineImportAssertionAlias","ranges":[{"startOffset":2041,"endOffset":2410,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2909,"endOffset":14903,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15109,"endOffset":23142,"count":1}],"isBlockCoverage":false},{"functionName":"HooksProxy","ranges":[{"startOffset":15781,"endOffset":16350,"count":1}],"isBlockCoverage":true},{"functionName":"waitForWorker","ranges":[{"startOffset":16354,"endOffset":16915,"count":985},{"startOffset":16396,"endOffset":16911,"count":1},{"startOffset":16738,"endOffset":16749,"count":0}],"isBlockCoverage":true},{"functionName":"makeAsyncRequest","ranges":[{"startOffset":17176,"endOffset":19145,"count":984},{"startOffset":17565,"endOffset":17636,"count":0},{"startOffset":17828,"endOffset":18378,"count":31},{"startOffset":18405,"endOffset":18762,"count":5732},{"startOffset":18918,"endOffset":19039,"count":31}],"isBlockCoverage":true},{"functionName":"makeSyncRequest","ranges":[{"startOffset":19396,"endOffset":20385,"count":1},{"startOffset":19683,"endOffset":20049,"count":2},{"startOffset":20190,"endOffset":20243,"count":0},{"startOffset":20289,"endOffset":20339,"count":0}],"isBlockCoverage":true},{"functionName":"#unwrapMessage","ranges":[{"startOffset":20389,"endOffset":20927,"count":986},{"startOffset":20468,"endOffset":20511,"count":0},{"startOffset":20587,"endOffset":20891,"count":0}],"isBlockCoverage":true},{"functionName":"status.status","ranges":[{"startOffset":20495,"endOffset":20503,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":21036,"endOffset":21141,"count":7}],"isBlockCoverage":true},{"functionName":"#executePreloadScripts","ranges":[{"startOffset":21145,"endOffset":23140,"count":1},{"startOffset":21238,"endOffset":23139,"count":0}],"isBlockCoverage":true},{"functionName":"replacedImportMetaInitializer","ranges":[{"startOffset":22036,"endOffset":22546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22633,"endOffset":22966,"count":0}],"isBlockCoverage":false},{"functionName":"pluckHooks","ranges":[{"startOffset":23354,"endOffset":23754,"count":0}],"isBlockCoverage":false},{"functionName":"nextHookFactory","ranges":[{"startOffset":24807,"endOffset":26484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":687,"count":1}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16395,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2471,"endOffset":2496,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":2984,"endOffset":3064,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3069,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3218,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3291,"endOffset":3441,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3481,"endOffset":9221,"count":1},{"startOffset":3801,"endOffset":3853,"count":0},{"startOffset":3891,"endOffset":4003,"count":0},{"startOffset":4112,"endOffset":5142,"count":0},{"startOffset":5197,"endOffset":5220,"count":0},{"startOffset":5222,"endOffset":5398,"count":0},{"startOffset":5461,"endOffset":5657,"count":0},{"startOffset":5700,"endOffset":5807,"count":0},{"startOffset":6061,"endOffset":6066,"count":0},{"startOffset":6265,"endOffset":6272,"count":0},{"startOffset":6403,"endOffset":6487,"count":0},{"startOffset":6530,"endOffset":6663,"count":0},{"startOffset":7111,"endOffset":7165,"count":0},{"startOffset":7765,"endOffset":7871,"count":0},{"startOffset":8274,"endOffset":8302,"count":0},{"startOffset":8449,"endOffset":8497,"count":0},{"startOffset":8573,"endOffset":8621,"count":0},{"startOffset":9141,"endOffset":9217,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5330,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.<computed>.onexit","ranges":[{"startOffset":6691,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6868,"endOffset":6900,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7959,"endOffset":8052,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8006,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9059,"endOffset":9093,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9225,"endOffset":9857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9861,"endOffset":9957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9961,"endOffset":10130,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10134,"endOffset":11027,"count":1},{"startOffset":10300,"endOffset":10392,"count":0},{"startOffset":10399,"endOffset":10484,"count":0},{"startOffset":10491,"endOffset":10775,"count":0},{"startOffset":10782,"endOffset":10952,"count":0},{"startOffset":10958,"endOffset":11026,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10671,"endOffset":10749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11031,"endOffset":11499,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11503,"endOffset":11648,"count":985},{"startOffset":11562,"endOffset":11569,"count":0}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":11652,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12490,"endOffset":12596,"count":31},{"startOffset":12530,"endOffset":12537,"count":0}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":12600,"endOffset":12712,"count":32},{"startOffset":12642,"endOffset":12649,"count":0}],"isBlockCoverage":true},{"functionName":"get threadId","ranges":[{"startOffset":12716,"endOffset":12815,"count":1},{"startOffset":12765,"endOffset":12775,"count":0}],"isBlockCoverage":true},{"functionName":"get stdin","ranges":[{"startOffset":12819,"endOffset":12877,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":12881,"endOffset":12941,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":12945,"endOffset":13005,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13009,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13149,"endOffset":13656,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":13849,"endOffset":13928,"count":1}],"isBlockCoverage":true},{"functionName":"receiveMessageSync","ranges":[{"startOffset":13932,"endOffset":14010,"count":3}],"isBlockCoverage":true},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14014,"endOffset":14336,"count":2}],"isBlockCoverage":true},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14410,"endOffset":15024,"count":1},{"startOffset":14547,"endOffset":14562,"count":0},{"startOffset":14575,"endOffset":15023,"count":0}],"isBlockCoverage":true},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15026,"endOffset":15313,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15315,"endOffset":16118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":153,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":448,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15479,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3683,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3769,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3909,"endOffset":3985,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4024,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4628,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4862,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5103,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5344,"endOffset":5470,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5579,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5946,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6403,"endOffset":6546,"count":1971}],"isBlockCoverage":true},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6848,"endOffset":6887,"count":1969}],"isBlockCoverage":true},{"functionName":"onclose","ranges":[{"startOffset":6960,"endOffset":7033,"count":1969}],"isBlockCoverage":true},{"functionName":"MessagePort.close","ranges":[{"startOffset":7214,"endOffset":7349,"count":984},{"startOffset":7265,"endOffset":7288,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":7482,"endOffset":8110,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8117,"endOffset":9480,"count":1972}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8478,"endOffset":8573,"count":2},{"startOffset":8523,"endOffset":8569,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8612,"endOffset":8710,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8812,"endOffset":8957,"count":3},{"startOffset":8872,"endOffset":8894,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9068,"endOffset":9215,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":9221,"endOffset":9362,"count":2}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":9366,"endOffset":9478,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9530,"endOffset":9879,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9708,"endOffset":9873,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9883,"endOffset":10189,"count":2},{"startOffset":9953,"endOffset":10071,"count":0}],"isBlockCoverage":true},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10240,"endOffset":10389,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10393,"endOffset":10769,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10773,"endOffset":10953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10957,"endOffset":11204,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11208,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11480,"endOffset":11660,"count":5735},{"startOffset":11619,"endOffset":11636,"count":4749},{"startOffset":11636,"endOffset":11659,"count":986}],"isBlockCoverage":true},{"functionName":"onMessageEvent","ranges":[{"startOffset":11662,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11759,"endOffset":11845,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11932,"endOffset":12446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12450,"endOffset":12863,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12899,"endOffset":13028,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13065,"endOffset":13463,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13531,"endOffset":13941,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14224,"endOffset":14391,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14676,"endOffset":14847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4944,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2478,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3063,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4249,"endOffset":4281,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4379,"endOffset":4420,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4513,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4735,"endOffset":4942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1019,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1601,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4706,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5181,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5331,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5661,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5805,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6177,"endOffset":6504,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6720,"endOffset":6834,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6838,"endOffset":8280,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8282,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8713,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8909,"endOffset":9231,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9233,"endOffset":9781,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9783,"endOffset":10453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12413,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1605,"endOffset":1738,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1740,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2368,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2629,"endOffset":2754,"count":9},{"startOffset":2710,"endOffset":2752,"count":0}],"isBlockCoverage":true},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3336,"endOffset":3736,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3780,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3877,"endOffset":3960,"count":6}],"isBlockCoverage":true},{"functionName":"get reason","ranges":[{"startOffset":3993,"endOffset":4072,"count":3}],"isBlockCoverage":true},{"functionName":"throwIfAborted","ranges":[{"startOffset":4076,"endOffset":4192,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4196,"endOffset":4325,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4403,"endOffset":4547,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4625,"endOffset":4887,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":4974,"endOffset":6309,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6313,"endOffset":7081,"count":5},{"startOffset":6542,"endOffset":6571,"count":0},{"startOffset":6617,"endOffset":6644,"count":0},{"startOffset":6645,"endOffset":6669,"count":0},{"startOffset":6670,"endOffset":6686,"count":0},{"startOffset":6687,"endOffset":6708,"count":0},{"startOffset":6710,"endOffset":7077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7085,"endOffset":7439,"count":5},{"startOffset":7278,"endOffset":7307,"count":0},{"startOffset":7353,"endOffset":7372,"count":0},{"startOffset":7373,"endOffset":7386,"count":0},{"startOffset":7388,"endOffset":7435,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7443,"endOffset":8050,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8054,"endOffset":8306,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8310,"endOffset":8758,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":8762,"endOffset":8846,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":8891,"endOffset":8899,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9377,"endOffset":9790,"count":3},{"startOffset":9748,"endOffset":9778,"count":0}],"isBlockCoverage":true},{"functionName":"abortSignal","ranges":[{"startOffset":9792,"endOffset":10154,"count":4},{"startOffset":9855,"endOffset":9862,"count":1},{"startOffset":9862,"endOffset":10044,"count":3},{"startOffset":10044,"endOffset":10053,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10054,"endOffset":10150,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10156,"endOffset":10812,"count":3}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":10231,"endOffset":10316,"count":6}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":10359,"endOffset":10504,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10508,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10646,"endOffset":10810,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":10960,"endOffset":11152,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11224,"endOffset":11313,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11407,"endOffset":11964,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8458,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":891,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1000,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1011,"endOffset":7027,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7029,"endOffset":7938,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7940,"endOffset":8398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5446,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":543,"endOffset":5444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12350,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1058,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1489,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1819,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2107,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2283,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3329,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3929,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4024,"endOffset":10500,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10502,"endOffset":12303,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7354,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":487,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":908,"endOffset":1785,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1787,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2413,"endOffset":2500,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2502,"endOffset":2822,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2824,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3173,"endOffset":3863,"count":3}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3865,"endOffset":5004,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5006,"endOffset":5422,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5424,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6165,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6263,"endOffset":6323,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6325,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6480,"endOffset":7262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6588,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2350,"endOffset":4313,"count":3},{"startOffset":2414,"endOffset":2441,"count":0},{"startOffset":3128,"endOffset":3264,"count":0},{"startOffset":3302,"endOffset":3477,"count":0},{"startOffset":3529,"endOffset":3555,"count":0},{"startOffset":3608,"endOffset":3636,"count":0},{"startOffset":3690,"endOffset":3720,"count":0},{"startOffset":3775,"endOffset":3807,"count":0},{"startOffset":3860,"endOffset":3888,"count":0},{"startOffset":3945,"endOffset":3981,"count":0},{"startOffset":4013,"endOffset":4050,"count":0},{"startOffset":4054,"endOffset":4096,"count":0},{"startOffset":4160,"endOffset":4311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4194,"endOffset":4305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5461,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5679,"endOffset":5940,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6014,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6197,"endOffset":6315,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6333,"endOffset":6422,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6455,"endOffset":6586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3251,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":130,"endOffset":178,"count":5}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":292,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2127,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2396,"endOffset":3203,"count":2},{"startOffset":2655,"endOffset":3018,"count":0},{"startOffset":3024,"endOffset":3201,"count":0}],"isBlockCoverage":true}]},{"scriptId":"119","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51325,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1842,"endOffset":1867,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2829,"endOffset":2837,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3733,"endOffset":3955,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3808,"endOffset":3852,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3858,"endOffset":3947,"count":25},{"startOffset":3888,"endOffset":3908,"count":3},{"startOffset":3908,"endOffset":3941,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6129,"endOffset":6217,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6223,"endOffset":6389,"count":3},{"startOffset":6253,"endOffset":6333,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6466,"endOffset":6566,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6572,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6871,"endOffset":6959,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6965,"endOffset":7131,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7201,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7297,"endOffset":7466,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7535,"endOffset":7638,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7644,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":7924,"endOffset":9919,"count":5},{"startOffset":8296,"endOffset":8317,"count":3},{"startOffset":8323,"endOffset":8351,"count":0},{"startOffset":8368,"endOffset":8378,"count":3},{"startOffset":8379,"endOffset":8408,"count":3},{"startOffset":8414,"endOffset":8442,"count":0},{"startOffset":8617,"endOffset":8689,"count":3},{"startOffset":8690,"endOffset":8726,"count":2},{"startOffset":8885,"endOffset":8915,"count":3},{"startOffset":8917,"endOffset":8945,"count":3},{"startOffset":9034,"endOffset":9066,"count":3},{"startOffset":9068,"endOffset":9098,"count":0},{"startOffset":9328,"endOffset":9345,"count":3},{"startOffset":9377,"endOffset":9406,"count":0},{"startOffset":9407,"endOffset":9437,"count":0},{"startOffset":9486,"endOffset":9645,"count":0},{"startOffset":9797,"endOffset":9816,"count":3},{"startOffset":9818,"endOffset":9917,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":9963,"endOffset":10080,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10083,"endOffset":11117,"count":2},{"startOffset":10151,"endOffset":10180,"count":0},{"startOffset":10618,"endOffset":10949,"count":0},{"startOffset":11013,"endOffset":11115,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11047,"endOffset":11109,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11254,"endOffset":11286,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11337,"endOffset":11375,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11419,"endOffset":11675,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":11904,"endOffset":12173,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":12269,"endOffset":12536,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12540,"endOffset":13606,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":13608,"endOffset":13848,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":13850,"endOffset":14183,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14185,"endOffset":15577,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":15579,"endOffset":16176,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16178,"endOffset":16508,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":16510,"endOffset":17454,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":17486,"endOffset":17641,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":17705,"endOffset":18275,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18336,"endOffset":18687,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":18800,"endOffset":19281,"count":4},{"startOffset":18848,"endOffset":18905,"count":2},{"startOffset":18911,"endOffset":18968,"count":2},{"startOffset":18968,"endOffset":18977,"count":0},{"startOffset":18977,"endOffset":19180,"count":2},{"startOffset":19105,"endOffset":19151,"count":0},{"startOffset":19180,"endOffset":19274,"count":0},{"startOffset":19275,"endOffset":19278,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":19378,"endOffset":24053,"count":4},{"startOffset":19562,"endOffset":19647,"count":2},{"startOffset":19611,"endOffset":19647,"count":0},{"startOffset":19812,"endOffset":19861,"count":0},{"startOffset":19882,"endOffset":19917,"count":2},{"startOffset":20103,"endOffset":20149,"count":2},{"startOffset":20150,"endOffset":20302,"count":0},{"startOffset":20304,"endOffset":20481,"count":0},{"startOffset":20625,"endOffset":20700,"count":0},{"startOffset":21995,"endOffset":22036,"count":0},{"startOffset":22423,"endOffset":23125,"count":2},{"startOffset":22810,"endOffset":22862,"count":0},{"startOffset":23089,"endOffset":23121,"count":0},{"startOffset":23155,"endOffset":23180,"count":0},{"startOffset":23300,"endOffset":23303,"count":0},{"startOffset":23319,"endOffset":23501,"count":0},{"startOffset":23824,"endOffset":23857,"count":2},{"startOffset":23865,"endOffset":23883,"count":0},{"startOffset":23908,"endOffset":23966,"count":0},{"startOffset":23968,"endOffset":24036,"count":0}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24056,"endOffset":25018,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":25219,"endOffset":25550,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":25552,"endOffset":26224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":26574,"endOffset":26781,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":26783,"endOffset":28612,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":28883,"endOffset":28949,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":28978,"endOffset":33488,"count":2},{"startOffset":29095,"endOffset":29319,"count":0},{"startOffset":29439,"endOffset":29464,"count":0},{"startOffset":29507,"endOffset":29547,"count":1},{"startOffset":29572,"endOffset":29579,"count":0},{"startOffset":29637,"endOffset":29661,"count":0},{"startOffset":33359,"endOffset":33377,"count":0},{"startOffset":33421,"endOffset":33470,"count":0}],"isBlockCoverage":true},{"functionName":"onunpipe","ranges":[{"startOffset":29731,"endOffset":29957,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":29961,"endOffset":30019,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":30064,"endOffset":30956,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":30960,"endOffset":31962,"count":0}],"isBlockCoverage":false},{"functionName":"ondata","ranges":[{"startOffset":31992,"endOffset":32152,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":32274,"endOffset":32685,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":32865,"endOffset":32948,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":32982,"endOffset":33087,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":33124,"endOffset":33190,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":33491,"endOffset":34168,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":34199,"endOffset":34900,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":35026,"endOffset":36035,"count":16},{"startOffset":35158,"endOffset":35587,"count":2},{"startOffset":35387,"endOffset":35407,"count":0},{"startOffset":35587,"endOffset":36018,"count":14},{"startOffset":35616,"endOffset":36018,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":36130,"endOffset":36837,"count":1},{"startOffset":36330,"endOffset":36716,"count":0},{"startOffset":36740,"endOffset":36775,"count":0},{"startOffset":36777,"endOffset":36820,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":36940,"endOffset":37534,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":37537,"endOffset":38239,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":38241,"endOffset":38329,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":38483,"endOffset":38988,"count":2},{"startOffset":38835,"endOffset":38882,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":38991,"endOffset":39164,"count":2}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":39166,"endOffset":39480,"count":2},{"startOffset":39463,"endOffset":39478,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":39509,"endOffset":39821,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":39824,"endOffset":39975,"count":2},{"startOffset":39972,"endOffset":39973,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":40159,"endOffset":41180,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":41225,"endOffset":41277,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":41310,"endOffset":41453,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":41456,"endOffset":41705,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":41707,"endOffset":42783,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43002,"endOffset":43391,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":43397,"endOffset":43527,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43609,"endOffset":43673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43755,"endOffset":43963,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44051,"endOffset":44117,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44198,"endOffset":44280,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44362,"endOffset":44422,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44433,"endOffset":44542,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44618,"endOffset":44672,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44752,"endOffset":44840,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44918,"endOffset":45003,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45072,"endOffset":45156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45201,"endOffset":45285,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45356,"endOffset":45443,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45449,"endOffset":45738,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45813,"endOffset":45901,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46042,"endOffset":46087,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46167,"endOffset":46225,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46231,"endOffset":46392,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":46698,"endOffset":49150,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":49152,"endOffset":49378,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":49380,"endOffset":50273,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":50275,"endOffset":50435,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":50453,"endOffset":50522,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":50587,"endOffset":50751,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":50772,"endOffset":50906,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":50926,"endOffset":51060,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":51079,"endOffset":51323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1728,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":557,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":751,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1107,"endOffset":1726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":287,"endOffset":454,"count":6},{"startOffset":385,"endOffset":408,"count":0},{"startOffset":445,"endOffset":451,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":456,"endOffset":586,"count":11},{"startOffset":523,"endOffset":555,"count":1},{"startOffset":556,"endOffset":583,"count":10}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":588,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":801,"endOffset":1234,"count":6},{"startOffset":948,"endOffset":1160,"count":3},{"startOffset":992,"endOffset":1129,"count":0},{"startOffset":1160,"endOffset":1233,"count":3}],"isBlockCoverage":true}]},{"scriptId":"122","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4341,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":4316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33589,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2741,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3814,"endOffset":4036,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3889,"endOffset":3933,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3939,"endOffset":4028,"count":30},{"startOffset":3969,"endOffset":3989,"count":3},{"startOffset":3989,"endOffset":4022,"count":27}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7000,"endOffset":7078,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7084,"endOffset":7250,"count":3},{"startOffset":7114,"endOffset":7194,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7320,"endOffset":7420,"count":9},{"startOffset":7371,"endOffset":7405,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7426,"endOffset":7699,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7776,"endOffset":7876,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7882,"endOffset":8112,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8253,"endOffset":8330,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8336,"endOffset":8500,"count":3},{"startOffset":8401,"endOffset":8444,"count":1},{"startOffset":8444,"endOffset":8494,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8687,"endOffset":8787,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8793,"endOffset":8990,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9060,"endOffset":9138,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9144,"endOffset":9311,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9324,"endOffset":11625,"count":3},{"startOffset":9601,"endOffset":9629,"count":0},{"startOffset":9692,"endOffset":9720,"count":0},{"startOffset":10011,"endOffset":10047,"count":0},{"startOffset":10101,"endOffset":10132,"count":0},{"startOffset":10390,"endOffset":10420,"count":0},{"startOffset":10677,"endOffset":10683,"count":0},{"startOffset":10715,"endOffset":10744,"count":0},{"startOffset":10745,"endOffset":10775,"count":0},{"startOffset":10824,"endOffset":11033,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":11627,"endOffset":11791,"count":3}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":11829,"endOffset":11958,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12054,"endOffset":12165,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12214,"endOffset":12400,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12403,"endOffset":13509,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":13591,"endOffset":13795,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":13896,"endOffset":13964,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":13967,"endOffset":15365,"count":2},{"startOffset":14071,"endOffset":14098,"count":1},{"startOffset":14100,"endOffset":14119,"count":1},{"startOffset":14143,"endOffset":14188,"count":0},{"startOffset":14327,"endOffset":14350,"count":0},{"startOffset":14357,"endOffset":14477,"count":0},{"startOffset":14566,"endOffset":14650,"count":0},{"startOffset":14656,"endOffset":14976,"count":0},{"startOffset":15032,"endOffset":15081,"count":0},{"startOffset":15127,"endOffset":15177,"count":0},{"startOffset":15190,"endOffset":15281,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15394,"endOffset":15585,"count":2},{"startOffset":15449,"endOffset":15482,"count":1},{"startOffset":15484,"endOffset":15529,"count":1}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":15614,"endOffset":15712,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":15743,"endOffset":15981,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16024,"endOffset":16349,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":16539,"endOffset":17743,"count":2},{"startOffset":16656,"endOffset":16659,"count":0},{"startOffset":16790,"endOffset":17197,"count":0},{"startOffset":17257,"endOffset":17296,"count":1},{"startOffset":17487,"endOffset":17508,"count":0},{"startOffset":17523,"endOffset":17561,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":17745,"endOffset":18182,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":18184,"endOffset":18569,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":18571,"endOffset":21177,"count":2},{"startOffset":18688,"endOffset":18762,"count":0},{"startOffset":18856,"endOffset":18878,"count":1},{"startOffset":18879,"endOffset":18884,"count":1},{"startOffset":19027,"endOffset":19641,"count":0},{"startOffset":19692,"endOffset":19733,"count":0},{"startOffset":19810,"endOffset":19831,"count":0},{"startOffset":20195,"endOffset":20546,"count":1},{"startOffset":20265,"endOffset":20385,"count":0},{"startOffset":20469,"endOffset":20528,"count":0},{"startOffset":20546,"endOffset":21112,"count":1},{"startOffset":20600,"endOffset":20661,"count":0},{"startOffset":20663,"endOffset":20721,"count":0},{"startOffset":20969,"endOffset":21112,"count":0},{"startOffset":21118,"endOffset":21171,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21179,"endOffset":21366,"count":1}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":21368,"endOffset":21876,"count":1},{"startOffset":21546,"endOffset":21567,"count":0},{"startOffset":21586,"endOffset":21651,"count":0},{"startOffset":21761,"endOffset":21790,"count":0},{"startOffset":21831,"endOffset":21874,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":21948,"endOffset":22499,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":22565,"endOffset":24235,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":24265,"endOffset":24434,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":24498,"endOffset":26138,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":26141,"endOffset":26570,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":26572,"endOffset":27204,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":27206,"endOffset":27730,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":27732,"endOffset":28231,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":28233,"endOffset":28876,"count":0}],"isBlockCoverage":false},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":28878,"endOffset":29196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29280,"endOffset":29383,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29431,"endOffset":29537,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29543,"endOffset":29793,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29840,"endOffset":30243,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30249,"endOffset":30383,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30438,"endOffset":30556,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30613,"endOffset":30733,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30786,"endOffset":30881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30933,"endOffset":31049,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31105,"endOffset":31258,"count":2},{"startOffset":31244,"endOffset":31251,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31318,"endOffset":31415,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31468,"endOffset":31561,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31614,"endOffset":31704,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31773,"endOffset":31870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31929,"endOffset":32186,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":32264,"endOffset":32544,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":32632,"endOffset":32664,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":32715,"endOffset":32753,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":32818,"endOffset":32982,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":33003,"endOffset":33137,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":33157,"endOffset":33264,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33308,"endOffset":33587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7121,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5500,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5502,"endOffset":5946,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5948,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6101,"endOffset":6196,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6228,"endOffset":6963,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6994,"endOffset":7119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/streams/duplexpair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":219,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"duplexPair","ranges":[{"startOffset":1138,"endOffset":1343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5723,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1039,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2145,"endOffset":2588,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2590,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2737,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2924,"endOffset":4219,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4221,"endOffset":4442,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4461,"endOffset":5666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9771,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":758,"endOffset":1167,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":838,"endOffset":874,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":880,"endOffset":997,"count":15}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1001,"endOffset":1049,"count":15},{"startOffset":1037,"endOffset":1042,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1053,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1111,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1169,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1376,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1746,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1798,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2208,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2382,"endOffset":2659,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2663,"endOffset":2831,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2835,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3038,"endOffset":3081,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3085,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3398,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3759,"endOffset":3900,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3911,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4100,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4189,"endOffset":4226,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4230,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4327,"endOffset":4364,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4368,"endOffset":4412,"count":52}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":4416,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4432,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4559,"endOffset":4825,"count":15},{"startOffset":4637,"endOffset":4652,"count":0},{"startOffset":4685,"endOffset":4712,"count":0},{"startOffset":4714,"endOffset":4794,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":4827,"endOffset":4917,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4919,"endOffset":5013,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5015,"endOffset":5150,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5239,"endOffset":5381,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5383,"endOffset":5908,"count":5},{"startOffset":5539,"endOffset":5608,"count":0},{"startOffset":5610,"endOffset":5907,"count":0}],"isBlockCoverage":true},{"functionName":"TracingChannel","ranges":[{"startOffset":5935,"endOffset":6160,"count":1},{"startOffset":6006,"endOffset":6156,"count":5}],"isBlockCoverage":true},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6164,"endOffset":6374,"count":10}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":6378,"endOffset":6530,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6534,"endOffset":6767,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":6771,"endOffset":7282,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7286,"endOffset":8472,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8476,"endOffset":9569,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9573,"endOffset":9661,"count":1}],"isBlockCoverage":true}]},{"scriptId":"130","url":"node:internal/modules/esm/shared_constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5066,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1535,"endOffset":1641,"count":2}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1643,"endOffset":2112,"count":1},{"startOffset":1719,"endOffset":1754,"count":0},{"startOffset":1791,"endOffset":1820,"count":0},{"startOffset":1902,"endOffset":1947,"count":0}],"isBlockCoverage":true},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2261,"endOffset":2482,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2485,"endOffset":3457,"count":2},{"startOffset":2554,"endOffset":2581,"count":0},{"startOffset":2618,"endOffset":2647,"count":0},{"startOffset":2729,"endOffset":2774,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3748,"endOffset":4188,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4244,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4421,"endOffset":4567,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4603,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4784,"endOffset":4919,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4959,"endOffset":5009,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68422,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1684,"endOffset":1709,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4165,"endOffset":4173,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4646,"endOffset":4740,"count":5},{"startOffset":4703,"endOffset":4733,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":4742,"endOffset":5125,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5128,"endOffset":5266,"count":11},{"startOffset":5223,"endOffset":5241,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5269,"endOffset":5352,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5553,"endOffset":5657,"count":5}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":5880,"endOffset":6281,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6283,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6360,"endOffset":6476,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6478,"endOffset":6581,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6583,"endOffset":6770,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7264,"endOffset":7990,"count":5},{"startOffset":7332,"endOffset":7413,"count":0},{"startOffset":7561,"endOffset":7809,"count":0},{"startOffset":7883,"endOffset":7905,"count":0}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8062,"endOffset":8665,"count":3},{"startOffset":8418,"endOffset":8659,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8667,"endOffset":9007,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":9259,"endOffset":13886,"count":3},{"startOffset":9319,"endOffset":9346,"count":0},{"startOffset":9374,"endOffset":9503,"count":0},{"startOffset":9573,"endOffset":9821,"count":0},{"startOffset":9883,"endOffset":10079,"count":0},{"startOffset":10641,"endOffset":10667,"count":0},{"startOffset":11181,"endOffset":12429,"count":0},{"startOffset":12516,"endOffset":12593,"count":0},{"startOffset":12594,"endOffset":12640,"count":0},{"startOffset":12642,"endOffset":12857,"count":0},{"startOffset":13425,"endOffset":13594,"count":0},{"startOffset":13626,"endOffset":13653,"count":0},{"startOffset":13681,"endOffset":13733,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14059,"endOffset":14189,"count":2},{"startOffset":14161,"endOffset":14183,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14309,"endOffset":14929,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14932,"endOffset":15078,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15285,"endOffset":15793,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15875,"endOffset":16379,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16413,"endOffset":16790,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16826,"endOffset":17432,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17463,"endOffset":17507,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17593,"endOffset":17637,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17717,"endOffset":17773,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17884,"endOffset":18199,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18288,"endOffset":18368,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18456,"endOffset":18501,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":18509,"endOffset":18759,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":18851,"endOffset":19170,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19197,"endOffset":19353,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19391,"endOffset":19741,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":19769,"endOffset":20107,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20137,"endOffset":20321,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":20349,"endOffset":20535,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":20582,"endOffset":20681,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20715,"endOffset":20862,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20894,"endOffset":22408,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":22437,"endOffset":22536,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":22571,"endOffset":22868,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":22871,"endOffset":23053,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23080,"endOffset":23171,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23204,"endOffset":23270,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23302,"endOffset":23366,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":23396,"endOffset":23456,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":23493,"endOffset":23769,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":23801,"endOffset":23866,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23896,"endOffset":23955,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":23986,"endOffset":24049,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24090,"endOffset":24137,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24173,"endOffset":25085,"count":2},{"startOffset":24395,"endOffset":24739,"count":0},{"startOffset":24820,"endOffset":24876,"count":0},{"startOffset":24930,"endOffset":24966,"count":0},{"startOffset":25045,"endOffset":25083,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24490,"endOffset":24604,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":24611,"endOffset":24690,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25116,"endOffset":25184,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":25214,"endOffset":25295,"count":2}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":25488,"endOffset":25592,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":25624,"endOffset":26553,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":26558,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":27360,"endOffset":29460,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":29463,"endOffset":32403,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":32432,"endOffset":34028,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":34071,"endOffset":34225,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":34228,"endOffset":34374,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":34376,"endOffset":38307,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":38309,"endOffset":42408,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":42410,"endOffset":42469,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":42495,"endOffset":42682,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":42711,"endOffset":42904,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":42908,"endOffset":44596,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":44598,"endOffset":45008,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":45010,"endOffset":45531,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":45533,"endOffset":46851,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":46853,"endOffset":47349,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":47351,"endOffset":47781,"count":5},{"startOffset":47458,"endOffset":47779,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":47566,"endOffset":47595,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":47783,"endOffset":49395,"count":5},{"startOffset":47867,"endOffset":47914,"count":0},{"startOffset":47981,"endOffset":48095,"count":0},{"startOffset":48121,"endOffset":48151,"count":0},{"startOffset":48236,"endOffset":48292,"count":0},{"startOffset":48296,"endOffset":48373,"count":0},{"startOffset":48434,"endOffset":48629,"count":0},{"startOffset":48682,"endOffset":48869,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":49506,"endOffset":49571,"count":10},{"startOffset":49557,"endOffset":49560,"count":5},{"startOffset":49561,"endOffset":49568,"count":5}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":49639,"endOffset":51091,"count":5},{"startOffset":49855,"endOffset":49865,"count":0},{"startOffset":49867,"endOffset":50178,"count":0},{"startOffset":50200,"endOffset":50221,"count":0},{"startOffset":50223,"endOffset":50473,"count":0},{"startOffset":50561,"endOffset":50568,"count":0},{"startOffset":50569,"endOffset":50577,"count":0},{"startOffset":50610,"endOffset":50618,"count":0},{"startOffset":50639,"endOffset":50876,"count":0},{"startOffset":50905,"endOffset":50960,"count":3},{"startOffset":50960,"endOffset":51013,"count":2},{"startOffset":51030,"endOffset":51071,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":51093,"endOffset":53787,"count":5},{"startOffset":51398,"endOffset":51458,"count":0},{"startOffset":51632,"endOffset":51657,"count":2},{"startOffset":51659,"endOffset":51945,"count":2},{"startOffset":51770,"endOffset":51862,"count":0},{"startOffset":51976,"endOffset":52041,"count":3},{"startOffset":52077,"endOffset":52346,"count":0},{"startOffset":52781,"endOffset":53259,"count":1},{"startOffset":52949,"endOffset":53022,"count":0},{"startOffset":53259,"endOffset":53299,"count":4},{"startOffset":53299,"endOffset":53360,"count":0},{"startOffset":53360,"endOffset":53786,"count":4}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":53854,"endOffset":53916,"count":1}],"isBlockCoverage":true},{"functionName":"emitListeningNT","ranges":[{"startOffset":53919,"endOffset":54034,"count":4}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":54037,"endOffset":55619,"count":5},{"startOffset":54222,"endOffset":54251,"count":1},{"startOffset":54277,"endOffset":54289,"count":0},{"startOffset":54535,"endOffset":55618,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":54852,"endOffset":55617,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":55648,"endOffset":60010,"count":5},{"startOffset":55790,"endOffset":55838,"count":0},{"startOffset":55878,"endOffset":55950,"count":0},{"startOffset":56171,"endOffset":56181,"count":0},{"startOffset":56492,"endOffset":56672,"count":0},{"startOffset":56822,"endOffset":56840,"count":0},{"startOffset":56842,"endOffset":56938,"count":0},{"startOffset":57296,"endOffset":57316,"count":0},{"startOffset":57350,"endOffset":57377,"count":0},{"startOffset":57601,"endOffset":57636,"count":0},{"startOffset":57807,"endOffset":57932,"count":3},{"startOffset":57932,"endOffset":58185,"count":2},{"startOffset":58206,"endOffset":58374,"count":0},{"startOffset":58376,"endOffset":59808,"count":0},{"startOffset":59811,"endOffset":60009,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndListen","ranges":[{"startOffset":60013,"endOffset":60556,"count":3},{"startOffset":60138,"endOffset":60159,"count":1}],"isBlockCoverage":true},{"functionName":"doListen","ranges":[{"startOffset":60223,"endOffset":60552,"count":3},{"startOffset":60308,"endOffset":60329,"count":0},{"startOffset":60343,"endOffset":60381,"count":0},{"startOffset":60426,"endOffset":60429,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":60638,"endOffset":60681,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":60757,"endOffset":61050,"count":4},{"startOffset":60900,"endOffset":60955,"count":0},{"startOffset":60975,"endOffset":61049,"count":0}],"isBlockCoverage":true},{"functionName":"onconnection","ranges":[{"startOffset":61053,"endOffset":62956,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":63105,"endOffset":63858,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":63887,"endOffset":64777,"count":4},{"startOffset":63982,"endOffset":64085,"count":0},{"startOffset":64238,"endOffset":64716,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":64009,"endOffset":64077,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":64303,"endOffset":64412,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":64819,"endOffset":64939,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":64981,"endOffset":65367,"count":4},{"startOffset":65075,"endOffset":65187,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":65371,"endOffset":65454,"count":4}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":65513,"endOffset":65675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65897,"endOffset":65933,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":65937,"endOffset":65978,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":66058,"endOffset":66089,"count":28}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":66093,"endOffset":66129,"count":3}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":66168,"endOffset":66409,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":66435,"endOffset":66533,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":66561,"endOffset":66660,"count":9},{"startOffset":66621,"endOffset":66642,"count":4}],"isBlockCoverage":true},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":66802,"endOffset":67471,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":67510,"endOffset":67751,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":67880,"endOffset":67982,"count":1}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":67986,"endOffset":68108,"count":1}],"isBlockCoverage":true}]},{"scriptId":"133","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7170,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1057,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1201,"endOffset":2056,"count":2},{"startOffset":1301,"endOffset":1468,"count":0},{"startOffset":1473,"endOffset":1487,"count":0},{"startOffset":1492,"endOffset":1556,"count":0},{"startOffset":1644,"endOffset":1706,"count":0},{"startOffset":1711,"endOffset":1723,"count":0},{"startOffset":1728,"endOffset":1741,"count":0},{"startOffset":1746,"endOffset":1761,"count":0},{"startOffset":1766,"endOffset":1830,"count":0},{"startOffset":1835,"endOffset":2050,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2058,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2749,"endOffset":2987,"count":2}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2989,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3630,"endOffset":3835,"count":2}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3837,"endOffset":4144,"count":2},{"startOffset":4004,"endOffset":4059,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4146,"endOffset":6085,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6087,"endOffset":6963,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16722,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2600,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2863,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3205,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3628,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4047,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4156,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4388,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4531,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4839,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5336,"endOffset":5584,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5936,"endOffset":9533,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10015,"endOffset":10217,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10278,"endOffset":11304,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":11592,"endOffset":12856,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":12944,"endOffset":13216,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13218,"endOffset":13283,"count":0}],"isBlockCoverage":false},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13285,"endOffset":13885,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":13887,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":14731,"endOffset":15847,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":15884,"endOffset":16003,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16006,"endOffset":16116,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16118,"endOffset":16433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":675,"endOffset":748,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":777,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1136,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1240,"endOffset":1355,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1359,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1478,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1594,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1842,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2286,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2539,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2653,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2908,"endOffset":3112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6485,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2549,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3160,"endOffset":6156,"count":3},{"startOffset":3364,"endOffset":3722,"count":0},{"startOffset":4063,"endOffset":4089,"count":0},{"startOffset":4127,"endOffset":4685,"count":0},{"startOffset":4703,"endOffset":4731,"count":0},{"startOffset":4747,"endOffset":5010,"count":0},{"startOffset":5045,"endOffset":5175,"count":0},{"startOffset":5211,"endOffset":5412,"count":0},{"startOffset":5417,"endOffset":5434,"count":0},{"startOffset":5439,"endOffset":5479,"count":0},{"startOffset":5484,"endOffset":5531,"count":0},{"startOffset":5573,"endOffset":5601,"count":0},{"startOffset":5631,"endOffset":6155,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4899,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5948,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6158,"endOffset":6431,"count":1},{"startOffset":6245,"endOffset":6293,"count":0},{"startOffset":6334,"endOffset":6385,"count":0}],"isBlockCoverage":true}]},{"scriptId":"137","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/bin/console.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4735,"count":1}],"isBlockCoverage":true},{"functionName":"IMPORTER","ranges":[{"startOffset":780,"endOffset":954,"count":1},{"startOffset":859,"endOffset":923,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1207,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1035,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1117,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1184,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1252,"endOffset":1319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":41},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":1},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":2},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":68}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":70},{"startOffset":840,"endOffset":852,"count":66},{"startOffset":853,"endOffset":862,"count":64},{"startOffset":862,"endOffset":913,"count":6},{"startOffset":913,"endOffset":1023,"count":59},{"startOffset":958,"endOffset":1022,"count":0},{"startOffset":1023,"endOffset":1032,"count":6},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":41},{"startOffset":1192,"endOffset":1214,"count":276627}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1397,"count":1}],"isBlockCoverage":true},{"functionName":"prettyPrintError","ranges":[{"startOffset":942,"endOffset":1396,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62228,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":110,"endOffset":221,"count":1},{"startOffset":157,"endOffset":219,"count":9}],"isBlockCoverage":true},{"functionName":"__decorateClass","ranges":[{"startOffset":245,"endOffset":619,"count":3},{"startOffset":315,"endOffset":362,"count":0},{"startOffset":515,"endOffset":534,"count":0},{"startOffset":569,"endOffset":600,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1113,"endOffset":2980,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":1167,"endOffset":1222,"count":1}],"isBlockCoverage":true},{"functionName":"#parseFlags","ranges":[{"startOffset":1268,"endOffset":1389,"count":1}],"isBlockCoverage":true},{"functionName":"#scanUnknownFlags","ranges":[{"startOffset":1450,"endOffset":1689,"count":1},{"startOffset":1548,"endOffset":1660,"count":2},{"startOffset":1613,"endOffset":1654,"count":0}],"isBlockCoverage":true},{"functionName":"#parseArguments","ranges":[{"startOffset":1759,"endOffset":2856,"count":1},{"startOffset":2754,"endOffset":2757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1881,"endOffset":2595,"count":1},{"startOffset":2118,"endOffset":2134,"count":0},{"startOffset":2172,"endOffset":2190,"count":0},{"startOffset":2232,"endOffset":2247,"count":0},{"startOffset":2249,"endOffset":2301,"count":0},{"startOffset":2332,"endOffset":2521,"count":0},{"startOffset":2523,"endOffset":2594,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2904,"endOffset":2978,"count":1}],"isBlockCoverage":true},{"functionName":"E_COMMAND_NOT_FOUND","ranges":[{"startOffset":3437,"endOffset":3462,"count":1}],"isBlockCoverage":true},{"functionName":"E_INVALID_FLAG","ranges":[{"startOffset":3482,"endOffset":3502,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_ARG","ranges":[{"startOffset":3521,"endOffset":3540,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_ARG_VALUE","ranges":[{"startOffset":3565,"endOffset":3590,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_COMMAND_NAME","ranges":[{"startOffset":3618,"endOffset":3646,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_FLAG","ranges":[{"startOffset":3666,"endOffset":3686,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_FLAG_VALUE","ranges":[{"startOffset":3712,"endOffset":3738,"count":1}],"isBlockCoverage":true},{"functionName":"E_PROMPT_CANCELLED","ranges":[{"startOffset":3762,"endOffset":3786,"count":1}],"isBlockCoverage":true},{"functionName":"E_UNKNOWN_FLAG","ranges":[{"startOffset":3806,"endOffset":3826,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4157,"endOffset":4382,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":4201,"endOffset":4220,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5355,"endOffset":19310,"count":1}],"isBlockCoverage":true},{"functionName":"BaseCommand","ranges":[{"startOffset":5383,"endOffset":5537,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":6095,"endOffset":6107,"count":1}],"isBlockCoverage":true},{"functionName":"boot","ranges":[{"startOffset":6248,"endOffset":7032,"count":25},{"startOffset":6295,"endOffset":6318,"count":20},{"startOffset":6320,"endOffset":6341,"count":20},{"startOffset":6341,"endOffset":7031,"count":5}],"isBlockCoverage":true},{"functionName":"defineArgument","ranges":[{"startOffset":7354,"endOffset":8357,"count":3},{"startOffset":7566,"endOffset":7708,"count":0},{"startOffset":7725,"endOffset":7753,"count":0},{"startOffset":7755,"endOffset":7963,"count":0},{"startOffset":7985,"endOffset":7995,"count":1},{"startOffset":7996,"endOffset":8025,"count":0},{"startOffset":8027,"endOffset":8206,"count":0},{"startOffset":8238,"endOffset":8328,"count":0}],"isBlockCoverage":true},{"functionName":"defineFlag","ranges":[{"startOffset":8596,"endOffset":9039,"count":16},{"startOffset":8750,"endOffset":8884,"count":0},{"startOffset":8916,"endOffset":9008,"count":0}],"isBlockCoverage":true},{"functionName":"getParserOptions","ranges":[{"startOffset":9118,"endOffset":10486,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9212,"endOffset":9331,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9615,"endOffset":10405,"count":15},{"startOffset":9699,"endOffset":9770,"count":0},{"startOffset":9793,"endOffset":9865,"count":0},{"startOffset":9901,"endOffset":9976,"count":2},{"startOffset":10012,"endOffset":10100,"count":0},{"startOffset":10109,"endOffset":10199,"count":7},{"startOffset":10208,"endOffset":10296,"count":2},{"startOffset":10305,"endOffset":10391,"count":6}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":10605,"endOffset":11222,"count":1},{"startOffset":10663,"endOffset":10723,"count":0},{"startOffset":10915,"endOffset":10926,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10992,"endOffset":11073,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11102,"endOffset":11181,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":11303,"endOffset":13418,"count":2},{"startOffset":11917,"endOffset":11952,"count":0},{"startOffset":11954,"endOffset":12159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11367,"endOffset":11874,"count":1},{"startOffset":11505,"endOffset":11527,"count":0},{"startOffset":11529,"endOffset":11583,"count":0},{"startOffset":11613,"endOffset":11636,"count":0},{"startOffset":11637,"endOffset":11671,"count":0},{"startOffset":11673,"endOffset":11868,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12183,"endOffset":13412,"count":15},{"startOffset":12366,"endOffset":12517,"count":7},{"startOffset":12410,"endOffset":12430,"count":0},{"startOffset":12432,"endOffset":12500,"count":0},{"startOffset":12526,"endOffset":12918,"count":2},{"startOffset":12569,"endOffset":12589,"count":0},{"startOffset":12591,"endOffset":12659,"count":0},{"startOffset":12691,"endOffset":12710,"count":0},{"startOffset":12712,"endOffset":12786,"count":0},{"startOffset":12822,"endOffset":12901,"count":0},{"startOffset":12927,"endOffset":12941,"count":0},{"startOffset":12950,"endOffset":13398,"count":6},{"startOffset":12992,"endOffset":13012,"count":0},{"startOffset":13014,"endOffset":13082,"count":0},{"startOffset":13114,"endOffset":13138,"count":0},{"startOffset":13139,"endOffset":13173,"count":0},{"startOffset":13175,"endOffset":13398,"count":0}],"isBlockCoverage":true},{"functionName":"get logger","ranges":[{"startOffset":13864,"endOffset":13909,"count":1}],"isBlockCoverage":true},{"functionName":"get colors","ranges":[{"startOffset":13960,"endOffset":14005,"count":0}],"isBlockCoverage":false},{"functionName":"get isMain","ranges":[{"startOffset":14092,"endOffset":14160,"count":0}],"isBlockCoverage":false},{"functionName":"get commandName","ranges":[{"startOffset":14210,"endOffset":14274,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":14327,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"get args","ranges":[{"startOffset":14433,"endOffset":14483,"count":0}],"isBlockCoverage":false},{"functionName":"get flags","ranges":[{"startOffset":14534,"endOffset":14586,"count":0}],"isBlockCoverage":false},{"functionName":"hydrate","ranges":[{"startOffset":14678,"endOffset":15288,"count":2},{"startOffset":14713,"endOffset":15287,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14820,"endOffset":15016,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15056,"endOffset":15256,"count":13}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":15379,"endOffset":15400,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":15479,"endOffset":15748,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":15803,"endOffset":16071,"count":0}],"isBlockCoverage":false},{"functionName":"assertExitCode","ranges":[{"startOffset":16140,"endOffset":16473,"count":0}],"isBlockCoverage":false},{"functionName":"assertNotExitCode","ranges":[{"startOffset":16542,"endOffset":16805,"count":0}],"isBlockCoverage":false},{"functionName":"assertSucceeded","ranges":[{"startOffset":16871,"endOffset":16929,"count":0}],"isBlockCoverage":false},{"functionName":"assertFailed","ranges":[{"startOffset":16999,"endOffset":17057,"count":0}],"isBlockCoverage":false},{"functionName":"assertLog","ranges":[{"startOffset":17120,"endOffset":17965,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogMatches","ranges":[{"startOffset":18028,"endOffset":18765,"count":0}],"isBlockCoverage":false},{"functionName":"assertTableRows","ranges":[{"startOffset":18829,"endOffset":19308,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":19415,"endOffset":19612,"count":1}],"isBlockCoverage":true},{"functionName":"addArg","ranges":[{"startOffset":19444,"endOffset":19607,"count":1}],"isBlockCoverage":true},{"functionName":"spread","ranges":[{"startOffset":19677,"endOffset":19874,"count":2}],"isBlockCoverage":true},{"functionName":"addArg","ranges":[{"startOffset":19706,"endOffset":19869,"count":2}],"isBlockCoverage":true},{"functionName":"string","ranges":[{"startOffset":19981,"endOffset":20174,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":20238,"endOffset":20433,"count":6}],"isBlockCoverage":true},{"functionName":"addArg","ranges":[{"startOffset":20268,"endOffset":20428,"count":6}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":20496,"endOffset":20689,"count":2}],"isBlockCoverage":true},{"functionName":"addArg","ranges":[{"startOffset":20525,"endOffset":20684,"count":2}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":20756,"endOffset":20947,"count":6}],"isBlockCoverage":true},{"functionName":"addArg","ranges":[{"startOffset":20784,"endOffset":20942,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":20998,"endOffset":24303,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24464,"endOffset":25545,"count":0}],"isBlockCoverage":true},{"functionName":"sortAlphabetically","ranges":[{"startOffset":25884,"endOffset":26018,"count":10},{"startOffset":25945,"endOffset":25965,"count":4},{"startOffset":25965,"endOffset":26004,"count":6},{"startOffset":26004,"endOffset":26017,"count":0}],"isBlockCoverage":true},{"functionName":"renderErrorWithSuggestions","ranges":[{"startOffset":26019,"endOffset":26455,"count":0}],"isBlockCoverage":false},{"functionName":"validateCommandMetaData","ranges":[{"startOffset":26456,"endOffset":26852,"count":0}],"isBlockCoverage":false},{"functionName":"validateCommand","ranges":[{"startOffset":26853,"endOffset":27422,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":27644,"endOffset":29292,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29347,"endOffset":31375,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":31573,"endOffset":31804,"count":1}],"isBlockCoverage":true},{"functionName":"#makeCommandsTable","ranges":[{"startOffset":31867,"endOffset":32331,"count":0}],"isBlockCoverage":false},{"functionName":"#makeOptionsTable","ranges":[{"startOffset":32398,"endOffset":32756,"count":0}],"isBlockCoverage":false},{"functionName":"#getCommandsTables","ranges":[{"startOffset":32862,"endOffset":33361,"count":0}],"isBlockCoverage":false},{"functionName":"#getOptionsTable","ranges":[{"startOffset":33416,"endOffset":33568,"count":0}],"isBlockCoverage":false},{"functionName":"#validateNamespace","ranges":[{"startOffset":33654,"endOffset":34135,"count":0}],"isBlockCoverage":false},{"functionName":"renderList","ranges":[{"startOffset":34215,"endOffset":34505,"count":0}],"isBlockCoverage":false},{"functionName":"renderToJSON","ranges":[{"startOffset":34508,"endOffset":34882,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":34927,"endOffset":35211,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":35532,"endOffset":36030,"count":1}],"isBlockCoverage":true},{"functionName":"ListLoader","ranges":[{"startOffset":35555,"endOffset":35613,"count":1}],"isBlockCoverage":true},{"functionName":"getMetaData","ranges":[{"startOffset":35672,"endOffset":35762,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35724,"endOffset":35756,"count":1}],"isBlockCoverage":true},{"functionName":"getCommand","ranges":[{"startOffset":35897,"endOffset":36028,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":36145,"endOffset":37930,"count":1}],"isBlockCoverage":true},{"functionName":"logError","ranges":[{"startOffset":36464,"endOffset":36591,"count":0}],"isBlockCoverage":false},{"functionName":"prettyPrintError","ranges":[{"startOffset":36654,"endOffset":36936,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":36993,"endOffset":37928,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":37964,"endOffset":54403,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":38146,"endOffset":38261,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":38267,"endOffset":38316,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":38431,"endOffset":38466,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":38575,"endOffset":38656,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":38945,"endOffset":38999,"count":1}],"isBlockCoverage":true},{"functionName":"get flags","ranges":[{"startOffset":41076,"endOffset":41131,"count":0}],"isBlockCoverage":false},{"functionName":"_Kernel","ranges":[{"startOffset":41134,"endOffset":41251,"count":1}],"isBlockCoverage":true},{"functionName":"#processArgv","ranges":[{"startOffset":41561,"endOffset":41969,"count":1},{"startOffset":41695,"endOffset":41801,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41626,"endOffset":41659,"count":1}],"isBlockCoverage":true},{"functionName":"#create","ranges":[{"startOffset":42081,"endOffset":42355,"count":0}],"isBlockCoverage":false},{"functionName":"#exec","ranges":[{"startOffset":42466,"endOffset":43056,"count":0}],"isBlockCoverage":false},{"functionName":"#execMain","ranges":[{"startOffset":43152,"endOffset":44845,"count":1},{"startOffset":43358,"endOffset":43489,"count":0},{"startOffset":43806,"endOffset":44064,"count":2},{"startOffset":43853,"endOffset":44056,"count":0},{"startOffset":44121,"endOffset":44287,"count":0},{"startOffset":44711,"endOffset":44841,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":45024,"endOffset":45186,"count":2}],"isBlockCoverage":true},{"functionName":"defineFlag","ranges":[{"startOffset":45273,"endOffset":45487,"count":2},{"startOffset":45333,"endOffset":45432,"count":0}],"isBlockCoverage":true},{"functionName":"addLoader","ranges":[{"startOffset":45710,"endOffset":45904,"count":5},{"startOffset":45762,"endOffset":45851,"count":0}],"isBlockCoverage":true},{"functionName":"addAlias","ranges":[{"startOffset":45959,"endOffset":46398,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommand","ranges":[{"startOffset":46475,"endOffset":46613,"count":0}],"isBlockCoverage":false},{"functionName":"getState","ranges":[{"startOffset":46670,"endOffset":46710,"count":0}],"isBlockCoverage":false},{"functionName":"getCommands","ranges":[{"startOffset":46859,"endOffset":46991,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceCommands","ranges":[{"startOffset":47138,"endOffset":47590,"count":0}],"isBlockCoverage":false},{"functionName":"getCommand","ranges":[{"startOffset":47699,"endOffset":47790,"count":1},{"startOffset":47778,"endOffset":47785,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultCommand","ranges":[{"startOffset":47912,"endOffset":47970,"count":0}],"isBlockCoverage":false},{"functionName":"getMainCommand","ranges":[{"startOffset":48028,"endOffset":48080,"count":2}],"isBlockCoverage":true},{"functionName":"getAliases","ranges":[{"startOffset":48285,"endOffset":48341,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasCommand","ranges":[{"startOffset":48453,"endOffset":48645,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandAliases","ranges":[{"startOffset":48713,"endOffset":48885,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaces","ranges":[{"startOffset":48996,"endOffset":49046,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandSuggestions","ranges":[{"startOffset":49149,"endOffset":49705,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceSuggestions","ranges":[{"startOffset":49789,"endOffset":50113,"count":0}],"isBlockCoverage":false},{"functionName":"finding","ranges":[{"startOffset":50211,"endOffset":50293,"count":0}],"isBlockCoverage":false},{"functionName":"loading","ranges":[{"startOffset":50361,"endOffset":50443,"count":1}],"isBlockCoverage":true},{"functionName":"loaded","ranges":[{"startOffset":50519,"endOffset":50599,"count":0}],"isBlockCoverage":false},{"functionName":"executing","ranges":[{"startOffset":50680,"endOffset":50766,"count":0}],"isBlockCoverage":false},{"functionName":"executed","ranges":[{"startOffset":50843,"endOffset":50927,"count":0}],"isBlockCoverage":false},{"functionName":"boot","ranges":[{"startOffset":51072,"endOffset":51944,"count":1},{"startOffset":51119,"endOffset":51140,"count":0},{"startOffset":51349,"endOffset":51875,"count":5},{"startOffset":51417,"endOffset":51467,"count":3},{"startOffset":51467,"endOffset":51515,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51598,"endOffset":51867,"count":38},{"startOffset":51822,"endOffset":51858,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51741,"endOffset":51793,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":51991,"endOffset":52603,"count":1},{"startOffset":52211,"endOffset":52270,"count":0},{"startOffset":52445,"endOffset":52504,"count":0}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":52731,"endOffset":53048,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":53154,"endOffset":53292,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":53441,"endOffset":54274,"count":1},{"startOffset":53497,"endOffset":53598,"count":0},{"startOffset":53636,"endOffset":53773,"count":0},{"startOffset":53966,"endOffset":54146,"count":0}],"isBlockCoverage":true},{"functionName":"shortcircuit","ranges":[{"startOffset":54364,"endOffset":54401,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":54701,"endOffset":54753,"count":1}],"isBlockCoverage":true},{"functionName":"#makeArgumentsTable","ranges":[{"startOffset":54810,"endOffset":55252,"count":0}],"isBlockCoverage":false},{"functionName":"#makeOptionsTable","ranges":[{"startOffset":55307,"endOffset":55743,"count":0}],"isBlockCoverage":false},{"functionName":"#validateCommandName","ranges":[{"startOffset":55810,"endOffset":56118,"count":0}],"isBlockCoverage":false},{"functionName":"renderDescription","ranges":[{"startOffset":56163,"endOffset":56603,"count":0}],"isBlockCoverage":false},{"functionName":"renderUsage","ranges":[{"startOffset":56642,"endOffset":57003,"count":0}],"isBlockCoverage":false},{"functionName":"renderList","ranges":[{"startOffset":57066,"endOffset":57402,"count":0}],"isBlockCoverage":false},{"functionName":"renderHelp","ranges":[{"startOffset":57445,"endOffset":57746,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":57791,"endOffset":58119,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":58503,"endOffset":60669,"count":1}],"isBlockCoverage":true},{"functionName":"FsLoader","ranges":[{"startOffset":58715,"endOffset":58832,"count":1}],"isBlockCoverage":true},{"functionName":"#loadCommands","ranges":[{"startOffset":58942,"endOffset":59881,"count":0}],"isBlockCoverage":false},{"functionName":"getMetaData","ranges":[{"startOffset":59934,"endOffset":60366,"count":0}],"isBlockCoverage":false},{"functionName":"getCommand","ranges":[{"startOffset":60501,"endOffset":60667,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":60974,"endOffset":61983,"count":0}],"isBlockCoverage":true}]},{"scriptId":"142","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8094,"count":1}],"isBlockCoverage":true},{"functionName":"E_IDENTIFIER_ALREADY_DEFINED","ranges":[{"startOffset":261,"endOffset":295,"count":1}],"isBlockCoverage":true},{"functionName":"E_INVALID_ENV_VARIABLES","ranges":[{"startOffset":324,"endOffset":353,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":446,"endOffset":630,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":575,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":807,"endOffset":1662,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1727,"endOffset":5163,"count":2}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":1792,"endOffset":1816,"count":1}],"isBlockCoverage":true},{"functionName":"_EnvParser","ranges":[{"startOffset":1820,"endOffset":1977,"count":2},{"startOffset":1871,"endOffset":1889,"count":0},{"startOffset":1891,"endOffset":1936,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":2146,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"removeIdentifier","ranges":[{"startOffset":2361,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"#getValue","ranges":[{"startOffset":2486,"endOffset":2722,"count":7},{"startOffset":2563,"endOffset":2601,"count":0},{"startOffset":2683,"endOffset":2717,"count":0}],"isBlockCoverage":true},{"functionName":"#interpolateMustache","ranges":[{"startOffset":2802,"endOffset":3093,"count":0}],"isBlockCoverage":false},{"functionName":"#interpolateVariable","ranges":[{"startOffset":3288,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"#interpolate","ranges":[{"startOffset":3487,"endOffset":4159,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":4132,"count":7},{"startOffset":3665,"endOffset":3745,"count":0},{"startOffset":3854,"endOffset":3883,"count":0},{"startOffset":3891,"endOffset":4097,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4239,"endOffset":5161,"count":2},{"startOffset":4457,"endOffset":5138,"count":7},{"startOffset":4550,"endOffset":5082,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5205,"endOffset":6468,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6495,"endOffset":7971,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":7391,"endOffset":7416,"count":1}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/ignitor/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2550,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":549,"endOffset":2549,"count":1}],"isBlockCoverage":true},{"functionName":"Ignitor","ranges":[{"startOffset":1053,"endOffset":1161,"count":1}],"isBlockCoverage":true},{"functionName":"#runTapCallbacks","ranges":[{"startOffset":1216,"endOffset":1316,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1275,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"getApp","ranges":[{"startOffset":1458,"endOffset":1500,"count":0}],"isBlockCoverage":false},{"functionName":"createApp","ranges":[{"startOffset":1571,"endOffset":1847,"count":1}],"isBlockCoverage":true},{"functionName":"tap","ranges":[{"startOffset":1921,"endOffset":2005,"count":1}],"isBlockCoverage":true},{"functionName":"httpServer","ranges":[{"startOffset":2071,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"ace","ranges":[{"startOffset":2203,"endOffset":2253,"count":1}],"isBlockCoverage":true},{"functionName":"testRunner","ranges":[{"startOffset":2328,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":2484,"endOffset":2547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"defineConfig","ranges":[{"startOffset":164,"endOffset":214,"count":1}],"isBlockCoverage":true}]},{"scriptId":"145","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"146","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8495,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":472,"endOffset":8223,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/stubs/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/modules/container.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":206,"count":1}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/config_provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":286,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":396,"endOffset":584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yargs-parser/build/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2508,"count":1},{"startOffset":696,"endOffset":740,"count":0},{"startOffset":822,"endOffset":830,"count":0},{"startOffset":877,"endOffset":885,"count":0},{"startOffset":928,"endOffset":1051,"count":0},{"startOffset":1164,"endOffset":1362,"count":0},{"startOffset":1468,"endOffset":1472,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":1538,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":1746,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":2156,"endOffset":2264,"count":1}],"isBlockCoverage":true},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":2289,"endOffset":2359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/hooks/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4671,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":108,"endOffset":2981,"count":7}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":118,"endOffset":251,"count":7},{"startOffset":218,"endOffset":246,"count":5}],"isBlockCoverage":true},{"functionName":"get isCleanupPending","ranges":[{"startOffset":845,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"#filter","ranges":[{"startOffset":984,"endOffset":1068,"count":2}],"isBlockCoverage":true},{"functionName":"without","ranges":[{"startOffset":1218,"endOffset":1517,"count":0}],"isBlockCoverage":false},{"functionName":"#exec","ranges":[{"startOffset":1553,"endOffset":2353,"count":7},{"startOffset":1614,"endOffset":1635,"count":0},{"startOffset":1701,"endOffset":1722,"count":0},{"startOffset":1780,"endOffset":1822,"count":0},{"startOffset":1879,"endOffset":2349,"count":2},{"startOffset":1947,"endOffset":2008,"count":0},{"startOffset":2088,"endOffset":2126,"count":0},{"startOffset":2171,"endOffset":2335,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":2390,"endOffset":2450,"count":7}],"isBlockCoverage":true},{"functionName":"runReverse","ranges":[{"startOffset":2504,"endOffset":2570,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":2614,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3012,"endOffset":4605,"count":2}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":3239,"endOffset":3274,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":3338,"endOffset":3489,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3605,"endOffset":3817,"count":3}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":3876,"endOffset":4033,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":4118,"endOffset":4232,"count":2},{"startOffset":4149,"endOffset":4197,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":4297,"endOffset":4460,"count":0}],"isBlockCoverage":false},{"functionName":"runner","ranges":[{"startOffset":4527,"endOffset":4603,"count":7}],"isBlockCoverage":true}]},{"scriptId":"152","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45170,"count":1},{"startOffset":252,"endOffset":278,"count":0},{"startOffset":279,"endOffset":436,"count":0}],"isBlockCoverage":true},{"functionName":"useColors","ranges":[{"startOffset":760,"endOffset":926,"count":5},{"startOffset":814,"endOffset":844,"count":0},{"startOffset":867,"endOffset":900,"count":0}],"isBlockCoverage":true},{"functionName":"getLogs","ranges":[{"startOffset":1024,"endOffset":1054,"count":0}],"isBlockCoverage":false},{"functionName":"flushLogs","ranges":[{"startOffset":1057,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":1077,"endOffset":1121,"count":1}],"isBlockCoverage":true},{"functionName":"logUpdate","ranges":[{"startOffset":1185,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"logUpdatePersist","ranges":[{"startOffset":1285,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":1361,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1445,"endOffset":5728,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5810,"endOffset":9735,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9777,"endOffset":12015,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12053,"endOffset":19644,"count":5}],"isBlockCoverage":true},{"functionName":"getLogs","ranges":[{"startOffset":12253,"endOffset":12309,"count":0}],"isBlockCoverage":false},{"functionName":"flushLogs","ranges":[{"startOffset":12312,"endOffset":12365,"count":0}],"isBlockCoverage":false},{"functionName":"Logger","ranges":[{"startOffset":12368,"endOffset":12596,"count":5},{"startOffset":12449,"endOffset":12462,"count":0},{"startOffset":12566,"endOffset":12585,"count":0}],"isBlockCoverage":true},{"functionName":"#colorizeLabel","ranges":[{"startOffset":12639,"endOffset":12831,"count":1},{"startOffset":12744,"endOffset":12801,"count":0}],"isBlockCoverage":true},{"functionName":"#getLabel","ranges":[{"startOffset":12894,"endOffset":13390,"count":1},{"startOffset":12938,"endOffset":13004,"count":0},{"startOffset":13011,"endOffset":13024,"count":0},{"startOffset":13031,"endOffset":13093,"count":0},{"startOffset":13100,"endOffset":13169,"count":0},{"startOffset":13245,"endOffset":13308,"count":0},{"startOffset":13315,"endOffset":13380,"count":0}],"isBlockCoverage":true},{"functionName":"#addSuffix","ranges":[{"startOffset":13444,"endOffset":13597,"count":1},{"startOffset":13520,"endOffset":13596,"count":0}],"isBlockCoverage":true},{"functionName":"#addPrefix","ranges":[{"startOffset":13732,"endOffset":13959,"count":1},{"startOffset":13808,"endOffset":13958,"count":0}],"isBlockCoverage":true},{"functionName":"#prefixLabel","ranges":[{"startOffset":14014,"endOffset":14082,"count":1}],"isBlockCoverage":true},{"functionName":"#decorateMessage","ranges":[{"startOffset":14126,"endOffset":14256,"count":1},{"startOffset":14181,"endOffset":14232,"count":0}],"isBlockCoverage":true},{"functionName":"#formatStack","ranges":[{"startOffset":14297,"endOffset":14577,"count":0}],"isBlockCoverage":false},{"functionName":"getRenderer","ranges":[{"startOffset":14645,"endOffset":14770,"count":1},{"startOffset":14686,"endOffset":14739,"count":0}],"isBlockCoverage":true},{"functionName":"useRenderer","ranges":[{"startOffset":14831,"endOffset":14906,"count":5}],"isBlockCoverage":true},{"functionName":"getColors","ranges":[{"startOffset":14967,"endOffset":15074,"count":1},{"startOffset":15004,"endOffset":15045,"count":0}],"isBlockCoverage":true},{"functionName":"useColors","ranges":[{"startOffset":15132,"endOffset":15197,"count":5}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":15229,"endOffset":15284,"count":1}],"isBlockCoverage":true},{"functionName":"logUpdate","ranges":[{"startOffset":15346,"endOffset":15413,"count":0}],"isBlockCoverage":false},{"functionName":"logUpdatePersist","ranges":[{"startOffset":15493,"endOffset":15560,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":15697,"endOffset":15762,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSuccess","ranges":[{"startOffset":15811,"endOffset":16098,"count":0}],"isBlockCoverage":false},{"functionName":"success","ranges":[{"startOffset":16138,"endOffset":16222,"count":0}],"isBlockCoverage":false},{"functionName":"prepareError","ranges":[{"startOffset":16269,"endOffset":16623,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":16661,"endOffset":16746,"count":0}],"isBlockCoverage":false},{"functionName":"prepareFatal","ranges":[{"startOffset":16793,"endOffset":17251,"count":0}],"isBlockCoverage":false},{"functionName":"fatal","ranges":[{"startOffset":17289,"endOffset":17374,"count":0}],"isBlockCoverage":false},{"functionName":"prepareWarning","ranges":[{"startOffset":17423,"endOffset":17710,"count":0}],"isBlockCoverage":false},{"functionName":"warning","ranges":[{"startOffset":17750,"endOffset":17834,"count":0}],"isBlockCoverage":false},{"functionName":"prepareInfo","ranges":[{"startOffset":17880,"endOffset":18161,"count":1},{"startOffset":18070,"endOffset":18078,"count":0},{"startOffset":18127,"endOffset":18135,"count":0}],"isBlockCoverage":true},{"functionName":"info","ranges":[{"startOffset":18198,"endOffset":18276,"count":1}],"isBlockCoverage":true},{"functionName":"prepareDebug","ranges":[{"startOffset":18323,"endOffset":18606,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":18644,"endOffset":18724,"count":0}],"isBlockCoverage":false},{"functionName":"await","ranges":[{"startOffset":18773,"endOffset":19284,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":19327,"endOffset":19464,"count":0}],"isBlockCoverage":false},{"functionName":"child","ranges":[{"startOffset":19520,"endOffset":19642,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":19784,"endOffset":26098,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":26176,"endOffset":28414,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28473,"endOffset":32034,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":32093,"endOffset":36035,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":36086,"endOffset":39212,"count":0}],"isBlockCoverage":true},{"functionName":"TRANSFORM_ERROR","ranges":[{"startOffset":39239,"endOffset":39375,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":39394,"endOffset":42485,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":42536,"endOffset":43033,"count":0}],"isBlockCoverage":true},{"functionName":"cliui","ranges":[{"startOffset":43048,"endOffset":44992,"count":5},{"startOffset":43144,"endOffset":43170,"count":0},{"startOffset":43203,"endOffset":43225,"count":0}],"isBlockCoverage":true},{"functionName":"instructions","ranges":[{"startOffset":43445,"endOffset":43671,"count":0}],"isBlockCoverage":false},{"functionName":"sticker","ranges":[{"startOffset":43691,"endOffset":43918,"count":0}],"isBlockCoverage":false},{"functionName":"tasks","ranges":[{"startOffset":43936,"endOffset":44125,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":44143,"endOffset":44350,"count":0}],"isBlockCoverage":false},{"functionName":"switchMode","ranges":[{"startOffset":44464,"endOffset":44750,"count":0}],"isBlockCoverage":false},{"functionName":"useRenderer","ranges":[{"startOffset":44756,"endOffset":44858,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":44864,"endOffset":44985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13843,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1135,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1874,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2658,"endOffset":3900,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":4234,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":5698,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":6142,"endOffset":10122,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":10142,"endOffset":13805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":693,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":865,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1277,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1719,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1936,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2336,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2681,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3724,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4418,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5170,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5797,"endOffset":5967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11171,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":587,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":867,"endOffset":2486,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2603,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3021,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3250,"endOffset":3489,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3492,"endOffset":9197,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9657,"endOffset":10967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/build/src/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":181,"count":1}],"isBlockCoverage":true}]},{"scriptId":"157","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17214,"count":1},{"startOffset":8569,"endOffset":8595,"count":0},{"startOffset":8596,"endOffset":8614,"count":0}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":54,"endOffset":165,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":563,"endOffset":8509,"count":0}],"isBlockCoverage":true},{"functionName":"danger","ranges":[{"startOffset":8697,"endOffset":8725,"count":0}],"isBlockCoverage":false},{"functionName":"submitted","ranges":[{"startOffset":8740,"endOffset":8769,"count":0}],"isBlockCoverage":false},{"functionName":"promptHiglight","ranges":[{"startOffset":8840,"endOffset":8871,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8906,"endOffset":16395,"count":1}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":8970,"endOffset":9070,"count":0}],"isBlockCoverage":false},{"functionName":"#handlePrompt","ranges":[{"startOffset":9168,"endOffset":9668,"count":0}],"isBlockCoverage":false},{"functionName":"ask","ranges":[{"startOffset":9711,"endOffset":10284,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":10354,"endOffset":11016,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":11095,"endOffset":11635,"count":0}],"isBlockCoverage":false},{"functionName":"confirm","ranges":[{"startOffset":11670,"endOffset":12249,"count":0}],"isBlockCoverage":false},{"functionName":"toggle","ranges":[{"startOffset":12341,"endOffset":13008,"count":0}],"isBlockCoverage":false},{"functionName":"choice","ranges":[{"startOffset":13078,"endOffset":13917,"count":0}],"isBlockCoverage":false},{"functionName":"multiple","ranges":[{"startOffset":13995,"endOffset":15037,"count":0}],"isBlockCoverage":false},{"functionName":"autocomplete","ranges":[{"startOffset":15139,"endOffset":16045,"count":0}],"isBlockCoverage":false},{"functionName":"trap","ranges":[{"startOffset":16109,"endOffset":16393,"count":0}],"isBlockCoverage":false},{"functionName":"E_PROMPT_CANCELLED","ranges":[{"startOffset":16489,"endOffset":16513,"count":1}],"isBlockCoverage":true},{"functionName":"prompt","ranges":[{"startOffset":16732,"endOffset":17128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9494,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":543,"endOffset":1237,"count":0}],"isBlockCoverage":true},{"functionName":"compose","ranges":[{"startOffset":1258,"endOffset":1361,"count":0}],"isBlockCoverage":false},{"functionName":"importDefault","ranges":[{"startOffset":1388,"endOffset":1808,"count":0}],"isBlockCoverage":false},{"functionName":"defineStaticProperty","ranges":[{"startOffset":1888,"endOffset":2514,"count":35},{"startOffset":2014,"endOffset":2512,"count":25},{"startOffset":2105,"endOffset":2292,"count":19},{"startOffset":2292,"endOffset":2385,"count":6},{"startOffset":2385,"endOffset":2402,"count":0},{"startOffset":2403,"endOffset":2428,"count":6}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":2569,"endOffset":2659,"count":0}],"isBlockCoverage":false},{"functionName":"naturalSort","ranges":[{"startOffset":3043,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"filterDotFiles","ranges":[{"startOffset":3192,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"readFiles","ranges":[{"startOffset":3260,"endOffset":4098,"count":0}],"isBlockCoverage":false},{"functionName":"fsReadAll","ranges":[{"startOffset":4099,"endOffset":4741,"count":0}],"isBlockCoverage":false},{"functionName":"isScriptFile","ranges":[{"startOffset":4856,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"importFile","ranges":[{"startOffset":5096,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"fsImportAll","ranges":[{"startOffset":5674,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"#getExpiryDate","ranges":[{"startOffset":6175,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"#isExpired","ranges":[{"startOffset":6441,"endOffset":6666,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":6750,"endOffset":6918,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":6983,"endOffset":7341,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7391,"endOffset":8176,"count":0}],"isBlockCoverage":true},{"functionName":"safeEqual","ranges":[{"startOffset":8285,"endOffset":8897,"count":0}],"isBlockCoverage":false},{"functionName":"getDirname","ranges":[{"startOffset":8911,"endOffset":8979,"count":2}],"isBlockCoverage":true},{"functionName":"getFilename","ranges":[{"startOffset":8980,"endOffset":9039,"count":2}],"isBlockCoverage":true},{"functionName":"joinToURL","ranges":[{"startOffset":9040,"endOffset":9119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/src/string/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true}]},{"scriptId":"160","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/macroable/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1202,"count":1}],"isBlockCoverage":true},{"functionName":"macro","ranges":[{"startOffset":196,"endOffset":254,"count":0}],"isBlockCoverage":false},{"functionName":"getter","ranges":[{"startOffset":675,"endOffset":1130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32210,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2755,"endOffset":2939,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3520,"endOffset":3568,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4122,"endOffset":4238,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4399,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5496,"endOffset":6436,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6438,"endOffset":8083,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8085,"endOffset":9502,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9504,"endOffset":12886,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12888,"endOffset":13488,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":13621,"endOffset":13682,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":13941,"endOffset":14313,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14532,"endOffset":14908,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":15108,"endOffset":15473,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15679,"endOffset":16052,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":16295,"endOffset":16684,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":16933,"endOffset":17330,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17535,"endOffset":17848,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":18060,"endOffset":18381,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18405,"endOffset":18787,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18791,"endOffset":19510,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19512,"endOffset":22916,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":22918,"endOffset":23058,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23060,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23426,"endOffset":24140,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24142,"endOffset":25759,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25761,"endOffset":26379,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26381,"endOffset":27032,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":27190,"endOffset":27284,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27463,"endOffset":27575,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":27737,"endOffset":27831,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":27997,"endOffset":28109,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":28237,"endOffset":30026,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":30029,"endOffset":31112,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":31308,"endOffset":31400,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31608,"endOffset":31714,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":31905,"endOffset":31974,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17030,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1451,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1671,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2281,"endOffset":11017,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11019,"endOffset":11322,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11363,"endOffset":16059,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16063,"endOffset":16138,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16142,"endOffset":16993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1122,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":32,"endOffset":127,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":244,"endOffset":504,"count":2},{"startOffset":316,"endOffset":375,"count":0},{"startOffset":492,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":508,"endOffset":1090,"count":1},{"startOffset":676,"endOffset":680,"count":0},{"startOffset":736,"endOffset":740,"count":0},{"startOffset":796,"endOffset":800,"count":0},{"startOffset":857,"endOffset":861,"count":0},{"startOffset":915,"endOffset":919,"count":0},{"startOffset":974,"endOffset":978,"count":0},{"startOffset":1031,"endOffset":1035,"count":0}],"isBlockCoverage":true}]},{"scriptId":"164","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1497,"endOffset":3420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2231,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":263,"endOffset":2230,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":false}]},{"scriptId":"167","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"168","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"169","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"170","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"171","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/build/chunk-H6UKLEIO.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2786,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":54,"endOffset":165,"count":1},{"startOffset":101,"endOffset":163,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":453,"endOffset":2688,"count":1}],"isBlockCoverage":true},{"functionName":"EnvLoader","ranges":[{"startOffset":495,"endOffset":675,"count":1},{"startOffset":591,"endOffset":600,"count":0}],"isBlockCoverage":true},{"functionName":"#loadFile","ranges":[{"startOffset":732,"endOffset":1020,"count":2},{"startOffset":827,"endOffset":1016,"count":1},{"startOffset":930,"endOffset":960,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1125,"endOffset":2686,"count":1},{"startOffset":1282,"endOffset":1445,"count":0},{"startOffset":1479,"endOffset":1544,"count":0},{"startOffset":1593,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1882,"count":0},{"startOffset":1901,"endOffset":1943,"count":0},{"startOffset":2137,"endOffset":2313,"count":0},{"startOffset":2480,"endOffset":2661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"172","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true}]},{"scriptId":"173","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/ignitor/ace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2521,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":272,"endOffset":2520,"count":1}],"isBlockCoverage":true},{"functionName":"#configureCallback","ranges":[{"startOffset":482,"endOffset":491,"count":1}],"isBlockCoverage":true},{"functionName":"AceProcess","ranges":[{"startOffset":497,"endOffset":558,"count":1}],"isBlockCoverage":true},{"functionName":"configure","ranges":[{"startOffset":693,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":894,"endOffset":2518,"count":1},{"startOffset":2284,"endOffset":2378,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1133,"endOffset":1166,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1605,"endOffset":1910,"count":1},{"startOffset":1669,"endOffset":1684,"count":0},{"startOffset":1686,"endOffset":1900,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1875,"endOffset":1884,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2422,"endOffset":2500,"count":1}],"isBlockCoverage":true}]},{"scriptId":"174","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/ignitor/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1080,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":258,"endOffset":1079,"count":0}],"isBlockCoverage":true}]},{"scriptId":"175","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/ignitor/http.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4254,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":351,"endOffset":4253,"count":0}],"isBlockCoverage":true}]},{"scriptId":"176","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/services/app.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"setApp","ranges":[{"startOffset":423,"endOffset":476,"count":1}],"isBlockCoverage":true}]},{"scriptId":"177","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/modules/app.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true}]},{"scriptId":"178","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/build/chunk-PRQWD6EY.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43640,"count":1}],"isBlockCoverage":true},{"functionName":"E_INVALID_PRELOAD_FILE","ranges":[{"startOffset":163,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"E_INVALID_PROVIDER","ranges":[{"startOffset":215,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_ASSEMBLER_RUNNER_COMMAND","ranges":[{"startOffset":279,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_ASSEMBLER_RUNNER_NAME","ranges":[{"startOffset":356,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_BUNDLER_BUILD_COMMAND","ranges":[{"startOffset":430,"endOffset":467,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_BUNDLER_DEV_COMMAND","ranges":[{"startOffset":502,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_BUNDLER_NAME","ranges":[{"startOffset":565,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_METAFILE_PATTERN","ranges":[{"startOffset":625,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_PRELOAD_FILE","ranges":[{"startOffset":685,"endOffset":713,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_PROVIDER_FILE","ranges":[{"startOffset":742,"endOffset":771,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_SUITE_FILES","ranges":[{"startOffset":798,"endOffset":825,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_SUITE_NAME","ranges":[{"startOffset":851,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"createEntity","ranges":[{"startOffset":3240,"endOffset":3575,"count":0}],"isBlockCoverage":false},{"functionName":"importPath","ranges":[{"startOffset":3635,"endOffset":3695,"count":0}],"isBlockCoverage":false},{"functionName":"tableName","ranges":[{"startOffset":3763,"endOffset":3944,"count":0}],"isBlockCoverage":false},{"functionName":"modelName","ranges":[{"startOffset":4003,"endOffset":4147,"count":0}],"isBlockCoverage":false},{"functionName":"modelFileName","ranges":[{"startOffset":4211,"endOffset":4334,"count":0}],"isBlockCoverage":false},{"functionName":"controllerName","ranges":[{"startOffset":4400,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"controllerFileName","ranges":[{"startOffset":4905,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"eventName","ranges":[{"startOffset":5128,"endOffset":5261,"count":0}],"isBlockCoverage":false},{"functionName":"eventFileName","ranges":[{"startOffset":5328,"endOffset":5451,"count":0}],"isBlockCoverage":false},{"functionName":"listenerName","ranges":[{"startOffset":5513,"endOffset":5652,"count":0}],"isBlockCoverage":false},{"functionName":"listenerFileName","ranges":[{"startOffset":5719,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"middlewareName","ranges":[{"startOffset":5912,"endOffset":6076,"count":0}],"isBlockCoverage":false},{"functionName":"middlewareFileName","ranges":[{"startOffset":6145,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"providerName","ranges":[{"startOffset":6340,"endOffset":6509,"count":0}],"isBlockCoverage":false},{"functionName":"providerFileName","ranges":[{"startOffset":6576,"endOffset":6705,"count":0}],"isBlockCoverage":false},{"functionName":"policyName","ranges":[{"startOffset":6765,"endOffset":6950,"count":0}],"isBlockCoverage":false},{"functionName":"policyFileName","ranges":[{"startOffset":7015,"endOffset":7140,"count":0}],"isBlockCoverage":false},{"functionName":"factoryName","ranges":[{"startOffset":7201,"endOffset":7389,"count":0}],"isBlockCoverage":false},{"functionName":"factoryFileName","ranges":[{"startOffset":7455,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"serviceName","ranges":[{"startOffset":7643,"endOffset":7831,"count":0}],"isBlockCoverage":false},{"functionName":"serviceFileName","ranges":[{"startOffset":7897,"endOffset":8024,"count":0}],"isBlockCoverage":false},{"functionName":"seederName","ranges":[{"startOffset":8084,"endOffset":8269,"count":0}],"isBlockCoverage":false},{"functionName":"seederFileName","ranges":[{"startOffset":8334,"endOffset":8459,"count":0}],"isBlockCoverage":false},{"functionName":"commandTerminalName","ranges":[{"startOffset":8529,"endOffset":8811,"count":0}],"isBlockCoverage":false},{"functionName":"commandName","ranges":[{"startOffset":8872,"endOffset":9009,"count":0}],"isBlockCoverage":false},{"functionName":"commandFileName","ranges":[{"startOffset":9075,"endOffset":9202,"count":0}],"isBlockCoverage":false},{"functionName":"validatorName","ranges":[{"startOffset":9265,"endOffset":9417,"count":0}],"isBlockCoverage":false},{"functionName":"validatorActionName","ranges":[{"startOffset":9492,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"validatorFileName","ranges":[{"startOffset":9732,"endOffset":9863,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionName","ranges":[{"startOffset":9926,"endOffset":10087,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionFileName","ranges":[{"startOffset":10155,"endOffset":10286,"count":0}],"isBlockCoverage":false},{"functionName":"mailerName","ranges":[{"startOffset":10346,"endOffset":10591,"count":0}],"isBlockCoverage":false},{"functionName":"mailerFileName","ranges":[{"startOffset":10656,"endOffset":10810,"count":0}],"isBlockCoverage":false},{"functionName":"mailName","ranges":[{"startOffset":10880,"endOffset":11108,"count":0}],"isBlockCoverage":false},{"functionName":"mailFileName","ranges":[{"startOffset":11181,"endOffset":11331,"count":0}],"isBlockCoverage":false},{"functionName":"testGroupName","ranges":[{"startOffset":11390,"endOffset":11546,"count":0}],"isBlockCoverage":false},{"functionName":"testFileName","ranges":[{"startOffset":11609,"endOffset":11760,"count":0}],"isBlockCoverage":false},{"functionName":"viewFileName","ranges":[{"startOffset":11831,"endOffset":11957,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12904,"endOffset":18010,"count":1}],"isBlockCoverage":true},{"functionName":"RcFileParser","ranges":[{"startOffset":13315,"endOffset":13429,"count":1}],"isBlockCoverage":true},{"functionName":"#knownEnvironments","ranges":[{"startOffset":13480,"endOffset":13553,"count":10}],"isBlockCoverage":true},{"functionName":"#getAssetsBundler","ranges":[{"startOffset":13607,"endOffset":14229,"count":1},{"startOffset":13675,"endOffset":13702,"count":0},{"startOffset":13761,"endOffset":14228,"count":0}],"isBlockCoverage":true},{"functionName":"#getHooks","ranges":[{"startOffset":14278,"endOffset":14699,"count":1},{"startOffset":14418,"endOffset":14698,"count":0}],"isBlockCoverage":true},{"functionName":"#getPreloads","ranges":[{"startOffset":14763,"endOffset":15375,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14817,"endOffset":15369,"count":2},{"startOffset":14976,"endOffset":14985,"count":0},{"startOffset":15022,"endOffset":15093,"count":0},{"startOffset":15150,"endOffset":15221,"count":0},{"startOffset":15326,"endOffset":15354,"count":0}],"isBlockCoverage":true},{"functionName":"#getProviders","ranges":[{"startOffset":15435,"endOffset":16057,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15491,"endOffset":16051,"count":9},{"startOffset":15571,"endOffset":15653,"count":8},{"startOffset":15654,"endOffset":15664,"count":1},{"startOffset":15702,"endOffset":15775,"count":0},{"startOffset":15833,"endOffset":15901,"count":0},{"startOffset":16008,"endOffset":16036,"count":0}],"isBlockCoverage":true},{"functionName":"#getMetaFiles","ranges":[{"startOffset":16118,"endOffset":16570,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16174,"endOffset":16564,"count":0}],"isBlockCoverage":false},{"functionName":"#getSuites","ranges":[{"startOffset":16632,"endOffset":17168,"count":1},{"startOffset":16692,"endOffset":16697,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16721,"endOffset":17162,"count":2},{"startOffset":16757,"endOffset":16824,"count":0},{"startOffset":16849,"endOffset":16917,"count":0},{"startOffset":16984,"endOffset":16999,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17088,"endOffset":17114,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":17250,"endOffset":18008,"count":1},{"startOffset":17427,"endOffset":17449,"count":0},{"startOffset":17490,"endOffset":17509,"count":0},{"startOffset":17953,"endOffset":17960,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":18448,"endOffset":19362,"count":1}],"isBlockCoverage":true},{"functionName":"ConfigManager","ranges":[{"startOffset":18644,"endOffset":18699,"count":1}],"isBlockCoverage":true},{"functionName":"useConfig","ranges":[{"startOffset":18865,"endOffset":18938,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":18981,"endOffset":19360,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":19412,"endOffset":20485,"count":1}],"isBlockCoverage":true},{"functionName":"RcFileManager","ranges":[{"startOffset":19612,"endOffset":19667,"count":1}],"isBlockCoverage":true},{"functionName":"rcContents","ranges":[{"startOffset":19837,"endOffset":19907,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":19963,"endOffset":20483,"count":1},{"startOffset":20267,"endOffset":20380,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":20664,"endOffset":21225,"count":1}],"isBlockCoverage":true},{"functionName":"#normalizeNodeEnv","ranges":[{"startOffset":20742,"endOffset":21086,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":21135,"endOffset":21223,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21278,"endOffset":22449,"count":1}],"isBlockCoverage":true},{"functionName":"PreloadsManager","ranges":[{"startOffset":21413,"endOffset":21468,"count":1}],"isBlockCoverage":true},{"functionName":"#filterByEnvironment","ranges":[{"startOffset":21544,"endOffset":21726,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":21789,"endOffset":21844,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironment","ranges":[{"startOffset":21916,"endOffset":22156,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":22197,"endOffset":22447,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22556,"endOffset":26544,"count":1}],"isBlockCoverage":true},{"functionName":"ProvidersManager","ranges":[{"startOffset":23010,"endOffset":23065,"count":1}],"isBlockCoverage":true},{"functionName":"#filterByEnvironment","ranges":[{"startOffset":23135,"endOffset":23317,"count":0}],"isBlockCoverage":false},{"functionName":"#isAClass","ranges":[{"startOffset":23363,"endOffset":23490,"count":0}],"isBlockCoverage":false},{"functionName":"#resolveProvider","ranges":[{"startOffset":23672,"endOffset":24285,"count":0}],"isBlockCoverage":false},{"functionName":"#resolve","ranges":[{"startOffset":24368,"endOffset":24616,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":24670,"endOffset":24725,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironment","ranges":[{"startOffset":24797,"endOffset":25038,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":25099,"endOffset":25603,"count":0}],"isBlockCoverage":false},{"functionName":"boot","ranges":[{"startOffset":25708,"endOffset":25842,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":25903,"endOffset":26040,"count":0}],"isBlockCoverage":false},{"functionName":"ready","ranges":[{"startOffset":26101,"endOffset":26264,"count":0}],"isBlockCoverage":false},{"functionName":"shutdown","ranges":[{"startOffset":26328,"endOffset":26542,"count":1},{"startOffset":26410,"endOffset":26491,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":26587,"endOffset":43513,"count":1}],"isBlockCoverage":true},{"functionName":"get appName","ranges":[{"startOffset":27520,"endOffset":27594,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":27664,"endOffset":27728,"count":0}],"isBlockCoverage":false},{"functionName":"get adonisVersion","ranges":[{"startOffset":27801,"endOffset":27877,"count":0}],"isBlockCoverage":false},{"functionName":"get appRoot","ranges":[{"startOffset":27937,"endOffset":27982,"count":3}],"isBlockCoverage":true},{"functionName":"get isBooted","ranges":[{"startOffset":28055,"endOffset":28144,"count":0}],"isBlockCoverage":false},{"functionName":"get isReady","ranges":[{"startOffset":28210,"endOffset":28265,"count":0}],"isBlockCoverage":false},{"functionName":"get isTerminated","ranges":[{"startOffset":28342,"endOffset":28407,"count":0}],"isBlockCoverage":false},{"functionName":"get isTerminating","ranges":[{"startOffset":28509,"endOffset":28596,"count":0}],"isBlockCoverage":false},{"functionName":"get config","ranges":[{"startOffset":28702,"endOffset":28759,"count":0}],"isBlockCoverage":false},{"functionName":"get rcFile","ranges":[{"startOffset":28867,"endOffset":28924,"count":6}],"isBlockCoverage":true},{"functionName":"get nodeEnvironment","ranges":[{"startOffset":28972,"endOffset":29048,"count":0}],"isBlockCoverage":false},{"functionName":"get inProduction","ranges":[{"startOffset":29125,"endOffset":29199,"count":0}],"isBlockCoverage":false},{"functionName":"get inDev","ranges":[{"startOffset":29277,"endOffset":29345,"count":0}],"isBlockCoverage":false},{"functionName":"get inTest","ranges":[{"startOffset":29417,"endOffset":29479,"count":0}],"isBlockCoverage":false},{"functionName":"get managedByPm2","ranges":[{"startOffset":29553,"endOffset":29621,"count":1}],"isBlockCoverage":true},{"functionName":"get generators","ranges":[{"startOffset":29677,"endOffset":29730,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":29844,"endOffset":30016,"count":0}],"isBlockCoverage":false},{"functionName":"Application","ranges":[{"startOffset":30317,"endOffset":31161,"count":1},{"startOffset":30955,"endOffset":31157,"count":0}],"isBlockCoverage":true},{"functionName":"#instantiateContainer","ranges":[{"startOffset":31219,"endOffset":31286,"count":1}],"isBlockCoverage":true},{"functionName":"getEnvironment","ranges":[{"startOffset":31371,"endOffset":31423,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironment","ranges":[{"startOffset":31567,"endOffset":32032,"count":0}],"isBlockCoverage":false},{"functionName":"getState","ranges":[{"startOffset":32090,"endOffset":32130,"count":0}],"isBlockCoverage":false},{"functionName":"rcContents","ranges":[{"startOffset":32300,"endOffset":32383,"count":0}],"isBlockCoverage":false},{"functionName":"useConfig","ranges":[{"startOffset":32549,"endOffset":32632,"count":0}],"isBlockCoverage":false},{"functionName":"notify","ranges":[{"startOffset":32790,"endOffset":32932,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":33038,"endOffset":33119,"count":1}],"isBlockCoverage":true},{"functionName":"listenOnce","ranges":[{"startOffset":33232,"endOffset":33319,"count":0}],"isBlockCoverage":false},{"functionName":"listenIf","ranges":[{"startOffset":33382,"endOffset":33509,"count":1},{"startOffset":33445,"endOffset":33488,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnceIf","ranges":[{"startOffset":33577,"endOffset":33710,"count":0}],"isBlockCoverage":false},{"functionName":"initiating","ranges":[{"startOffset":33811,"endOffset":33897,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":34222,"endOffset":34604,"count":1},{"startOffset":34272,"endOffset":34366,"count":0}],"isBlockCoverage":true},{"functionName":"booting","ranges":[{"startOffset":34695,"endOffset":34775,"count":1}],"isBlockCoverage":true},{"functionName":"boot","ranges":[{"startOffset":35020,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"booted","ranges":[{"startOffset":35826,"endOffset":35966,"count":0}],"isBlockCoverage":false},{"functionName":"starting","ranges":[{"startOffset":36042,"endOffset":36124,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":36456,"endOffset":37083,"count":0}],"isBlockCoverage":false},{"functionName":"ready","ranges":[{"startOffset":37161,"endOffset":37298,"count":0}],"isBlockCoverage":false},{"functionName":"terminating","ranges":[{"startOffset":37384,"endOffset":37472,"count":1}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":37685,"endOffset":38109,"count":1},{"startOffset":37772,"endOffset":37867,"count":0}],"isBlockCoverage":true},{"functionName":"relativePath","ranges":[{"startOffset":38179,"endOffset":38275,"count":0}],"isBlockCoverage":false},{"functionName":"makeURL","ranges":[{"startOffset":38344,"endOffset":38419,"count":13}],"isBlockCoverage":true},{"functionName":"makePath","ranges":[{"startOffset":38491,"endOffset":38565,"count":13}],"isBlockCoverage":true},{"functionName":"configPath","ranges":[{"startOffset":38620,"endOffset":38714,"count":0}],"isBlockCoverage":false},{"functionName":"publicPath","ranges":[{"startOffset":38769,"endOffset":38863,"count":0}],"isBlockCoverage":false},{"functionName":"providersPath","ranges":[{"startOffset":38921,"endOffset":39021,"count":0}],"isBlockCoverage":false},{"functionName":"factoriesPath","ranges":[{"startOffset":39079,"endOffset":39179,"count":0}],"isBlockCoverage":false},{"functionName":"migrationsPath","ranges":[{"startOffset":39238,"endOffset":39340,"count":0}],"isBlockCoverage":false},{"functionName":"seedersPath","ranges":[{"startOffset":39396,"endOffset":39492,"count":0}],"isBlockCoverage":false},{"functionName":"languageFilesPath","ranges":[{"startOffset":39555,"endOffset":39663,"count":0}],"isBlockCoverage":false},{"functionName":"viewsPath","ranges":[{"startOffset":39717,"endOffset":39809,"count":0}],"isBlockCoverage":false},{"functionName":"startPath","ranges":[{"startOffset":39863,"endOffset":39955,"count":0}],"isBlockCoverage":false},{"functionName":"tmpPath","ranges":[{"startOffset":40007,"endOffset":40095,"count":0}],"isBlockCoverage":false},{"functionName":"contractsPath","ranges":[{"startOffset":40170,"endOffset":40270,"count":0}],"isBlockCoverage":false},{"functionName":"httpControllersPath","ranges":[{"startOffset":40335,"endOffset":40447,"count":0}],"isBlockCoverage":false},{"functionName":"modelsPath","ranges":[{"startOffset":40502,"endOffset":40596,"count":0}],"isBlockCoverage":false},{"functionName":"servicesPath","ranges":[{"startOffset":40653,"endOffset":40751,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionsPath","ranges":[{"startOffset":40810,"endOffset":40912,"count":0}],"isBlockCoverage":false},{"functionName":"mailersPath","ranges":[{"startOffset":40968,"endOffset":41064,"count":0}],"isBlockCoverage":false},{"functionName":"mailsPath","ranges":[{"startOffset":41118,"endOffset":41210,"count":0}],"isBlockCoverage":false},{"functionName":"middlewarePath","ranges":[{"startOffset":41269,"endOffset":41371,"count":0}],"isBlockCoverage":false},{"functionName":"policiesPath","ranges":[{"startOffset":41428,"endOffset":41526,"count":0}],"isBlockCoverage":false},{"functionName":"validatorsPath","ranges":[{"startOffset":41585,"endOffset":41687,"count":0}],"isBlockCoverage":false},{"functionName":"commandsPath","ranges":[{"startOffset":41744,"endOffset":41842,"count":1}],"isBlockCoverage":true},{"functionName":"eventsPath","ranges":[{"startOffset":41897,"endOffset":41991,"count":0}],"isBlockCoverage":false},{"functionName":"listenersPath","ranges":[{"startOffset":42049,"endOffset":42149,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":42354,"endOffset":42608,"count":1},{"startOffset":42406,"endOffset":42559,"count":0}],"isBlockCoverage":true},{"functionName":"importDefault","ranges":[{"startOffset":42813,"endOffset":43095,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":43154,"endOffset":43511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/build/chunk-7WA7C5MT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":351,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":54,"endOffset":165,"count":1},{"startOffset":101,"endOffset":163,"count":12}],"isBlockCoverage":true}]},{"scriptId":"180","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/build/chunk-CEXVRLXG.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6676,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":54,"endOffset":165,"count":1},{"startOffset":101,"endOffset":163,"count":2}],"isBlockCoverage":true},{"functionName":"E_INSECURE_APP_KEY","ranges":[{"startOffset":259,"endOffset":283,"count":1}],"isBlockCoverage":true},{"functionName":"E_MISSING_APP_KEY","ranges":[{"startOffset":306,"endOffset":329,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1008,"endOffset":1370,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1551,"endOffset":3246,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3287,"endOffset":6588,"count":0}],"isBlockCoverage":true}]},{"scriptId":"181","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/build/chunk-UQEGDK7Z.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":125068,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":54,"endOffset":165,"count":1},{"startOffset":101,"endOffset":163,"count":4}],"isBlockCoverage":true},{"functionName":"useReturnValue","ranges":[{"startOffset":500,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":783,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1555,"endOffset":3224,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3486,"endOffset":10047,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10090,"endOffset":15020,"count":0}],"isBlockCoverage":true},{"functionName":"dropSlash","ranges":[{"startOffset":15083,"endOffset":15215,"count":0}],"isBlockCoverage":false},{"functionName":"toRoutesJSON","ranges":[{"startOffset":15216,"endOffset":15792,"count":0}],"isBlockCoverage":false},{"functionName":"trustProxy","ranges":[{"startOffset":15793,"endOffset":16027,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":16028,"endOffset":16628,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":16767,"endOffset":23497,"count":0}],"isBlockCoverage":true},{"functionName":"pack","ranges":[{"startOffset":23590,"endOffset":23741,"count":0}],"isBlockCoverage":false},{"functionName":"canUnpack","ranges":[{"startOffset":23742,"endOffset":23821,"count":0}],"isBlockCoverage":false},{"functionName":"unpack","ranges":[{"startOffset":23822,"endOffset":23941,"count":0}],"isBlockCoverage":false},{"functionName":"pack2","ranges":[{"startOffset":23976,"endOffset":24145,"count":0}],"isBlockCoverage":false},{"functionName":"canUnpack2","ranges":[{"startOffset":24146,"endOffset":24264,"count":0}],"isBlockCoverage":false},{"functionName":"unpack2","ranges":[{"startOffset":24265,"endOffset":24439,"count":0}],"isBlockCoverage":false},{"functionName":"pack3","ranges":[{"startOffset":24477,"endOffset":24640,"count":0}],"isBlockCoverage":false},{"functionName":"canUnpack3","ranges":[{"startOffset":24641,"endOffset":24768,"count":0}],"isBlockCoverage":false},{"functionName":"unpack3","ranges":[{"startOffset":24769,"endOffset":24941,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24987,"endOffset":26226,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":26733,"endOffset":29261,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29296,"endOffset":51028,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":51144,"endOffset":53903,"count":0}],"isBlockCoverage":true},{"functionName":"E_CANNOT_LOOKUP_ROUTE","ranges":[{"startOffset":54012,"endOffset":54039,"count":1}],"isBlockCoverage":true},{"functionName":"E_HTTP_EXCEPTION","ranges":[{"startOffset":54061,"endOffset":54083,"count":1}],"isBlockCoverage":true},{"functionName":"E_HTTP_REQUEST_ABORTED","ranges":[{"startOffset":54111,"endOffset":54139,"count":1}],"isBlockCoverage":true},{"functionName":"E_ROUTE_NOT_FOUND","ranges":[{"startOffset":54162,"endOffset":54185,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":54465,"endOffset":55133,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":54515,"endOffset":54547,"count":1}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":55214,"endOffset":55294,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":57443,"endOffset":59271,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":59354,"endOffset":90061,"count":0}],"isBlockCoverage":true},{"functionName":"parseRoutePattern","ranges":[{"startOffset":90514,"endOffset":90631,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":90674,"endOffset":94819,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":95036,"endOffset":99804,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":99868,"endOffset":100766,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":100822,"endOffset":103004,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":103217,"endOffset":103297,"count":0}],"isBlockCoverage":false},{"functionName":"uuid","ranges":[{"startOffset":103355,"endOffset":103524,"count":0}],"isBlockCoverage":false},{"functionName":"slug","ranges":[{"startOffset":103582,"endOffset":103674,"count":0}],"isBlockCoverage":false},{"functionName":"middlewareReferenceBuilder","ranges":[{"startOffset":103775,"endOffset":104010,"count":0}],"isBlockCoverage":false},{"functionName":"defineNamedMiddleware","ranges":[{"startOffset":104011,"endOffset":104231,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":104268,"endOffset":111646,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":112242,"endOffset":112352,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":112409,"endOffset":112477,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":112528,"endOffset":114499,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":114782,"endOffset":115002,"count":0}],"isBlockCoverage":true},{"functionName":"finalHandler","ranges":[{"startOffset":115046,"endOffset":115652,"count":0}],"isBlockCoverage":false},{"functionName":"writeResponse","ranges":[{"startOffset":115696,"endOffset":115978,"count":0}],"isBlockCoverage":false},{"functionName":"middlewareHandler","ranges":[{"startOffset":116026,"endOffset":116204,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":116241,"endOffset":123309,"count":0}],"isBlockCoverage":true},{"functionName":"defineConfig","ranges":[{"startOffset":123418,"endOffset":124705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true}]},{"scriptId":"183","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/node_modules/@sindresorhus/is/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42902,"count":1}],"isBlockCoverage":true},{"functionName":"isTypedArrayName","ranges":[{"startOffset":250,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeName","ranges":[{"startOffset":853,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitiveTypeName","ranges":[{"startOffset":1064,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectType","ranges":[{"startOffset":2173,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":2480,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"hasPromiseApi","ranges":[{"startOffset":3577,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsoluteMod2","ranges":[{"startOffset":6705,"endOffset":6820,"count":0}],"isBlockCoverage":false},{"functionName":"isAll","ranges":[{"startOffset":6828,"endOffset":6939,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":6947,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":7176,"endOffset":7461,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBuffer","ranges":[{"startOffset":7469,"endOffset":7553,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":7561,"endOffset":7683,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":7691,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncGenerator","ranges":[{"startOffset":7787,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncGeneratorFunction","ranges":[{"startOffset":7919,"endOffset":8025,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncIterable","ranges":[{"startOffset":8033,"endOffset":8122,"count":0}],"isBlockCoverage":false},{"functionName":"isBigint","ranges":[{"startOffset":8130,"endOffset":8196,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":8204,"endOffset":8292,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":8300,"endOffset":8390,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":8398,"endOffset":8468,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":8476,"endOffset":8551,"count":0}],"isBlockCoverage":false},{"functionName":"isBoundFunction","ranges":[{"startOffset":8616,"endOffset":8742,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":8750,"endOffset":8940,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":8948,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"isDataView","ranges":[{"startOffset":9054,"endOffset":9132,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":9140,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectInstanceOf","ranges":[{"startOffset":9218,"endOffset":9415,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArray","ranges":[{"startOffset":9423,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyMap","ranges":[{"startOffset":9512,"endOffset":9587,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObject","ranges":[{"startOffset":9595,"endOffset":9725,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":9733,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":9816,"endOffset":9899,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringOrWhitespace","ranges":[{"startOffset":9907,"endOffset":10014,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumCase","ranges":[{"startOffset":10022,"endOffset":10188,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":10196,"endOffset":10268,"count":0}],"isBlockCoverage":false},{"functionName":"isEvenInteger","ranges":[{"startOffset":10276,"endOffset":10346,"count":0}],"isBlockCoverage":false},{"functionName":"isFalsy","ranges":[{"startOffset":10464,"endOffset":10510,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":10518,"endOffset":10604,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":10612,"endOffset":10698,"count":0}],"isBlockCoverage":false},{"functionName":"isFormData","ranges":[{"startOffset":10706,"endOffset":10784,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":10849,"endOffset":10919,"count":0}],"isBlockCoverage":false},{"functionName":"isGenerator","ranges":[{"startOffset":10927,"endOffset":11043,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratorFunction","ranges":[{"startOffset":11051,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"isHtmlElement","ranges":[{"startOffset":11437,"endOffset":11687,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinite","ranges":[{"startOffset":11695,"endOffset":11810,"count":0}],"isBlockCoverage":false},{"functionName":"isInRange","ranges":[{"startOffset":11818,"endOffset":12159,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":12167,"endOffset":12249,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":12257,"endOffset":12339,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":12347,"endOffset":12427,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":12435,"endOffset":12500,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":12508,"endOffset":12587,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":12595,"endOffset":12663,"count":0}],"isBlockCoverage":false},{"functionName":"isNan","ranges":[{"startOffset":12671,"endOffset":12728,"count":0}],"isBlockCoverage":false},{"functionName":"isNativePromise","ranges":[{"startOffset":12736,"endOffset":12818,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativeNumber","ranges":[{"startOffset":12826,"endOffset":12903,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":12911,"endOffset":13021,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyArray","ranges":[{"startOffset":13029,"endOffset":13111,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyMap","ranges":[{"startOffset":13119,"endOffset":13195,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyObject","ranges":[{"startOffset":13335,"endOffset":13466,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptySet","ranges":[{"startOffset":13474,"endOffset":13550,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyString","ranges":[{"startOffset":13618,"endOffset":13702,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyStringAndNotWhitespace","ranges":[{"startOffset":13770,"endOffset":13887,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":13952,"endOffset":14005,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":14070,"endOffset":14155,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":14163,"endOffset":14253,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericString","ranges":[{"startOffset":14261,"endOffset":14393,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":14458,"endOffset":14565,"count":0}],"isBlockCoverage":false},{"functionName":"isObservable","ranges":[{"startOffset":14573,"endOffset":14995,"count":0}],"isBlockCoverage":false},{"functionName":"isOddInteger","ranges":[{"startOffset":15003,"endOffset":15072,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":15080,"endOffset":15574,"count":0}],"isBlockCoverage":false},{"functionName":"isPositiveNumber","ranges":[{"startOffset":15582,"endOffset":15659,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":15667,"endOffset":15761,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":15769,"endOffset":15857,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyKey","ranges":[{"startOffset":15957,"endOffset":16047,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":16055,"endOffset":16129,"count":0}],"isBlockCoverage":false},{"functionName":"isSafeInteger","ranges":[{"startOffset":16137,"endOffset":16210,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":16218,"endOffset":16286,"count":0}],"isBlockCoverage":false},{"functionName":"isSharedArrayBuffer","ranges":[{"startOffset":16294,"endOffset":16390,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":16398,"endOffset":16464,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":16472,"endOffset":16538,"count":0}],"isBlockCoverage":false},{"functionName":"isTruthy","ranges":[{"startOffset":16743,"endOffset":16798,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleLike","ranges":[{"startOffset":16806,"endOffset":17016,"count":0}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":17024,"endOffset":17107,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":17115,"endOffset":17199,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":17207,"endOffset":17291,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":17299,"endOffset":17381,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":17389,"endOffset":17485,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":17493,"endOffset":17556,"count":0}],"isBlockCoverage":false},{"functionName":"isUrlInstance","ranges":[{"startOffset":17564,"endOffset":17640,"count":0}],"isBlockCoverage":false},{"functionName":"isUrlSearchParams","ranges":[{"startOffset":17706,"endOffset":17798,"count":0}],"isBlockCoverage":false},{"functionName":"isUrlString","ranges":[{"startOffset":17806,"endOffset":18024,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDate","ranges":[{"startOffset":18032,"endOffset":18114,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLength","ranges":[{"startOffset":18122,"endOffset":18202,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":18267,"endOffset":18343,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":18408,"endOffset":18484,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":18549,"endOffset":18625,"count":0}],"isBlockCoverage":false},{"functionName":"isWhitespaceString","ranges":[{"startOffset":18633,"endOffset":18722,"count":0}],"isBlockCoverage":false},{"functionName":"predicateOnArray","ranges":[{"startOffset":18723,"endOffset":19036,"count":0}],"isBlockCoverage":false},{"functionName":"typeErrorMessage","ranges":[{"startOffset":19037,"endOffset":19185,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":19186,"endOffset":19307,"count":0}],"isBlockCoverage":false},{"functionName":"typeErrorMessageMultipleValues","ranges":[{"startOffset":19483,"endOffset":19943,"count":0}],"isBlockCoverage":false},{"functionName":"keysOf","ranges":[{"startOffset":26107,"endOffset":26164,"count":1}],"isBlockCoverage":true},{"functionName":"isIsMethodName","ranges":[{"startOffset":26210,"endOffset":26286,"count":0}],"isBlockCoverage":false},{"functionName":"assertAll","ranges":[{"startOffset":26294,"endOffset":26604,"count":0}],"isBlockCoverage":false},{"functionName":"assertAny","ranges":[{"startOffset":26612,"endOffset":27025,"count":0}],"isBlockCoverage":false},{"functionName":"assertArray","ranges":[{"startOffset":27033,"endOffset":27351,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayBuffer","ranges":[{"startOffset":27359,"endOffset":27524,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayLike","ranges":[{"startOffset":27532,"endOffset":27692,"count":0}],"isBlockCoverage":false},{"functionName":"assertAsyncFunction","ranges":[{"startOffset":27757,"endOffset":27928,"count":0}],"isBlockCoverage":false},{"functionName":"assertAsyncGenerator","ranges":[{"startOffset":27936,"endOffset":28110,"count":0}],"isBlockCoverage":false},{"functionName":"assertAsyncGeneratorFunction","ranges":[{"startOffset":28118,"endOffset":28316,"count":0}],"isBlockCoverage":false},{"functionName":"assertAsyncIterable","ranges":[{"startOffset":28324,"endOffset":28495,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigint","ranges":[{"startOffset":28503,"endOffset":28653,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigInt64Array","ranges":[{"startOffset":28661,"endOffset":28832,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigUint64Array","ranges":[{"startOffset":28840,"endOffset":29014,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlob","ranges":[{"startOffset":29022,"endOffset":29166,"count":0}],"isBlockCoverage":false},{"functionName":"assertBoolean","ranges":[{"startOffset":29174,"endOffset":29327,"count":0}],"isBlockCoverage":false},{"functionName":"assertBoundFunction","ranges":[{"startOffset":29392,"endOffset":29558,"count":0}],"isBlockCoverage":false},{"functionName":"assertBuffer","ranges":[{"startOffset":29566,"endOffset":29716,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":29724,"endOffset":29871,"count":0}],"isBlockCoverage":false},{"functionName":"assertDataView","ranges":[{"startOffset":29879,"endOffset":30035,"count":0}],"isBlockCoverage":false},{"functionName":"assertDate","ranges":[{"startOffset":30043,"endOffset":30187,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectInstanceOf","ranges":[{"startOffset":30195,"endOffset":30385,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyArray","ranges":[{"startOffset":30393,"endOffset":30556,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyMap","ranges":[{"startOffset":30564,"endOffset":30721,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyObject","ranges":[{"startOffset":30729,"endOffset":30895,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptySet","ranges":[{"startOffset":30903,"endOffset":31060,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyString","ranges":[{"startOffset":31068,"endOffset":31234,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStringOrWhitespace","ranges":[{"startOffset":31242,"endOffset":31446,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumCase","ranges":[{"startOffset":31454,"endOffset":31634,"count":0}],"isBlockCoverage":false},{"functionName":"assertError","ranges":[{"startOffset":31642,"endOffset":31789,"count":0}],"isBlockCoverage":false},{"functionName":"assertEvenInteger","ranges":[{"startOffset":31797,"endOffset":31963,"count":0}],"isBlockCoverage":false},{"functionName":"assertFalsy","ranges":[{"startOffset":31971,"endOffset":32118,"count":0}],"isBlockCoverage":false},{"functionName":"assertFloat32Array","ranges":[{"startOffset":32126,"endOffset":32294,"count":0}],"isBlockCoverage":false},{"functionName":"assertFloat64Array","ranges":[{"startOffset":32302,"endOffset":32470,"count":0}],"isBlockCoverage":false},{"functionName":"assertFormData","ranges":[{"startOffset":32478,"endOffset":32634,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":32699,"endOffset":32855,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenerator","ranges":[{"startOffset":32863,"endOffset":33022,"count":0}],"isBlockCoverage":false},{"functionName":"assertGeneratorFunction","ranges":[{"startOffset":33030,"endOffset":33213,"count":0}],"isBlockCoverage":false},{"functionName":"assertHtmlElement","ranges":[{"startOffset":33221,"endOffset":33386,"count":0}],"isBlockCoverage":false},{"functionName":"assertInfinite","ranges":[{"startOffset":33394,"endOffset":33557,"count":0}],"isBlockCoverage":false},{"functionName":"assertInRange","ranges":[{"startOffset":33565,"endOffset":33733,"count":0}],"isBlockCoverage":false},{"functionName":"assertInt16Array","ranges":[{"startOffset":33741,"endOffset":33903,"count":0}],"isBlockCoverage":false},{"functionName":"assertInt32Array","ranges":[{"startOffset":33911,"endOffset":34073,"count":0}],"isBlockCoverage":false},{"functionName":"assertInt8Array","ranges":[{"startOffset":34081,"endOffset":34240,"count":0}],"isBlockCoverage":false},{"functionName":"assertInteger","ranges":[{"startOffset":34248,"endOffset":34401,"count":0}],"isBlockCoverage":false},{"functionName":"assertIterable","ranges":[{"startOffset":34409,"endOffset":34565,"count":0}],"isBlockCoverage":false},{"functionName":"assertMap","ranges":[{"startOffset":34573,"endOffset":34714,"count":0}],"isBlockCoverage":false},{"functionName":"assertNan","ranges":[{"startOffset":34722,"endOffset":34863,"count":0}],"isBlockCoverage":false},{"functionName":"assertNativePromise","ranges":[{"startOffset":34871,"endOffset":35043,"count":0}],"isBlockCoverage":false},{"functionName":"assertNegativeNumber","ranges":[{"startOffset":35051,"endOffset":35226,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeStream","ranges":[{"startOffset":35234,"endOffset":35400,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptyArray","ranges":[{"startOffset":35408,"endOffset":35581,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptyMap","ranges":[{"startOffset":35589,"endOffset":35756,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptyObject","ranges":[{"startOffset":35764,"endOffset":35940,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptySet","ranges":[{"startOffset":35948,"endOffset":36115,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptyString","ranges":[{"startOffset":36123,"endOffset":36299,"count":0}],"isBlockCoverage":false},{"functionName":"assertNonEmptyStringAndNotWhitespace","ranges":[{"startOffset":36307,"endOffset":36534,"count":0}],"isBlockCoverage":false},{"functionName":"assertNull","ranges":[{"startOffset":36599,"endOffset":36743,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullOrUndefined","ranges":[{"startOffset":36808,"endOffset":36987,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumber","ranges":[{"startOffset":36995,"endOffset":37145,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericString","ranges":[{"startOffset":37153,"endOffset":37331,"count":0}],"isBlockCoverage":false},{"functionName":"assertObject","ranges":[{"startOffset":37396,"endOffset":37546,"count":0}],"isBlockCoverage":false},{"functionName":"assertObservable","ranges":[{"startOffset":37554,"endOffset":37716,"count":0}],"isBlockCoverage":false},{"functionName":"assertOddInteger","ranges":[{"startOffset":37724,"endOffset":37887,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlainObject","ranges":[{"startOffset":37895,"endOffset":38061,"count":0}],"isBlockCoverage":false},{"functionName":"assertPositiveNumber","ranges":[{"startOffset":38069,"endOffset":38244,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrimitive","ranges":[{"startOffset":38252,"endOffset":38411,"count":0}],"isBlockCoverage":false},{"functionName":"assertPromise","ranges":[{"startOffset":38419,"endOffset":38572,"count":0}],"isBlockCoverage":false},{"functionName":"assertPropertyKey","ranges":[{"startOffset":38580,"endOffset":38745,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExp","ranges":[{"startOffset":38753,"endOffset":38903,"count":0}],"isBlockCoverage":false},{"functionName":"assertSafeInteger","ranges":[{"startOffset":38911,"endOffset":39072,"count":0}],"isBlockCoverage":false},{"functionName":"assertSet","ranges":[{"startOffset":39080,"endOffset":39221,"count":0}],"isBlockCoverage":false},{"functionName":"assertSharedArrayBuffer","ranges":[{"startOffset":39229,"endOffset":39412,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":39420,"endOffset":39570,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbol","ranges":[{"startOffset":39578,"endOffset":39728,"count":0}],"isBlockCoverage":false},{"functionName":"assertTruthy","ranges":[{"startOffset":39736,"endOffset":39886,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleLike","ranges":[{"startOffset":39894,"endOffset":40070,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypedArray","ranges":[{"startOffset":40078,"endOffset":40240,"count":0}],"isBlockCoverage":false},{"functionName":"assertUint16Array","ranges":[{"startOffset":40248,"endOffset":40413,"count":0}],"isBlockCoverage":false},{"functionName":"assertUint32Array","ranges":[{"startOffset":40421,"endOffset":40586,"count":0}],"isBlockCoverage":false},{"functionName":"assertUint8Array","ranges":[{"startOffset":40594,"endOffset":40756,"count":0}],"isBlockCoverage":false},{"functionName":"assertUint8ClampedArray","ranges":[{"startOffset":40764,"endOffset":40947,"count":0}],"isBlockCoverage":false},{"functionName":"assertUndefined","ranges":[{"startOffset":40955,"endOffset":41114,"count":0}],"isBlockCoverage":false},{"functionName":"assertUrlInstance","ranges":[{"startOffset":41122,"endOffset":41279,"count":0}],"isBlockCoverage":false},{"functionName":"assertUrlSearchParams","ranges":[{"startOffset":41345,"endOffset":41522,"count":0}],"isBlockCoverage":false},{"functionName":"assertUrlString","ranges":[{"startOffset":41530,"endOffset":41697,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidDate","ranges":[{"startOffset":41705,"endOffset":41865,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidLength","ranges":[{"startOffset":41873,"endOffset":42039,"count":0}],"isBlockCoverage":false},{"functionName":"assertWeakMap","ranges":[{"startOffset":42104,"endOffset":42257,"count":0}],"isBlockCoverage":false},{"functionName":"assertWeakRef","ranges":[{"startOffset":42322,"endOffset":42475,"count":0}],"isBlockCoverage":false},{"functionName":"assertWeakSet","ranges":[{"startOffset":42540,"endOffset":42693,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhitespaceString","ranges":[{"startOffset":42701,"endOffset":42882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yargs-parser/build/lib/string-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2084,"count":1}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":95,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"decamelize","ranges":[{"startOffset":1130,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1631,"endOffset":2083,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yargs-parser/build/lib/yargs-parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46827,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":335,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":391,"endOffset":44624,"count":1},{"startOffset":2572,"endOffset":2578,"count":0},{"startOffset":3468,"endOffset":3473,"count":0},{"startOffset":4205,"endOffset":4210,"count":0},{"startOffset":4366,"endOffset":4371,"count":0},{"startOffset":4529,"endOffset":4534,"count":0},{"startOffset":4691,"endOffset":4696,"count":0},{"startOffset":5034,"endOffset":5282,"count":0},{"startOffset":5633,"endOffset":6225,"count":0},{"startOffset":7103,"endOffset":15678,"count":0},{"startOffset":16233,"endOffset":16258,"count":0},{"startOffset":16561,"endOffset":16579,"count":0},{"startOffset":16593,"endOffset":16617,"count":0},{"startOffset":16764,"endOffset":16796,"count":0},{"startOffset":16798,"endOffset":16955,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3499,"endOffset":4171,"count":6},{"startOffset":3564,"endOffset":3573,"count":0},{"startOffset":4027,"endOffset":4089,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3687,"endOffset":3934,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4236,"endOffset":4333,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4397,"endOffset":4496,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4560,"endOffset":4659,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4722,"endOffset":4820,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4887,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5082,"endOffset":5270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5378,"endOffset":5572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5797,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6003,"endOffset":6199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6661,"count":2},{"startOffset":6553,"endOffset":6558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6568,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16387,"endOffset":16492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16643,"endOffset":16711,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16837,"endOffset":16877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16887,"endOffset":16943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17066,"endOffset":17081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17092,"endOffset":17344,"count":0}],"isBlockCoverage":false},{"functionName":"pushPositional","ranges":[{"startOffset":17440,"endOffset":17711,"count":0}],"isBlockCoverage":false},{"functionName":"eatNargs","ranges":[{"startOffset":17807,"endOffset":19765,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19951,"endOffset":22259,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":22268,"endOffset":24658,"count":0}],"isBlockCoverage":false},{"functionName":"addNewAlias","ranges":[{"startOffset":24667,"endOffset":25012,"count":0}],"isBlockCoverage":false},{"functionName":"processValue","ranges":[{"startOffset":25021,"endOffset":26334,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":26343,"endOffset":26987,"count":0}],"isBlockCoverage":false},{"functionName":"setConfig","ranges":[{"startOffset":27111,"endOffset":29020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27424,"endOffset":29008,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObject","ranges":[{"startOffset":29118,"endOffset":30217,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObjects","ranges":[{"startOffset":30275,"endOffset":30519,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30399,"endOffset":30493,"count":0}],"isBlockCoverage":false},{"functionName":"applyEnvVars","ranges":[{"startOffset":30528,"endOffset":31483,"count":2},{"startOffset":30643,"endOffset":30712,"count":0},{"startOffset":30713,"endOffset":30717,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30793,"endOffset":31471,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":31492,"endOffset":32407,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31625,"endOffset":32395,"count":3},{"startOffset":31873,"endOffset":32363,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32069,"endOffset":32208,"count":0}],"isBlockCoverage":false},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":32416,"endOffset":32790,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":32799,"endOffset":33416,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32916,"endOffset":33404,"count":4},{"startOffset":33105,"endOffset":33127,"count":2},{"startOffset":33162,"endOffset":33167,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33177,"endOffset":33370,"count":0}],"isBlockCoverage":false},{"functionName":"hasKey","ranges":[{"startOffset":33425,"endOffset":33850,"count":4},{"startOffset":33777,"endOffset":33790,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33606,"endOffset":33672,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":33859,"endOffset":36836,"count":4},{"startOffset":35486,"endOffset":35522,"count":0},{"startOffset":35524,"endOffset":35768,"count":0},{"startOffset":35808,"endOffset":35867,"count":0},{"startOffset":35912,"endOffset":36406,"count":0},{"startOffset":36465,"endOffset":36537,"count":0},{"startOffset":36595,"endOffset":36648,"count":0},{"startOffset":36649,"endOffset":36701,"count":0},{"startOffset":36704,"endOffset":36761,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34047,"endOffset":35008,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":36903,"endOffset":38837,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36962,"endOffset":38825,"count":4},{"startOffset":37011,"endOffset":37016,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37026,"endOffset":38809,"count":8},{"startOffset":37311,"endOffset":37318,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37519,"endOffset":37946,"count":8},{"startOffset":37574,"endOffset":37614,"count":1},{"startOffset":37616,"endOffset":37924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38080,"endOffset":38533,"count":8},{"startOffset":38155,"endOffset":38195,"count":0},{"startOffset":38197,"endOffset":38511,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38583,"endOffset":38789,"count":0}],"isBlockCoverage":false},{"functionName":"checkAllAliases","ranges":[{"startOffset":38846,"endOffset":39131,"count":7},{"startOffset":38941,"endOffset":38946,"count":1},{"startOffset":39096,"endOffset":39112,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39040,"endOffset":39065,"count":7}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":39140,"endOffset":39438,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":39447,"endOffset":39727,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":39815,"endOffset":40773,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":40782,"endOffset":40913,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOption","ranges":[{"startOffset":40922,"endOffset":42057,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":42169,"endOffset":42496,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":42567,"endOffset":42903,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":42961,"endOffset":43521,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":43530,"endOffset":43605,"count":0}],"isBlockCoverage":false},{"functionName":"checkConfiguration","ranges":[{"startOffset":43679,"endOffset":44309,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43812,"endOffset":44297,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":44701,"endOffset":46168,"count":1},{"startOffset":45228,"endOffset":45722,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44975,"endOffset":45053,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45352,"endOffset":45446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45825,"endOffset":46143,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":46332,"endOffset":46406,"count":4},{"startOffset":46389,"endOffset":46399,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":46509,"endOffset":46613,"count":4},{"startOffset":46574,"endOffset":46595,"count":0}],"isBlockCoverage":true},{"functionName":"stripQuotes","ranges":[{"startOffset":46614,"endOffset":46826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15271,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1082,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2078,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3171,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3414,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3538,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4545,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6477,"endOffset":6532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6536,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6629,"endOffset":6654,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6830,"endOffset":7961,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7996,"endOffset":8557,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8589,"endOffset":8675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8755,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8818,"endOffset":10816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11008,"endOffset":11063,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11067,"endOffset":11124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11161,"endOffset":11186,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11337,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12132,"endOffset":12949,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":12982,"endOffset":13366,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13401,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":13999,"endOffset":14560,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":14593,"endOffset":14975,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15157,"endOffset":15191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/build/chunk-SPSVXECA.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1740,"count":1}],"isBlockCoverage":true},{"functionName":"applyPadding","ranges":[{"startOffset":217,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"justify","ranges":[{"startOffset":491,"endOffset":1151,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":1152,"endOffset":1402,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":1403,"endOffset":1637,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"189","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3855,"count":1},{"startOffset":738,"endOffset":762,"count":0},{"startOffset":869,"endOffset":893,"count":0}],"isBlockCoverage":true},{"functionName":"hasFlag","ranges":[{"startOffset":235,"endOffset":585,"count":16},{"startOffset":281,"endOffset":303,"count":0},{"startOffset":359,"endOffset":363,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":519,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":895,"endOffset":1159,"count":2},{"startOffset":949,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":1161,"endOffset":1320,"count":2},{"startOffset":1212,"endOffset":1232,"count":0}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":1322,"endOffset":3494,"count":2},{"startOffset":1479,"endOffset":1520,"count":0},{"startOffset":1570,"endOffset":1588,"count":0},{"startOffset":1614,"endOffset":1630,"count":0},{"startOffset":1740,"endOffset":1758,"count":0},{"startOffset":1788,"endOffset":1806,"count":0},{"startOffset":1918,"endOffset":1940,"count":0},{"startOffset":1942,"endOffset":1958,"count":0},{"startOffset":1992,"endOffset":2019,"count":0},{"startOffset":2021,"endOffset":2037,"count":0},{"startOffset":2096,"endOffset":2114,"count":0},{"startOffset":2151,"endOffset":2508,"count":0},{"startOffset":2528,"endOffset":2776,"count":0},{"startOffset":2810,"endOffset":2891,"count":0},{"startOffset":2945,"endOffset":3493,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2688,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"createSupportsColor","ranges":[{"startOffset":3503,"endOffset":3687,"count":2}],"isBlockCoverage":true}]},{"scriptId":"190","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3536,"count":1}],"isBlockCoverage":true},{"functionName":"black","ranges":[{"startOffset":38,"endOffset":97,"count":0}],"isBlockCoverage":false},{"functionName":"red","ranges":[{"startOffset":100,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"green","ranges":[{"startOffset":158,"endOffset":217,"count":0}],"isBlockCoverage":false},{"functionName":"yellow","ranges":[{"startOffset":220,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"blue","ranges":[{"startOffset":284,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"magenta","ranges":[{"startOffset":344,"endOffset":407,"count":0}],"isBlockCoverage":false},{"functionName":"cyan","ranges":[{"startOffset":410,"endOffset":467,"count":0}],"isBlockCoverage":false},{"functionName":"white","ranges":[{"startOffset":470,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"gray","ranges":[{"startOffset":532,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"grey","ranges":[{"startOffset":592,"endOffset":649,"count":0}],"isBlockCoverage":false},{"functionName":"bgBlack","ranges":[{"startOffset":652,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"bgRed","ranges":[{"startOffset":718,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"bgGreen","ranges":[{"startOffset":780,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"bgYellow","ranges":[{"startOffset":846,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"bgBlue","ranges":[{"startOffset":914,"endOffset":975,"count":0}],"isBlockCoverage":false},{"functionName":"bgMagenta","ranges":[{"startOffset":978,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"bgCyan","ranges":[{"startOffset":1048,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"bgWhite","ranges":[{"startOffset":1112,"endOffset":1175,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":1178,"endOffset":1237,"count":0}],"isBlockCoverage":false},{"functionName":"bold","ranges":[{"startOffset":1240,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"dim","ranges":[{"startOffset":1300,"endOffset":1355,"count":1}],"isBlockCoverage":true},{"functionName":"italic","ranges":[{"startOffset":1358,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"underline","ranges":[{"startOffset":1422,"endOffset":1489,"count":0}],"isBlockCoverage":false},{"functionName":"inverse","ranges":[{"startOffset":1492,"endOffset":1555,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":1558,"endOffset":1619,"count":0}],"isBlockCoverage":false},{"functionName":"strikethrough","ranges":[{"startOffset":1622,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1726,"endOffset":2265,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2323,"endOffset":2905,"count":6}],"isBlockCoverage":true},{"functionName":"Kleur","ranges":[{"startOffset":2358,"endOffset":2416,"count":6}],"isBlockCoverage":true},{"functionName":"#dispose","ranges":[{"startOffset":2419,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":2487,"endOffset":2903,"count":2},{"startOffset":2571,"endOffset":2696,"count":0},{"startOffset":2744,"endOffset":2902,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2637,"endOffset":2686,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":2963,"endOffset":3064,"count":0}],"isBlockCoverage":false},{"functionName":"ansi","ranges":[{"startOffset":3139,"endOffset":3175,"count":6}],"isBlockCoverage":true},{"functionName":"silent","ranges":[{"startOffset":3252,"endOffset":3291,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":3394,"endOffset":3427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-RRTFLKKC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":138,"count":1}],"isBlockCoverage":true}]},{"scriptId":"192","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-PNT36FCE.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":491,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":181,"endOffset":200,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":364,"endOffset":383,"count":1}],"isBlockCoverage":true}]},{"scriptId":"193","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-GGIWJLUJ.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1430,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":72,"endOffset":1052,"count":0}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":1054,"endOffset":1347,"count":25}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":1193,"endOffset":1215,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1221,"endOffset":1340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-IOBSMUFC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":910,"count":1}],"isBlockCoverage":true},{"functionName":"safeParse","ranges":[{"startOffset":69,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringifyReplacer","ranges":[{"startOffset":395,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"safeStringify","ranges":[{"startOffset":631,"endOffset":748,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/flattie/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true},{"functionName":"iter","ranges":[{"startOffset":0,"endOffset":407,"count":0}],"isBlockCoverage":false},{"functionName":"flattie","ranges":[{"startOffset":416,"endOffset":577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":440,"endOffset":1600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8841,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3092,"endOffset":3194,"count":3}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3218,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3490,"endOffset":3572,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3574,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3676,"endOffset":3778,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3780,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3886,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3994,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4152,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4236,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4294,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4378,"endOffset":4460,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4462,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5599,"endOffset":5684,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5686,"endOffset":5970,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5972,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6141,"endOffset":6395,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6399,"endOffset":6588,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6637,"endOffset":7470,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6735,"endOffset":7225,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7231,"endOffset":7462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8214,"endOffset":8254,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8366,"endOffset":8413,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8539,"endOffset":8560,"count":1}],"isBlockCoverage":true}]},{"scriptId":"198","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16246,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1260,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1628,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2091,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2636,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3306,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4902,"endOffset":7142,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7144,"endOffset":8020,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8023,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8417,"endOffset":9033,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9398,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9699,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10427,"endOffset":10730,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10732,"endOffset":10970,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":10972,"endOffset":11292,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11294,"endOffset":12527,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12529,"endOffset":12985,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":12987,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13519,"endOffset":13563,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13638,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14067,"endOffset":14364,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14366,"endOffset":15259,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15261,"endOffset":16059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3018,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":472,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1138,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1545,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2059,"endOffset":2950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15851,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1874,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2071,"endOffset":2340,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2342,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2504,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2581,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2657,"endOffset":2699,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2703,"endOffset":3110,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3157,"endOffset":3642,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7086,"endOffset":7299,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":7525,"endOffset":9960,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":9962,"endOffset":10101,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":10103,"endOffset":10254,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":10256,"endOffset":10407,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":10409,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":10550,"endOffset":10892,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":10894,"endOffset":11090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11135,"endOffset":11425,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":11429,"endOffset":11661,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":11663,"endOffset":11933,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12469,"endOffset":12749,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":12751,"endOffset":12987,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":12989,"endOffset":13154,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":13156,"endOffset":13368,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":13370,"endOffset":13582,"count":0}],"isBlockCoverage":false},{"functionName":"getDigestSizeInBytes","ranges":[{"startOffset":13584,"endOffset":13767,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":13906,"endOffset":14872,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":14874,"endOffset":15257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2520,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1890,"endOffset":2133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3331,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":626,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1294,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1702,"endOffset":3283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3401,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1371,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1801,"endOffset":2267,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2269,"endOffset":2607,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2646,"endOffset":3339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22363,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2331,"endOffset":6452,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2441,"endOffset":2983,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2989,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3049,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3196,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3698,"endOffset":3756,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3762,"endOffset":3842,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3848,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4329,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4707,"endOffset":4767,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4773,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4931,"endOffset":5308,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5372,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5436,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5792,"endOffset":5851,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5857,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6456,"endOffset":6841,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6843,"endOffset":7695,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7697,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7820,"endOffset":8520,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8522,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8661,"endOffset":10019,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10218,"endOffset":10354,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10554,"endOffset":10670,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10672,"endOffset":11250,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11252,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11759,"endOffset":14308,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14310,"endOffset":15853,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15855,"endOffset":15943,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15945,"endOffset":16040,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16042,"endOffset":16740,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":16742,"endOffset":16946,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16948,"endOffset":17285,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17287,"endOffset":17628,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17630,"endOffset":17712,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18135,"endOffset":18195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18199,"endOffset":18548,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18552,"endOffset":18687,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18691,"endOffset":18830,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18834,"endOffset":18969,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18973,"endOffset":19116,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":19569,"endOffset":20472,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":20768,"endOffset":21183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21187,"endOffset":21548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21552,"endOffset":21699,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":21828,"endOffset":21912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10712,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1183,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1255,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1411,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2193,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2312,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2692,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":3944,"endOffset":9232,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9263,"endOffset":9800,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9802,"endOffset":10004,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10006,"endOffset":10476,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10478,"endOffset":10612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9910,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1232,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3039,"endOffset":3365,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3476,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3705,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4062,"endOffset":4171,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4282,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4518,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4745,"endOffset":4860,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4902,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5088,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5236,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5701,"endOffset":5823,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5856,"endOffset":6007,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6028,"endOffset":6294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6297,"endOffset":6432,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6434,"endOffset":6757,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6831,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8018,"endOffset":9804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10199,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1233,"endOffset":1981,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1301,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2482,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2850,"endOffset":3084,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3086,"endOffset":3505,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3507,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3744,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4326,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4670,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4815,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4982,"endOffset":5498,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5527,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5809,"endOffset":5956,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5989,"endOffset":6149,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6153,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6393,"endOffset":6735,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6983,"endOffset":7193,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7195,"endOffset":7786,"count":3},{"startOffset":7591,"endOffset":7664,"count":1},{"startOffset":7664,"endOffset":7726,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8187,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8800,"endOffset":9017,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9179,"endOffset":10040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1535,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":401,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":595,"endOffset":918,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":632,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":920,"endOffset":1139,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":957,"endOffset":1136,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6942,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":870,"endOffset":1129,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1252,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1371,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1687,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1764,"endOffset":1845,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1847,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2201,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2470,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3089,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4309,"endOffset":4576,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4804,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5390,"endOffset":6868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5947,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1100,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1957,"endOffset":2125,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2156,"endOffset":2261,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2288,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2395,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2887,"endOffset":3208,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":3211,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3792,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4379,"endOffset":4850,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":4852,"endOffset":5884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9909,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1155,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1240,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2487,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2651,"endOffset":9663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30947,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1190,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1801,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1913,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4410,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":5979,"endOffset":6599,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6601,"endOffset":8781,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":8783,"endOffset":9761,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":9763,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":10752,"endOffset":11685,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":11687,"endOffset":13217,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13219,"endOffset":14079,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":14081,"endOffset":15431,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":15433,"endOffset":18175,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":18268,"endOffset":19803,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":19898,"endOffset":21861,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":21863,"endOffset":22966,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":22968,"endOffset":23594,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":23596,"endOffset":24353,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":24355,"endOffset":25766,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":25768,"endOffset":26494,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":26496,"endOffset":27222,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":27378,"endOffset":27438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27473,"endOffset":27486,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":27525,"endOffset":27585,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":27589,"endOffset":27689,"count":1},{"startOffset":27629,"endOffset":27666,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27724,"endOffset":27737,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":27753,"endOffset":28086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-K76IL3UP.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7591,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":147,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":398,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":606,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":816,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":1270,"endOffset":1427,"count":0}],"isBlockCoverage":false},{"functionName":"excerpt","ranges":[{"startOffset":1491,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":1913,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":2589,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"sentence","ranges":[{"startOffset":3015,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"parseProp","ranges":[{"startOffset":3503,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"interpolate","ranges":[{"startOffset":3784,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"pluralize","ranges":[{"startOffset":4072,"endOffset":4165,"count":0}],"isBlockCoverage":false},{"functionName":"titleCase","ranges":[{"startOffset":5068,"endOffset":5600,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase2","ranges":[{"startOffset":5601,"endOffset":5669,"count":0}],"isBlockCoverage":false},{"functionName":"snakeCase2","ranges":[{"startOffset":5670,"endOffset":5738,"count":0}],"isBlockCoverage":false},{"functionName":"dashCase","ranges":[{"startOffset":5739,"endOffset":5897,"count":19},{"startOffset":5789,"endOffset":5810,"count":0},{"startOffset":5812,"endOffset":5857,"count":0}],"isBlockCoverage":true},{"functionName":"pascalCase2","ranges":[{"startOffset":5898,"endOffset":5968,"count":0}],"isBlockCoverage":false},{"functionName":"capitalCase2","ranges":[{"startOffset":5969,"endOffset":6041,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceCase","ranges":[{"startOffset":6042,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"dotCase","ranges":[{"startOffset":6277,"endOffset":6483,"count":0}],"isBlockCoverage":false},{"functionName":"noCase","ranges":[{"startOffset":6484,"endOffset":6947,"count":0}],"isBlockCoverage":false},{"functionName":"condenseWhitespace","ranges":[{"startOffset":6971,"endOffset":7056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/string-width/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":80,"endOffset":467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-east-asian-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":814,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":76,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"eastAsianWidthType","ranges":[{"startOffset":239,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"eastAsianWidth","ranges":[{"startOffset":345,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"_isNarrowWidth","ranges":[{"startOffset":753,"endOffset":812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5714,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2159,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":4397,"endOffset":4481,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4646,"endOffset":4748,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":5059,"endOffset":5150,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5275,"endOffset":5484,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5608,"endOffset":5653,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5657,"endOffset":5708,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16996,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"ReusedHandle","ranges":[{"startOffset":2684,"endOffset":2763,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2767,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2948,"endOffset":6178,"count":1},{"startOffset":3010,"endOffset":3036,"count":0},{"startOffset":3587,"endOffset":3595,"count":0},{"startOffset":3773,"endOffset":3782,"count":0},{"startOffset":3978,"endOffset":4047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4115,"endOffset":6061,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6286,"endOffset":6811,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6984,"endOffset":7482,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":7514,"endOffset":9598,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9632,"endOffset":10647,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeServerName","ranges":[{"startOffset":10650,"endOffset":10812,"count":0}],"isBlockCoverage":false},{"functionName":"calculateServerName","ranges":[{"startOffset":10814,"endOffset":11633,"count":0}],"isBlockCoverage":false},{"functionName":"installListeners","ranges":[{"startOffset":11635,"endOffset":13123,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13156,"endOffset":14957,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14994,"endOffset":15661,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":15694,"endOffset":15862,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":15891,"endOffset":16240,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16243,"endOffset":16484,"count":0}],"isBlockCoverage":false},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16486,"endOffset":16881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28684,"count":1}],"isBlockCoverage":false},{"functionName":"emitErrorEvent","ranges":[{"startOffset":3026,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3357,"endOffset":3382,"count":0}],"isBlockCoverage":false},{"functionName":"validateHost","ranges":[{"startOffset":3627,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3956,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"ClientRequest","ranges":[{"startOffset":4030,"endOffset":11552,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11716,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":12485,"endOffset":12697,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":12732,"endOffset":12870,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12907,"endOffset":13183,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":13186,"endOffset":13236,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13238,"endOffset":13398,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13400,"endOffset":14577,"count":0}],"isBlockCoverage":false},{"functionName":"socketErrorListener","ranges":[{"startOffset":14579,"endOffset":15222,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":15224,"endOffset":15716,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15718,"endOffset":18103,"count":0}],"isBlockCoverage":false},{"functionName":"statusIsInformational","ranges":[{"startOffset":18105,"endOffset":18340,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18352,"endOffset":21365,"count":0}],"isBlockCoverage":false},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21377,"endOffset":22446,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":22448,"endOffset":23605,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnTimeout","ranges":[{"startOffset":23607,"endOffset":23758,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":23900,"endOffset":24020,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":24022,"endOffset":24146,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":24148,"endOffset":25328,"count":0}],"isBlockCoverage":false},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25330,"endOffset":25438,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25440,"endOffset":25831,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":25868,"endOffset":26039,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketNT","ranges":[{"startOffset":26042,"endOffset":26842,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":26903,"endOffset":27655,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":27694,"endOffset":28059,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":28062,"endOffset":28248,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":28287,"endOffset":28368,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":28420,"endOffset":28545,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":28587,"endOffset":28642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8261,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2298,"endOffset":2545,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2758,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnBody","ranges":[{"startOffset":4294,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4613,"endOffset":5100,"count":0}],"isBlockCoverage":false},{"functionName":"parsersCb","ranges":[{"startOffset":5149,"endOffset":5437,"count":0}],"isBlockCoverage":false},{"functionName":"closeParserInstance","ranges":[{"startOffset":5441,"endOffset":5497,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5820,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6657,"endOffset":6748,"count":0}],"isBlockCoverage":false},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7010,"endOffset":7111,"count":0}],"isBlockCoverage":false},{"functionName":"cleanParser","ranges":[{"startOffset":7113,"endOffset":7495,"count":0}],"isBlockCoverage":false},{"functionName":"prepareError","ranges":[{"startOffset":7497,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7720,"endOffset":7905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":76,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":198,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"free","ranges":[{"startOffset":321,"endOffset":445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14903,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1648,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":1753,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1882,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3075,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3124,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3260,"endOffset":3557,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3566,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3713,"endOffset":4050,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4059,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4207,"endOffset":4510,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4519,"endOffset":4565,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4668,"endOffset":5011,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5020,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5120,"endOffset":5258,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5737,"endOffset":6114,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":6357,"endOffset":7153,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7217,"endOffset":7676,"count":0}],"isBlockCoverage":false},{"functionName":"matchKnownFields","ranges":[{"startOffset":8398,"endOffset":12292,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLine","ranges":[{"startOffset":12903,"endOffset":13951,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14028,"endOffset":14221,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14344,"endOffset":14585,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":14588,"endOffset":14835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35297,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2747,"endOffset":2772,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3081,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"isCookieField","ranges":[{"startOffset":3332,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3434,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3562,"endOffset":5086,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5284,"endOffset":5322,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5410,"endOffset":5446,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5544,"endOffset":5686,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5786,"endOffset":5815,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5911,"endOffset":5999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6102,"endOffset":6196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6292,"endOffset":6403,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6521,"endOffset":6567,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6663,"endOffset":7149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7310,"endOffset":7350,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7359,"endOffset":7401,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7523,"endOffset":7980,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8080,"endOffset":8530,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":8649,"endOffset":9153,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9189,"endOffset":9284,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9322,"endOffset":9438,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":9480,"endOffset":9774,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":10017,"endOffset":10329,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":10439,"endOffset":11390,"count":0}],"isBlockCoverage":false},{"functionName":"_writeRaw","ranges":[{"startOffset":11442,"endOffset":12292,"count":0}],"isBlockCoverage":false},{"functionName":"_storeHeader","ranges":[{"startOffset":12350,"endOffset":17269,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":17271,"endOffset":18413,"count":0}],"isBlockCoverage":false},{"functionName":"storeHeader","ranges":[{"startOffset":18415,"endOffset":18614,"count":0}],"isBlockCoverage":false},{"functionName":"matchHeader","ranges":[{"startOffset":18616,"endOffset":19540,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19585,"endOffset":19768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19816,"endOffset":20128,"count":0}],"isBlockCoverage":false},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":20132,"endOffset":20402,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":20442,"endOffset":20803,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":20845,"endOffset":21852,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":21896,"endOffset":22632,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":22674,"endOffset":22896,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":23009,"endOffset":23112,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":23232,"endOffset":23633,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":23735,"endOffset":24145,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":24187,"endOffset":24345,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":24390,"endOffset":24955,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":25003,"endOffset":25094,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25230,"endOffset":25267,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25367,"endOffset":25403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25507,"endOffset":25589,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":25668,"endOffset":25921,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25924,"endOffset":26285,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":26287,"endOffset":26436,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":26438,"endOffset":26672,"count":0}],"isBlockCoverage":false},{"functionName":"write_","ranges":[{"startOffset":26674,"endOffset":28880,"count":0}],"isBlockCoverage":false},{"functionName":"connectionCorkNT","ranges":[{"startOffset":28883,"endOffset":28935,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":28977,"endOffset":30412,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":30415,"endOffset":30535,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":30569,"endOffset":32531,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":32705,"endOffset":32776,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":33570,"endOffset":34000,"count":0}],"isBlockCoverage":false},{"functionName":"_flushOutput","ranges":[{"startOffset":34044,"endOffset":34687,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":34732,"endOffset":34863,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":34899,"endOffset":35041,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":35099,"endOffset":35144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1240,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":351,"endOffset":418,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":420,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"resetCache","ranges":[{"startOffset":579,"endOffset":628,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":653,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":774,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"traceBegin","ranges":[{"startOffset":884,"endOffset":972,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":974,"endOffset":1060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38416,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2759,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7093,"endOffset":7172,"count":0}],"isBlockCoverage":false},{"functionName":"ServerResponse","ranges":[{"startOffset":7176,"endOffset":8095,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":8262,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9007,"endOffset":9997,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10039,"endOffset":10294,"count":0}],"isBlockCoverage":false},{"functionName":"detachSocket","ranges":[{"startOffset":10337,"endOffset":10519,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":10563,"endOffset":10681,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":10727,"endOffset":10825,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":10871,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11427,"endOffset":11492,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":11543,"endOffset":14116,"count":0}],"isBlockCoverage":false},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14227,"endOffset":17034,"count":0}],"isBlockCoverage":false},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":17036,"endOffset":17610,"count":0}],"isBlockCoverage":false},{"functionName":"httpServerPreClose","ranges":[{"startOffset":17612,"endOffset":17739,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":17741,"endOffset":18935,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":19066,"endOffset":19184,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":19226,"endOffset":19307,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":19349,"endOffset":19555,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":19598,"endOffset":19922,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":19955,"endOffset":20084,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":20133,"endOffset":20701,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":20704,"endOffset":21049,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":21051,"endOffset":21196,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":21198,"endOffset":24620,"count":0}],"isBlockCoverage":false},{"functionName":"socketSetEncoding","ranges":[{"startOffset":24622,"endOffset":24694,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":24696,"endOffset":24812,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnDrain","ranges":[{"startOffset":24814,"endOffset":25268,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnTimeout","ranges":[{"startOffset":25270,"endOffset":25643,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":25645,"endOffset":25794,"count":0}],"isBlockCoverage":false},{"functionName":"abortIncoming","ranges":[{"startOffset":25796,"endOffset":25983,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":25985,"endOffset":26507,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":26509,"endOffset":26738,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":26740,"endOffset":26914,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":26916,"endOffset":27415,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":27417,"endOffset":27562,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":27577,"endOffset":27585,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":28138,"endOffset":29207,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":29209,"endOffset":30830,"count":0}],"isBlockCoverage":false},{"functionName":"clearIncoming","ranges":[{"startOffset":30832,"endOffset":31170,"count":0}],"isBlockCoverage":false},{"functionName":"resOnFinish","ranges":[{"startOffset":31172,"endOffset":32496,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":32498,"endOffset":32631,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncoming","ranges":[{"startOffset":32797,"endOffset":36525,"count":0}],"isBlockCoverage":false},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":36527,"endOffset":36707,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketResume","ranges":[{"startOffset":36709,"endOffset":37231,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketPause","ranges":[{"startOffset":37233,"endOffset":37374,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":37376,"endOffset":37628,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":37630,"endOffset":38184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/log-update/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1757,"count":1}],"isBlockCoverage":true},{"functionName":"getWidth","ranges":[{"startOffset":271,"endOffset":298,"count":2}],"isBlockCoverage":true},{"functionName":"fitToTerminalHeight","ranges":[{"startOffset":329,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"createLogUpdate","ranges":[{"startOffset":619,"endOffset":1613,"count":2}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":790,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":903,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"render.clear","ranges":[{"startOffset":1428,"endOffset":1508,"count":0}],"isBlockCoverage":false},{"functionName":"render.done","ranges":[{"startOffset":1526,"endOffset":1593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-NKGAOHNN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1981,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":40,"endOffset":220,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":223,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"urlEncode","ranges":[{"startOffset":635,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"urlDecode","ranges":[{"startOffset":844,"endOffset":1262,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1399,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1623,"endOffset":1889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"228","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/src/string_builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3177,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":169,"endOffset":3094,"count":0}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/config/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1692,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":75,"endOffset":1298,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1384,"endOffset":1620,"count":0}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/middleware/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4463,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":100,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_FINAL_HANDLER","ranges":[{"startOffset":347,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":385,"endOffset":2587,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2628,"endOffset":4392,"count":0}],"isBlockCoverage":true}]},{"scriptId":"231","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3880,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":765,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":884,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1142,"endOffset":1463,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":1467,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"addSubnet","ranges":[{"startOffset":2149,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2698,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3167,"endOffset":3221,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3225,"endOffset":3382,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3386,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3541,"endOffset":3672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3388,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":743,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"SocketAddress","ranges":[{"startOffset":818,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get address","ranges":[{"startOffset":1791,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1848,"endOffset":1895,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1899,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":1984,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2339,"endOffset":2504,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2508,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2718,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":2923,"endOffset":3143,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/build/chunk-IGHHTAHI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35088,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":425,"endOffset":607,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":435,"endOffset":477,"count":1}],"isBlockCoverage":true},{"functionName":"isClass","ranges":[{"startOffset":628,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"runAsAsync","ranges":[{"startOffset":763,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":871,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDefault","ranges":[{"startOffset":2277,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"containerProvider","ranges":[{"startOffset":2893,"endOffset":4366,"count":2},{"startOffset":3003,"endOffset":3008,"count":1},{"startOffset":3045,"endOffset":3086,"count":0},{"startOffset":3112,"endOffset":4365,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3469,"endOffset":3596,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3640,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4018,"endOffset":4147,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4191,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4459,"endOffset":13929,"count":2}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":4469,"endOffset":4520,"count":1}],"isBlockCoverage":true},{"functionName":"ContainerResolver","ranges":[{"startOffset":5689,"endOffset":6071,"count":2}],"isBlockCoverage":true},{"functionName":"#invalidBindingException","ranges":[{"startOffset":6136,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"#missingDependenciesException","ranges":[{"startOffset":6558,"endOffset":7067,"count":0}],"isBlockCoverage":false},{"functionName":"#getBindingProvider","ranges":[{"startOffset":7132,"endOffset":7204,"count":2}],"isBlockCoverage":true},{"functionName":"#getBindingResolver","ranges":[{"startOffset":7335,"endOffset":7640,"count":1},{"startOffset":7494,"endOffset":7639,"count":0}],"isBlockCoverage":true},{"functionName":"#emit","ranges":[{"startOffset":7673,"endOffset":7852,"count":1},{"startOffset":7750,"endOffset":7851,"count":0}],"isBlockCoverage":true},{"functionName":"#execHooks","ranges":[{"startOffset":7904,"endOffset":8144,"count":1},{"startOffset":8015,"endOffset":8038,"count":0},{"startOffset":8061,"endOffset":8143,"count":0}],"isBlockCoverage":true},{"functionName":"hasBinding","ranges":[{"startOffset":8147,"endOffset":8341,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllBindings","ranges":[{"startOffset":8344,"endOffset":8440,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFor","ranges":[{"startOffset":8594,"endOffset":12016,"count":1},{"startOffset":8824,"endOffset":8904,"count":0},{"startOffset":8960,"endOffset":9315,"count":0},{"startOffset":9430,"endOffset":9754,"count":0},{"startOffset":9797,"endOffset":10050,"count":0},{"startOffset":10102,"endOffset":10365,"count":0},{"startOffset":10412,"endOffset":11057,"count":0},{"startOffset":11248,"endOffset":11377,"count":0},{"startOffset":11553,"endOffset":11642,"count":0},{"startOffset":11726,"endOffset":11818,"count":0},{"startOffset":11923,"endOffset":12015,"count":0}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":8657,"endOffset":8700,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":12019,"endOffset":12297,"count":1},{"startOffset":12114,"endOffset":12222,"count":0}],"isBlockCoverage":true},{"functionName":"call","ranges":[{"startOffset":12567,"endOffset":13557,"count":1},{"startOffset":12714,"endOffset":12807,"count":0},{"startOffset":12839,"endOffset":12917,"count":0},{"startOffset":13072,"endOffset":13180,"count":0},{"startOffset":13330,"endOffset":13510,"count":0}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":12622,"endOffset":12665,"count":0}],"isBlockCoverage":false},{"functionName":"bindValue","ranges":[{"startOffset":13560,"endOffset":13927,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14072,"endOffset":14961,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":14082,"endOffset":14138,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15000,"endOffset":21731,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":15010,"endOffset":15053,"count":1}],"isBlockCoverage":true},{"functionName":"Container","ranges":[{"startOffset":16169,"endOffset":16230,"count":1}],"isBlockCoverage":true},{"functionName":"useEmitter","ranges":[{"startOffset":16282,"endOffset":16361,"count":0}],"isBlockCoverage":false},{"functionName":"createResolver","ranges":[{"startOffset":16768,"endOffset":17055,"count":2}],"isBlockCoverage":true},{"functionName":"hasBinding","ranges":[{"startOffset":17058,"endOffset":17189,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllBindings","ranges":[{"startOffset":17192,"endOffset":17288,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":17291,"endOffset":17414,"count":1}],"isBlockCoverage":true},{"functionName":"call","ranges":[{"startOffset":17686,"endOffset":17821,"count":1}],"isBlockCoverage":true},{"functionName":"alias","ranges":[{"startOffset":18012,"endOffset":18254,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":18257,"endOffset":18664,"count":0}],"isBlockCoverage":false},{"functionName":"bindValue","ranges":[{"startOffset":18667,"endOffset":19034,"count":1},{"startOffset":18731,"endOffset":18761,"count":0},{"startOffset":18762,"endOffset":18782,"count":0},{"startOffset":18784,"endOffset":18925,"count":0}],"isBlockCoverage":true},{"functionName":"singleton","ranges":[{"startOffset":19037,"endOffset":19467,"count":0}],"isBlockCoverage":false},{"functionName":"swap","ranges":[{"startOffset":19640,"endOffset":19921,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":19976,"endOffset":20083,"count":0}],"isBlockCoverage":false},{"functionName":"restoreAll","ranges":[{"startOffset":20163,"endOffset":20371,"count":0}],"isBlockCoverage":false},{"functionName":"resolving","ranges":[{"startOffset":20374,"endOffset":20640,"count":0}],"isBlockCoverage":false},{"functionName":"when","ranges":[{"startOffset":20716,"endOffset":20787,"count":0}],"isBlockCoverage":false},{"functionName":"contextualBinding","ranges":[{"startOffset":21081,"endOffset":21729,"count":0}],"isBlockCoverage":false},{"functionName":"createDebuggingError","ranges":[{"startOffset":21857,"endOffset":22087,"count":0}],"isBlockCoverage":false},{"functionName":"initiateContainerInjections","ranges":[{"startOffset":22142,"endOffset":22403,"count":0}],"isBlockCoverage":false},{"functionName":"defineConstructorInjections","ranges":[{"startOffset":22472,"endOffset":22949,"count":0}],"isBlockCoverage":false},{"functionName":"defineMethodInjections","ranges":[{"startOffset":23018,"endOffset":23563,"count":0}],"isBlockCoverage":false},{"functionName":"inject","ranges":[{"startOffset":23622,"endOffset":23988,"count":0}],"isBlockCoverage":false},{"functionName":"moduleCaller","ranges":[{"startOffset":24040,"endOffset":26795,"count":0}],"isBlockCoverage":false},{"functionName":"moduleImporter","ranges":[{"startOffset":26910,"endOffset":30474,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExpression","ranges":[{"startOffset":30546,"endOffset":34871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/build/chunk-H736K5TN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":193,"count":1}],"isBlockCoverage":true},{"functionName":"__name","ranges":[{"startOffset":52,"endOffset":127,"count":17}],"isBlockCoverage":true}]},{"scriptId":"235","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/src/json/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":128,"count":1}],"isBlockCoverage":true}]},{"scriptId":"236","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yargs-parser/build/lib/tokenize-arg-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1092,"count":1}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":144,"endOffset":1091,"count":1},{"startOffset":296,"endOffset":1090,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":249,"endOffset":288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yargs-parser/build/lib/yargs-parser-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":425,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":125,"endOffset":363,"count":1}],"isBlockCoverage":true}]},{"scriptId":"238","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":false}]},{"scriptId":"239","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":352,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":775,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":944,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":999,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1091,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1144,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1236,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1287,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"get excludeNetwork","ranges":[{"startOffset":1368,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"set excludeNetwork","ranges":[{"startOffset":1433,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1535,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1584,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1725,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1801,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1923,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1991,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2156,"endOffset":2242,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2246,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2384,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2557,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2683,"endOffset":2757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9774,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2026,"endOffset":2272,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2085,"endOffset":2268,"count":1},{"startOffset":2181,"endOffset":2248,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2654,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2716,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2778,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2841,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2902,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2967,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3020,"endOffset":3039,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3075,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3128,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3181,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3235,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3293,"endOffset":3317,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3352,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3404,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3559,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3939,"endOffset":4368,"count":1},{"startOffset":4041,"endOffset":4046,"count":0},{"startOffset":4108,"endOffset":4349,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":4399,"endOffset":4441,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4468,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4518,"endOffset":4568,"count":4}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4599,"endOffset":4621,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4653,"endOffset":5258,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5287,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5338,"endOffset":5385,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5418,"endOffset":5435,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5523,"endOffset":5776,"count":61}],"isBlockCoverage":true},{"functionName":"getCIDR","ranges":[{"startOffset":5778,"endOffset":6723,"count":15},{"startOffset":5968,"endOffset":6028,"count":13},{"startOffset":6073,"endOffset":6689,"count":313},{"startOffset":6105,"endOffset":6185,"count":240},{"startOffset":6141,"endOffset":6168,"count":237},{"startOffset":6168,"endOffset":6185,"count":3},{"startOffset":6185,"endOffset":6288,"count":76},{"startOffset":6288,"endOffset":6685,"count":64},{"startOffset":6310,"endOffset":6380,"count":3},{"startOffset":6338,"endOffset":6372,"count":0},{"startOffset":6380,"endOffset":6679,"count":61},{"startOffset":6560,"endOffset":6671,"count":2},{"startOffset":6596,"endOffset":6634,"count":0}],"isBlockCoverage":true},{"functionName":"networkInterfaces","ranges":[{"startOffset":6934,"endOffset":7627,"count":1},{"startOffset":7057,"endOffset":7071,"count":0},{"startOffset":7115,"endOffset":7607,"count":15},{"startOffset":7429,"endOffset":7453,"count":13},{"startOffset":7528,"endOffset":7564,"count":3},{"startOffset":7564,"endOffset":7603,"count":12}],"isBlockCoverage":true},{"functionName":"setPriority","ranges":[{"startOffset":7711,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8058,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8617,"endOffset":8905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/kleur/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2743,"count":1},{"startOffset":188,"endOffset":193,"count":0},{"startOffset":357,"endOffset":379,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":1034,"endOffset":1297,"count":2},{"startOffset":1209,"endOffset":1267,"count":0}],"isBlockCoverage":true},{"functionName":"chain","ranges":[{"startOffset":1299,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2255,"endOffset":2723,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2405,"endOffset":2720,"count":2},{"startOffset":2468,"endOffset":2627,"count":0},{"startOffset":2652,"endOffset":2674,"count":0},{"startOffset":2708,"endOffset":2716,"count":0}],"isBlockCoverage":true}]},{"scriptId":"242","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-truncate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2654,"count":1}],"isBlockCoverage":true},{"functionName":"getIndexOfNearestSpace","ranges":[{"startOffset":77,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"cliTruncate","ranges":[{"startOffset":480,"endOffset":2653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/terminal-size/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2619,"count":1}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":205,"endOffset":387,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":405,"endOffset":503,"count":1}],"isBlockCoverage":true},{"functionName":"createIfNotDefault","ranges":[{"startOffset":533,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"terminalSize","ranges":[{"startOffset":806,"endOffset":1521,"count":1},{"startOffset":961,"endOffset":983,"count":0},{"startOffset":984,"endOffset":999,"count":0},{"startOffset":1001,"endOffset":1136,"count":0},{"startOffset":1138,"endOffset":1494,"count":0},{"startOffset":1495,"endOffset":1506,"count":0},{"startOffset":1507,"endOffset":1518,"count":0}],"isBlockCoverage":true},{"functionName":"devTty","ranges":[{"startOffset":1538,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"tput","ranges":[{"startOffset":1963,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"resize","ranges":[{"startOffset":2333,"endOffset":2617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":181,"count":1}],"isBlockCoverage":true},{"functionName":"slash","ranges":[{"startOffset":15,"endOffset":180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/safe-stable-stringify/esm/wrapper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"246","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@lukeed/ms/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1257,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":275,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"fmt","ranges":[{"startOffset":659,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":832,"endOffset":1256,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"248","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ansi-escapes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65,"count":1}],"isBlockCoverage":true}]},{"scriptId":"249","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/case-anything/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/string-width/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"ansiRegex","ranges":[{"startOffset":15,"endOffset":457,"count":1},{"startOffset":436,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"251","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-east-asian-width/lookup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9015,"count":1}],"isBlockCoverage":true},{"functionName":"isAmbiguous","ranges":[{"startOffset":20,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidth","ranges":[{"startOffset":4638,"endOffset":4751,"count":0}],"isBlockCoverage":false},{"functionName":"isWide","ranges":[{"startOffset":4753,"endOffset":8326,"count":0}],"isBlockCoverage":false},{"functionName":"getCategory","ranges":[{"startOffset":8328,"endOffset":8957,"count":0}],"isBlockCoverage":false}]},{"scriptId":"252","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-cursor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":694,"count":1}],"isBlockCoverage":true},{"functionName":"cliCursor.show","ranges":[{"startOffset":144,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"cliCursor.hide","ranges":[{"startOffset":305,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"cliCursor.toggle","ranges":[{"startOffset":485,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"253","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6059,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsiCode","ranges":[{"startOffset":366,"endOffset":448,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":476,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":691,"endOffset":759,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":869,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2250,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2773,"endOffset":5802,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi","ranges":[{"startOffset":5870,"endOffset":6058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/log-update/node_modules/slice-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3877,"count":1},{"startOffset":343,"endOffset":468,"count":41}],"isBlockCoverage":true},{"functionName":"getEndCode","ranges":[{"startOffset":470,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"findNumberIndex","ranges":[{"startOffset":864,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"parseAnsiCode","ranges":[{"startOffset":1105,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":1417,"endOffset":2226,"count":0}],"isBlockCoverage":false},{"functionName":"reduceAnsiCodes","ranges":[{"startOffset":2228,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"undoAnsiCodes","ranges":[{"startOffset":2863,"endOffset":3029,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAnsi","ranges":[{"startOffset":3046,"endOffset":3876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/log-update/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":80,"endOffset":467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/slice-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2690,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":216,"endOffset":248,"count":0}],"isBlockCoverage":false},{"functionName":"checkAnsi","ranges":[{"startOffset":269,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAnsi","ranges":[{"startOffset":1422,"endOffset":2689,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27267,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":1965,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3430,"endOffset":5105,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5107,"endOffset":5596,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5598,"endOffset":6112,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6649,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6932,"endOffset":7296,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6953,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7433,"endOffset":8331,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":8944,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13852,"endOffset":14052,"count":1},{"startOffset":14010,"endOffset":14050,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14054,"endOffset":19366,"count":1},{"startOffset":14215,"endOffset":14280,"count":0},{"startOffset":14351,"endOffset":14542,"count":0},{"startOffset":14622,"endOffset":14645,"count":0},{"startOffset":14942,"endOffset":15006,"count":0},{"startOffset":15069,"endOffset":15093,"count":0},{"startOffset":15095,"endOffset":15173,"count":0},{"startOffset":15236,"endOffset":15260,"count":0},{"startOffset":15262,"endOffset":15340,"count":0},{"startOffset":15451,"endOffset":15493,"count":0},{"startOffset":15495,"endOffset":15626,"count":0},{"startOffset":15690,"endOffset":15810,"count":0},{"startOffset":16096,"endOffset":16204,"count":0},{"startOffset":16227,"endOffset":17089,"count":0},{"startOffset":17132,"endOffset":17185,"count":0},{"startOffset":17263,"endOffset":17277,"count":0},{"startOffset":17530,"endOffset":18134,"count":0},{"startOffset":18231,"endOffset":18274,"count":63},{"startOffset":18312,"endOffset":18777,"count":0},{"startOffset":18808,"endOffset":19061,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18556,"endOffset":18765,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19368,"endOffset":19624,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20179,"endOffset":21403,"count":1},{"startOffset":20545,"endOffset":20919,"count":0},{"startOffset":20943,"endOffset":21384,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20578,"endOffset":20766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20810,"endOffset":20913,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":21279,"endOffset":21380,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22163,"endOffset":23671,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23674,"endOffset":24060,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":24573,"endOffset":25037,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25535,"endOffset":25911,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25914,"endOffset":26137,"count":131},{"startOffset":26039,"endOffset":26135,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26140,"endOffset":26302,"count":1},{"startOffset":26234,"endOffset":26300,"count":4}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":26305,"endOffset":26493,"count":1},{"startOffset":26363,"endOffset":26409,"count":0},{"startOffset":26411,"endOffset":26491,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26496,"endOffset":26769,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26772,"endOffset":27135,"count":1},{"startOffset":26851,"endOffset":26884,"count":0},{"startOffset":26936,"endOffset":27133,"count":0}],"isBlockCoverage":true}]},{"scriptId":"258","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31801,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2500,"endOffset":2559,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2566,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2682,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2756,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2927,"endOffset":4481,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4488,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5241,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5763,"endOffset":5822,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5829,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5948,"endOffset":6068,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6075,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6245,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6662,"endOffset":8155,"count":1},{"startOffset":8085,"endOffset":8153,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":7003,"endOffset":8041,"count":1},{"startOffset":7051,"endOffset":7094,"count":0},{"startOffset":7161,"endOffset":7196,"count":0},{"startOffset":7272,"endOffset":7568,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8278,"endOffset":8756,"count":1},{"startOffset":8368,"endOffset":8375,"count":0},{"startOffset":8418,"endOffset":8754,"count":4},{"startOffset":8659,"endOffset":8678,"count":0},{"startOffset":8679,"endOffset":8704,"count":0},{"startOffset":8729,"endOffset":8754,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8759,"endOffset":8849,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8852,"endOffset":9081,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9083,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9230,"endOffset":12801,"count":1},{"startOffset":9381,"endOffset":9390,"count":0},{"startOffset":9688,"endOffset":9697,"count":0},{"startOffset":9828,"endOffset":9850,"count":0},{"startOffset":10228,"endOffset":10258,"count":0},{"startOffset":10599,"endOffset":10856,"count":0},{"startOffset":10871,"endOffset":11162,"count":0},{"startOffset":11283,"endOffset":12197,"count":4},{"startOffset":11348,"endOffset":11357,"count":0},{"startOffset":11379,"endOffset":11430,"count":1},{"startOffset":11430,"endOffset":11651,"count":3},{"startOffset":11651,"endOffset":11913,"count":0},{"startOffset":11913,"endOffset":11938,"count":3},{"startOffset":11938,"endOffset":12193,"count":0},{"startOffset":12265,"endOffset":12286,"count":0},{"startOffset":12362,"endOffset":12383,"count":0},{"startOffset":12459,"endOffset":12480,"count":0},{"startOffset":12551,"endOffset":12661,"count":4},{"startOffset":12642,"endOffset":12659,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12132,"endOffset":12177,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12805,"endOffset":12866,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":12869,"endOffset":12919,"count":1}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12952,"endOffset":13625,"count":1},{"startOffset":12996,"endOffset":13001,"count":0},{"startOffset":13047,"endOffset":13058,"count":0},{"startOffset":13088,"endOffset":13577,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":13668,"endOffset":13725,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13758,"endOffset":13812,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13847,"endOffset":13903,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13906,"endOffset":14903,"count":1}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":14007,"endOffset":14108,"count":1}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":14422,"endOffset":14530,"count":1}],"isBlockCoverage":true},{"functionName":"unrefCounted","ranges":[{"startOffset":14534,"endOffset":14672,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":14676,"endOffset":14747,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14751,"endOffset":14826,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":14830,"endOffset":14901,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15051,"endOffset":27175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15301,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15399,"endOffset":15443,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15938,"endOffset":17117,"count":2},{"startOffset":16063,"endOffset":16937,"count":1},{"startOffset":16272,"endOffset":16299,"count":0},{"startOffset":16621,"endOffset":16854,"count":0},{"startOffset":16937,"endOffset":17113,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17271,"endOffset":19612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19643,"endOffset":20048,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19678,"endOffset":20042,"count":7},{"startOffset":19757,"endOffset":19764,"count":0},{"startOffset":19884,"endOffset":20041,"count":0}],"isBlockCoverage":true},{"functionName":"target.send","ranges":[{"startOffset":20068,"endOffset":20788,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":20808,"endOffset":24979,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":25553,"endOffset":25977,"count":1},{"startOffset":25591,"endOffset":25666,"count":0}],"isBlockCoverage":true},{"functionName":"target._disconnect","ranges":[{"startOffset":26003,"endOffset":26620,"count":1},{"startOffset":26208,"endOffset":26233,"count":0},{"startOffset":26483,"endOffset":26585,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":26262,"endOffset":26389,"count":1},{"startOffset":26299,"endOffset":26306,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":26625,"endOffset":26909,"count":1},{"startOffset":26801,"endOffset":26908,"count":0}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":26913,"endOffset":27131,"count":1},{"startOffset":26996,"endOffset":27003,"count":0},{"startOffset":27037,"endOffset":27056,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":27210,"endOffset":27520,"count":1},{"startOffset":27309,"endOffset":27353,"count":0},{"startOffset":27354,"endOffset":27410,"count":0},{"startOffset":27411,"endOffset":27516,"count":0}],"isBlockCoverage":true},{"functionName":"getValidStdio","ranges":[{"startOffset":27554,"endOffset":30479,"count":1},{"startOffset":27686,"endOffset":27730,"count":0},{"startOffset":27762,"endOffset":27820,"count":0},{"startOffset":28064,"endOffset":28101,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28214,"endOffset":30438,"count":4},{"startOffset":28472,"endOffset":28520,"count":0},{"startOffset":28550,"endOffset":28608,"count":0},{"startOffset":28706,"endOffset":28718,"count":0},{"startOffset":28721,"endOffset":28975,"count":0},{"startOffset":29002,"endOffset":29396,"count":1},{"startOffset":29041,"endOffset":29226,"count":0},{"startOffset":29396,"endOffset":30417,"count":3},{"startOffset":29516,"endOffset":30417,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":28239,"endOffset":28431,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30482,"endOffset":30798,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30801,"endOffset":31002,"count":2},{"startOffset":30921,"endOffset":31000,"count":1}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":31004,"endOffset":31675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28430,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2896,"endOffset":2993,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3059,"endOffset":4474,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4585,"endOffset":4663,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4666,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5111,"endOffset":5676,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5678,"endOffset":5970,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6038,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6560,"endOffset":10015,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10045,"endOffset":10841,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10845,"endOffset":11191,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11194,"endOffset":11840,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11873,"endOffset":12184,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12289,"endOffset":12730,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12734,"endOffset":13494,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13497,"endOffset":13881,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13884,"endOffset":14311,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14314,"endOffset":14452,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14455,"endOffset":14579,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14582,"endOffset":14779,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15350,"endOffset":18243,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18246,"endOffset":19389,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19391,"endOffset":19572,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19599,"endOffset":20167,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20209,"endOffset":20342,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20346,"endOffset":20400,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20430,"endOffset":20624,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20660,"endOffset":20974,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21010,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21192,"endOffset":21370,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21409,"endOffset":21605,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21649,"endOffset":21853,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":21898,"endOffset":22164,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22200,"endOffset":22578,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22616,"endOffset":22997,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23047,"endOffset":23658,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23710,"endOffset":24327,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":24331,"endOffset":24494,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24497,"endOffset":24661,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24664,"endOffset":24922,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24925,"endOffset":25040,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25066,"endOffset":25173,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25202,"endOffset":25311,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":25352,"endOffset":25409,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25450,"endOffset":25507,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25548,"endOffset":25605,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25646,"endOffset":25703,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25742,"endOffset":25811,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":25851,"endOffset":25921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26040,"endOffset":26094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26167,"endOffset":26223,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26376,"endOffset":26433,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26509,"endOffset":26568,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26724,"endOffset":26781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26857,"endOffset":26916,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27068,"endOffset":27121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27193,"endOffset":27248,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27400,"endOffset":27457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27533,"endOffset":27592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27699,"endOffset":27734,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27843,"endOffset":27880,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28165,"endOffset":28201,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28205,"endOffset":28246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"260","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1851,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":478,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":582,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":679,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1326,"endOffset":1774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2709,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1194,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1544,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2408,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ansi-escapes/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4044,"count":1},{"startOffset":338,"endOffset":426,"count":0},{"startOffset":1400,"endOffset":1411,"count":0},{"startOffset":1476,"endOffset":1487,"count":0},{"startOffset":2301,"endOffset":2327,"count":0}],"isBlockCoverage":true},{"functionName":"cwdFunction","ranges":[{"startOffset":340,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":467,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"cursorMove","ranges":[{"startOffset":707,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"cursorUp","ranges":[{"startOffset":1093,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"cursorDown","ranges":[{"startOffset":1153,"endOffset":1185,"count":0}],"isBlockCoverage":false},{"functionName":"cursorForward","ranges":[{"startOffset":1216,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"cursorBackward","ranges":[{"startOffset":1280,"endOffset":1312,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLines","ranges":[{"startOffset":1735,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":2758,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"image","ranges":[{"startOffset":2882,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"setCwd","ranges":[{"startOffset":3300,"endOffset":3359,"count":0}],"isBlockCoverage":false},{"functionName":"annotation","ranges":[{"startOffset":3363,"endOffset":4039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/case-anything/dist/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7235,"count":1}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":370,"endOffset":650,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCase","ranges":[{"startOffset":960,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"kebabCase","ranges":[{"startOffset":1770,"endOffset":1914,"count":19}],"isBlockCoverage":true},{"functionName":"snakeCase","ranges":[{"startOffset":2201,"endOffset":2345,"count":0}],"isBlockCoverage":false},{"functionName":"constantCase","ranges":[{"startOffset":2644,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"trainCase","ranges":[{"startOffset":3080,"endOffset":3246,"count":0}],"isBlockCoverage":false},{"functionName":"adaCase","ranges":[{"startOffset":3529,"endOffset":3693,"count":0}],"isBlockCoverage":false},{"functionName":"cobolCase","ranges":[{"startOffset":3979,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"dotNotation","ranges":[{"startOffset":4430,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"pathCase","ranges":[{"startOffset":4837,"endOffset":5095,"count":0}],"isBlockCoverage":false},{"functionName":"spaceCase","ranges":[{"startOffset":5391,"endOffset":5537,"count":0}],"isBlockCoverage":false},{"functionName":"capitalCase","ranges":[{"startOffset":5902,"endOffset":6125,"count":0}],"isBlockCoverage":false},{"functionName":"lowerCase","ranges":[{"startOffset":6501,"endOffset":6679,"count":0}],"isBlockCoverage":false},{"functionName":"upperCase","ranges":[{"startOffset":7056,"endOffset":7234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/restore-cursor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":386,"count":1},{"startOffset":161,"endOffset":214,"count":0},{"startOffset":343,"endOffset":353,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":258,"endOffset":341,"count":0}],"isBlockCoverage":false},{"functionName":"restoreCursor","ranges":[{"startOffset":345,"endOffset":353,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/wrap-ansi/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5267,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":55,"endOffset":105,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":128,"endOffset":186,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144,"endOffset":186,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":209,"endOffset":297,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1834,"endOffset":5200,"count":1},{"startOffset":1947,"endOffset":2281,"count":3},{"startOffset":2007,"endOffset":2187,"count":45}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2913,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3462,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4040,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4149,"endOffset":4906,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4960,"endOffset":5041,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5095,"endOffset":5148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/wrap-ansi/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":80,"endOffset":467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/log-update/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5267,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":55,"endOffset":105,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71,"endOffset":105,"count":123}],"isBlockCoverage":true},{"functionName":"wrapAnsi256","ranges":[{"startOffset":128,"endOffset":186,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144,"endOffset":186,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":209,"endOffset":297,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1834,"endOffset":5200,"count":1},{"startOffset":1947,"endOffset":2281,"count":3},{"startOffset":2007,"endOffset":2187,"count":45}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2913,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3462,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4040,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4149,"endOffset":4906,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4960,"endOffset":5041,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5095,"endOffset":5148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/log-update/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":69,"endOffset":211,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/log-update/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"ansiRegex","ranges":[{"startOffset":15,"endOffset":457,"count":1},{"startOffset":436,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1606,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":42,"endOffset":1605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/slice-ansi/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5267,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":55,"endOffset":105,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":128,"endOffset":186,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144,"endOffset":186,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":209,"endOffset":297,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1834,"endOffset":5200,"count":1},{"startOffset":1947,"endOffset":2281,"count":3},{"startOffset":2007,"endOffset":2187,"count":45}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2913,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3462,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4040,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4149,"endOffset":4906,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4960,"endOffset":5041,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5095,"endOffset":5148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/environment/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2228,"count":1},{"startOffset":154,"endOffset":164,"count":0},{"startOffset":362,"endOffset":377,"count":0},{"startOffset":518,"endOffset":539,"count":0},{"startOffset":628,"endOffset":670,"count":0},{"startOffset":756,"endOffset":807,"count":0},{"startOffset":887,"endOffset":935,"count":0},{"startOffset":1017,"endOffset":1066,"count":0},{"startOffset":1188,"endOffset":1213,"count":0},{"startOffset":1284,"endOffset":1294,"count":0},{"startOffset":1365,"endOffset":1386,"count":0},{"startOffset":1525,"endOffset":1535,"count":0},{"startOffset":1663,"endOffset":1685,"count":0},{"startOffset":1728,"endOffset":1749,"count":0},{"startOffset":1882,"endOffset":1892,"count":0},{"startOffset":1908,"endOffset":1951,"count":0},{"startOffset":2001,"endOffset":2011,"count":0},{"startOffset":2087,"endOffset":2097,"count":0},{"startOffset":2136,"endOffset":2157,"count":0}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/case-anything/dist/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3582,"count":1}],"isBlockCoverage":true},{"functionName":"getPartsAndIndexes","ranges":[{"startOffset":389,"endOffset":1070,"count":19},{"startOffset":599,"endOffset":904,"count":20},{"startOffset":658,"endOffset":667,"count":0},{"startOffset":975,"endOffset":1049,"count":0}],"isBlockCoverage":true},{"functionName":"splitAndPrefix","ranges":[{"startOffset":1310,"endOffset":3177,"count":19},{"startOffset":1426,"endOffset":1431,"count":0},{"startOffset":1568,"endOffset":1580,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1710,"endOffset":3148,"count":20},{"startOffset":1882,"endOffset":2049,"count":0},{"startOffset":2228,"endOffset":2242,"count":0},{"startOffset":2244,"endOffset":2346,"count":0},{"startOffset":2449,"endOffset":2557,"count":19},{"startOffset":2557,"endOffset":2591,"count":1},{"startOffset":2605,"endOffset":2615,"count":0},{"startOffset":2615,"endOffset":2772,"count":1},{"startOffset":2772,"endOffset":2902,"count":0},{"startOffset":2904,"endOffset":3133,"count":0}],"isBlockCoverage":true},{"functionName":"capitaliseWord","ranges":[{"startOffset":3307,"endOffset":3581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/onetime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1033,"count":1}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":101,"endOffset":778,"count":1},{"startOffset":170,"endOffset":220,"count":0}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":358,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"onetime.callCount","ranges":[{"startOffset":801,"endOffset":1006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/wrap-ansi/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"ansiRegex","ranges":[{"startOffset":15,"endOffset":457,"count":1},{"startOffset":436,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"276","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/signal-exit/dist/mjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9090,"count":1},{"startOffset":9028,"endOffset":9054,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":323,"endOffset":690,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":868,"endOffset":2172,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":1063,"endOffset":1354,"count":1},{"startOffset":1113,"endOffset":1165,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1359,"endOffset":1414,"count":1}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":1419,"endOffset":1778,"count":1},{"startOffset":1573,"endOffset":1604,"count":0},{"startOffset":1716,"endOffset":1772,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"signalExitWrap","ranges":[{"startOffset":2221,"endOffset":2470,"count":1}],"isBlockCoverage":true},{"functionName":"onExit","ranges":[{"startOffset":2257,"endOffset":2330,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":2340,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2403,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2526,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2573,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2588,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2603,"endOffset":8102,"count":1},{"startOffset":2808,"endOffset":2818,"count":0}],"isBlockCoverage":true},{"functionName":"SignalExit","ranges":[{"startOffset":3007,"endOffset":4931,"count":1},{"startOffset":3192,"endOffset":4813,"count":13}],"isBlockCoverage":true},{"functionName":"SignalExit.#sigListeners.<computed>","ranges":[{"startOffset":3232,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":4936,"endOffset":5529,"count":1},{"startOffset":5024,"endOffset":5065,"count":0},{"startOffset":5191,"endOffset":5203,"count":0},{"startOffset":5204,"endOffset":5217,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5045,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5277,"endOffset":5522,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":5534,"endOffset":6349,"count":1},{"startOffset":5569,"endOffset":5600,"count":0},{"startOffset":5939,"endOffset":6131,"count":13},{"startOffset":6108,"endOffset":6121,"count":0}],"isBlockCoverage":true},{"functionName":"#process.emit","ranges":[{"startOffset":6161,"endOffset":6234,"count":13}],"isBlockCoverage":true},{"functionName":"#process.reallyExit","ranges":[{"startOffset":6271,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":6354,"endOffset":7092,"count":1},{"startOffset":6392,"endOffset":6423,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6478,"endOffset":6926,"count":13},{"startOffset":6602,"endOffset":6693,"count":0},{"startOffset":6870,"endOffset":6883,"count":0}],"isBlockCoverage":true},{"functionName":"#processReallyExit","ranges":[{"startOffset":7097,"endOffset":7463,"count":0}],"isBlockCoverage":false},{"functionName":"#processEmit","ranges":[{"startOffset":7468,"endOffset":8100,"count":13},{"startOffset":7568,"endOffset":7595,"count":0},{"startOffset":7597,"endOffset":8013,"count":0}],"isBlockCoverage":true}]},{"scriptId":"277","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/signal-exit/dist/mjs/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1438,"count":1},{"startOffset":1338,"endOffset":1402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"278","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/mimic-function/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3038,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":21,"endOffset":887,"count":2},{"startOffset":280,"endOffset":307,"count":1},{"startOffset":309,"endOffset":577,"count":1},{"startOffset":579,"endOffset":593,"count":0},{"startOffset":593,"endOffset":790,"count":1},{"startOffset":790,"endOffset":814,"count":0},{"startOffset":816,"endOffset":830,"count":0},{"startOffset":830,"endOffset":886,"count":1}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":1091,"endOffset":1457,"count":1},{"startOffset":1197,"endOffset":1454,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1484,"endOffset":1662,"count":1},{"startOffset":1616,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1689,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":2221,"endOffset":2738,"count":1},{"startOffset":2273,"endOffset":2277,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFunction","ranges":[{"startOffset":2756,"endOffset":3037,"count":1},{"startOffset":2897,"endOffset":2960,"count":2}],"isBlockCoverage":true}]},{"scriptId":"279","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/reflect-metadata/Reflect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64201,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":813,"endOffset":64171,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":916,"endOffset":2233,"count":1},{"startOffset":1000,"endOffset":1196,"count":0},{"startOffset":1448,"endOffset":1495,"count":0}],"isBlockCoverage":true},{"functionName":"makeExporter","ranges":[{"startOffset":1504,"endOffset":1791,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1565,"endOffset":1780,"count":20},{"startOffset":1745,"endOffset":1766,"count":10}],"isBlockCoverage":true},{"functionName":"functionThis","ranges":[{"startOffset":1800,"endOffset":1944,"count":0}],"isBlockCoverage":false},{"functionName":"indirectEvalThis","ranges":[{"startOffset":1953,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"sloppyModeThis","ranges":[{"startOffset":2133,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2235,"endOffset":64167,"count":1},{"startOffset":2532,"endOffset":2549,"count":0},{"startOffset":2655,"endOffset":2669,"count":0},{"startOffset":2921,"endOffset":2938,"count":0},{"startOffset":3171,"endOffset":3333,"count":0},{"startOffset":3378,"endOffset":3433,"count":0},{"startOffset":3539,"endOffset":3617,"count":0},{"startOffset":3917,"endOffset":3938,"count":0},{"startOffset":4038,"endOffset":4059,"count":0},{"startOffset":4124,"endOffset":4149,"count":0},{"startOffset":4238,"endOffset":4249,"count":0}],"isBlockCoverage":true},{"functionName":"HashMap.create","ranges":[{"startOffset":3095,"endOffset":3154,"count":0}],"isBlockCoverage":false},{"functionName":"HashMap.create","ranges":[{"startOffset":3209,"endOffset":3268,"count":0}],"isBlockCoverage":false},{"functionName":"HashMap.create","ranges":[{"startOffset":3291,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"HashMap.has","ranges":[{"startOffset":3380,"endOffset":3433,"count":0}],"isBlockCoverage":false},{"functionName":"HashMap.has","ranges":[{"startOffset":3452,"endOffset":3494,"count":0}],"isBlockCoverage":false},{"functionName":"HashMap.get","ranges":[{"startOffset":3541,"endOffset":3617,"count":0}],"isBlockCoverage":false},{"functionName":"HashMap.get","ranges":[{"startOffset":3636,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"decorate","ranges":[{"startOffset":6139,"endOffset":7073,"count":14},{"startOffset":6311,"endOffset":6333,"count":0},{"startOffset":6393,"endOffset":6415,"count":0},{"startOffset":6486,"endOffset":6508,"count":0},{"startOffset":6530,"endOffset":6552,"count":0},{"startOffset":6613,"endOffset":6636,"count":0},{"startOffset":6794,"endOffset":7063,"count":0}],"isBlockCoverage":true},{"functionName":"metadata","ranges":[{"startOffset":8664,"endOffset":9114,"count":0}],"isBlockCoverage":false},{"functionName":"defineMetadata","ranges":[{"startOffset":10920,"endOffset":11274,"count":0}],"isBlockCoverage":false},{"functionName":"hasMetadata","ranges":[{"startOffset":12931,"endOffset":13246,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnMetadata","ranges":[{"startOffset":14866,"endOffset":15187,"count":0}],"isBlockCoverage":false},{"functionName":"getMetadata","ranges":[{"startOffset":16801,"endOffset":17116,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnMetadata","ranges":[{"startOffset":18716,"endOffset":19037,"count":0}],"isBlockCoverage":false},{"functionName":"getMetadataKeys","ranges":[{"startOffset":20430,"endOffset":20724,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnMetadataKeys","ranges":[{"startOffset":22118,"endOffset":22418,"count":0}],"isBlockCoverage":false},{"functionName":"deleteMetadata","ranges":[{"startOffset":24025,"endOffset":24686,"count":0}],"isBlockCoverage":false},{"functionName":"DecorateConstructor","ranges":[{"startOffset":24747,"endOffset":25234,"count":0}],"isBlockCoverage":false},{"functionName":"DecorateProperty","ranges":[{"startOffset":25243,"endOffset":25780,"count":14},{"startOffset":25546,"endOffset":25567,"count":0},{"startOffset":25569,"endOffset":25725,"count":0}],"isBlockCoverage":true},{"functionName":"OrdinaryHasMetadata","ranges":[{"startOffset":25923,"endOffset":26282,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryHasOwnMetadata","ranges":[{"startOffset":26431,"endOffset":26716,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryGetMetadata","ranges":[{"startOffset":26859,"endOffset":27259,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryGetOwnMetadata","ranges":[{"startOffset":27408,"endOffset":27676,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryDefineOwnMetadata","ranges":[{"startOffset":27846,"endOffset":28079,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryMetadataKeys","ranges":[{"startOffset":28211,"endOffset":29332,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryOwnMetadataKeys","ranges":[{"startOffset":29470,"endOffset":29721,"count":0}],"isBlockCoverage":false},{"functionName":"Type","ranges":[{"startOffset":29856,"endOffset":30403,"count":14},{"startOffset":29919,"endOffset":29939,"count":0},{"startOffset":29988,"endOffset":30031,"count":0},{"startOffset":30048,"endOffset":30087,"count":0},{"startOffset":30158,"endOffset":30195,"count":0},{"startOffset":30212,"endOffset":30249,"count":0},{"startOffset":30266,"endOffset":30331,"count":0},{"startOffset":30348,"endOffset":30379,"count":0}],"isBlockCoverage":true},{"functionName":"IsUndefined","ranges":[{"startOffset":30536,"endOffset":30607,"count":47}],"isBlockCoverage":true},{"functionName":"IsNull","ranges":[{"startOffset":30730,"endOffset":30791,"count":14}],"isBlockCoverage":true},{"functionName":"IsSymbol","ranges":[{"startOffset":30918,"endOffset":30992,"count":14}],"isBlockCoverage":true},{"functionName":"IsObject","ranges":[{"startOffset":31093,"endOffset":31206,"count":30},{"startOffset":31157,"endOffset":31169,"count":16},{"startOffset":31170,"endOffset":31195,"count":14}],"isBlockCoverage":true},{"functionName":"ToPrimitive","ranges":[{"startOffset":31422,"endOffset":32345,"count":14},{"startOffset":31518,"endOffset":31555,"count":0},{"startOffset":31572,"endOffset":31604,"count":0},{"startOffset":31621,"endOffset":31656,"count":0},{"startOffset":31724,"endOffset":31758,"count":0},{"startOffset":31775,"endOffset":31809,"count":0},{"startOffset":31823,"endOffset":31890,"count":0},{"startOffset":31891,"endOffset":31948,"count":0},{"startOffset":32062,"endOffset":32326,"count":0},{"startOffset":32327,"endOffset":32333,"count":0}],"isBlockCoverage":true},{"functionName":"OrdinaryToPrimitive","ranges":[{"startOffset":32469,"endOffset":33593,"count":0}],"isBlockCoverage":false},{"functionName":"ToBoolean","ranges":[{"startOffset":33701,"endOffset":33772,"count":0}],"isBlockCoverage":false},{"functionName":"ToString","ranges":[{"startOffset":33874,"endOffset":33947,"count":14}],"isBlockCoverage":true},{"functionName":"ToPropertyKey","ranges":[{"startOffset":34059,"endOffset":34257,"count":14},{"startOffset":34202,"endOffset":34213,"count":0}],"isBlockCoverage":true},{"functionName":"IsArray","ranges":[{"startOffset":34486,"endOffset":34777,"count":14},{"startOffset":34606,"endOffset":34766,"count":0}],"isBlockCoverage":true},{"functionName":"IsCallable","ranges":[{"startOffset":34882,"endOffset":35069,"count":0}],"isBlockCoverage":false},{"functionName":"IsConstructor","ranges":[{"startOffset":35180,"endOffset":35375,"count":0}],"isBlockCoverage":false},{"functionName":"IsPropertyKey","ranges":[{"startOffset":35486,"endOffset":35721,"count":0}],"isBlockCoverage":false},{"functionName":"SameValueZero","ranges":[{"startOffset":35730,"endOffset":35820,"count":0}],"isBlockCoverage":false},{"functionName":"GetMethod","ranges":[{"startOffset":36025,"endOffset":36276,"count":0}],"isBlockCoverage":false},{"functionName":"GetIterator","ranges":[{"startOffset":36409,"endOffset":36742,"count":0}],"isBlockCoverage":false},{"functionName":"IteratorValue","ranges":[{"startOffset":36860,"endOffset":36943,"count":0}],"isBlockCoverage":false},{"functionName":"IteratorStep","ranges":[{"startOffset":37052,"endOffset":37186,"count":0}],"isBlockCoverage":false},{"functionName":"IteratorClose","ranges":[{"startOffset":37309,"endOffset":37446,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryGetPrototypeOf","ranges":[{"startOffset":37736,"endOffset":39433,"count":0}],"isBlockCoverage":false},{"functionName":"CreateMetadataRegistry","ranges":[{"startOffset":39791,"endOffset":44495,"count":1},{"startOffset":40076,"endOffset":40262,"count":0}],"isBlockCoverage":true},{"functionName":"registerProvider","ranges":[{"startOffset":40605,"endOffset":41457,"count":1},{"startOffset":40695,"endOffset":40796,"count":0},{"startOffset":40849,"endOffset":40883,"count":0},{"startOffset":41022,"endOffset":41053,"count":0},{"startOffset":41074,"endOffset":41173,"count":0},{"startOffset":41194,"endOffset":41226,"count":0},{"startOffset":41247,"endOffset":41425,"count":0}],"isBlockCoverage":true},{"functionName":"getProviderNoCache","ranges":[{"startOffset":41470,"endOffset":42699,"count":0}],"isBlockCoverage":false},{"functionName":"getProvider","ranges":[{"startOffset":42712,"endOffset":43450,"count":0}],"isBlockCoverage":false},{"functionName":"hasProvider","ranges":[{"startOffset":43463,"endOffset":43705,"count":0}],"isBlockCoverage":false},{"functionName":"setProvider","ranges":[{"startOffset":43718,"endOffset":44485,"count":0}],"isBlockCoverage":false},{"functionName":"GetOrCreateMetadataRegistry","ranges":[{"startOffset":44598,"endOffset":45409,"count":1}],"isBlockCoverage":true},{"functionName":"CreateMetadataProvider","ranges":[{"startOffset":45418,"endOffset":50796,"count":1}],"isBlockCoverage":true},{"functionName":"isProviderFor","ranges":[{"startOffset":45719,"endOffset":45953,"count":0}],"isBlockCoverage":false},{"functionName":"GetOrCreateMetadataMap","ranges":[{"startOffset":46396,"endOffset":47529,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryHasOwnMetadata","ranges":[{"startOffset":47690,"endOffset":47982,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryGetOwnMetadata","ranges":[{"startOffset":48143,"endOffset":48428,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryDefineOwnMetadata","ranges":[{"startOffset":48610,"endOffset":48836,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryOwnMetadataKeys","ranges":[{"startOffset":48986,"endOffset":50034,"count":0}],"isBlockCoverage":false},{"functionName":"OrdinaryDeleteMetadata","ranges":[{"startOffset":50047,"endOffset":50786,"count":0}],"isBlockCoverage":false},{"functionName":"CreateFallbackProvider","ranges":[{"startOffset":50805,"endOffset":52208,"count":0}],"isBlockCoverage":false},{"functionName":"GetMetadataProvider","ranges":[{"startOffset":52444,"endOffset":52940,"count":0}],"isBlockCoverage":false},{"functionName":"CreateMapPolyfill","ranges":[{"startOffset":52975,"endOffset":58860,"count":0}],"isBlockCoverage":false},{"functionName":"CreateSetPolyfill","ranges":[{"startOffset":58895,"endOffset":60143,"count":0}],"isBlockCoverage":false},{"functionName":"CreateWeakMapPolyfill","ranges":[{"startOffset":60182,"endOffset":63938,"count":0}],"isBlockCoverage":false},{"functionName":"MakeDictionary","ranges":[{"startOffset":64038,"endOffset":64161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/wordwrap/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2231,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"wordwrap.hard","ranges":[{"startOffset":2150,"endOffset":2229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"281","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12874,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":12872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"283","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/src/table.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2673,"count":1}],"isBlockCoverage":true},{"functionName":"Table","ranges":[{"startOffset":148,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":995,"endOffset":2323,"count":0}],"isBlockCoverage":false},{"functionName":"get width","ranges":[{"startOffset":2327,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"Table.reset","ranges":[{"startOffset":2431,"endOffset":2450,"count":0}],"isBlockCoverage":false},{"functionName":"doDraw","ranges":[{"startOffset":2453,"endOffset":2647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":49,"endOffset":116,"count":0}],"isBlockCoverage":false},{"functionName":"debug.reset","ranges":[{"startOffset":183,"endOffset":209,"count":0}],"isBlockCoverage":false},{"functionName":"debug.setDebugLevel","ranges":[{"startOffset":234,"endOffset":257,"count":0}],"isBlockCoverage":false},{"functionName":"debug.warn","ranges":[{"startOffset":273,"endOffset":304,"count":0}],"isBlockCoverage":false},{"functionName":"debug.info","ranges":[{"startOffset":319,"endOffset":350,"count":0}],"isBlockCoverage":false},{"functionName":"debug.debug","ranges":[{"startOffset":366,"endOffset":398,"count":0}],"isBlockCoverage":false},{"functionName":"debug.debugMessages","ranges":[{"startOffset":423,"endOffset":437,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/src/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8251,"count":1}],"isBlockCoverage":true},{"functionName":"codeRegex","ranges":[{"startOffset":46,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"strlen","ranges":[{"startOffset":161,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":406,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":476,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"addToCodeCache","ranges":[{"startOffset":1015,"endOffset":1247,"count":5}],"isBlockCoverage":true},{"functionName":"updateState","ranges":[{"startOffset":1488,"endOffset":2228,"count":0}],"isBlockCoverage":false},{"functionName":"readState","ranges":[{"startOffset":2230,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"unwindState","ranges":[{"startOffset":2474,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"rewindState","ranges":[{"startOffset":3019,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"truncateWidth","ranges":[{"startOffset":3592,"endOffset":3807,"count":0}],"isBlockCoverage":false},{"functionName":"truncateWidthWithAnsi","ranges":[{"startOffset":3809,"endOffset":4553,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4555,"endOffset":4992,"count":0}],"isBlockCoverage":false},{"functionName":"defaultOptions","ranges":[{"startOffset":4994,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"mergeOptions","ranges":[{"startOffset":5630,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"wordWrap","ranges":[{"startOffset":5963,"endOffset":6672,"count":0}],"isBlockCoverage":false},{"functionName":"textWrap","ranges":[{"startOffset":6714,"endOffset":7186,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineWordWrap","ranges":[{"startOffset":7188,"endOffset":7496,"count":0}],"isBlockCoverage":false},{"functionName":"colorizeLines","ranges":[{"startOffset":7498,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"hyperlink","ranges":[{"startOffset":7860,"endOffset":8051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"290","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/src/layout-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7053,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":121,"endOffset":5171,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":137,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"layoutTable","ranges":[{"startOffset":255,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"maxWidth","ranges":[{"startOffset":945,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"maxHeight","ranges":[{"startOffset":1156,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"cellsConflict","ranges":[{"startOffset":1216,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"conflictExists","ranges":[{"startOffset":1717,"endOffset":2052,"count":0}],"isBlockCoverage":false},{"functionName":"allBlank","ranges":[{"startOffset":2056,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"addRowSpanCells","ranges":[{"startOffset":2237,"endOffset":2657,"count":0}],"isBlockCoverage":false},{"functionName":"addColSpanCells","ranges":[{"startOffset":2661,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"insertCell","ranges":[{"startOffset":3206,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"fillInTable","ranges":[{"startOffset":3356,"endOffset":4204,"count":0}],"isBlockCoverage":false},{"functionName":"generateCells","ranges":[{"startOffset":4208,"endOffset":4617,"count":0}],"isBlockCoverage":false},{"functionName":"makeTableLayout","ranges":[{"startOffset":4621,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"makeComputeWidths","ranges":[{"startOffset":5177,"endOffset":7052,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5252,"endOffset":7049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-table3/src/cell.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13666,"count":1}],"isBlockCoverage":true},{"functionName":"Cell","ranges":[{"startOffset":337,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"setOptions","ranges":[{"startOffset":590,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"mergeTableOptions","ranges":[{"startOffset":1374,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"computeLines","ranges":[{"startOffset":2307,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"wrapLines","ranges":[{"startOffset":3067,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":3675,"endOffset":4197,"count":0}],"isBlockCoverage":false},{"functionName":"draw","ranges":[{"startOffset":4659,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"drawTop","ranges":[{"startOffset":5868,"endOffset":6524,"count":0}],"isBlockCoverage":false},{"functionName":"_topLeftChar","ranges":[{"startOffset":6528,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWithStyleColors","ranges":[{"startOffset":7468,"endOffset":7897,"count":0}],"isBlockCoverage":false},{"functionName":"drawLine","ranges":[{"startOffset":8642,"endOffset":9663,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeLine","ranges":[{"startOffset":9667,"endOffset":9938,"count":0}],"isBlockCoverage":false},{"functionName":"drawBottom","ranges":[{"startOffset":10105,"endOffset":10395,"count":0}],"isBlockCoverage":false},{"functionName":"drawEmpty","ranges":[{"startOffset":10726,"endOffset":11312,"count":0}],"isBlockCoverage":false},{"functionName":"ColSpanCell","ranges":[{"startOffset":11480,"endOffset":11496,"count":0}],"isBlockCoverage":false},{"functionName":"draw","ranges":[{"startOffset":11500,"endOffset":11632,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":11636,"endOffset":11645,"count":0}],"isBlockCoverage":false},{"functionName":"mergeTableOptions","ranges":[{"startOffset":11649,"endOffset":11671,"count":0}],"isBlockCoverage":false},{"functionName":"RowSpanCell","ranges":[{"startOffset":11896,"endOffset":11965,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":11969,"endOffset":12177,"count":0}],"isBlockCoverage":false},{"functionName":"draw","ranges":[{"startOffset":12181,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"mergeTableOptions","ranges":[{"startOffset":12549,"endOffset":12571,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":12575,"endOffset":12677,"count":0}],"isBlockCoverage":false},{"functionName":"setOption","ranges":[{"startOffset":12699,"endOffset":13074,"count":0}],"isBlockCoverage":false},{"functionName":"findDimension","ranges":[{"startOffset":13076,"endOffset":13285,"count":0}],"isBlockCoverage":false},{"functionName":"sumPlusOne","ranges":[{"startOffset":13287,"endOffset":13336,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/pretty-hrtime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2362,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":254,"endOffset":2359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cli-boxes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":167,"count":1}],"isBlockCoverage":true}]},{"scriptId":"295","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/enquirer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6351,"count":1},{"startOffset":5858,"endOffset":6108,"count":38},{"startOffset":6027,"endOffset":6106,"count":19}],"isBlockCoverage":true},{"functionName":"Enquirer","ranges":[{"startOffset":479,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":1047,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":2121,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"ask","ranges":[{"startOffset":2464,"endOffset":3816,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":4247,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"set Prompt","ranges":[{"startOffset":4314,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"get Prompt","ranges":[{"startOffset":4366,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"get prompts","ranges":[{"startOffset":4440,"endOffset":4496,"count":0}],"isBlockCoverage":false},{"functionName":"set Prompt","ranges":[{"startOffset":4507,"endOffset":4556,"count":0}],"isBlockCoverage":false},{"functionName":"get Prompt","ranges":[{"startOffset":4566,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"get prompts","ranges":[{"startOffset":4647,"endOffset":4703,"count":1}],"isBlockCoverage":true},{"functionName":"get types","ranges":[{"startOffset":4714,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"get prompt","ranges":[{"startOffset":5383,"endOffset":5736,"count":38}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":5413,"endOffset":5674,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":5905,"endOffset":5948,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6079,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":6125,"endOffset":6202,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6172,"endOffset":6198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"296","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/enquirer/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7361,"count":1}],"isBlockCoverage":true},{"functionName":"exports.longest","ranges":[{"startOffset":359,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasColor","ranges":[{"startOffset":480,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isObject","ranges":[{"startOffset":555,"endOffset":638,"count":0}],"isBlockCoverage":false},{"functionName":"exports.nativeType","ranges":[{"startOffset":662,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAsyncFn","ranges":[{"startOffset":770,"endOffset":834,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isPrimitive","ranges":[{"startOffset":859,"endOffset":947,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resolve","ranges":[{"startOffset":968,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"exports.scrollDown","ranges":[{"startOffset":1122,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"exports.scrollUp","ranges":[{"startOffset":1194,"endOffset":1239,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reorder","ranges":[{"startOffset":1260,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"exports.swap","ranges":[{"startOffset":1452,"endOffset":1628,"count":0}],"isBlockCoverage":false},{"functionName":"exports.width","ranges":[{"startOffset":1647,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"exports.height","ranges":[{"startOffset":1960,"endOffset":2172,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wordWrap","ranges":[{"startOffset":2194,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unmute","ranges":[{"startOffset":2932,"endOffset":3180,"count":0}],"isBlockCoverage":false},{"functionName":"exports.pascal","ranges":[{"startOffset":3200,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"exports.inverse","ranges":[{"startOffset":3274,"endOffset":3653,"count":0}],"isBlockCoverage":false},{"functionName":"exports.complement","ranges":[{"startOffset":3677,"endOffset":4131,"count":0}],"isBlockCoverage":false},{"functionName":"exports.meridiem","ranges":[{"startOffset":4153,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"exports.set","ranges":[{"startOffset":4552,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"exports.get","ranges":[{"startOffset":4917,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"exports.mixin","ranges":[{"startOffset":5127,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"exports.merge","ranges":[{"startOffset":5891,"endOffset":5995,"count":0}],"isBlockCoverage":false},{"functionName":"exports.mixinEmitter","ranges":[{"startOffset":6021,"endOffset":6301,"count":39},{"startOffset":6124,"endOffset":6299,"count":702},{"startOffset":6187,"endOffset":6245,"count":585},{"startOffset":6245,"endOffset":6295,"count":117}],"isBlockCoverage":true},{"functionName":"onExit","ranges":[{"startOffset":6319,"endOffset":6487,"count":0}],"isBlockCoverage":false},{"functionName":"exports.onExit","ranges":[{"startOffset":6599,"endOffset":7019,"count":0}],"isBlockCoverage":false},{"functionName":"exports.define","ranges":[{"startOffset":7039,"endOffset":7110,"count":702}],"isBlockCoverage":true},{"functionName":"exports.defineExport","ranges":[{"startOffset":7136,"endOffset":7359,"count":43}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7257,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7299,"endOffset":7351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":32,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"hasColor","ranges":[{"startOffset":382,"endOffset":495,"count":1},{"startOffset":477,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":513,"endOffset":5843,"count":1}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":634,"endOffset":1300,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":857,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":1318,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"style","ranges":[{"startOffset":1453,"endOffset":1899,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":1919,"endOffset":2460,"count":42},{"startOffset":2026,"endOffset":2053,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2176,"endOffset":2231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2239,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4300,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4448,"endOffset":5212,"count":2},{"startOffset":4506,"endOffset":4521,"count":0},{"startOffset":4566,"endOffset":4677,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4922,"endOffset":4977,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4985,"endOffset":5200,"count":2},{"startOffset":5129,"endOffset":5158,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":5013,"endOffset":5047,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5232,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5467,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5662,"endOffset":5672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1618,"count":1},{"startOffset":1191,"endOffset":1196,"count":0},{"startOffset":1228,"endOffset":1233,"count":0},{"startOffset":1322,"endOffset":1333,"count":0},{"startOffset":1335,"endOffset":1344,"count":0}],"isBlockCoverage":true}]},{"scriptId":"299","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/enquirer/lib/prompts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":66,"endOffset":176,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":202,"endOffset":233,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":256,"endOffset":284,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":305,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":353,"endOffset":380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":398,"endOffset":421,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":440,"endOffset":464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":487,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":533,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":581,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":632,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":680,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":726,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":770,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":860,"endOffset":883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":903,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":946,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":989,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1032,"endOffset":1055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/secure-json-parse/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3736,"count":1}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":420,"endOffset":1815,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":1817,"endOffset":3084,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3086,"endOffset":3317,"count":0}],"isBlockCoverage":false},{"functionName":"safeParse","ranges":[{"startOffset":3319,"endOffset":3585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/safe-stable-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19873,"count":1}],"isBlockCoverage":true},{"functionName":"strEscape","ranges":[{"startOffset":688,"endOffset":913,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":915,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"isTypedArrayWithEntries","ranges":[{"startOffset":1683,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyTypedArray","ranges":[{"startOffset":1826,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"getCircularValueOption","ranges":[{"startOffset":2184,"endOffset":2819,"count":2},{"startOffset":2281,"endOffset":2793,"count":1},{"startOffset":2374,"endOffset":2415,"count":0},{"startOffset":2481,"endOffset":2544,"count":0},{"startOffset":2546,"endOffset":2793,"count":0},{"startOffset":2793,"endOffset":2818,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2571,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"getDeterministicOption","ranges":[{"startOffset":2821,"endOffset":3195,"count":2},{"startOffset":2930,"endOffset":3149,"count":1},{"startOffset":3001,"endOffset":3031,"count":0},{"startOffset":3033,"endOffset":3145,"count":0},{"startOffset":3179,"endOffset":3185,"count":1},{"startOffset":3186,"endOffset":3193,"count":1}],"isBlockCoverage":true},{"functionName":"getBooleanOption","ranges":[{"startOffset":3197,"endOffset":3488,"count":2},{"startOffset":3293,"endOffset":3442,"count":1},{"startOffset":3356,"endOffset":3438,"count":0},{"startOffset":3472,"endOffset":3478,"count":1},{"startOffset":3479,"endOffset":3486,"count":1}],"isBlockCoverage":true},{"functionName":"getPositiveIntegerOption","ranges":[{"startOffset":3490,"endOffset":3995,"count":4},{"startOffset":3594,"endOffset":3945,"count":0},{"startOffset":3986,"endOffset":3993,"count":0}],"isBlockCoverage":true},{"functionName":"getItemCount","ranges":[{"startOffset":3997,"endOffset":4104,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueReplacerSet","ranges":[{"startOffset":4106,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOption","ranges":[{"startOffset":4362,"endOffset":4863,"count":2},{"startOffset":4445,"endOffset":4861,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4629,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":4865,"endOffset":19872,"count":2},{"startOffset":4975,"endOffset":5138,"count":0},{"startOffset":5361,"endOffset":5376,"count":0}],"isBlockCoverage":true},{"functionName":"stringifyFnReplacer","ranges":[{"startOffset":5542,"endOffset":9205,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyArrayReplacer","ranges":[{"startOffset":9209,"endOffset":12107,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndent","ranges":[{"startOffset":12111,"endOffset":15825,"count":0}],"isBlockCoverage":false},{"functionName":"stringifySimple","ranges":[{"startOffset":15829,"endOffset":19094,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":19098,"endOffset":19850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/lodash/main.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18671,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":227,"endOffset":18658,"count":1},{"startOffset":12295,"endOffset":12329,"count":0},{"startOffset":12335,"endOffset":12366,"count":0},{"startOffset":12591,"endOffset":12611,"count":0},{"startOffset":13154,"endOffset":13157,"count":0},{"startOffset":13198,"endOffset":13201,"count":0},{"startOffset":13314,"endOffset":13317,"count":0},{"startOffset":13338,"endOffset":13341,"count":0},{"startOffset":13478,"endOffset":13481,"count":0},{"startOffset":13702,"endOffset":13705,"count":0},{"startOffset":13722,"endOffset":13725,"count":0},{"startOffset":13743,"endOffset":13746,"count":0},{"startOffset":15958,"endOffset":15961,"count":0},{"startOffset":16054,"endOffset":16057,"count":0},{"startOffset":16120,"endOffset":16123,"count":0},{"startOffset":16328,"endOffset":16592,"count":0},{"startOffset":17031,"endOffset":17100,"count":0},{"startOffset":17123,"endOffset":17127,"count":0},{"startOffset":17139,"endOffset":17141,"count":0},{"startOffset":17153,"endOffset":17155,"count":0},{"startOffset":17167,"endOffset":17169,"count":0},{"startOffset":18539,"endOffset":18619,"count":0},{"startOffset":18650,"endOffset":18657,"count":0}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":238,"endOffset":419,"count":2},{"startOffset":273,"endOffset":326,"count":0},{"startOffset":360,"endOffset":398,"count":0},{"startOffset":399,"endOffset":418,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":419,"endOffset":499,"count":6},{"startOffset":457,"endOffset":459,"count":0},{"startOffset":474,"endOffset":495,"count":17},{"startOffset":497,"endOffset":498,"count":17}],"isBlockCoverage":true},{"functionName":"n","ranges":[{"startOffset":499,"endOffset":607,"count":2},{"startOffset":537,"endOffset":539,"count":0},{"startOffset":565,"endOffset":598,"count":0}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":607,"endOffset":701,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":701,"endOffset":781,"count":2},{"startOffset":759,"endOffset":771,"count":0}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":781,"endOffset":827,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":802,"endOffset":826,"count":15}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":827,"endOffset":889,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":861,"endOffset":888,"count":7}],"isBlockCoverage":true},{"functionName":"i","ranges":[{"startOffset":889,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":903,"endOffset":1004,"count":2},{"startOffset":937,"endOffset":946,"count":0},{"startOffset":971,"endOffset":1003,"count":0}],"isBlockCoverage":true},{"functionName":"a","ranges":[{"startOffset":1004,"endOffset":1105,"count":5},{"startOffset":1038,"endOffset":1047,"count":0},{"startOffset":1072,"endOffset":1104,"count":0}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":1105,"endOffset":1206,"count":1},{"startOffset":1139,"endOffset":1148,"count":0},{"startOffset":1173,"endOffset":1205,"count":0}],"isBlockCoverage":true},{"functionName":"s","ranges":[{"startOffset":1206,"endOffset":1260,"count":5}],"isBlockCoverage":true},{"functionName":"b","ranges":[{"startOffset":1260,"endOffset":1605,"count":6},{"startOffset":1293,"endOffset":1300,"count":0},{"startOffset":1305,"endOffset":1316,"count":0},{"startOffset":1321,"endOffset":1336,"count":0},{"startOffset":1343,"endOffset":1352,"count":0},{"startOffset":1405,"endOffset":1415,"count":4},{"startOffset":1419,"endOffset":1429,"count":0},{"startOffset":1457,"endOffset":1596,"count":4},{"startOffset":1459,"endOffset":1474,"count":0},{"startOffset":1494,"endOffset":1522,"count":0},{"startOffset":1525,"endOffset":1574,"count":0},{"startOffset":1584,"endOffset":1595,"count":0}],"isBlockCoverage":true},{"functionName":"p","ranges":[{"startOffset":1605,"endOffset":1672,"count":13},{"startOffset":1643,"endOffset":1661,"count":9},{"startOffset":1652,"endOffset":1660,"count":0},{"startOffset":1661,"endOffset":1671,"count":4}],"isBlockCoverage":true},{"functionName":"h","ranges":[{"startOffset":1672,"endOffset":1751,"count":17},{"startOffset":1713,"endOffset":1740,"count":0}],"isBlockCoverage":true},{"functionName":"y","ranges":[{"startOffset":1751,"endOffset":1827,"count":24},{"startOffset":1791,"endOffset":1817,"count":11},{"startOffset":1808,"endOffset":1817,"count":9},{"startOffset":1817,"endOffset":1826,"count":15}],"isBlockCoverage":true},{"functionName":"j","ranges":[{"startOffset":1827,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":1866,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":1905,"endOffset":2015,"count":21},{"startOffset":1937,"endOffset":2007,"count":0}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":2015,"endOffset":2702,"count":23},{"startOffset":2067,"endOffset":2090,"count":0},{"startOffset":2098,"endOffset":2107,"count":0},{"startOffset":2117,"endOffset":2126,"count":17},{"startOffset":2126,"endOffset":2137,"count":6},{"startOffset":2137,"endOffset":2166,"count":4},{"startOffset":2152,"endOffset":2165,"count":0},{"startOffset":2166,"endOffset":2419,"count":2},{"startOffset":2250,"endOffset":2264,"count":0},{"startOffset":2287,"endOffset":2319,"count":0},{"startOffset":2330,"endOffset":2333,"count":0},{"startOffset":2344,"endOffset":2376,"count":0},{"startOffset":2377,"endOffset":2418,"count":0},{"startOffset":2419,"endOffset":2423,"count":6},{"startOffset":2423,"endOffset":2434,"count":4},{"startOffset":2446,"endOffset":2455,"count":0},{"startOffset":2455,"endOffset":2475,"count":6},{"startOffset":2475,"endOffset":2530,"count":0},{"startOffset":2530,"endOffset":2539,"count":6},{"startOffset":2539,"endOffset":2598,"count":0},{"startOffset":2598,"endOffset":2611,"count":6},{"startOffset":2607,"endOffset":2609,"count":0},{"startOffset":2611,"endOffset":2619,"count":0},{"startOffset":2623,"endOffset":2626,"count":4},{"startOffset":2626,"endOffset":2631,"count":2},{"startOffset":2642,"endOffset":2645,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2492,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2556,"endOffset":2594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2646,"endOffset":2698,"count":17},{"startOffset":2661,"endOffset":2675,"count":10}],"isBlockCoverage":true},{"functionName":"v","ranges":[{"startOffset":2702,"endOffset":2852,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":2852,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":2950,"endOffset":3000,"count":2},{"startOffset":2987,"endOffset":2989,"count":0}],"isBlockCoverage":true},{"functionName":"w","ranges":[{"startOffset":3000,"endOffset":3238,"count":27},{"startOffset":3025,"endOffset":3071,"count":0},{"startOffset":3099,"endOffset":3211,"count":5},{"startOffset":3152,"endOffset":3162,"count":0},{"startOffset":3184,"endOffset":3192,"count":0},{"startOffset":3211,"endOffset":3229,"count":22}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":3238,"endOffset":3283,"count":0}],"isBlockCoverage":false},{"functionName":"S","ranges":[{"startOffset":3283,"endOffset":3330,"count":0}],"isBlockCoverage":false},{"functionName":"z","ranges":[{"startOffset":3330,"endOffset":3387,"count":4}],"isBlockCoverage":true},{"functionName":"x","ranges":[{"startOffset":3387,"endOffset":3437,"count":0}],"isBlockCoverage":false},{"functionName":"k","ranges":[{"startOffset":3437,"endOffset":3487,"count":0}],"isBlockCoverage":false},{"functionName":"F","ranges":[{"startOffset":3487,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":3540,"endOffset":3658,"count":2},{"startOffset":3577,"endOffset":3657,"count":0}],"isBlockCoverage":true},{"functionName":"M","ranges":[{"startOffset":3658,"endOffset":4191,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3692,"endOffset":4186,"count":13},{"startOffset":3715,"endOffset":4112,"count":9},{"startOffset":3717,"endOffset":3728,"count":1},{"startOffset":3753,"endOffset":3756,"count":0},{"startOffset":3778,"endOffset":3781,"count":0},{"startOffset":3803,"endOffset":3812,"count":0},{"startOffset":3824,"endOffset":3842,"count":0},{"startOffset":3877,"endOffset":3884,"count":3},{"startOffset":3889,"endOffset":3900,"count":3},{"startOffset":3907,"endOffset":3913,"count":3},{"startOffset":3913,"endOffset":3989,"count":6},{"startOffset":3923,"endOffset":3989,"count":0},{"startOffset":3989,"endOffset":4060,"count":3},{"startOffset":3995,"endOffset":4002,"count":0},{"startOffset":4013,"endOffset":4021,"count":0},{"startOffset":4032,"endOffset":4039,"count":0},{"startOffset":4040,"endOffset":4051,"count":0},{"startOffset":4052,"endOffset":4060,"count":0},{"startOffset":4112,"endOffset":4185,"count":4},{"startOffset":4120,"endOffset":4159,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":4191,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"U","ranges":[{"startOffset":4251,"endOffset":4357,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":4357,"endOffset":4403,"count":2}],"isBlockCoverage":true},{"functionName":"D","ranges":[{"startOffset":4403,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":4607,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"B","ranges":[{"startOffset":4752,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":4988,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"R","ranges":[{"startOffset":5189,"endOffset":5293,"count":0}],"isBlockCoverage":false},{"functionName":"L","ranges":[{"startOffset":5293,"endOffset":5379,"count":0}],"isBlockCoverage":false},{"functionName":"T","ranges":[{"startOffset":5379,"endOffset":5468,"count":0}],"isBlockCoverage":false},{"functionName":"V","ranges":[{"startOffset":5468,"endOffset":5550,"count":0}],"isBlockCoverage":false},{"functionName":"W","ranges":[{"startOffset":5550,"endOffset":5681,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":5681,"endOffset":5717,"count":0}],"isBlockCoverage":false},{"functionName":"G","ranges":[{"startOffset":5717,"endOffset":5753,"count":0}],"isBlockCoverage":false},{"functionName":"q","ranges":[{"startOffset":5753,"endOffset":6101,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5776,"endOffset":6099,"count":2},{"startOffset":5817,"endOffset":5824,"count":0},{"startOffset":5833,"endOffset":5838,"count":0},{"startOffset":5854,"endOffset":5884,"count":0},{"startOffset":5895,"endOffset":6026,"count":0},{"startOffset":6031,"endOffset":6049,"count":0},{"startOffset":6077,"endOffset":6089,"count":1}],"isBlockCoverage":true},{"functionName":"H","ranges":[{"startOffset":6101,"endOffset":6133,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":6133,"endOffset":6175,"count":2}],"isBlockCoverage":true},{"functionName":"K","ranges":[{"startOffset":6175,"endOffset":6207,"count":2}],"isBlockCoverage":true},{"functionName":"Q","ranges":[{"startOffset":6207,"endOffset":6239,"count":0}],"isBlockCoverage":false},{"functionName":"X","ranges":[{"startOffset":6239,"endOffset":6412,"count":0}],"isBlockCoverage":false},{"functionName":"Y","ranges":[{"startOffset":6412,"endOffset":6511,"count":7},{"startOffset":6441,"endOffset":6444,"count":0},{"startOffset":6467,"endOffset":6478,"count":0},{"startOffset":6488,"endOffset":6491,"count":0},{"startOffset":6507,"endOffset":6510,"count":0}],"isBlockCoverage":true},{"functionName":"Z","ranges":[{"startOffset":6511,"endOffset":6709,"count":0}],"isBlockCoverage":false},{"functionName":"tt","ranges":[{"startOffset":6709,"endOffset":6851,"count":4},{"startOffset":6770,"endOffset":6793,"count":3},{"startOffset":6793,"endOffset":6813,"count":1},{"startOffset":6813,"endOffset":6848,"count":0}],"isBlockCoverage":true},{"functionName":"et","ranges":[{"startOffset":6851,"endOffset":6926,"count":2},{"startOffset":6912,"endOffset":6915,"count":0}],"isBlockCoverage":true},{"functionName":"nt","ranges":[{"startOffset":6926,"endOffset":7714,"count":0}],"isBlockCoverage":false},{"functionName":"rt","ranges":[{"startOffset":7714,"endOffset":7767,"count":0}],"isBlockCoverage":false},{"functionName":"ut","ranges":[{"startOffset":7767,"endOffset":7898,"count":4},{"startOffset":7815,"endOffset":7832,"count":0}],"isBlockCoverage":true},{"functionName":"ot","ranges":[{"startOffset":7898,"endOffset":7987,"count":8},{"startOffset":7981,"endOffset":7985,"count":0}],"isBlockCoverage":true},{"functionName":"ct","ranges":[{"startOffset":7987,"endOffset":8196,"count":4},{"startOffset":8035,"endOffset":8037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8041,"endOffset":8195,"count":2}],"isBlockCoverage":true},{"functionName":"it","ranges":[{"startOffset":8196,"endOffset":8290,"count":0}],"isBlockCoverage":false},{"functionName":"ft","ranges":[{"startOffset":8290,"endOffset":8370,"count":12},{"startOffset":8339,"endOffset":8369,"count":0}],"isBlockCoverage":true},{"functionName":"at","ranges":[{"startOffset":8370,"endOffset":8422,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":8422,"endOffset":8481,"count":0}],"isBlockCoverage":false},{"functionName":"st","ranges":[{"startOffset":8481,"endOffset":8764,"count":1},{"startOffset":8687,"endOffset":8730,"count":0}],"isBlockCoverage":true},{"functionName":"n","ranges":[{"startOffset":8498,"endOffset":8632,"count":0}],"isBlockCoverage":false},{"functionName":"bt","ranges":[{"startOffset":8764,"endOffset":8808,"count":24},{"startOffset":8793,"endOffset":8807,"count":6},{"startOffset":8800,"endOffset":8807,"count":0}],"isBlockCoverage":true},{"functionName":"pt","ranges":[{"startOffset":8808,"endOffset":8860,"count":12},{"startOffset":8851,"endOffset":8859,"count":6}],"isBlockCoverage":true},{"functionName":"ht","ranges":[{"startOffset":8860,"endOffset":8895,"count":0}],"isBlockCoverage":false},{"functionName":"yt","ranges":[{"startOffset":8895,"endOffset":9040,"count":13},{"startOffset":8955,"endOffset":9038,"count":6}],"isBlockCoverage":true},{"functionName":"jt","ranges":[{"startOffset":9040,"endOffset":9116,"count":12},{"startOffset":9080,"endOffset":9115,"count":6}],"isBlockCoverage":true},{"functionName":"_t","ranges":[{"startOffset":9116,"endOffset":9192,"count":65},{"startOffset":9175,"endOffset":9190,"count":35}],"isBlockCoverage":true},{"functionName":"dt","ranges":[{"startOffset":9192,"endOffset":9242,"count":7}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":9242,"endOffset":9416,"count":3}],"isBlockCoverage":true},{"functionName":"vt","ranges":[{"startOffset":9416,"endOffset":9497,"count":0}],"isBlockCoverage":false},{"functionName":"At","ranges":[{"startOffset":9497,"endOffset":9570,"count":0}],"isBlockCoverage":false},{"functionName":"mt","ranges":[{"startOffset":9570,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"wt","ranges":[{"startOffset":9603,"endOffset":9643,"count":0}],"isBlockCoverage":false},{"functionName":"Ot","ranges":[{"startOffset":9643,"endOffset":9685,"count":0}],"isBlockCoverage":false},{"functionName":"St","ranges":[{"startOffset":9685,"endOffset":9723,"count":2},{"startOffset":9712,"endOffset":9717,"count":0}],"isBlockCoverage":true},{"functionName":"zt","ranges":[{"startOffset":9723,"endOffset":9919,"count":10},{"startOffset":9747,"endOffset":9759,"count":6},{"startOffset":9759,"endOffset":9910,"count":4},{"startOffset":9804,"endOffset":9852,"count":9},{"startOffset":9821,"endOffset":9839,"count":0},{"startOffset":9856,"endOffset":9910,"count":0}],"isBlockCoverage":true},{"functionName":"xt","ranges":[{"startOffset":9919,"endOffset":9962,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9941,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"kt","ranges":[{"startOffset":9962,"endOffset":9986,"count":2}],"isBlockCoverage":true},{"functionName":"Ft","ranges":[{"startOffset":9986,"endOffset":10009,"count":0}],"isBlockCoverage":false},{"functionName":"It","ranges":[{"startOffset":10009,"endOffset":10036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12673,"endOffset":12729,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12693,"endOffset":12728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12862,"endOffset":12959,"count":1},{"startOffset":12895,"endOffset":12922,"count":0},{"startOffset":12936,"endOffset":12955,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13345,"endOffset":13426,"count":1},{"startOffset":13415,"endOffset":13425,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13750,"endOffset":13863,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":13761,"endOffset":13775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13782,"endOffset":13862,"count":2},{"startOffset":13815,"endOffset":13859,"count":0}],"isBlockCoverage":true},{"functionName":"f.clear","ranges":[{"startOffset":13884,"endOffset":13936,"count":2},{"startOffset":13920,"endOffset":13923,"count":0}],"isBlockCoverage":true},{"functionName":"f.delete","ranges":[{"startOffset":13956,"endOffset":14033,"count":0}],"isBlockCoverage":false},{"functionName":"f.get","ranges":[{"startOffset":14050,"endOffset":14159,"count":0}],"isBlockCoverage":false},{"functionName":"f.has","ranges":[{"startOffset":14176,"endOffset":14241,"count":0}],"isBlockCoverage":false},{"functionName":"f.set","ranges":[{"startOffset":14258,"endOffset":14378,"count":0}],"isBlockCoverage":false},{"functionName":"a.clear","ranges":[{"startOffset":14397,"endOffset":14437,"count":5}],"isBlockCoverage":true},{"functionName":"a.delete","ranges":[{"startOffset":14457,"endOffset":14569,"count":9},{"startOffset":14535,"endOffset":14550,"count":0}],"isBlockCoverage":true},{"functionName":"a.get","ranges":[{"startOffset":14586,"endOffset":14649,"count":15},{"startOffset":14640,"endOffset":14648,"count":0}],"isBlockCoverage":true},{"functionName":"a.has","ranges":[{"startOffset":14666,"endOffset":14706,"count":0}],"isBlockCoverage":false},{"functionName":"a.set","ranges":[{"startOffset":14723,"endOffset":14820,"count":0}],"isBlockCoverage":false},{"functionName":"l.clear","ranges":[{"startOffset":14839,"endOffset":14918,"count":1},{"startOffset":14899,"endOffset":14902,"count":0}],"isBlockCoverage":true},{"functionName":"l.delete","ranges":[{"startOffset":14938,"endOffset":14998,"count":0}],"isBlockCoverage":false},{"functionName":"l.get","ranges":[{"startOffset":15015,"endOffset":15051,"count":0}],"isBlockCoverage":false},{"functionName":"l.has","ranges":[{"startOffset":15068,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"l.set","ranges":[{"startOffset":15121,"endOffset":15208,"count":0}],"isBlockCoverage":false},{"functionName":"s.clear","ranges":[{"startOffset":15227,"endOffset":15270,"count":0}],"isBlockCoverage":false},{"functionName":"s.delete","ranges":[{"startOffset":15290,"endOffset":15362,"count":9}],"isBlockCoverage":true},{"functionName":"s.get","ranges":[{"startOffset":15379,"endOffset":15420,"count":15}],"isBlockCoverage":true},{"functionName":"s.has","ranges":[{"startOffset":15437,"endOffset":15477,"count":0}],"isBlockCoverage":false},{"functionName":"s.set","ranges":[{"startOffset":15494,"endOffset":15695,"count":15},{"startOffset":15630,"endOffset":15694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15703,"endOffset":15847,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15722,"endOffset":15846,"count":10},{"startOffset":15790,"endOffset":15837,"count":13},{"startOffset":15800,"endOffset":15802,"count":0},{"startOffset":15831,"endOffset":15836,"count":0}],"isBlockCoverage":true},{"functionName":"Ge","ranges":[{"startOffset":15856,"endOffset":15958,"count":4}],"isBlockCoverage":true},{"functionName":"qe","ranges":[{"startOffset":15968,"endOffset":16054,"count":2},{"startOffset":15994,"endOffset":15997,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16019,"endOffset":16051,"count":0}],"isBlockCoverage":false},{"functionName":"He","ranges":[{"startOffset":16064,"endOffset":16120,"count":0}],"isBlockCoverage":false},{"functionName":"Je","ranges":[{"startOffset":16334,"endOffset":16591,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16600,"endOffset":16747,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16631,"endOffset":16746,"count":4},{"startOffset":16675,"endOffset":16708,"count":3},{"startOffset":16688,"endOffset":16707,"count":0},{"startOffset":16708,"endOffset":16717,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16755,"endOffset":16844,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16774,"endOffset":16819,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16845,"endOffset":16976,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16998,"endOffset":17026,"count":1}],"isBlockCoverage":true},{"functionName":"Xe","ranges":[{"startOffset":17032,"endOffset":17100,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17175,"endOffset":17200,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17207,"endOffset":17236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17243,"endOffset":17425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17432,"endOffset":17472,"count":0}],"isBlockCoverage":false},{"functionName":"i.set","ranges":[{"startOffset":17588,"endOffset":17630,"count":0}],"isBlockCoverage":false},{"functionName":"i.toPath","ranges":[{"startOffset":17640,"endOffset":17696,"count":0}],"isBlockCoverage":false},{"functionName":"i.unset","ranges":[{"startOffset":17724,"endOffset":17761,"count":0}],"isBlockCoverage":false},{"functionName":"i.clone","ranges":[{"startOffset":17770,"endOffset":17796,"count":0}],"isBlockCoverage":false},{"functionName":"i.cloneDeep","ranges":[{"startOffset":17809,"endOffset":17835,"count":6}],"isBlockCoverage":true},{"functionName":"i.get","ranges":[{"startOffset":17850,"endOffset":17904,"count":0}],"isBlockCoverage":false},{"functionName":"i.has","ranges":[{"startOffset":17911,"endOffset":17952,"count":0}],"isBlockCoverage":false},{"functionName":"i.size","ranges":[{"startOffset":18258,"endOffset":18480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18597,"endOffset":18617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":205,"endOffset":812,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":804,"count":42}],"isBlockCoverage":true},{"functionName":"natives","ranges":[{"startOffset":816,"endOffset":1119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fastest-levenshtein/mod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3778,"count":1}],"isBlockCoverage":true},{"functionName":"myers_32","ranges":[{"startOffset":137,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"myers_x","ranges":[{"startOffset":825,"endOffset":3130,"count":0}],"isBlockCoverage":false},{"functionName":"distance","ranges":[{"startOffset":3147,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"closest","ranges":[{"startOffset":3447,"endOffset":3749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":941,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1598,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":3612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/slugify/slugify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8417,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3,"endOffset":301,"count":1},{"startOffset":149,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":319,"endOffset":8414,"count":2}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":6995,"endOffset":8309,"count":0}],"isBlockCoverage":false},{"functionName":"replace.extend","ranges":[{"startOffset":8330,"endOffset":8394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/truncatise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7961,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7952,"count":1},{"startOffset":7867,"endOffset":7951,"count":0}],"isBlockCoverage":true},{"functionName":"truncatise","ranges":[{"startOffset":1166,"endOffset":7735,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/pluralize/pluralize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12617,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22,"endOffset":464,"count":1},{"startOffset":230,"endOffset":462,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":343,"endOffset":388,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":472,"endOffset":12614,"count":1}],"isBlockCoverage":true},{"functionName":"sanitizeRule","ranges":[{"startOffset":916,"endOffset":1058,"count":64},{"startOffset":981,"endOffset":1036,"count":1},{"startOffset":1036,"endOffset":1057,"count":63}],"isBlockCoverage":true},{"functionName":"restoreCase","ranges":[{"startOffset":1260,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"interpolate","ranges":[{"startOffset":1955,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":2229,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeWord","ranges":[{"startOffset":2713,"endOffset":3130,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWord","ranges":[{"startOffset":3315,"endOffset":3919,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3378,"endOffset":3914,"count":0}],"isBlockCoverage":false},{"functionName":"checkWord","ranges":[{"startOffset":3976,"endOffset":4281,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4043,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"pluralize","ranges":[{"startOffset":4588,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"pluralize.addPluralRule","ranges":[{"startOffset":5605,"endOffset":5696,"count":33}],"isBlockCoverage":true},{"functionName":"pluralize.addSingularRule","ranges":[{"startOffset":5874,"endOffset":5967,"count":31}],"isBlockCoverage":true},{"functionName":"pluralize.addUncountableRule","ranges":[{"startOffset":6090,"endOffset":6355,"count":102},{"startOffset":6142,"endOffset":6210,"count":94},{"startOffset":6210,"endOffset":6354,"count":8}],"isBlockCoverage":true},{"functionName":"pluralize.addIrregularRule","ranges":[{"startOffset":6501,"endOffset":6681,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8063,"endOffset":8141,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9374,"endOffset":9449,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10747,"endOffset":10824,"count":23}],"isBlockCoverage":true}]},{"scriptId":"309","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/jsonschema/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":629,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.validate","ranges":[{"startOffset":512,"endOffset":627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/jsonschema/lib/validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10459,"count":1}],"isBlockCoverage":true},{"functionName":"Validator","ranges":[{"startOffset":511,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":1400,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"addSubSchemaArray","ranges":[{"startOffset":2066,"endOffset":2239,"count":0}],"isBlockCoverage":false},{"functionName":"addSubSchemaArray","ranges":[{"startOffset":2283,"endOffset":2455,"count":0}],"isBlockCoverage":false},{"functionName":"setSchemas","ranges":[{"startOffset":2570,"endOffset":2629,"count":0}],"isBlockCoverage":false},{"functionName":"getSchema","ranges":[{"startOffset":2725,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2964,"endOffset":4293,"count":0}],"isBlockCoverage":false},{"functionName":"shouldResolve","ranges":[{"startOffset":4362,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"validateSchema","ranges":[{"startOffset":4741,"endOffset":6903,"count":0}],"isBlockCoverage":false},{"functionName":"schemaTraverser","ranges":[{"startOffset":7056,"endOffset":7194,"count":0}],"isBlockCoverage":false},{"functionName":"superResolve","ranges":[{"startOffset":7344,"endOffset":7504,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7731,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"validateType","ranges":[{"startOffset":8850,"endOffset":9417,"count":0}],"isBlockCoverage":false},{"functionName":"testString","ranges":[{"startOffset":9479,"endOffset":9551,"count":0}],"isBlockCoverage":false},{"functionName":"testNumber","ranges":[{"startOffset":9568,"endOffset":9723,"count":0}],"isBlockCoverage":false},{"functionName":"testInteger","ranges":[{"startOffset":9741,"endOffset":9838,"count":0}],"isBlockCoverage":false},{"functionName":"testBoolean","ranges":[{"startOffset":9856,"endOffset":9930,"count":0}],"isBlockCoverage":false},{"functionName":"testArray","ranges":[{"startOffset":9946,"endOffset":10013,"count":0}],"isBlockCoverage":false},{"functionName":"testNull","ranges":[{"startOffset":10031,"endOffset":10091,"count":0}],"isBlockCoverage":false},{"functionName":"testDate","ranges":[{"startOffset":10106,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"testAny","ranges":[{"startOffset":10187,"endOffset":10233,"count":0}],"isBlockCoverage":false},{"functionName":"testObject","ranges":[{"startOffset":10250,"endOffset":10428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/jsonschema/lib/attribute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30997,"count":1}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":786,"endOffset":1431,"count":0}],"isBlockCoverage":false},{"functionName":"testSchemaNoThrow","ranges":[{"startOffset":1434,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"validateAnyOf","ranges":[{"startOffset":2063,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"validateAllOf","ranges":[{"startOffset":3215,"endOffset":4117,"count":0}],"isBlockCoverage":false},{"functionName":"validateOneOf","ranges":[{"startOffset":4315,"endOffset":5291,"count":0}],"isBlockCoverage":false},{"functionName":"validateIf","ranges":[{"startOffset":5484,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableProperty","ranges":[{"startOffset":6448,"endOffset":6937,"count":0}],"isBlockCoverage":false},{"functionName":"validatePropertyNames","ranges":[{"startOffset":7110,"endOffset":7743,"count":0}],"isBlockCoverage":false},{"functionName":"validateProperties","ranges":[{"startOffset":7911,"endOffset":8820,"count":0}],"isBlockCoverage":false},{"functionName":"testAdditionalProperty","ranges":[{"startOffset":9184,"endOffset":10129,"count":0}],"isBlockCoverage":false},{"functionName":"validatePatternProperties","ranges":[{"startOffset":10310,"endOffset":11748,"count":0}],"isBlockCoverage":false},{"functionName":"validateAdditionalProperties","ranges":[{"startOffset":11936,"endOffset":12406,"count":0}],"isBlockCoverage":false},{"functionName":"validateMinProperties","ranges":[{"startOffset":12615,"endOffset":13079,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxProperties","ranges":[{"startOffset":13287,"endOffset":13751,"count":0}],"isBlockCoverage":false},{"functionName":"validateItems","ranges":[{"startOffset":13935,"endOffset":14828,"count":0}],"isBlockCoverage":false},{"functionName":"validateContains","ranges":[{"startOffset":15006,"endOffset":15729,"count":0}],"isBlockCoverage":false},{"functionName":"validateMinimum","ranges":[{"startOffset":15913,"endOffset":16592,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaximum","ranges":[{"startOffset":16776,"endOffset":17449,"count":0}],"isBlockCoverage":false},{"functionName":"validateExclusiveMinimum","ranges":[{"startOffset":17649,"endOffset":18249,"count":0}],"isBlockCoverage":false},{"functionName":"validateExclusiveMaximum","ranges":[{"startOffset":18449,"endOffset":19046,"count":0}],"isBlockCoverage":false},{"functionName":"validateMultipleOfOrDivisbleBy","ranges":[{"startOffset":19290,"endOffset":20185,"count":0}],"isBlockCoverage":false},{"functionName":"validateMultipleOf","ranges":[{"startOffset":20355,"endOffset":20557,"count":0}],"isBlockCoverage":false},{"functionName":"validateDivisibleBy","ranges":[{"startOffset":20727,"endOffset":20929,"count":0}],"isBlockCoverage":false},{"functionName":"validateRequired","ranges":[{"startOffset":21075,"endOffset":21818,"count":0}],"isBlockCoverage":false},{"functionName":"validatePattern","ranges":[{"startOffset":22020,"endOffset":22668,"count":0}],"isBlockCoverage":false},{"functionName":"validateFormat","ranges":[{"startOffset":23113,"endOffset":23551,"count":0}],"isBlockCoverage":false},{"functionName":"validateMinLength","ranges":[{"startOffset":23756,"endOffset":24255,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxLength","ranges":[{"startOffset":24459,"endOffset":25052,"count":0}],"isBlockCoverage":false},{"functionName":"validateMinItems","ranges":[{"startOffset":25252,"endOffset":25649,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxItems","ranges":[{"startOffset":25853,"endOffset":26250,"count":0}],"isBlockCoverage":false},{"functionName":"testArrays","ranges":[{"startOffset":26369,"endOffset":26557,"count":0}],"isBlockCoverage":false},{"functionName":"validateUniqueItems","ranges":[{"startOffset":26713,"endOffset":27087,"count":0}],"isBlockCoverage":false},{"functionName":"validateDependencies","ranges":[{"startOffset":27311,"endOffset":28774,"count":0}],"isBlockCoverage":false},{"functionName":"validateEnum","ranges":[{"startOffset":28952,"endOffset":29501,"count":0}],"isBlockCoverage":false},{"functionName":"validateEnum","ranges":[{"startOffset":29671,"endOffset":30097,"count":0}],"isBlockCoverage":false},{"functionName":"validateNot","ranges":[{"startOffset":30308,"endOffset":30966,"count":0}],"isBlockCoverage":false}]},{"scriptId":"312","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/jsonschema/lib/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17217,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationError","ranges":[{"startOffset":90,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":714,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"ValidatorResult","ranges":[{"startOffset":833,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"addError","ranges":[{"startOffset":1310,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"importErrors","ranges":[{"startOffset":1983,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"stringizer","ranges":[{"startOffset":2190,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2291,"endOffset":2364,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2432,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"ValidatorResultError","ranges":[{"startOffset":2542,"endOffset":2805,"count":0}],"isBlockCoverage":false},{"functionName":"SchemaError","ranges":[{"startOffset":3141,"endOffset":3296,"count":0}],"isBlockCoverage":false},{"functionName":"SchemaContext","ranges":[{"startOffset":3519,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":3923,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"makeChild","ranges":[{"startOffset":4032,"endOffset":4420,"count":0}],"isBlockCoverage":false},{"functionName":"utc-millisec","ranges":[{"startOffset":11430,"endOffset":11554,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":11586,"endOffset":11731,"count":0}],"isBlockCoverage":false},{"functionName":"isFormat","ranges":[{"startOffset":12655,"endOffset":13177,"count":0}],"isBlockCoverage":false},{"functionName":"makeSuffix","ranges":[{"startOffset":13218,"endOffset":13703,"count":0}],"isBlockCoverage":false},{"functionName":"deepCompareStrict","ranges":[{"startOffset":13734,"endOffset":14379,"count":0}],"isBlockCoverage":false},{"functionName":"deepMerger","ranges":[{"startOffset":14382,"endOffset":14570,"count":0}],"isBlockCoverage":false},{"functionName":"copyist","ranges":[{"startOffset":14572,"endOffset":14631,"count":0}],"isBlockCoverage":false},{"functionName":"copyistWithDeepMerge","ranges":[{"startOffset":14633,"endOffset":14904,"count":0}],"isBlockCoverage":false},{"functionName":"deepMerge","ranges":[{"startOffset":14906,"endOffset":15366,"count":0}],"isBlockCoverage":false},{"functionName":"objectGetPath","ranges":[{"startOffset":15632,"endOffset":15888,"count":0}],"isBlockCoverage":false},{"functionName":"pathEncoder","ranges":[{"startOffset":15891,"endOffset":15975,"count":0}],"isBlockCoverage":false},{"functionName":"encodePointer","ranges":[{"startOffset":16119,"endOffset":16281,"count":0}],"isBlockCoverage":false},{"functionName":"getDecimalPlaces","ranges":[{"startOffset":16562,"endOffset":17094,"count":0}],"isBlockCoverage":false},{"functionName":"isSchema","ranges":[{"startOffset":17116,"endOffset":17214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"313","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/jsonschema/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2695,"count":1}],"isBlockCoverage":true},{"functionName":"SchemaScanResult","ranges":[{"startOffset":133,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":370,"endOffset":2693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1171,"count":1},{"startOffset":591,"endOffset":672,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":272,"endOffset":589,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":594,"endOffset":671,"count":0}],"isBlockCoverage":true},{"functionName":"__exportStar","ranges":[{"startOffset":725,"endOffset":876,"count":1},{"startOffset":769,"endOffset":874,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1128,"endOffset":1166,"count":1}],"isBlockCoverage":true}]},{"scriptId":"315","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/contracts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":261,"count":1}],"isBlockCoverage":true}]},{"scriptId":"316","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/schema/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":575,"count":1}],"isBlockCoverage":true}]},{"scriptId":"317","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/schema/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1369,"count":1}],"isBlockCoverage":true},{"functionName":"castToNumber","ranges":[{"startOffset":414,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":839,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"optionalNumber","ranges":[{"startOffset":1160,"endOffset":1367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/schema/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":780,"count":1}],"isBlockCoverage":true},{"functionName":"ensureValue","ranges":[{"startOffset":598,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/schema/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2187,"count":1}],"isBlockCoverage":true},{"functionName":"email","ranges":[{"startOffset":491,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":759,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"url","ranges":[{"startOffset":1111,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":1536,"endOffset":1801,"count":0}],"isBlockCoverage":false},{"functionName":"optionalString","ranges":[{"startOffset":1916,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/schema/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1366,"count":1}],"isBlockCoverage":true},{"functionName":"castToBoolean","ranges":[{"startOffset":372,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":838,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"optionalBoolean","ranges":[{"startOffset":1155,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/validator-lite/build/src/schema/oneOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1938,"count":1}],"isBlockCoverage":true},{"functionName":"ensureOneOf","ranges":[{"startOffset":622,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":1389,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"optionalEnum","ranges":[{"startOffset":1714,"endOffset":1936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/dotenv/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9972,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":382,"endOffset":1161,"count":2},{"startOffset":622,"endOffset":1145,"count":7},{"startOffset":725,"endOffset":730,"count":0},{"startOffset":1007,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_parseVault","ranges":[{"startOffset":1163,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":2302,"endOffset":2383,"count":0}],"isBlockCoverage":false},{"functionName":"_warn","ranges":[{"startOffset":2385,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":2469,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"_dotenvKey","ranges":[{"startOffset":2555,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"_instructions","ranges":[{"startOffset":2981,"endOffset":4260,"count":0}],"isBlockCoverage":false},{"functionName":"_vaultPath","ranges":[{"startOffset":4262,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveHome","ranges":[{"startOffset":4911,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"_configVault","ranges":[{"startOffset":5030,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"configDotenv","ranges":[{"startOffset":5361,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":7000,"endOffset":7509,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":7511,"endOffset":8582,"count":0}],"isBlockCoverage":false},{"functionName":"populate","ranges":[{"startOffset":8627,"endOffset":9479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1614,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":352,"endOffset":988,"count":2},{"startOffset":525,"endOffset":550,"count":0},{"startOffset":552,"endOffset":598,"count":0},{"startOffset":700,"endOffset":723,"count":0},{"startOffset":844,"endOffset":882,"count":4}],"isBlockCoverage":true},{"functionName":"isEnclosure","ranges":[{"startOffset":991,"endOffset":1396,"count":2},{"startOffset":1100,"endOffset":1150,"count":0},{"startOffset":1155,"endOffset":1205,"count":0},{"startOffset":1242,"endOffset":1395,"count":0}],"isBlockCoverage":true},{"functionName":"isGlobby","ranges":[{"startOffset":1398,"endOffset":1613,"count":4},{"startOffset":1452,"endOffset":1474,"count":0},{"startOffset":1515,"endOffset":1537,"count":0},{"startOffset":1567,"endOffset":1589,"count":0}],"isBlockCoverage":true}]},{"scriptId":"324","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":4},{"startOffset":285,"endOffset":307,"count":0},{"startOffset":488,"endOffset":2727,"count":56},{"startOffset":518,"endOffset":544,"count":2},{"startOffset":544,"endOffset":577,"count":54},{"startOffset":577,"endOffset":606,"count":0},{"startOffset":608,"endOffset":634,"count":0},{"startOffset":634,"endOffset":689,"count":54},{"startOffset":690,"endOffset":715,"count":0},{"startOffset":717,"endOffset":1133,"count":0},{"startOffset":1133,"endOffset":1187,"count":54},{"startOffset":1188,"endOffset":1213,"count":0},{"startOffset":1215,"endOffset":1473,"count":0},{"startOffset":1473,"endOffset":1527,"count":54},{"startOffset":1528,"endOffset":1553,"count":0},{"startOffset":1554,"endOffset":1585,"count":0},{"startOffset":1586,"endOffset":1611,"count":0},{"startOffset":1613,"endOffset":1871,"count":0},{"startOffset":1871,"endOffset":1919,"count":54},{"startOffset":1920,"endOffset":1945,"count":0},{"startOffset":1947,"endOffset":2383,"count":0},{"startOffset":2383,"endOffset":2414,"count":54},{"startOffset":2414,"endOffset":2695,"count":0},{"startOffset":2695,"endOffset":2723,"count":54},{"startOffset":2727,"endOffset":2744,"count":2}],"isBlockCoverage":true},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":4},{"startOffset":3401,"endOffset":3424,"count":0},{"startOffset":3448,"endOffset":3470,"count":0},{"startOffset":3542,"endOffset":3569,"count":0},{"startOffset":3571,"endOffset":3602,"count":0}],"isBlockCoverage":true}]},{"scriptId":"325","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":4},{"startOffset":239,"endOffset":262,"count":0},{"startOffset":332,"endOffset":420,"count":0}],"isBlockCoverage":true}]},{"scriptId":"326","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/tmp-cache/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":895,"count":1}],"isBlockCoverage":true},{"functionName":"Cache","ranges":[{"startOffset":27,"endOffset":276,"count":1},{"startOffset":94,"endOffset":123,"count":0},{"startOffset":183,"endOffset":194,"count":0},{"startOffset":230,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":279,"endOffset":324,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":327,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":583,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5562,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":798,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"hasbody","ranges":[{"startOffset":1805,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"typeofrequest","ranges":[{"startOffset":2796,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3577,"endOffset":3986,"count":0}],"isBlockCoverage":false},{"functionName":"mimeMatch","ranges":[{"startOffset":4188,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeType","ranges":[{"startOffset":5098,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5409,"endOffset":5561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/type-is/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6375,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2747,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3912,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"getcontenttype","ranges":[{"startOffset":5138,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5497,"endOffset":5786,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":5905,"endOffset":6374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":841,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1366,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":1934,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2374,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2744,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":2912,"endOffset":3659,"count":2279},{"startOffset":3016,"endOffset":3031,"count":965},{"startOffset":3033,"endOffset":3053,"count":1314},{"startOffset":3053,"endOffset":3177,"count":965},{"startOffset":3177,"endOffset":3655,"count":1220},{"startOffset":3238,"endOffset":3583,"count":40},{"startOffset":3417,"endOffset":3511,"count":34},{"startOffset":3441,"endOffset":3510,"count":19},{"startOffset":3457,"endOffset":3509,"count":11},{"startOffset":3513,"endOffset":3575,"count":23},{"startOffset":3583,"endOffset":3655,"count":1197}],"isBlockCoverage":true}]},{"scriptId":"331","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true}]},{"scriptId":"332","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":411,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1772,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2760,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3591,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4422,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":4993,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5188,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":593,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"charset","ranges":[{"startOffset":764,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":892,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1038,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1169,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1318,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1449,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1599,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1733,"endOffset":1837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":471,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":846,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1339,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1741,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2078,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2762,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":2916,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3031,"endOffset":3080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":476,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1309,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1810,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2216,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2560,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3184,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3339,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3456,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":493,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":875,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1445,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1851,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2400,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3091,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3246,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5358,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":484,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":861,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1754,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2155,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":2948,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3621,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3772,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3902,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4017,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4236,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4532,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":4913,"endOffset":5357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6000,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":879,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1323,"endOffset":1948,"count":0}],"isBlockCoverage":false},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2042,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"compileTrust","ranges":[{"startOffset":2346,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"parseipNotation","ranges":[{"startOffset":2683,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3625,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":3919,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4256,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4396,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5370,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":310,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":735,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":942,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19333,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19319,"count":1},{"startOffset":257,"endOffset":297,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":313,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":828,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":4290,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1512,"endOffset":1917,"count":15},{"startOffset":1592,"endOffset":1666,"count":0},{"startOffset":1720,"endOffset":1883,"count":60},{"startOffset":1794,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":1945,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2017,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2114,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2198,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2281,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3342,"endOffset":3419,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3463,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3595,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4545,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":11106,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5674,"endOffset":6372,"count":11},{"startOffset":5771,"endOffset":5921,"count":0},{"startOffset":5988,"endOffset":6073,"count":0},{"startOffset":6148,"endOffset":6308,"count":88},{"startOffset":6219,"endOffset":6300,"count":0},{"startOffset":6327,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6400,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6472,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6604,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7228,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7534,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8040,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8549,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9656,"endOffset":9733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":9777,"endOffset":9839,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":9877,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10247,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11548,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":12915,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":13806,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":13896,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14104,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14303,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":14632,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":14861,"endOffset":15086,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15115,"endOffset":15620,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":15666,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16213,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":16856,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":17480,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18008,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18121,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":18430,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":18789,"endOffset":19089,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19111,"endOffset":19315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@paralleldrive/cuid2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1}],"isBlockCoverage":true}]},{"scriptId":"342","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@paralleldrive/cuid2/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"createEntropy","ranges":[{"startOffset":166,"endOffset":350,"count":1},{"startOffset":261,"endOffset":330,"count":32}],"isBlockCoverage":true},{"functionName":"bufToBigInt","ranges":[{"startOffset":479,"endOffset":658,"count":1},{"startOffset":575,"endOffset":640,"count":64}],"isBlockCoverage":true},{"functionName":"hash","ranges":[{"startOffset":673,"endOffset":832,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":879,"endOffset":918,"count":26}],"isBlockCoverage":true},{"functionName":"randomLetter","ranges":[{"startOffset":944,"endOffset":1006,"count":0}],"isBlockCoverage":false},{"functionName":"createFingerprint","ranges":[{"startOffset":1264,"endOffset":1655,"count":1},{"startOffset":1328,"endOffset":1381,"count":0},{"startOffset":1564,"endOffset":1598,"count":0}],"isBlockCoverage":true},{"functionName":"createCounter","ranges":[{"startOffset":1680,"endOffset":1718,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1691,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":1891,"endOffset":2954,"count":1}],"isBlockCoverage":true},{"functionName":"cuid2","ranges":[{"startOffset":2305,"endOffset":2951,"count":0}],"isBlockCoverage":false},{"functionName":"isCuid","ranges":[{"startOffset":2998,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.getConstants","ranges":[{"startOffset":3337,"endOffset":3373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/sha3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8244,"count":1},{"startOffset":1007,"endOffset":1412,"count":24},{"startOffset":1232,"endOffset":1386,"count":168},{"startOffset":1325,"endOffset":1380,"count":86}],"isBlockCoverage":true},{"functionName":"rotlH","ranges":[{"startOffset":1555,"endOffset":1642,"count":2088},{"startOffset":1576,"endOffset":1608,"count":720},{"startOffset":1609,"endOffset":1641,"count":1368}],"isBlockCoverage":true},{"functionName":"rotlL","ranges":[{"startOffset":1658,"endOffset":1745,"count":2088},{"startOffset":1679,"endOffset":1711,"count":720},{"startOffset":1712,"endOffset":1744,"count":1368}],"isBlockCoverage":true},{"functionName":"keccakP","ranges":[{"startOffset":1802,"endOffset":3368,"count":3},{"startOffset":2029,"endOffset":3351,"count":72},{"startOffset":2099,"endOffset":2159,"count":720},{"startOffset":2200,"endOffset":2592,"count":360},{"startOffset":2499,"endOffset":2582,"count":1800},{"startOffset":2710,"endOffset":3002,"count":1728},{"startOffset":3063,"endOffset":3253,"count":360},{"startOffset":3122,"endOffset":3138,"count":3600},{"startOffset":3196,"endOffset":3243,"count":3600}],"isBlockCoverage":true},{"functionName":"Keccak","ranges":[{"startOffset":3476,"endOffset":4229,"count":11},{"startOffset":4065,"endOffset":4125,"count":0}],"isBlockCoverage":true},{"functionName":"keccak","ranges":[{"startOffset":4234,"endOffset":4509,"count":3},{"startOffset":4287,"endOffset":4328,"count":0},{"startOffset":4415,"endOffset":4456,"count":0}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":4514,"endOffset":4996,"count":1},{"startOffset":4728,"endOffset":4969,"count":3},{"startOffset":4856,"endOffset":4889,"count":182},{"startOffset":4945,"endOffset":4959,"count":2}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":5001,"endOffset":5351,"count":1},{"startOffset":5051,"endOffset":5058,"count":0},{"startOffset":5234,"endOffset":5257,"count":0},{"startOffset":5271,"endOffset":5285,"count":0}],"isBlockCoverage":true},{"functionName":"writeInto","ranges":[{"startOffset":5356,"endOffset":5926,"count":1},{"startOffset":5669,"endOffset":5683,"count":0}],"isBlockCoverage":true},{"functionName":"xofInto","ranges":[{"startOffset":5931,"endOffset":6177,"count":0}],"isBlockCoverage":false},{"functionName":"xof","ranges":[{"startOffset":6182,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"digestInto","ranges":[{"startOffset":6298,"endOffset":6526,"count":1},{"startOffset":6400,"endOffset":6447,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":6531,"endOffset":6611,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":6616,"endOffset":6692,"count":1}],"isBlockCoverage":true},{"functionName":"_cloneInto","ranges":[{"startOffset":6697,"endOffset":7229,"count":0}],"isBlockCoverage":false},{"functionName":"gen","ranges":[{"startOffset":7269,"endOffset":7380,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7334,"endOffset":7379,"count":9}],"isBlockCoverage":true},{"functionName":"genShake","ranges":[{"startOffset":7935,"endOffset":8112,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8011,"endOffset":8111,"count":2},{"startOffset":8092,"endOffset":8104,"count":0}],"isBlockCoverage":true}]},{"scriptId":"344","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/_assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1707,"count":1}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":244,"endOffset":373,"count":11},{"startOffset":316,"endOffset":371,"count":0}],"isBlockCoverage":true},{"functionName":"bool","ranges":[{"startOffset":374,"endOffset":481,"count":0}],"isBlockCoverage":false},{"functionName":"isBytes","ranges":[{"startOffset":503,"endOffset":651,"count":4},{"startOffset":561,"endOffset":647,"count":0}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":652,"endOffset":909,"count":4},{"startOffset":713,"endOffset":752,"count":0},{"startOffset":780,"endOffset":810,"count":0},{"startOffset":820,"endOffset":907,"count":0}],"isBlockCoverage":true},{"functionName":"hash","ranges":[{"startOffset":910,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":1123,"endOffset":1373,"count":2},{"startOffset":1209,"endOffset":1261,"count":0},{"startOffset":1284,"endOffset":1304,"count":1},{"startOffset":1314,"endOffset":1371,"count":0}],"isBlockCoverage":true},{"functionName":"output","ranges":[{"startOffset":1374,"endOffset":1583,"count":1},{"startOffset":1485,"endOffset":1581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"345","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/_u64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3704,"count":1}],"isBlockCoverage":true},{"functionName":"fromBig","ranges":[{"startOffset":647,"endOffset":864,"count":24},{"startOffset":775,"endOffset":863,"count":0}],"isBlockCoverage":true},{"functionName":"split","ranges":[{"startOffset":865,"endOffset":1133,"count":1},{"startOffset":1024,"endOffset":1110,"count":24}],"isBlockCoverage":true},{"functionName":"toBig","ranges":[{"startOffset":1148,"endOffset":1201,"count":0}],"isBlockCoverage":false},{"functionName":"shrSH","ranges":[{"startOffset":1264,"endOffset":1285,"count":0}],"isBlockCoverage":false},{"functionName":"shrSL","ranges":[{"startOffset":1324,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"rotrSH","ranges":[{"startOffset":1441,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"rotrSL","ranges":[{"startOffset":1523,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"rotrBH","ranges":[{"startOffset":1670,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"rotrBL","ranges":[{"startOffset":1759,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"rotr32H","ranges":[{"startOffset":1897,"endOffset":1909,"count":0}],"isBlockCoverage":false},{"functionName":"rotr32L","ranges":[{"startOffset":1954,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"rotlSH","ranges":[{"startOffset":2046,"endOffset":2086,"count":1368}],"isBlockCoverage":true},{"functionName":"rotlSL","ranges":[{"startOffset":2128,"endOffset":2168,"count":1368}],"isBlockCoverage":true},{"functionName":"rotlBH","ranges":[{"startOffset":2274,"endOffset":2321,"count":720}],"isBlockCoverage":true},{"functionName":"rotlBL","ranges":[{"startOffset":2363,"endOffset":2410,"count":720}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":2591,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"add3L","ranges":[{"startOffset":2780,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"add3H","ranges":[{"startOffset":2871,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"add4L","ranges":[{"startOffset":2973,"endOffset":3042,"count":0}],"isBlockCoverage":false},{"functionName":"add4H","ranges":[{"startOffset":3081,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"add5L","ranges":[{"startOffset":3192,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"add5H","ranges":[{"startOffset":3317,"endOffset":3398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8324,"count":1},{"startOffset":2716,"endOffset":2749,"count":0}],"isBlockCoverage":true},{"functionName":"isBytes","ranges":[{"startOffset":1462,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"u8","ranges":[{"startOffset":1654,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"u32","ranges":[{"startOffset":1752,"endOffset":1836,"count":11}],"isBlockCoverage":true},{"functionName":"createView","ranges":[{"startOffset":1898,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"rotr","ranges":[{"startOffset":2075,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"rotl","ranges":[{"startOffset":2231,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"byteSwap","ranges":[{"startOffset":2456,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2707,"endOffset":2715,"count":0}],"isBlockCoverage":false},{"functionName":"exports.byteSwapIfBE","ranges":[{"startOffset":2718,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"byteSwap32","ranges":[{"startOffset":2789,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3030,"endOffset":3071,"count":256}],"isBlockCoverage":true},{"functionName":"bytesToHex","ranges":[{"startOffset":3162,"endOffset":3386,"count":0}],"isBlockCoverage":false},{"functionName":"asciiToBase16","ranges":[{"startOffset":3521,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"hexToBytes","ranges":[{"startOffset":3911,"endOffset":4672,"count":0}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":4900,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"asyncLoop","ranges":[{"startOffset":5008,"endOffset":5398,"count":0}],"isBlockCoverage":false},{"functionName":"utf8ToBytes","ranges":[{"startOffset":5470,"endOffset":5694,"count":1},{"startOffset":5539,"endOffset":5605,"count":0}],"isBlockCoverage":true},{"functionName":"toBytes","ranges":[{"startOffset":5874,"endOffset":6020,"count":2},{"startOffset":5941,"endOffset":5966,"count":1}],"isBlockCoverage":true},{"functionName":"concatBytes","ranges":[{"startOffset":6069,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":6572,"endOffset":6621,"count":0}],"isBlockCoverage":false},{"functionName":"checkOpts","ranges":[{"startOffset":6672,"endOffset":6915,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConstructor","ranges":[{"startOffset":6916,"endOffset":7178,"count":8}],"isBlockCoverage":true},{"functionName":"hashC","ranges":[{"startOffset":6971,"endOffset":7020,"count":1}],"isBlockCoverage":true},{"functionName":"hashC.create","ranges":[{"startOffset":7141,"endOffset":7157,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConstructorWithOpts","ranges":[{"startOffset":7179,"endOffset":7469,"count":0}],"isBlockCoverage":false},{"functionName":"wrapXOFConstructorWithOpts","ranges":[{"startOffset":7470,"endOffset":7763,"count":2}],"isBlockCoverage":true},{"functionName":"hashC","ranges":[{"startOffset":7536,"endOffset":7595,"count":0}],"isBlockCoverage":false},{"functionName":"hashC.create","ranges":[{"startOffset":7718,"endOffset":7742,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":7839,"endOffset":8290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/cryptoNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":530,"count":1},{"startOffset":404,"endOffset":490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"348","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5281,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":819,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2150,"endOffset":4507,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":4634,"endOffset":4732,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":4811,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":4946,"endOffset":5048,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":5177,"endOffset":5280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1403,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":0}],"isBlockCoverage":false},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":695,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1868,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":2540,"endOffset":2929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4258,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":556,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":1004,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"closeZlibStream","ranges":[{"startOffset":1372,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"destroyZlibStream","ranges":[{"startOffset":2143,"endOffset":3053,"count":0}],"isBlockCoverage":false},{"functionName":"hasDestroy","ranges":[{"startOffset":3112,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"isEventEmitter","ranges":[{"startOffset":3282,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":3423,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"isZlibStream","ranges":[{"startOffset":3559,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3903,"endOffset":3922,"count":0}],"isBlockCoverage":false},{"functionName":"onDrainClearBinding","ranges":[{"startOffset":4020,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":4138,"endOffset":4257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30522,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3588,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4217,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4550,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4637,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4969,"endOffset":5510,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5512,"endOffset":5826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6051,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6730,"endOffset":7081,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":7318,"endOffset":9370,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9595,"endOffset":9632,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10075,"endOffset":10121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10268,"endOffset":10320,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":10461,"endOffset":10569,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":10715,"endOffset":10787,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":10854,"endOffset":10890,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":11488,"endOffset":11563,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":12004,"endOffset":12406,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":12436,"endOffset":12518,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":12551,"endOffset":12611,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":12646,"endOffset":13180,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":13218,"endOffset":13447,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":13450,"endOffset":15735,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":15737,"endOffset":16327,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":16329,"endOffset":19183,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":19185,"endOffset":19375,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":19572,"endOffset":21890,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":22240,"endOffset":22506,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":22532,"endOffset":22999,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":23043,"endOffset":23178,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":23274,"endOffset":23409,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":23505,"endOffset":23628,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23718,"endOffset":23849,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23943,"endOffset":24148,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":24250,"endOffset":24397,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":24499,"endOffset":24626,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24718,"endOffset":25107,"count":18},{"startOffset":24777,"endOffset":25106,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24790,"endOffset":24891,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24906,"endOffset":25104,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25192,"endOffset":25279,"count":107},{"startOffset":25250,"endOffset":25270,"count":9},{"startOffset":25271,"endOffset":25278,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":25498,"endOffset":26835,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":26929,"endOffset":27093,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":27207,"endOffset":27377,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":27496,"endOffset":27682,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":27617,"endOffset":27674,"count":0}],"isBlockCoverage":false},{"functionName":"crc32","ranges":[{"startOffset":27684,"endOffset":27952,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28181,"endOffset":28217,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28221,"endOffset":28262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4430,"count":1},{"startOffset":489,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":491,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":752,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1083,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1604,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2577,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":2977,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3508,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":3861,"endOffset":3973,"count":1},{"startOffset":3942,"endOffset":3971,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":4095,"endOffset":4429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10594,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4223,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4683,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6124,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":6908,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7609,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7854,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9510,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":9697,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":9905,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10128,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10493,"endOffset":10593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1},{"startOffset":438,"endOffset":550,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":241,"endOffset":327,"count":1},{"startOffset":296,"endOffset":325,"count":12}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":552,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":796,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1002,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1363,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1526,"endOffset":1669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/matchit/lib/matchit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3220,"count":1}],"isBlockCoverage":true},{"functionName":"strip","ranges":[{"startOffset":223,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":432,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"isMatch","ranges":[{"startOffset":516,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1021,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1362,"endOffset":2779,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2781,"endOffset":3152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@arr/every/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"361","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11329,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":217,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":315,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":407,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":546,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1167,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1322,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1565,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5761,"endOffset":9234,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":9254,"endOffset":11327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3946,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":972,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1530,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1675,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":2088,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannel","ranges":[{"startOffset":2199,"endOffset":3944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13615,"count":1},{"startOffset":668,"endOffset":739,"count":0},{"startOffset":1241,"endOffset":1257,"count":0},{"startOffset":1380,"endOffset":1478,"count":0},{"startOffset":1566,"endOffset":1577,"count":0},{"startOffset":1699,"endOffset":1710,"count":0},{"startOffset":1801,"endOffset":1812,"count":0},{"startOffset":1914,"endOffset":1925,"count":0},{"startOffset":2163,"endOffset":2174,"count":0},{"startOffset":2229,"endOffset":2240,"count":0},{"startOffset":2308,"endOffset":2319,"count":0},{"startOffset":2396,"endOffset":2407,"count":0},{"startOffset":2496,"endOffset":2507,"count":0},{"startOffset":2832,"endOffset":2843,"count":0},{"startOffset":2915,"endOffset":2926,"count":0},{"startOffset":3014,"endOffset":3025,"count":0},{"startOffset":3160,"endOffset":3171,"count":0},{"startOffset":3236,"endOffset":3247,"count":0},{"startOffset":3313,"endOffset":3324,"count":0},{"startOffset":3474,"endOffset":3485,"count":0},{"startOffset":3530,"endOffset":3541,"count":0},{"startOffset":3580,"endOffset":3591,"count":0},{"startOffset":3681,"endOffset":3692,"count":0},{"startOffset":3893,"endOffset":3904,"count":0},{"startOffset":3957,"endOffset":3968,"count":0},{"startOffset":4091,"endOffset":4102,"count":0},{"startOffset":4172,"endOffset":4183,"count":0},{"startOffset":4273,"endOffset":4284,"count":0},{"startOffset":4392,"endOffset":4403,"count":0},{"startOffset":4533,"endOffset":4544,"count":0},{"startOffset":4579,"endOffset":4590,"count":0},{"startOffset":4769,"endOffset":4780,"count":0},{"startOffset":4860,"endOffset":4871,"count":0},{"startOffset":4946,"endOffset":4957,"count":0},{"startOffset":5026,"endOffset":5037,"count":0},{"startOffset":5124,"endOffset":5135,"count":0},{"startOffset":5192,"endOffset":5203,"count":0},{"startOffset":5260,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":440,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":764,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":837,"endOffset":1236,"count":1},{"startOffset":1177,"endOffset":1229,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":1399,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"doEval","ranges":[{"startOffset":5575,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":9732,"endOffset":10283,"count":16},{"startOffset":9856,"endOffset":9871,"count":9},{"startOffset":9873,"endOffset":9953,"count":0},{"startOffset":9976,"endOffset":9992,"count":9},{"startOffset":9994,"endOffset":10074,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10123,"endOffset":10263,"count":39},{"startOffset":10200,"endOffset":10241,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":10330,"endOffset":11006,"count":16},{"startOffset":10461,"endOffset":10546,"count":0},{"startOffset":10658,"endOffset":10697,"count":0},{"startOffset":10733,"endOffset":10749,"count":0},{"startOffset":10751,"endOffset":10859,"count":0},{"startOffset":10936,"endOffset":11005,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":11026,"endOffset":13613,"count":16},{"startOffset":11122,"endOffset":11195,"count":0},{"startOffset":11222,"endOffset":11258,"count":11},{"startOffset":11260,"endOffset":11333,"count":0},{"startOffset":11377,"endOffset":11493,"count":0},{"startOffset":11580,"endOffset":11584,"count":0},{"startOffset":11814,"endOffset":11897,"count":0},{"startOffset":11956,"endOffset":13596,"count":23},{"startOffset":12180,"endOffset":12197,"count":0},{"startOffset":12202,"endOffset":12290,"count":0},{"startOffset":12331,"endOffset":12366,"count":0},{"startOffset":12502,"endOffset":12549,"count":5},{"startOffset":12549,"endOffset":13593,"count":18},{"startOffset":12601,"endOffset":12770,"count":0},{"startOffset":12812,"endOffset":13431,"count":14},{"startOffset":13322,"endOffset":13355,"count":0},{"startOffset":13357,"endOffset":13387,"count":0},{"startOffset":13431,"endOffset":13501,"count":4}],"isBlockCoverage":true}]},{"scriptId":"364","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":66,"count":1}],"isBlockCoverage":true}]},{"scriptId":"365","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/eval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75,"count":1}],"isBlockCoverage":true}]},{"scriptId":"366","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"367","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"368","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/syntax.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":79,"count":1}],"isBlockCoverage":true}]},{"scriptId":"369","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75,"count":1}],"isBlockCoverage":true}]},{"scriptId":"370","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-errors/uri.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"371","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":131,"endOffset":418,"count":1},{"startOffset":200,"endOffset":217,"count":0},{"startOffset":253,"endOffset":270,"count":0},{"startOffset":315,"endOffset":332,"count":0},{"startOffset":373,"endOffset":390,"count":0}],"isBlockCoverage":true}]},{"scriptId":"372","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":90,"endOffset":1759,"count":1},{"startOffset":203,"endOffset":220,"count":0},{"startOffset":279,"endOffset":1198,"count":0},{"startOffset":1200,"endOffset":1320,"count":0},{"startOffset":1322,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"373","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/has-proto/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"hasProto","ranges":[{"startOffset":126,"endOffset":300,"count":1}],"isBlockCoverage":true}]},{"scriptId":"374","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1},{"startOffset":107,"endOffset":124,"count":0}],"isBlockCoverage":true}]},{"scriptId":"375","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2043,"count":1}],"isBlockCoverage":true},{"functionName":"concatty","ranges":[{"startOffset":230,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"slicy","ranges":[{"startOffset":465,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"joiny","ranges":[{"startOffset":659,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":885,"endOffset":2041,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/hasown/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":206,"count":1}],"isBlockCoverage":true}]},{"scriptId":"377","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/call-bind/callBound.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":413,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":177,"endOffset":411,"count":6},{"startOffset":390,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"378","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/call-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1037,"count":1},{"startOffset":368,"endOffset":395,"count":0},{"startOffset":992,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"callBind","ranges":[{"startOffset":508,"endOffset":809,"count":7},{"startOffset":591,"endOffset":645,"count":0}],"isBlockCoverage":true},{"functionName":"applyBind","ranges":[{"startOffset":828,"endOffset":900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/set-function-length/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"setFunctionLength","ranges":[{"startOffset":327,"endOffset":1271,"count":7},{"startOffset":399,"endOffset":453,"count":0},{"startOffset":553,"endOffset":627,"count":0},{"startOffset":861,"endOffset":907,"count":0},{"startOffset":1019,"endOffset":1046,"count":0},{"startOffset":1047,"endOffset":1056,"count":0},{"startOffset":1171,"endOffset":1254,"count":0}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/define-data-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2336,"count":1}],"isBlockCoverage":true},{"functionName":"defineDataProperty","ranges":[{"startOffset":235,"endOffset":2334,"count":7},{"startOffset":361,"endOffset":431,"count":0},{"startOffset":466,"endOffset":497,"count":0},{"startOffset":499,"endOffset":571,"count":0},{"startOffset":635,"endOffset":659,"count":0},{"startOffset":661,"endOffset":748,"count":0},{"startOffset":812,"endOffset":836,"count":0},{"startOffset":838,"endOffset":923,"count":0},{"startOffset":950,"endOffset":986,"count":0},{"startOffset":987,"endOffset":1011,"count":0},{"startOffset":1013,"endOffset":1102,"count":0},{"startOffset":1129,"endOffset":1165,"count":0},{"startOffset":1167,"endOffset":1238,"count":0},{"startOffset":1297,"endOffset":1303,"count":0},{"startOffset":1360,"endOffset":1366,"count":0},{"startOffset":1412,"endOffset":1426,"count":0},{"startOffset":1469,"endOffset":1483,"count":0},{"startOffset":1723,"endOffset":1741,"count":0},{"startOffset":1781,"endOffset":1788,"count":0},{"startOffset":1789,"endOffset":1806,"count":0},{"startOffset":1876,"endOffset":1883,"count":0},{"startOffset":1884,"endOffset":1899,"count":0},{"startOffset":1923,"endOffset":2332,"count":0}],"isBlockCoverage":true}]},{"scriptId":"381","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/es-define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1},{"startOffset":156,"endOffset":164,"count":0},{"startOffset":241,"endOffset":320,"count":0}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/gopd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":177,"endOffset":235,"count":0}],"isBlockCoverage":true}]},{"scriptId":"383","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/has-property-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":588,"count":1}],"isBlockCoverage":true},{"functionName":"hasPropertyDescriptors","ranges":[{"startOffset":98,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"hasArrayLengthDefineBug","ranges":[{"startOffset":214,"endOffset":544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19000,"count":1},{"startOffset":180,"endOffset":186,"count":0},{"startOffset":301,"endOffset":307,"count":0},{"startOffset":539,"endOffset":545,"count":0},{"startOffset":660,"endOffset":666,"count":0},{"startOffset":839,"endOffset":845,"count":0},{"startOffset":968,"endOffset":974,"count":0},{"startOffset":1101,"endOffset":1107,"count":0},{"startOffset":1717,"endOffset":1723,"count":0},{"startOffset":1880,"endOffset":1886,"count":0},{"startOffset":2132,"endOffset":2142,"count":0},{"startOffset":2184,"endOffset":2190,"count":0},{"startOffset":2292,"endOffset":2316,"count":0},{"startOffset":2342,"endOffset":2531,"count":0},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":13091,"endOffset":13132,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2426,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2534,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3429,"endOffset":11131,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":11134,"endOffset":11298,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":11300,"endOffset":11374,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":11376,"endOffset":11511,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":11512,"endOffset":11645,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":11646,"endOffset":11783,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":11784,"endOffset":11919,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":11920,"endOffset":12057,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":12058,"endOffset":12195,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":12196,"endOffset":12335,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":12445,"endOffset":12826,"count":1},{"startOffset":12497,"endOffset":12576,"count":0},{"startOffset":12638,"endOffset":12678,"count":0},{"startOffset":12679,"endOffset":12694,"count":0},{"startOffset":12696,"endOffset":12825,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":12828,"endOffset":13044,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":13094,"endOffset":13132,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":13134,"endOffset":13194,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":13196,"endOffset":13256,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":13258,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":13437,"endOffset":13619,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":13621,"endOffset":13960,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":13962,"endOffset":14342,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":14344,"endOffset":14551,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":14553,"endOffset":14892,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":14894,"endOffset":15274,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":15276,"endOffset":15540,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15542,"endOffset":16052,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":16054,"endOffset":16322,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":16324,"endOffset":16385,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":16387,"endOffset":16450,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":16452,"endOffset":16659,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":16661,"endOffset":16836,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":16838,"endOffset":17224,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":17226,"endOffset":17437,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":17439,"endOffset":18999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"386","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7267,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3377,"endOffset":5753,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5770,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":6396,"endOffset":6492,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":6510,"endOffset":6701,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6718,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6790,"endOffset":7015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11311,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":675,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":850,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1658,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":4012,"endOffset":5379,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":5398,"endOffset":7115,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":7146,"endOffset":10535,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":10555,"endOffset":11309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/adonisrc.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7287,"count":1}],"isBlockCoverage":true},{"functionName":"defineConfig.commands","ranges":[{"startOffset":434,"endOffset":471,"count":1}],"isBlockCoverage":true},{"functionName":"defineConfig.commands","ranges":[{"startOffset":481,"endOffset":519,"count":1}],"isBlockCoverage":true},{"functionName":"defineConfig.commands","ranges":[{"startOffset":529,"endOffset":569,"count":1}],"isBlockCoverage":true},{"functionName":"defineConfig.providers.file","ranges":[{"startOffset":882,"endOffset":933,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers.file","ranges":[{"startOffset":943,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"file","ranges":[{"startOffset":1025,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers","ranges":[{"startOffset":1186,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers","ranges":[{"startOffset":1250,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers","ranges":[{"startOffset":1302,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers","ranges":[{"startOffset":1359,"endOffset":1407,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers","ranges":[{"startOffset":1417,"endOffset":1459,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.providers","ranges":[{"startOffset":1469,"endOffset":1517,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.preloads","ranges":[{"startOffset":1797,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"defineConfig.preloads","ranges":[{"startOffset":1834,"endOffset":1861,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/modules/ace/create_kernel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2555,"count":1}],"isBlockCoverage":true},{"functionName":"createAceKernel","ranges":[{"startOffset":616,"endOffset":2554,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":867,"endOffset":1008,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":913,"endOffset":1000,"count":3},{"startOffset":973,"endOffset":1000,"count":0}],"isBlockCoverage":true},{"functionName":"getMetaData","ranges":[{"startOffset":1297,"endOffset":1479,"count":1},{"startOffset":1384,"endOffset":1446,"count":0}],"isBlockCoverage":true},{"functionName":"getCommand","ranges":[{"startOffset":1489,"endOffset":1569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1983,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2291,"endOffset":2531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/modules/ace/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/modules/ace/kernel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":402,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"Kernel","ranges":[{"startOffset":448,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":516,"endOffset":683,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":702,"endOffset":729,"count":1}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/modules/ace/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3706,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":398,"endOffset":2634,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":466,"endOffset":485,"count":1}],"isBlockCoverage":true},{"functionName":"get staysAlive","ranges":[{"startOffset":491,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"get startApp","ranges":[{"startOffset":572,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"BaseCommand","ranges":[{"startOffset":649,"endOffset":798,"count":1}],"isBlockCoverage":true},{"functionName":"createCodemods","ranges":[{"startOffset":877,"endOffset":1134,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":1183,"endOffset":2258,"count":1},{"startOffset":1339,"endOffset":1390,"count":0},{"startOffset":1418,"endOffset":1470,"count":0},{"startOffset":1665,"endOffset":1678,"count":0},{"startOffset":1746,"endOffset":1851,"count":0},{"startOffset":2024,"endOffset":2087,"count":0},{"startOffset":2119,"endOffset":2135,"count":0},{"startOffset":2137,"endOffset":2224,"count":0}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":2504,"endOffset":2632,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2708,"endOffset":3705,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":2776,"endOffset":2795,"count":1}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/commands/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"getMetaData","ranges":[{"startOffset":305,"endOffset":572,"count":2},{"startOffset":360,"endOffset":571,"count":1}],"isBlockCoverage":true},{"functionName":"getCommand","ranges":[{"startOffset":664,"endOffset":1004,"count":1},{"startOffset":848,"endOffset":869,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":773,"endOffset":830,"count":23}],"isBlockCoverage":true}]},{"scriptId":"395","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/lucid/build/commands/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"getMetaData","ranges":[{"startOffset":305,"endOffset":572,"count":1},{"startOffset":360,"endOffset":393,"count":0}],"isBlockCoverage":true},{"functionName":"getCommand","ranges":[{"startOffset":664,"endOffset":1004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/bouncer/build/commands/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"getMetaData","ranges":[{"startOffset":305,"endOffset":572,"count":1},{"startOffset":360,"endOffset":393,"count":0}],"isBlockCoverage":true},{"functionName":"getCommand","ranges":[{"startOffset":664,"endOffset":1004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/commands/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7276,"count":1},{"startOffset":197,"endOffset":215,"count":0}],"isBlockCoverage":true},{"functionName":"__decorate","ranges":[{"startOffset":220,"endOffset":744,"count":14},{"startOffset":303,"endOffset":311,"count":0},{"startOffset":328,"endOffset":381,"count":0},{"startOffset":524,"endOffset":675,"count":0},{"startOffset":698,"endOffset":738,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":1215,"endOffset":1298,"count":1}],"isBlockCoverage":true},{"functionName":"#logMissingDevelopmentDependency","ranges":[{"startOffset":1367,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"#getPassthroughFlags","ranges":[{"startOffset":1868,"endOffset":2480,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1950,"endOffset":2451,"count":0}],"isBlockCoverage":false},{"functionName":"#getAssetsBundlerConfig","ranges":[{"startOffset":2542,"endOffset":3021,"count":1},{"startOffset":2684,"endOffset":2952,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":3060,"endOffset":5299,"count":1},{"startOffset":3157,"endOffset":3293,"count":0},{"startOffset":3412,"endOffset":3419,"count":0},{"startOffset":4911,"endOffset":5226,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3993,"endOffset":4141,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4530,"endOffset":4623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4735,"endOffset":4813,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/core/build/src/internal_helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1823,"count":1}],"isBlockCoverage":true},{"functionName":"importAssembler","ranges":[{"startOffset":259,"endOffset":384,"count":1},{"startOffset":373,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"importTypeScript","ranges":[{"startOffset":433,"endOffset":557,"count":0}],"isBlockCoverage":false},{"functionName":"generateJsFilenames","ranges":[{"startOffset":664,"endOffset":841,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":802,"endOffset":837,"count":12}],"isBlockCoverage":true},{"functionName":"detectAssetsBundler","ranges":[{"startOffset":944,"endOffset":1822,"count":1},{"startOffset":1030,"endOffset":1059,"count":0},{"startOffset":1094,"endOffset":1142,"count":0},{"startOffset":1299,"endOffset":1461,"count":0},{"startOffset":1625,"endOffset":1820,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1252,"endOffset":1296,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1578,"endOffset":1622,"count":6}],"isBlockCoverage":true}]},{"scriptId":"399","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33670,"count":1},{"startOffset":3229,"endOffset":3253,"count":0},{"startOffset":3480,"endOffset":3532,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":2449,"count":0}],"isBlockCoverage":true},{"functionName":"parseConfig","ranges":[{"startOffset":3533,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"runNode","ranges":[{"startOffset":4013,"endOffset":4482,"count":1},{"startOffset":4280,"endOffset":4288,"count":0},{"startOffset":4393,"endOffset":4418,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":4483,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":4847,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"isDotEnvFile","ranges":[{"startOffset":5150,"endOffset":5272,"count":0}],"isBlockCoverage":false},{"functionName":"getPort","ranges":[{"startOffset":5273,"endOffset":5686,"count":1},{"startOffset":5327,"endOffset":5394,"count":0},{"startOffset":5470,"endOffset":5644,"count":2},{"startOffset":5568,"endOffset":5640,"count":1},{"startOffset":5644,"endOffset":5685,"count":0}],"isBlockCoverage":true},{"functionName":"copyFiles","ranges":[{"startOffset":5687,"endOffset":6666,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7314,"endOffset":12674,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13059,"endOffset":16115,"count":1}],"isBlockCoverage":true},{"functionName":"get #colors","ranges":[{"startOffset":13192,"endOffset":13248,"count":0}],"isBlockCoverage":false},{"functionName":"AssetsDevServer","ranges":[{"startOffset":13251,"endOffset":13332,"count":1}],"isBlockCoverage":true},{"functionName":"#logViteDevServerMessage","ranges":[{"startOffset":13405,"endOffset":14072,"count":0}],"isBlockCoverage":false},{"functionName":"#logAssetsDevServerMessage","ranges":[{"startOffset":14147,"endOffset":14365,"count":0}],"isBlockCoverage":false},{"functionName":"setLogger","ranges":[{"startOffset":14412,"endOffset":14479,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":14672,"endOffset":15913,"count":1},{"startOffset":14736,"endOffset":15178,"count":0},{"startOffset":15393,"endOffset":15397,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15187,"endOffset":15364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15406,"endOffset":15583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15611,"endOffset":15759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15767,"endOffset":15907,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":15953,"endOffset":16113,"count":1},{"startOffset":15987,"endOffset":16109,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":16175,"endOffset":25227,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":25376,"endOffset":33586,"count":1}],"isBlockCoverage":true},{"functionName":"get #colors","ranges":[{"startOffset":26703,"endOffset":26759,"count":0}],"isBlockCoverage":false},{"functionName":"TestRunner","ranges":[{"startOffset":26762,"endOffset":27386,"count":1},{"startOffset":26899,"endOffset":26904,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26910,"endOffset":26934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27007,"endOffset":27170,"count":2},{"startOffset":27062,"endOffset":27141,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27176,"endOffset":27198,"count":2}],"isBlockCoverage":true},{"functionName":"#convertOptionsToArgs","ranges":[{"startOffset":27450,"endOffset":27965,"count":1},{"startOffset":27530,"endOffset":27621,"count":0},{"startOffset":27664,"endOffset":27749,"count":0},{"startOffset":27780,"endOffset":27816,"count":0},{"startOffset":27859,"endOffset":27944,"count":0}],"isBlockCoverage":true},{"functionName":"#convertFiltersToArgs","ranges":[{"startOffset":28199,"endOffset":28745,"count":1},{"startOffset":28277,"endOffset":28320,"count":0},{"startOffset":28344,"endOffset":28421,"count":0},{"startOffset":28446,"endOffset":28525,"count":0},{"startOffset":28548,"endOffset":28623,"count":0},{"startOffset":28647,"endOffset":28724,"count":0}],"isBlockCoverage":true},{"functionName":"#clearScreen","ranges":[{"startOffset":28805,"endOffset":28905,"count":1}],"isBlockCoverage":true},{"functionName":"#runTests","ranges":[{"startOffset":28936,"endOffset":29685,"count":1},{"startOffset":29025,"endOffset":29087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29377,"endOffset":29504,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29512,"endOffset":29628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29638,"endOffset":29679,"count":1}],"isBlockCoverage":true},{"functionName":"#rerunTests","ranges":[{"startOffset":29794,"endOffset":29992,"count":0}],"isBlockCoverage":false},{"functionName":"#startAssetsServer","ranges":[{"startOffset":30037,"endOffset":30222,"count":1}],"isBlockCoverage":true},{"functionName":"#handleFileChange","ranges":[{"startOffset":30279,"endOffset":30582,"count":0}],"isBlockCoverage":false},{"functionName":"#handleSourceFileChange","ranges":[{"startOffset":30640,"endOffset":31032,"count":0}],"isBlockCoverage":false},{"functionName":"setLogger","ranges":[{"startOffset":31079,"endOffset":31189,"count":1},{"startOffset":31148,"endOffset":31159,"count":0}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":31269,"endOffset":31339,"count":1}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":31430,"endOffset":31500,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":31563,"endOffset":31767,"count":1},{"startOffset":31602,"endOffset":31609,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":31798,"endOffset":32025,"count":1}],"isBlockCoverage":true},{"functionName":"runAndWatch","ranges":[{"startOffset":32069,"endOffset":33584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/dedent/dist/dedent.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3539,"count":1}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":0,"endOffset":341,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":342,"endOffset":848,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":849,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"_toPropertyKey","ranges":[{"startOffset":1086,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"_toPrimitive","ranges":[{"startOffset":1210,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"createDedent","ranges":[{"startOffset":1644,"endOffset":3538,"count":1}],"isBlockCoverage":true},{"functionName":"dedent.withOptions","ranges":[{"startOffset":1700,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"dedent","ranges":[{"startOffset":1802,"endOffset":3536,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@antfu/install-pkg/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1471,"count":1}],"isBlockCoverage":true},{"functionName":"detectPackageManager","ranges":[{"startOffset":106,"endOffset":388,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":535,"endOffset":1417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/junk/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1088,"count":1}],"isBlockCoverage":true},{"functionName":"isJunk","ranges":[{"startOffset":956,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"isNotJunk","ranges":[{"startOffset":1028,"endOffset":1087,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-port/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4454,"count":1}],"isBlockCoverage":true},{"functionName":"Locked","ranges":[{"startOffset":85,"endOffset":137,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalHosts","ranges":[{"startOffset":543,"endOffset":933,"count":1},{"startOffset":836,"endOffset":913,"count":12},{"startOffset":873,"endOffset":910,"count":15}],"isBlockCoverage":true},{"functionName":"checkAvailablePort","ranges":[{"startOffset":963,"endOffset":1224,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":987,"endOffset":1223,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1121,"endOffset":1218,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1181,"endOffset":1212,"count":4}],"isBlockCoverage":true},{"functionName":"getAvailablePort","ranges":[{"startOffset":1252,"endOffset":1632,"count":2},{"startOffset":1321,"endOffset":1392,"count":1},{"startOffset":1392,"endOffset":1607,"count":4},{"startOffset":1458,"endOffset":1503,"count":3},{"startOffset":1503,"endOffset":1604,"count":1},{"startOffset":1607,"endOffset":1631,"count":0}],"isBlockCoverage":true},{"functionName":"portCheckSequence","ranges":[{"startOffset":1661,"endOffset":1770,"count":1},{"startOffset":1726,"endOffset":1769,"count":0}],"isBlockCoverage":true},{"functionName":"getPorts","ranges":[{"startOffset":1788,"endOffset":3717,"count":1},{"startOffset":1961,"endOffset":1975,"count":0},{"startOffset":2005,"endOffset":2613,"count":0},{"startOffset":3031,"endOffset":3668,"count":2},{"startOffset":3067,"endOffset":3087,"count":0},{"startOffset":3162,"endOffset":3287,"count":1},{"startOffset":3289,"endOffset":3464,"count":0},{"startOffset":3464,"endOffset":3665,"count":1},{"startOffset":3607,"endOffset":3636,"count":0},{"startOffset":3638,"endOffset":3661,"count":0},{"startOffset":3668,"endOffset":3716,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2671,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"portNumbers","ranges":[{"startOffset":3726,"endOffset":4359,"count":0}],"isBlockCoverage":false},{"functionName":"clearLockedPorts","ranges":[{"startOffset":4368,"endOffset":4453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":979,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":483,"endOffset":493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":533,"endOffset":555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/chokidar-ts/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7997,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":439,"endOffset":2855,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3010,"endOffset":6924,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7055,"endOffset":7902,"count":0}],"isBlockCoverage":true}]},{"scriptId":"406","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/tinyexec/dist/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16258,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":477,"count":1},{"startOffset":376,"endOffset":477,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":421,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":479,"endOffset":627,"count":0}],"isBlockCoverage":false},{"functionName":"l","ranges":[{"startOffset":638,"endOffset":707,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":648,"endOffset":707,"count":12}],"isBlockCoverage":true},{"functionName":"$t","ranges":[{"startOffset":718,"endOffset":943,"count":1},{"startOffset":826,"endOffset":929,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":870,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"Nt","ranges":[{"startOffset":954,"endOffset":1376,"count":1},{"startOffset":994,"endOffset":998,"count":0},{"startOffset":1294,"endOffset":1299,"count":0},{"startOffset":1300,"endOffset":1316,"count":0},{"startOffset":1365,"endOffset":1368,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1422,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2137,"endOffset":2803,"count":1}],"isBlockCoverage":true},{"functionName":"K","ranges":[{"startOffset":2219,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"Dt","ranges":[{"startOffset":2316,"endOffset":2371,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":2374,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"Kt","ranges":[{"startOffset":2434,"endOffset":2801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2848,"endOffset":3638,"count":1},{"startOffset":2957,"endOffset":2966,"count":0}],"isBlockCoverage":true},{"functionName":"y","ranges":[{"startOffset":3012,"endOffset":3455,"count":0}],"isBlockCoverage":false},{"functionName":"Mt","ranges":[{"startOffset":3458,"endOffset":3636,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3684,"endOffset":5946,"count":1},{"startOffset":3844,"endOffset":3849,"count":0}],"isBlockCoverage":true},{"functionName":"J","ranges":[{"startOffset":3870,"endOffset":3940,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":3946,"endOffset":4461,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":4467,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"Xt","ranges":[{"startOffset":5280,"endOffset":5910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5995,"endOffset":6276,"count":1}],"isBlockCoverage":true},{"functionName":"nt","ranges":[{"startOffset":6035,"endOffset":6229,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6346,"endOffset":7022,"count":1}],"isBlockCoverage":true},{"functionName":"ot","ranges":[{"startOffset":6422,"endOffset":6947,"count":0}],"isBlockCoverage":false},{"functionName":"Yt","ranges":[{"startOffset":6950,"endOffset":7001,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7084,"endOffset":7460,"count":1}],"isBlockCoverage":true},{"functionName":"Vt","ranges":[{"startOffset":7153,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"Jt","ranges":[{"startOffset":7215,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7514,"endOffset":7571,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7627,"endOffset":7893,"count":1}],"isBlockCoverage":true},{"functionName":"pt.exports","ranges":[{"startOffset":7689,"endOffset":7890,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7960,"endOffset":8231,"count":1}],"isBlockCoverage":true},{"functionName":"te","ranges":[{"startOffset":8022,"endOffset":8210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8287,"endOffset":9444,"count":1}],"isBlockCoverage":true},{"functionName":"ie","ranges":[{"startOffset":8482,"endOffset":8628,"count":0}],"isBlockCoverage":false},{"functionName":"ce","ranges":[{"startOffset":8631,"endOffset":9108,"count":0}],"isBlockCoverage":false},{"functionName":"ae","ranges":[{"startOffset":9111,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9501,"endOffset":10377,"count":1}],"isBlockCoverage":true},{"functionName":"k","ranges":[{"startOffset":9573,"endOffset":9797,"count":0}],"isBlockCoverage":false},{"functionName":"ue","ranges":[{"startOffset":9800,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"xt","ranges":[{"startOffset":10069,"endOffset":10160,"count":0}],"isBlockCoverage":false},{"functionName":"le","ranges":[{"startOffset":10163,"endOffset":10258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10429,"endOffset":10930,"count":1}],"isBlockCoverage":true},{"functionName":"_t","ranges":[{"startOffset":10511,"endOffset":10645,"count":0}],"isBlockCoverage":false},{"functionName":"pe","ranges":[{"startOffset":10648,"endOffset":10814,"count":0}],"isBlockCoverage":false},{"functionName":"jt","ranges":[{"startOffset":11213,"endOffset":11411,"count":0}],"isBlockCoverage":false},{"functionName":"Ft","ranges":[{"startOffset":11412,"endOffset":11599,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":11600,"endOffset":11716,"count":0}],"isBlockCoverage":false},{"functionName":"L","ranges":[{"startOffset":11787,"endOffset":11955,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12061,"endOffset":12327,"count":0}],"isBlockCoverage":true},{"functionName":"we","ranges":[{"startOffset":12420,"endOffset":12495,"count":0}],"isBlockCoverage":false},{"functionName":"xe","ranges":[{"startOffset":12496,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12766,"endOffset":16094,"count":0}],"isBlockCoverage":true},{"functionName":"ve","ranges":[{"startOffset":16101,"endOffset":16166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2456,"count":1}],"isBlockCoverage":true},{"functionName":"createExeca","ranges":[{"startOffset":683,"endOffset":1166,"count":7},{"startOffset":1082,"endOffset":1143,"count":1}],"isBlockCoverage":true},{"functionName":"createNested","ranges":[{"startOffset":767,"endOffset":881,"count":1}],"isBlockCoverage":true},{"functionName":"boundExeca","ranges":[{"startOffset":903,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundExeca","ranges":[{"startOffset":1192,"endOffset":1737,"count":1},{"startOffset":1348,"endOffset":1447,"count":0},{"startOffset":1620,"endOffset":1668,"count":0}],"isBlockCoverage":true},{"functionName":"parseArguments","ranges":[{"startOffset":1763,"endOffset":2454,"count":1},{"startOffset":1899,"endOffset":1945,"count":0}],"isBlockCoverage":true}]},{"scriptId":"408","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"mapCommandAsync","ranges":[{"startOffset":66,"endOffset":132,"count":0}],"isBlockCoverage":false},{"functionName":"mapCommandSync","ranges":[{"startOffset":204,"endOffset":291,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":390,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandString","ranges":[{"startOffset":827,"endOffset":1468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1648,"count":1}],"isBlockCoverage":true},{"functionName":"mapNode","ranges":[{"startOffset":228,"endOffset":406,"count":1},{"startOffset":274,"endOffset":358,"count":0}],"isBlockCoverage":true},{"functionName":"handleNodeOption","ranges":[{"startOffset":666,"endOffset":1646,"count":1},{"startOffset":919,"endOffset":1031,"count":0},{"startOffset":1311,"endOffset":1362,"count":0},{"startOffset":1409,"endOffset":1518,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":779,"endOffset":828,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/methods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1272,"count":1}],"isBlockCoverage":true},{"functionName":"addIpcMethods","ranges":[{"startOffset":294,"endOffset":387,"count":1}],"isBlockCoverage":true},{"functionName":"getIpcExport","ranges":[{"startOffset":461,"endOffset":768,"count":1}],"isBlockCoverage":true},{"functionName":"getIpcMethods","ranges":[{"startOffset":869,"endOffset":1270,"count":2}],"isBlockCoverage":true}]},{"scriptId":"411","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/package-manager-detector/dist/detect.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2099,"count":1}],"isBlockCoverage":true},{"functionName":"detect","ranges":[{"startOffset":185,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":800,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageJson","ranges":[{"startOffset":1031,"endOffset":1896,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":1897,"endOffset":2078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/return/final-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1538,"count":1}],"isBlockCoverage":true},{"functionName":"getFinalError","ranges":[{"startOffset":177,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"setErrorName","ranges":[{"startOffset":647,"endOffset":951,"count":2}],"isBlockCoverage":true},{"functionName":"isExecaError","ranges":[{"startOffset":1031,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorInstance","ranges":[{"startOffset":1175,"endOffset":1242,"count":1}],"isBlockCoverage":true}]},{"scriptId":"413","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/script.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1015,"count":1}],"isBlockCoverage":true},{"functionName":"setScriptSync","ranges":[{"startOffset":56,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"mapScriptAsync","ranges":[{"startOffset":253,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"mapScriptSync","ranges":[{"startOffset":345,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptOptions","ranges":[{"startOffset":531,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptStdinOption","ranges":[{"startOffset":633,"endOffset":761,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13245,"count":1}],"isBlockCoverage":true},{"functionName":"isEventKeyType","ranges":[{"startOffset":372,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"assertEventName","ranges":[{"startOffset":459,"endOffset":610,"count":0}],"isBlockCoverage":false},{"functionName":"assertListener","ranges":[{"startOffset":612,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"getListeners","ranges":[{"startOffset":747,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"getEventProducers","ranges":[{"startOffset":912,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1148,"endOffset":1558,"count":0}],"isBlockCoverage":false},{"functionName":"iterator","ranges":[{"startOffset":1560,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2945,"endOffset":3466,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaEvent","ranges":[{"startOffset":3488,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"emitMetaEvent","ranges":[{"startOffset":3564,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":3821,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"get isDebugEnabled","ranges":[{"startOffset":4914,"endOffset":5499,"count":0}],"isBlockCoverage":false},{"functionName":"set isDebugEnabled","ranges":[{"startOffset":5509,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":5580,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"logIfDebugEnabled","ranges":[{"startOffset":6705,"endOffset":6881,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":6884,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":7489,"endOffset":8058,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":8061,"endOffset":8263,"count":0}],"isBlockCoverage":false},{"functionName":"events","ranges":[{"startOffset":8266,"endOffset":8472,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":8475,"endOffset":9355,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":9358,"endOffset":10205,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":10208,"endOffset":10449,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":10452,"endOffset":10492,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":10495,"endOffset":10701,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":10704,"endOffset":11640,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":11643,"endOffset":12346,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":12349,"endOffset":12854,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12939,"endOffset":12963,"count":14}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/memoize/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3764,"count":1}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":673,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeDecorator","ranges":[{"startOffset":2548,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeClear","ranges":[{"startOffset":3366,"endOffset":3763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12824,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2591,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":3655,"endOffset":4449,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4500,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":5822,"endOffset":5946,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6139,"endOffset":6183,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6230,"endOffset":6270,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6324,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6422,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6518,"endOffset":6563,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6615,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6759,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6811,"endOffset":6856,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6905,"endOffset":6947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6997,"endOffset":7040,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7091,"endOffset":7135,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7187,"endOffset":7232,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7287,"endOffset":7335,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7391,"endOffset":7440,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7495,"endOffset":7543,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7599,"endOffset":7648,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7693,"endOffset":7731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7783,"endOffset":7828,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7880,"endOffset":7925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7979,"endOffset":8026,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8077,"endOffset":8121,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8170,"endOffset":8212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8351,"endOffset":8393,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8399,"endOffset":8447,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8497,"endOffset":8543,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8549,"endOffset":8601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8649,"endOffset":8693,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8699,"endOffset":8749,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8799,"endOffset":8845,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8851,"endOffset":8903,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8948,"endOffset":8989,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8995,"endOffset":9042,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9097,"endOffset":9148,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9154,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9261,"endOffset":9307,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9313,"endOffset":9365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9415,"endOffset":9461,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9467,"endOffset":9519,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":10115,"endOffset":10596,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":11662,"endOffset":12676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2663,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":644,"endOffset":2624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1658,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":531,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":634,"endOffset":1462,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1466,"endOffset":1590,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3509,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":452,"endOffset":3473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/main-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4626,"count":1}],"isBlockCoverage":true},{"functionName":"execaCoreSync","ranges":[{"startOffset":779,"endOffset":1196,"count":0}],"isBlockCoverage":false},{"functionName":"handleSyncArguments","ranges":[{"startOffset":1287,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSyncOptions","ranges":[{"startOffset":1902,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"validateSyncOptions","ranges":[{"startOffset":2062,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSyncOption","ranges":[{"startOffset":2389,"endOffset":2489,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSubprocessSync","ranges":[{"startOffset":2520,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"runSubprocessSync","ranges":[{"startOffset":3425,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnSyncOptions","ranges":[{"startOffset":3979,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"getSyncResult","ranges":[{"startOffset":4117,"endOffset":4624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/main-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5873,"count":1}],"isBlockCoverage":true},{"functionName":"execaCoreAsync","ranges":[{"startOffset":1238,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"handleAsyncArguments","ranges":[{"startOffset":1986,"endOffset":2502,"count":1}],"isBlockCoverage":true},{"functionName":"handleAsyncOptions","ranges":[{"startOffset":2667,"endOffset":2876,"count":1},{"startOffset":2731,"endOffset":2825,"count":0}],"isBlockCoverage":true},{"functionName":"spawnSubprocessAsync","ranges":[{"startOffset":2908,"endOffset":4105,"count":1},{"startOffset":3097,"endOffset":3252,"count":0}],"isBlockCoverage":true},{"functionName":"handlePromise","ranges":[{"startOffset":4258,"endOffset":5093,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4746,"endOffset":4817,"count":4}],"isBlockCoverage":true},{"functionName":"getAsyncResult","ranges":[{"startOffset":5119,"endOffset":5871,"count":1},{"startOffset":5253,"endOffset":5762,"count":0}],"isBlockCoverage":true}]},{"scriptId":"422","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":344,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":15,"endOffset":343,"count":19},{"startOffset":78,"endOffset":95,"count":2},{"startOffset":97,"endOffset":117,"count":17},{"startOffset":117,"endOffset":229,"count":2},{"startOffset":230,"endOffset":274,"count":1},{"startOffset":276,"endOffset":309,"count":1},{"startOffset":310,"endOffset":340,"count":1}],"isBlockCoverage":true}]},{"scriptId":"423","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/parameters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1352,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeParameters","ranges":[{"startOffset":269,"endOffset":1350,"count":1},{"startOffset":454,"endOffset":474,"count":0},{"startOffset":547,"endOffset":672,"count":0},{"startOffset":786,"endOffset":881,"count":0},{"startOffset":1088,"endOffset":1183,"count":0},{"startOffset":1215,"endOffset":1297,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":701,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":993,"endOffset":1048,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4820,"count":1}],"isBlockCoverage":true},{"functionName":"isTemplateString","ranges":[{"startOffset":255,"endOffset":324,"count":1},{"startOffset":293,"endOffset":324,"count":0}],"isBlockCoverage":true},{"functionName":"parseTemplates","ranges":[{"startOffset":433,"endOffset":815,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":840,"endOffset":1522,"count":0}],"isBlockCoverage":false},{"functionName":"splitByWhitespaces","ranges":[{"startOffset":1940,"endOffset":3066,"count":0}],"isBlockCoverage":false},{"functionName":"concatTokens","ranges":[{"startOffset":3352,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":3667,"endOffset":4387,"count":0}],"isBlockCoverage":false},{"functionName":"getSubprocessResult","ranges":[{"startOffset":4418,"endOffset":4818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/send.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2379,"count":1}],"isBlockCoverage":true},{"functionName":"sendMessage","ranges":[{"startOffset":642,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"sendMessageAsync","ranges":[{"startOffset":995,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"sendOneMessage","ranges":[{"startOffset":1572,"endOffset":2013,"count":0}],"isBlockCoverage":false},{"functionName":"getSendMethod","ranges":[{"startOffset":2083,"endOffset":2332,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/bind.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":787,"count":1}],"isBlockCoverage":true},{"functionName":"mergeOptions","ranges":[{"startOffset":206,"endOffset":473,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":423,"count":9}],"isBlockCoverage":true},{"functionName":"mergeOption","ranges":[{"startOffset":496,"endOffset":721,"count":9},{"startOffset":579,"endOffset":613,"count":2},{"startOffset":614,"endOffset":643,"count":0},{"startOffset":645,"endOffset":697,"count":0}],"isBlockCoverage":true}]},{"scriptId":"427","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/package-manager-detector/dist/constants.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":607,"count":1}],"isBlockCoverage":true}]},{"scriptId":"428","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/emittery/maps.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":120,"count":1}],"isBlockCoverage":true}]},{"scriptId":"429","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/file-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"safeNormalizeFileUrl","ranges":[{"startOffset":155,"endOffset":363,"count":3},{"startOffset":255,"endOffset":340,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFileUrl","ranges":[{"startOffset":474,"endOffset":530,"count":4},{"startOffset":502,"endOffset":523,"count":1},{"startOffset":524,"endOffset":530,"count":3}],"isBlockCoverage":true}]},{"scriptId":"430","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/get-one.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1926,"count":1}],"isBlockCoverage":true},{"functionName":"getOneMessage","ranges":[{"startOffset":362,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"getOneMessageAsync","ranges":[{"startOffset":693,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":1280,"endOffset":1560,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnDisconnect","ranges":[{"startOffset":1589,"endOffset":1726,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnStrictError","ranges":[{"startOffset":1756,"endOffset":1924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/get-each.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2258,"count":1}],"isBlockCoverage":true},{"functionName":"getEachMessage","ranges":[{"startOffset":330,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"loopOnMessages","ranges":[{"startOffset":566,"endOffset":1202,"count":1}],"isBlockCoverage":true},{"functionName":"stopOnDisconnect","ranges":[{"startOffset":1230,"endOffset":1389,"count":1},{"startOffset":1379,"endOffset":1387,"count":0}],"isBlockCoverage":true},{"functionName":"abortOnStrictError","ranges":[{"startOffset":1419,"endOffset":1668,"count":1},{"startOffset":1571,"endOffset":1658,"count":0}],"isBlockCoverage":true},{"functionName":"iterateOnMessages","ranges":[{"startOffset":1697,"endOffset":2178,"count":1},{"startOffset":1957,"endOffset":1961,"count":0},{"startOffset":2147,"endOffset":2173,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfStrictError","ranges":[{"startOffset":2208,"endOffset":2256,"count":2},{"startOffset":2235,"endOffset":2254,"count":0}],"isBlockCoverage":true}]},{"scriptId":"432","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/graceful.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1932,"count":1}],"isBlockCoverage":true},{"functionName":"sendAbort","ranges":[{"startOffset":332,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"getCancelSignal","ranges":[{"startOffset":806,"endOffset":965,"count":0}],"isBlockCoverage":false},{"functionName":"startIpc","ranges":[{"startOffset":985,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"handleAbort","ranges":[{"startOffset":1418,"endOffset":1576,"count":1},{"startOffset":1510,"endOffset":1575,"count":0}],"isBlockCoverage":true},{"functionName":"abortOnDisconnect","ranges":[{"startOffset":1820,"endOffset":1881,"count":1}],"isBlockCoverage":true}]},{"scriptId":"433","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true},{"functionName":"handleCommand","ranges":[{"startOffset":366,"endOffset":775,"count":1}],"isBlockCoverage":true}]},{"scriptId":"434","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3062,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":973,"endOffset":2134,"count":1},{"startOffset":1998,"endOffset":2038,"count":0},{"startOffset":2040,"endOffset":2088,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1863,"endOffset":1960,"count":4},{"startOffset":1890,"endOffset":1932,"count":0},{"startOffset":1933,"endOffset":1960,"count":0}],"isBlockCoverage":true},{"functionName":"addDefaultOptions","ranges":[{"startOffset":2163,"endOffset":2722,"count":1},{"startOffset":2454,"endOffset":2471,"count":0}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":2740,"endOffset":3060,"count":1},{"startOffset":2876,"endOffset":2887,"count":0},{"startOffset":2907,"endOffset":2914,"count":0},{"startOffset":3044,"endOffset":3059,"count":0}],"isBlockCoverage":true}]},{"scriptId":"435","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/return/result.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3690,"count":1}],"isBlockCoverage":true},{"functionName":"makeSuccessResult","ranges":[{"startOffset":274,"endOffset":718,"count":1}],"isBlockCoverage":true},{"functionName":"makeEarlyError","ranges":[{"startOffset":808,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"makeError","ranges":[{"startOffset":1241,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorProperties","ranges":[{"startOffset":2444,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"omitUndefinedProperties","ranges":[{"startOffset":3143,"endOffset":3238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3202,"endOffset":3236,"count":18}],"isBlockCoverage":true},{"functionName":"normalizeExitPayload","ranges":[{"startOffset":3389,"endOffset":3688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/return/reject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"handleResult","ranges":[{"startOffset":160,"endOffset":300,"count":1},{"startOffset":250,"endOffset":259,"count":0},{"startOffset":261,"endOffset":281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"437","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/handle-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1999,"count":1}],"isBlockCoverage":true},{"functionName":"handleStdioSync","ranges":[{"startOffset":318,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"forbiddenIfSync","ranges":[{"startOffset":429,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"forbiddenNativeIfSync","ranges":[{"startOffset":548,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSyncValue","ranges":[{"startOffset":726,"endOffset":851,"count":0}],"isBlockCoverage":false},{"functionName":"generator","ranges":[{"startOffset":1094,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"fileUrl","ranges":[{"startOffset":1399,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"filePath","ranges":[{"startOffset":1481,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"iterable","ranges":[{"startOffset":1601,"endOffset":1638,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":1650,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"uint8Array","ranges":[{"startOffset":1700,"endOffset":1734,"count":0}],"isBlockCoverage":false},{"functionName":"fileUrl","ranges":[{"startOffset":1782,"endOffset":1810,"count":0}],"isBlockCoverage":false},{"functionName":"filePath","ranges":[{"startOffset":1824,"endOffset":1859,"count":0}],"isBlockCoverage":false},{"functionName":"fileNumber","ranges":[{"startOffset":1875,"endOffset":1903,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/strip-newline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"stripNewline","ranges":[{"startOffset":275,"endOffset":459,"count":5},{"startOffset":390,"endOffset":414,"count":0},{"startOffset":416,"endOffset":450,"count":0}],"isBlockCoverage":true},{"functionName":"getStripFinalNewline","ranges":[{"startOffset":576,"endOffset":706,"count":5},{"startOffset":629,"endOffset":675,"count":1},{"startOffset":652,"endOffset":675,"count":0},{"startOffset":677,"endOffset":706,"count":4}],"isBlockCoverage":true}]},{"scriptId":"439","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/max-buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2894,"count":1}],"isBlockCoverage":true},{"functionName":"handleMaxBuffer","ranges":[{"startOffset":345,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxBufferUnit","ranges":[{"startOffset":696,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"checkIpcMaxBuffer","ranges":[{"startOffset":993,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxBufferMessage","ranges":[{"startOffset":1259,"endOffset":1431,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxBufferInfo","ranges":[{"startOffset":1459,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"isMaxBufferSync","ranges":[{"startOffset":2217,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"truncateMaxBufferSync","ranges":[{"startOffset":2493,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxBufferSync","ranges":[{"startOffset":2852,"endOffset":2892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/all-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":751,"count":1}],"isBlockCoverage":true},{"functionName":"getAllSync","ranges":[{"startOffset":202,"endOffset":749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/exit-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":782,"count":1}],"isBlockCoverage":true},{"functionName":"getExitResultSync","ranges":[{"startOffset":273,"endOffset":599,"count":0}],"isBlockCoverage":false},{"functionName":"getResultError","ranges":[{"startOffset":625,"endOffset":780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/input-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"addInputOptionsSync","ranges":[{"startOffset":334,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"getInputFdNumbers","ranges":[{"startOffset":519,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"addInputOptionSync","ranges":[{"startOffset":701,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"applySingleInputGeneratorsSync","ranges":[{"startOffset":1407,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"validateSerializable","ranges":[{"startOffset":1619,"endOffset":1946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/output-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3884,"count":1}],"isBlockCoverage":true},{"functionName":"transformOutputSync","ranges":[{"startOffset":530,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"transformOutputResultSync","ranges":[{"startOffset":1030,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"runOutputGeneratorsSync","ranges":[{"startOffset":2154,"endOffset":2332,"count":0}],"isBlockCoverage":false},{"functionName":"serializeChunks","ranges":[{"startOffset":2572,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"logOutputSync","ranges":[{"startOffset":3053,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFiles","ranges":[{"startOffset":3511,"endOffset":3882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/fd-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3971,"count":1}],"isBlockCoverage":true},{"functionName":"getToStream","ranges":[{"startOffset":114,"endOffset":522,"count":0}],"isBlockCoverage":false},{"functionName":"getFromStream","ranges":[{"startOffset":603,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getFdNumber","ranges":[{"startOffset":1182,"endOffset":1363,"count":0}],"isBlockCoverage":false},{"functionName":"parseFdNumber","ranges":[{"startOffset":1388,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"validateFdNumber","ranges":[{"startOffset":1894,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"getInvalidStdioOptionMessage","ranges":[{"startOffset":2659,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"getInvalidStdioOption","ranges":[{"startOffset":3140,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"getUsedDescriptor","ranges":[{"startOffset":3688,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionName","ranges":[{"startOffset":3758,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"serializeOptionValue","ranges":[{"startOffset":3837,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/add.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"addConvertedStreams","ranges":[{"startOffset":342,"endOffset":882,"count":1}],"isBlockCoverage":true}]},{"scriptId":"446","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/utils/deferred.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"createDeferred","ranges":[{"startOffset":30,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":158,"count":1}],"isBlockCoverage":true}]},{"scriptId":"447","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/methods/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":580,"count":1}],"isBlockCoverage":true},{"functionName":"mergePromise","ranges":[{"startOffset":89,"endOffset":293,"count":1},{"startOffset":167,"endOffset":291,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":387,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":482,"endOffset":577,"count":3}],"isBlockCoverage":true}]},{"scriptId":"448","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/utils/uint-array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2308,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayBuffer","ranges":[{"startOffset":135,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":262,"endOffset":323,"count":4}],"isBlockCoverage":true},{"functionName":"bufferToUint8Array","ranges":[{"startOffset":360,"endOffset":437,"count":0}],"isBlockCoverage":false},{"functionName":"stringToUint8Array","ranges":[{"startOffset":506,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"uint8ArrayToString","ranges":[{"startOffset":618,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"joinToString","ranges":[{"startOffset":693,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"uint8ArraysToStrings","ranges":[{"startOffset":861,"endOffset":1427,"count":0}],"isBlockCoverage":false},{"functionName":"joinToUint8Array","ranges":[{"startOffset":1462,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"stringsToUint8Arrays","ranges":[{"startOffset":1713,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"concatUint8Arrays","ranges":[{"startOffset":1923,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"getJoinLength","ranges":[{"startOffset":2167,"endOffset":2306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/terminate/kill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2922,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeForceKillAfterDelay","ranges":[{"startOffset":251,"endOffset":696,"count":1},{"startOffset":312,"endOffset":346,"count":0},{"startOffset":424,"endOffset":495,"count":0},{"startOffset":497,"endOffset":695,"count":0}],"isBlockCoverage":true},{"functionName":"subprocessKill","ranges":[{"startOffset":870,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"parseKillArguments","ranges":[{"startOffset":1331,"endOffset":1936,"count":1},{"startOffset":1450,"endOffset":1478,"count":0},{"startOffset":1548,"endOffset":1576,"count":0},{"startOffset":1578,"endOffset":1704,"count":0},{"startOffset":1731,"endOffset":1757,"count":0},{"startOffset":1759,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"emitKillError","ranges":[{"startOffset":2170,"endOffset":2265,"count":1},{"startOffset":2226,"endOffset":2263,"count":0}],"isBlockCoverage":true},{"functionName":"setKillTimeout","ranges":[{"startOffset":2291,"endOffset":2542,"count":1},{"startOffset":2412,"endOffset":2425,"count":0},{"startOffset":2427,"endOffset":2540,"count":0}],"isBlockCoverage":true},{"functionName":"killOnTimeout","ranges":[{"startOffset":2627,"endOffset":2920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/terminate/cleanup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupOnExit","ranges":[{"startOffset":203,"endOffset":426,"count":1},{"startOffset":279,"endOffset":293,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":329,"endOffset":360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":389,"endOffset":422,"count":1}],"isBlockCoverage":true}]},{"scriptId":"451","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/pipe/setup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2203,"count":1}],"isBlockCoverage":true},{"functionName":"pipeToSubprocess","ranges":[{"startOffset":419,"endOffset":961,"count":0}],"isBlockCoverage":false},{"functionName":"handlePipePromise","ranges":[{"startOffset":1037,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"getSubprocessPromises","ranges":[{"startOffset":2121,"endOffset":2201,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/all-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1713,"count":1}],"isBlockCoverage":true},{"functionName":"makeAllStream","ranges":[{"startOffset":181,"endOffset":298,"count":1},{"startOffset":214,"endOffset":235,"count":0},{"startOffset":237,"endOffset":285,"count":0}],"isBlockCoverage":true},{"functionName":"waitForAllStream","ranges":[{"startOffset":405,"endOffset":752,"count":1}],"isBlockCoverage":true},{"functionName":"getAllStream","ranges":[{"startOffset":776,"endOffset":1089,"count":1},{"startOffset":933,"endOffset":1088,"count":0}],"isBlockCoverage":true},{"functionName":"getAllMixed","ranges":[{"startOffset":1599,"endOffset":1711,"count":1},{"startOffset":1631,"endOffset":1640,"count":0},{"startOffset":1642,"endOffset":1651,"count":0},{"startOffset":1653,"endOffset":1711,"count":0}],"isBlockCoverage":true}]},{"scriptId":"453","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/wait-subprocess.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4294,"count":1}],"isBlockCoverage":true},{"functionName":"waitForSubprocessResult","ranges":[{"startOffset":896,"endOffset":3062,"count":1},{"startOffset":2686,"endOffset":3060,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2827,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"waitForOriginalStreams","ranges":[{"startOffset":3236,"endOffset":3424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3302,"endOffset":3423,"count":4},{"startOffset":3378,"endOffset":3423,"count":0}],"isBlockCoverage":true},{"functionName":"waitForCustomStreamsEnd","ranges":[{"startOffset":3721,"endOffset":4097,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3778,"endOffset":4096,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3826,"endOffset":3924,"count":4},{"startOffset":3896,"endOffset":3924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3932,"endOffset":4095,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnSubprocessError","ranges":[{"startOffset":4183,"endOffset":4292,"count":1},{"startOffset":4276,"endOffset":4291,"count":0}],"isBlockCoverage":true}]},{"scriptId":"454","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/validation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5710,"count":1}],"isBlockCoverage":true},{"functionName":"validateIpcMethod","ranges":[{"startOffset":108,"endOffset":272,"count":1}],"isBlockCoverage":true},{"functionName":"validateIpcOption","ranges":[{"startOffset":386,"endOffset":557,"count":1},{"startOffset":434,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"validateConnection","ranges":[{"startOffset":875,"endOffset":1103,"count":1},{"startOffset":939,"endOffset":1101,"count":0}],"isBlockCoverage":true},{"functionName":"throwOnEarlyDisconnect","ranges":[{"startOffset":1219,"endOffset":1392,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnStrictDeadlockError","ranges":[{"startOffset":1511,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictResponseError","ranges":[{"startOffset":2148,"endOffset":2339,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnMissingStrict","ranges":[{"startOffset":2454,"endOffset":2628,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnStrictDisconnect","ranges":[{"startOffset":2757,"endOffset":2939,"count":0}],"isBlockCoverage":false},{"functionName":"getAbortDisconnectError","ranges":[{"startOffset":3073,"endOffset":3164,"count":1}],"isBlockCoverage":true},{"functionName":"throwOnMissingParent","ranges":[{"startOffset":3274,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"handleEpipeError","ranges":[{"startOffset":3532,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"handleSerializationError","ranges":[{"startOffset":3957,"endOffset":4210,"count":0}],"isBlockCoverage":false},{"functionName":"isSerializationError","ranges":[{"startOffset":4242,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"getMethodName","ranges":[{"startOffset":5059,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceName","ranges":[{"startOffset":5274,"endOffset":5323,"count":0}],"isBlockCoverage":false},{"functionName":"getOtherProcessName","ranges":[{"startOffset":5354,"endOffset":5416,"count":1},{"startOffset":5402,"endOffset":5416,"count":0}],"isBlockCoverage":true},{"functionName":"disconnect","ranges":[{"startOffset":5632,"endOffset":5708,"count":1},{"startOffset":5675,"endOffset":5706,"count":0}],"isBlockCoverage":true}]},{"scriptId":"455","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/outgoing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2299,"count":1}],"isBlockCoverage":true},{"functionName":"startSendMessage","ranges":[{"startOffset":615,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"endSendMessage","ranges":[{"startOffset":1071,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"waitForOutgoingMessages","ranges":[{"startOffset":1330,"endOffset":1742,"count":1},{"startOffset":1471,"endOffset":1477,"count":0},{"startOffset":1483,"endOffset":1740,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1700,"endOffset":1734,"count":0}],"isBlockCoverage":false},{"functionName":"hasMessageListeners","ranges":[{"startOffset":1865,"endOffset":1962,"count":1}],"isBlockCoverage":true},{"functionName":"getMinListenerCount","ranges":[{"startOffset":2157,"endOffset":2297,"count":1},{"startOffset":2294,"endOffset":2297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"456","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/strict.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3318,"count":1}],"isBlockCoverage":true},{"functionName":"handleSendStrict","ranges":[{"startOffset":515,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"validateStrictDeadlock","ranges":[{"startOffset":1068,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictRequest","ranges":[{"startOffset":1455,"endOffset":1957,"count":1},{"startOffset":1575,"endOffset":1599,"count":0},{"startOffset":1630,"endOffset":1956,"count":0}],"isBlockCoverage":true},{"functionName":"handleStrictResponse","ranges":[{"startOffset":2040,"endOffset":2262,"count":1},{"startOffset":2125,"endOffset":2210,"count":0}],"isBlockCoverage":true},{"functionName":"waitForStrictResponse","ranges":[{"startOffset":2376,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnDisconnect","ranges":[{"startOffset":3044,"endOffset":3229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/return/early-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1747,"count":1}],"isBlockCoverage":true},{"functionName":"handleEarlyError","ranges":[{"startOffset":415,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"createDummyStreams","ranges":[{"startOffset":968,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"createDummyStream","ranges":[{"startOffset":1400,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"readable","ranges":[{"startOffset":1495,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"writable","ranges":[{"startOffset":1545,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"duplex","ranges":[{"startOffset":1594,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"handleDummyPromise","ranges":[{"startOffset":1665,"endOffset":1745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/handle-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2192,"count":1}],"isBlockCoverage":true},{"functionName":"handleStdioAsync","ranges":[{"startOffset":434,"endOffset":520,"count":1}],"isBlockCoverage":true},{"functionName":"forbiddenIfAsync","ranges":[{"startOffset":548,"endOffset":665,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStream","ranges":[{"startOffset":994,"endOffset":1024,"count":0}],"isBlockCoverage":false},{"functionName":"webTransform","ranges":[{"startOffset":1027,"endOffset":1246,"count":0}],"isBlockCoverage":false},{"functionName":"duplex","ranges":[{"startOffset":1257,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"native","ranges":[{"startOffset":1307,"endOffset":1318,"count":4}],"isBlockCoverage":true},{"functionName":"fileUrl","ranges":[{"startOffset":1394,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"filePath","ranges":[{"startOffset":1456,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"webStream","ranges":[{"startOffset":1526,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"iterable","ranges":[{"startOffset":1588,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"asyncIterable","ranges":[{"startOffset":1652,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":1709,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"uint8Array","ranges":[{"startOffset":1770,"endOffset":1828,"count":0}],"isBlockCoverage":false},{"functionName":"fileUrl","ranges":[{"startOffset":1876,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"filePath","ranges":[{"startOffset":1939,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"webStream","ranges":[{"startOffset":2010,"endOffset":2058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/output-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3027,"count":1}],"isBlockCoverage":true},{"functionName":"pipeOutputAsync","ranges":[{"startOffset":536,"endOffset":1269,"count":1},{"startOffset":699,"endOffset":1057,"count":4},{"startOffset":784,"endOffset":848,"count":0},{"startOffset":1125,"endOffset":1267,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":744,"endOffset":781,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":893,"endOffset":931,"count":4}],"isBlockCoverage":true},{"functionName":"pipeTransform","ranges":[{"startOffset":1379,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"pipeStdioItem","ranges":[{"startOffset":1991,"endOffset":2426,"count":4},{"startOffset":2105,"endOffset":2260,"count":0},{"startOffset":2263,"endOffset":2301,"count":0},{"startOffset":2354,"endOffset":2359,"count":0}],"isBlockCoverage":true},{"functionName":"setStandardStreamMaxListeners","ranges":[{"startOffset":2632,"endOffset":2759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true}]},{"scriptId":"461","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/specific.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3751,"count":1},{"startOffset":3254,"endOffset":3262,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFdSpecificOptions","ranges":[{"startOffset":415,"endOffset":615,"count":1},{"startOffset":511,"endOffset":591,"count":5}],"isBlockCoverage":true},{"functionName":"normalizeFdSpecificOption","ranges":[{"startOffset":659,"endOffset":910,"count":6}],"isBlockCoverage":true},{"functionName":"getStdioLength","ranges":[{"startOffset":936,"endOffset":1063,"count":6},{"startOffset":971,"endOffset":1028,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFdSpecificValue","ranges":[{"startOffset":1099,"endOffset":1263,"count":6},{"startOffset":1169,"endOffset":1230,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeOptionObject","ranges":[{"startOffset":1296,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"compareFdName","ranges":[{"startOffset":1671,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getFdNameOrder","ranges":[{"startOffset":1777,"endOffset":1891,"count":0}],"isBlockCoverage":false},{"functionName":"parseFdName","ranges":[{"startOffset":1914,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"parseFd","ranges":[{"startOffset":2692,"endOffset":2969,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValue","ranges":[{"startOffset":3028,"endOffset":3160,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3073,"endOffset":3159,"count":24},{"startOffset":3115,"endOffset":3144,"count":20},{"startOffset":3146,"endOffset":3159,"count":4}],"isBlockCoverage":true},{"functionName":"getFdSpecificValue","ranges":[{"startOffset":3657,"endOffset":3749,"count":4},{"startOffset":3726,"endOffset":3749,"count":0}],"isBlockCoverage":true}]},{"scriptId":"462","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/forward.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1927,"count":1}],"isBlockCoverage":true},{"functionName":"getIpcEmitter","ranges":[{"startOffset":386,"endOffset":843,"count":1},{"startOffset":462,"endOffset":505,"count":0}],"isBlockCoverage":true},{"functionName":"forwardEvents","ranges":[{"startOffset":1269,"endOffset":1666,"count":1}],"isBlockCoverage":true},{"functionName":"isConnected","ranges":[{"startOffset":1767,"endOffset":1925,"count":1},{"startOffset":1900,"endOffset":1922,"count":0}],"isBlockCoverage":true}]},{"scriptId":"463","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1777,"count":1}],"isBlockCoverage":true},{"functionName":"addReference","ranges":[{"startOffset":792,"endOffset":870,"count":1}],"isBlockCoverage":true},{"functionName":"addReferenceCount","ranges":[{"startOffset":899,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"removeReference","ranges":[{"startOffset":970,"endOffset":1051,"count":1}],"isBlockCoverage":true},{"functionName":"removeReferenceCount","ranges":[{"startOffset":1083,"endOffset":1122,"count":1}],"isBlockCoverage":true},{"functionName":"undoAddedReferences","ranges":[{"startOffset":1469,"endOffset":1589,"count":1},{"startOffset":1517,"endOffset":1587,"count":0}],"isBlockCoverage":true},{"functionName":"redoAddedReferences","ranges":[{"startOffset":1661,"endOffset":1775,"count":1},{"startOffset":1709,"endOffset":1773,"count":0}],"isBlockCoverage":true}]},{"scriptId":"464","url":"node:timers/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6380,"count":1}],"isBlockCoverage":false},{"functionName":"cancelListenerHandler","ranges":[{"startOffset":690,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":862,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":2252,"endOffset":3602,"count":1},{"startOffset":2361,"endOffset":2480,"count":0},{"startOffset":2586,"endOffset":2634,"count":0},{"startOffset":2667,"endOffset":2787,"count":0},{"startOffset":2801,"endOffset":2810,"count":0},{"startOffset":2812,"endOffset":2896,"count":0},{"startOffset":3489,"endOffset":3593,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2939,"endOffset":3454,"count":1},{"startOffset":3031,"endOffset":3049,"count":0},{"startOffset":3066,"endOffset":3450,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3541,"endOffset":3592,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":3604,"endOffset":5080,"count":0}],"isBlockCoverage":false},{"functionName":"Scheduler","ranges":[{"startOffset":5625,"endOffset":5685,"count":0}],"isBlockCoverage":true},{"functionName":"yield","ranges":[{"startOffset":5731,"endOffset":5845,"count":1},{"startOffset":5774,"endOffset":5814,"count":0}],"isBlockCoverage":true},{"functionName":"wait","ranges":[{"startOffset":6046,"endOffset":6216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6314,"endOffset":6359,"count":1}],"isBlockCoverage":true}]},{"scriptId":"465","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/start.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":335,"count":1}],"isBlockCoverage":true},{"functionName":"logCommand","ranges":[{"startOffset":164,"endOffset":333,"count":1},{"startOffset":243,"endOffset":332,"count":0}],"isBlockCoverage":true}]},{"scriptId":"466","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/info.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1511,"count":1}],"isBlockCoverage":true},{"functionName":"getVerboseInfo","ranges":[{"startOffset":175,"endOffset":358,"count":1}],"isBlockCoverage":true},{"functionName":"getCommandId","ranges":[{"startOffset":382,"endOffset":440,"count":1},{"startOffset":414,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"validateVerbose","ranges":[{"startOffset":906,"endOffset":1509,"count":1},{"startOffset":953,"endOffset":1507,"count":4},{"startOffset":982,"endOffset":1078,"count":0},{"startOffset":1106,"endOffset":1202,"count":0},{"startOffset":1246,"endOffset":1278,"count":0},{"startOffset":1280,"endOffset":1504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1326,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/return/duration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"getStartTime","ranges":[{"startOffset":120,"endOffset":141,"count":1}],"isBlockCoverage":true},{"functionName":"getDurationMs","ranges":[{"startOffset":257,"endOffset":311,"count":1}],"isBlockCoverage":true}]},{"scriptId":"468","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3655,"count":1}],"isBlockCoverage":true},{"functionName":"joinCommand","ranges":[{"startOffset":175,"endOffset":477,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":353,"endOffset":425,"count":1}],"isBlockCoverage":true},{"functionName":"escapeLines","ranges":[{"startOffset":575,"endOffset":687,"count":0}],"isBlockCoverage":false},{"functionName":"escapeControlCharacters","ranges":[{"startOffset":722,"endOffset":814,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":767,"endOffset":813,"count":0}],"isBlockCoverage":false},{"functionName":"escapeControlCharacter","ranges":[{"startOffset":848,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"getSpecialCharRegExp","ranges":[{"startOffset":1727,"endOffset":2428,"count":1},{"startOffset":1998,"endOffset":2426,"count":0}],"isBlockCoverage":true},{"functionName":"quoteString","ranges":[{"startOffset":3379,"endOffset":3613,"count":1},{"startOffset":3475,"endOffset":3554,"count":0},{"startOffset":3557,"endOffset":3610,"count":0}],"isBlockCoverage":true}]},{"scriptId":"469","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/npm-run-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1470,"count":1}],"isBlockCoverage":true},{"functionName":"npmRunPath","ranges":[{"startOffset":179,"endOffset":762,"count":1},{"startOffset":663,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"applyPreferLocal","ranges":[{"startOffset":790,"endOffset":1011,"count":1},{"startOffset":874,"endOffset":1009,"count":8},{"startOffset":975,"endOffset":1006,"count":0}],"isBlockCoverage":true},{"functionName":"applyExecPath","ranges":[{"startOffset":1080,"endOffset":1256,"count":1},{"startOffset":1225,"endOffset":1254,"count":0}],"isBlockCoverage":true},{"functionName":"npmRunPathEnv","ranges":[{"startOffset":1288,"endOffset":1468,"count":1}],"isBlockCoverage":true}]},{"scriptId":"470","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/terminate/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2507,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeKillSignal","ranges":[{"startOffset":197,"endOffset":402,"count":1},{"startOffset":279,"endOffset":350,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSignalArgument","ranges":[{"startOffset":444,"endOffset":538,"count":1},{"startOffset":468,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSignal","ranges":[{"startOffset":565,"endOffset":976,"count":2},{"startOffset":648,"endOffset":718,"count":0},{"startOffset":833,"endOffset":975,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSignalInteger","ranges":[{"startOffset":1010,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsIntegerToName","ranges":[{"startOffset":1308,"endOffset":1436,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1374,"endOffset":1434,"count":31}],"isBlockCoverage":true},{"functionName":"normalizeSignalName","ranges":[{"startOffset":1524,"endOffset":1917,"count":2},{"startOffset":1617,"endOffset":1916,"count":0}],"isBlockCoverage":true},{"functionName":"getAvailableSignals","ranges":[{"startOffset":1948,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableSignalNames","ranges":[{"startOffset":2103,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableSignalIntegers","ranges":[{"startOffset":2238,"endOffset":2381,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalDescription","ranges":[{"startOffset":2462,"endOffset":2505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/terminate/cancel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"validateCancelSignal","ranges":[{"startOffset":133,"endOffset":367,"count":1},{"startOffset":187,"endOffset":261,"count":0},{"startOffset":263,"endOffset":365,"count":0}],"isBlockCoverage":true},{"functionName":"throwOnCancel","ranges":[{"startOffset":499,"endOffset":688,"count":1},{"startOffset":595,"endOffset":612,"count":0},{"startOffset":620,"endOffset":688,"count":0}],"isBlockCoverage":true},{"functionName":"terminateOnCancel","ranges":[{"startOffset":717,"endOffset":910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/terminate/graceful.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1941,"count":1}],"isBlockCoverage":true},{"functionName":"validateGracefulCancel","ranges":[{"startOffset":224,"endOffset":726,"count":1},{"startOffset":318,"endOffset":724,"count":0}],"isBlockCoverage":true},{"functionName":"throwOnGracefulCancel","ranges":[{"startOffset":876,"endOffset":1096,"count":1},{"startOffset":991,"endOffset":1090,"count":0}],"isBlockCoverage":true},{"functionName":"sendOnAbort","ranges":[{"startOffset":1119,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"getReason","ranges":[{"startOffset":1672,"endOffset":1939,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/terminate/timeout.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":848,"count":1}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":167,"endOffset":391,"count":1},{"startOffset":211,"endOffset":256,"count":0},{"startOffset":258,"endOffset":389,"count":0}],"isBlockCoverage":true},{"functionName":"throwOnTimeout","ranges":[{"startOffset":471,"endOffset":625,"count":1},{"startOffset":563,"endOffset":625,"count":0}],"isBlockCoverage":true},{"functionName":"killAfterTimeout","ranges":[{"startOffset":653,"endOffset":846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/ipc-input.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1081,"count":1}],"isBlockCoverage":true},{"functionName":"validateIpcInputOption","ranges":[{"startOffset":108,"endOffset":346,"count":1},{"startOffset":189,"endOffset":345,"count":0}],"isBlockCoverage":true},{"functionName":"validateAdvancedInput","ranges":[{"startOffset":379,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"validateJsonInput","ranges":[{"startOffset":580,"endOffset":743,"count":0}],"isBlockCoverage":false},{"functionName":"sendIpcInput","ranges":[{"startOffset":958,"endOffset":1079,"count":1},{"startOffset":1035,"endOffset":1078,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/encoding-option.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1492,"count":1}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":62,"endOffset":617,"count":1},{"startOffset":124,"endOffset":616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":414,"endOffset":467,"count":0}],"isBlockCoverage":false},{"functionName":"getCorrectEncoding","ranges":[{"startOffset":872,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"serializeEncoding","ranges":[{"startOffset":1413,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/arguments/cwd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1012,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeCwd","ranges":[{"startOffset":207,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultCwd","ranges":[{"startOffset":361,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"fixCwdError","ranges":[{"startOffset":624,"endOffset":1010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/return/message.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4238,"count":1}],"isBlockCoverage":true},{"functionName":"createMessages","ranges":[{"startOffset":552,"endOffset":1720,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorPrefix","ranges":[{"startOffset":1746,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"getForcefulSuffix","ranges":[{"startOffset":3121,"endOffset":3276,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalMessage","ranges":[{"startOffset":3306,"endOffset":3691,"count":0}],"isBlockCoverage":false},{"functionName":"serializeIpcMessage","ranges":[{"startOffset":3722,"endOffset":3803,"count":0}],"isBlockCoverage":false},{"functionName":"serializeMessagePart","ranges":[{"startOffset":3835,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"serializeMessageItem","ranges":[{"startOffset":4060,"endOffset":4236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3946,"count":1}],"isBlockCoverage":true},{"functionName":"createReadable","ranges":[{"startOffset":667,"endOffset":1579,"count":0}],"isBlockCoverage":false},{"functionName":"getSubprocessStdout","ranges":[{"startOffset":1676,"endOffset":1934,"count":0}],"isBlockCoverage":false},{"functionName":"getReadableOptions","ranges":[{"startOffset":1971,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"getReadableMethods","ranges":[{"startOffset":2257,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"onRead","ranges":[{"startOffset":2695,"endOffset":2905,"count":0}],"isBlockCoverage":false},{"functionName":"onStdoutFinished","ranges":[{"startOffset":3070,"endOffset":3489,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableDestroy","ranges":[{"startOffset":3594,"endOffset":3837,"count":0}],"isBlockCoverage":false},{"functionName":"destroyOtherReadable","ranges":[{"startOffset":3869,"endOffset":3944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3572,"count":1}],"isBlockCoverage":true},{"functionName":"createWritable","ranges":[{"startOffset":451,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"getSubprocessStdin","ranges":[{"startOffset":1144,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"getWritableMethods","ranges":[{"startOffset":1550,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"onWrite","ranges":[{"startOffset":1822,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"onWritableFinal","ranges":[{"startOffset":2426,"endOffset":2645,"count":0}],"isBlockCoverage":false},{"functionName":"onStdinFinished","ranges":[{"startOffset":2753,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"onWritableDestroy","ranges":[{"startOffset":3139,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"destroyOtherWritable","ranges":[{"startOffset":3495,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2262,"count":1}],"isBlockCoverage":true},{"functionName":"createDuplex","ranges":[{"startOffset":514,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"onDuplexDestroy","ranges":[{"startOffset":1907,"endOffset":2260,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/iterable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":951,"count":1}],"isBlockCoverage":true},{"functionName":"createIterable","ranges":[{"startOffset":262,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"iterateOnStdoutData","ranges":[{"startOffset":746,"endOffset":949,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/output.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2724,"count":1}],"isBlockCoverage":true},{"functionName":"shouldLogOutput","ranges":[{"startOffset":532,"endOffset":859,"count":0}],"isBlockCoverage":false},{"functionName":"fdUsesVerbose","ranges":[{"startOffset":1145,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"logLines","ranges":[{"startOffset":1332,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"logLinesSync","ranges":[{"startOffset":1600,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"isPipingStream","ranges":[{"startOffset":2433,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"logLine","ranges":[{"startOffset":2549,"endOffset":2722,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/split.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3318,"count":1}],"isBlockCoverage":true},{"functionName":"getSplitLinesGenerator","ranges":[{"startOffset":108,"endOffset":233,"count":0}],"isBlockCoverage":false},{"functionName":"splitLinesSync","ranges":[{"startOffset":302,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"splitLinesItemSync","ranges":[{"startOffset":499,"endOffset":646,"count":0}],"isBlockCoverage":false},{"functionName":"initializeSplitLines","ranges":[{"startOffset":678,"endOffset":866,"count":0}],"isBlockCoverage":false},{"functionName":"splitGenerator","ranges":[{"startOffset":986,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"getNewlineLength","ranges":[{"startOffset":1702,"endOffset":1891,"count":0}],"isBlockCoverage":false},{"functionName":"linesFinal","ranges":[{"startOffset":1913,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"getAppendNewlineGenerator","ranges":[{"startOffset":2192,"endOffset":2374,"count":0}],"isBlockCoverage":false},{"functionName":"appendNewlineGenerator","ranges":[{"startOffset":2408,"endOffset":2741,"count":0}],"isBlockCoverage":false},{"functionName":"concatString","ranges":[{"startOffset":2765,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"concatUint8Array","ranges":[{"startOffset":2965,"endOffset":3154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/strip-final-newline/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":681,"count":1}],"isBlockCoverage":true},{"functionName":"stripFinalNewline","ranges":[{"startOffset":15,"endOffset":306,"count":0}],"isBlockCoverage":false},{"functionName":"stripFinalNewlineString","ranges":[{"startOffset":340,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"stripFinalNewlineBinary","ranges":[{"startOffset":464,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/utils/standard-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"isStandardStream","ranges":[{"startOffset":69,"endOffset":112,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamName","ranges":[{"startOffset":295,"endOffset":365,"count":4},{"startOffset":342,"endOffset":365,"count":1}],"isBlockCoverage":true}]},{"scriptId":"486","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/complete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1}],"isBlockCoverage":true},{"functionName":"logResult","ranges":[{"startOffset":267,"endOffset":408,"count":1},{"startOffset":338,"endOffset":407,"count":0}],"isBlockCoverage":true},{"functionName":"logDuration","ranges":[{"startOffset":431,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/handle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7405,"count":1}],"isBlockCoverage":true},{"functionName":"handleStdio","ranges":[{"startOffset":883,"endOffset":1372,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1043,"endOffset":1141,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1301,"endOffset":1343,"count":4}],"isBlockCoverage":true},{"functionName":"getFileDescriptor","ranges":[{"startOffset":1401,"endOffset":2147,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1751,"endOffset":1852,"count":4}],"isBlockCoverage":true},{"functionName":"initializeStdioItems","ranges":[{"startOffset":2400,"endOffset":2898,"count":4},{"startOffset":2495,"endOffset":2508,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2571,"endOffset":2618,"count":4}],"isBlockCoverage":true},{"functionName":"initializeStdioItem","ranges":[{"startOffset":2929,"endOffset":3022,"count":4}],"isBlockCoverage":true},{"functionName":"validateStdioArray","ranges":[{"startOffset":3052,"endOffset":3439,"count":4},{"startOffset":3126,"endOffset":3213,"count":0},{"startOffset":3249,"endOffset":3438,"count":0}],"isBlockCoverage":true},{"functionName":"validateStreams","ranges":[{"startOffset":3702,"endOffset":3793,"count":4}],"isBlockCoverage":true},{"functionName":"validateFileStdio","ranges":[{"startOffset":3822,"endOffset":4230,"count":4},{"startOffset":3881,"endOffset":4060,"count":0},{"startOffset":4102,"endOffset":4228,"count":0}],"isBlockCoverage":true},{"functionName":"validateFileObjectMode","ranges":[{"startOffset":4264,"endOffset":4563,"count":4},{"startOffset":4326,"endOffset":4561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4367,"endOffset":4399,"count":0}],"isBlockCoverage":false},{"functionName":"getFinalFileDescriptors","ranges":[{"startOffset":4824,"endOffset":5234,"count":1},{"startOffset":4980,"endOffset":5127,"count":4},{"startOffset":5158,"endOffset":5232,"count":0}],"isBlockCoverage":true},{"functionName":"getFinalFileDescriptor","ranges":[{"startOffset":5268,"endOffset":5613,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5426,"endOffset":5547,"count":4}],"isBlockCoverage":true},{"functionName":"addStreamProperties","ranges":[{"startOffset":5644,"endOffset":6020,"count":4},{"startOffset":5866,"endOffset":5920,"count":0}],"isBlockCoverage":true},{"functionName":"cleanupCustomStreams","ranges":[{"startOffset":6527,"endOffset":6729,"count":0}],"isBlockCoverage":false},{"functionName":"forwardStdio","ranges":[{"startOffset":7184,"endOffset":7403,"count":4},{"startOffset":7228,"endOffset":7319,"count":0},{"startOffset":7392,"endOffset":7400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7255,"endOffset":7290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/exit-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1867,"count":1}],"isBlockCoverage":true},{"functionName":"waitForExit","ranges":[{"startOffset":561,"endOffset":732,"count":1}],"isBlockCoverage":true},{"functionName":"waitForExitOrError","ranges":[{"startOffset":762,"endOffset":1075,"count":1},{"startOffset":952,"endOffset":969,"count":0},{"startOffset":1015,"endOffset":1050,"count":0}],"isBlockCoverage":true},{"functionName":"waitForSubprocessExit","ranges":[{"startOffset":1108,"endOffset":1237,"count":0}],"isBlockCoverage":false},{"functionName":"waitForSuccessfulExit","ranges":[{"startOffset":1328,"endOffset":1545,"count":1},{"startOffset":1480,"endOffset":1514,"count":0}],"isBlockCoverage":true},{"functionName":"isSubprocessErrorExit","ranges":[{"startOffset":1631,"endOffset":1699,"count":1},{"startOffset":1676,"endOffset":1699,"count":0}],"isBlockCoverage":true},{"functionName":"isFailedExit","ranges":[{"startOffset":1810,"endOffset":1865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"489","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3752,"count":1}],"isBlockCoverage":true},{"functionName":"generatorToStream","ranges":[{"startOffset":1416,"endOffset":2561,"count":0}],"isBlockCoverage":false},{"functionName":"runGeneratorsSync","ranges":[{"startOffset":2642,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalGenerators","ranges":[{"startOffset":3158,"endOffset":3750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/concurrent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1155,"count":1}],"isBlockCoverage":true},{"functionName":"initializeConcurrentStreams","ranges":[{"startOffset":213,"endOffset":321,"count":1}],"isBlockCoverage":true},{"functionName":"addConcurrentStream","ranges":[{"startOffset":501,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"waitForConcurrentStreams","ranges":[{"startOffset":935,"endOffset":1153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/type.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6160,"count":1}],"isBlockCoverage":true},{"functionName":"getStdioItemType","ranges":[{"startOffset":272,"endOffset":1033,"count":4},{"startOffset":327,"endOffset":358,"count":0},{"startOffset":389,"endOffset":415,"count":0},{"startOffset":436,"endOffset":460,"count":0},{"startOffset":492,"endOffset":517,"count":0},{"startOffset":544,"endOffset":570,"count":0},{"startOffset":618,"endOffset":641,"count":0},{"startOffset":669,"endOffset":696,"count":0},{"startOffset":733,"endOffset":763,"count":0},{"startOffset":795,"endOffset":820,"count":0},{"startOffset":853,"endOffset":922,"count":0},{"startOffset":956,"endOffset":1012,"count":0}],"isBlockCoverage":true},{"functionName":"getTransformObjectType","ranges":[{"startOffset":1067,"endOffset":1350,"count":0}],"isBlockCoverage":false},{"functionName":"getDuplexType","ranges":[{"startOffset":1375,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformStreamType","ranges":[{"startOffset":1516,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"validateNonGeneratorType","ranges":[{"startOffset":1671,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"checkUndefinedOption","ranges":[{"startOffset":1950,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratorObjectType","ranges":[{"startOffset":2169,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"checkBooleanOption","ranges":[{"startOffset":3075,"endOffset":3237,"count":0}],"isBlockCoverage":false},{"functionName":"isGenerator","ranges":[{"startOffset":3260,"endOffset":3318,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncGenerator","ranges":[{"startOffset":3352,"endOffset":3436,"count":4}],"isBlockCoverage":true},{"functionName":"isSyncGenerator","ranges":[{"startOffset":3462,"endOffset":3541,"count":4}],"isBlockCoverage":true},{"functionName":"isTransformOptions","ranges":[{"startOffset":3570,"endOffset":3661,"count":4},{"startOffset":3598,"endOffset":3661,"count":0}],"isBlockCoverage":true},{"functionName":"isUrl","ranges":[{"startOffset":3685,"endOffset":3750,"count":8}],"isBlockCoverage":true},{"functionName":"isRegularUrl","ranges":[{"startOffset":3780,"endOffset":3831,"count":4},{"startOffset":3802,"endOffset":3831,"count":0}],"isBlockCoverage":true},{"functionName":"isFilePathObject","ranges":[{"startOffset":3859,"endOffset":3954,"count":4},{"startOffset":3887,"endOffset":3921,"count":0},{"startOffset":3923,"endOffset":3954,"count":0}],"isBlockCoverage":true},{"functionName":"isFilePathString","ranges":[{"startOffset":3988,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownStdioString","ranges":[{"startOffset":4059,"endOffset":4159,"count":4}],"isBlockCoverage":true},{"functionName":"isReadableStream","ranges":[{"startOffset":4276,"endOffset":4352,"count":8}],"isBlockCoverage":true},{"functionName":"isWritableStream","ranges":[{"startOffset":4386,"endOffset":4462,"count":4}],"isBlockCoverage":true},{"functionName":"isWebStream","ranges":[{"startOffset":4484,"endOffset":4543,"count":4}],"isBlockCoverage":true},{"functionName":"isTransformStream","ranges":[{"startOffset":4571,"endOffset":4650,"count":4},{"startOffset":4614,"endOffset":4650,"count":0}],"isBlockCoverage":true},{"functionName":"isAsyncIterableObject","ranges":[{"startOffset":4683,"endOffset":4760,"count":4},{"startOffset":4708,"endOffset":4760,"count":0}],"isBlockCoverage":true},{"functionName":"isIterableObject","ranges":[{"startOffset":4787,"endOffset":4859,"count":4},{"startOffset":4812,"endOffset":4859,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":4878,"endOffset":4930,"count":8},{"startOffset":4913,"endOffset":4930,"count":0}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/pipe/pipe-arguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3227,"count":1}],"isBlockCoverage":true},{"functionName":"normalizePipeArguments","ranges":[{"startOffset":317,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"getDestinationStream","ranges":[{"startOffset":955,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"getDestination","ranges":[{"startOffset":1661,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"mapDestinationArguments","ranges":[{"startOffset":2972,"endOffset":3040,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceStream","ranges":[{"startOffset":3067,"endOffset":3225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/pipe/throw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1504,"count":1}],"isBlockCoverage":true},{"functionName":"handlePipeArgumentsError","ranges":[{"startOffset":280,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"getPipeArgumentsError","ranges":[{"startOffset":686,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"createNonCommandError","ranges":[{"startOffset":1219,"endOffset":1444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/pipe/sequence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":950,"count":1}],"isBlockCoverage":true},{"functionName":"waitForBothSubprocesses","ranges":[{"startOffset":413,"endOffset":948,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/pipe/streaming.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2410,"count":1}],"isBlockCoverage":true},{"functionName":"pipeSubprocessStream","ranges":[{"startOffset":723,"endOffset":1242,"count":0}],"isBlockCoverage":false},{"functionName":"pipeFirstSubprocessStream","ranges":[{"startOffset":1368,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"pipeMoreSubprocessStream","ranges":[{"startOffset":1619,"endOffset":1775,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupMergedStreamsMap","ranges":[{"startOffset":1810,"endOffset":1990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/pipe/abort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":746,"count":1}],"isBlockCoverage":true},{"functionName":"unpipeOnAbort","ranges":[{"startOffset":245,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"unpipeOnSignalAbort","ranges":[{"startOffset":395,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@sindresorhus/merge-streams/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6685,"count":1}],"isBlockCoverage":true},{"functionName":"mergeStreams","ranges":[{"startOffset":188,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":805,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1115,"endOffset":2185,"count":0}],"isBlockCoverage":true},{"functionName":"onMergedStreamFinished","ranges":[{"startOffset":2218,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"onMergedStreamEnd","ranges":[{"startOffset":2690,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"onInputStreamsUnpipe","ranges":[{"startOffset":2918,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":3169,"endOffset":3309,"count":0}],"isBlockCoverage":false},{"functionName":"endWhenStreamsDone","ranges":[{"startOffset":3339,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"afterMergedStreamFinished","ranges":[{"startOffset":4233,"endOffset":4445,"count":0}],"isBlockCoverage":false},{"functionName":"onInputStreamEnd","ranges":[{"startOffset":4473,"endOffset":4921,"count":0}],"isBlockCoverage":false},{"functionName":"onInputStreamUnpipe","ranges":[{"startOffset":4952,"endOffset":5224,"count":0}],"isBlockCoverage":false},{"functionName":"endStream","ranges":[{"startOffset":5245,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrAbortStream","ranges":[{"startOffset":5331,"endOffset":5447,"count":0}],"isBlockCoverage":false},{"functionName":"isAbortError","ranges":[{"startOffset":5537,"endOffset":5590,"count":0}],"isBlockCoverage":false},{"functionName":"abortStream","ranges":[{"startOffset":5613,"endOffset":5692,"count":0}],"isBlockCoverage":false},{"functionName":"errorStream","ranges":[{"startOffset":5920,"endOffset":6026,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":6042,"endOffset":6050,"count":0}],"isBlockCoverage":false},{"functionName":"updateMaxListeners","ranges":[{"startOffset":6080,"endOffset":6314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/stdio.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1279,"count":1}],"isBlockCoverage":true},{"functionName":"waitForStdioStreams","ranges":[{"startOffset":231,"endOffset":582,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":350,"endOffset":581,"count":4}],"isBlockCoverage":true},{"functionName":"waitForSubprocessStream","ranges":[{"startOffset":717,"endOffset":1277,"count":5},{"startOffset":867,"endOffset":1276,"count":0}],"isBlockCoverage":true}]},{"scriptId":"499","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1328,"count":1}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":7,"endOffset":281,"count":9},{"startOffset":118,"endOffset":239,"count":0},{"startOffset":242,"endOffset":278,"count":0}],"isBlockCoverage":true},{"functionName":"isWritableStream","ranges":[{"startOffset":290,"endOffset":685,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":694,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexStream","ranges":[{"startOffset":1059,"endOffset":1185,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":1194,"endOffset":1327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/contents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3244,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamOutput","ranges":[{"startOffset":482,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"logOutputAsync","ranges":[{"startOffset":1267,"endOffset":1715,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":1961,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamContents","ranges":[{"startOffset":2094,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedData","ranges":[{"startOffset":2925,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"handleBufferedData","ranges":[{"startOffset":3147,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/buffer-messages.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1147,"count":1}],"isBlockCoverage":true},{"functionName":"waitForIpcOutput","ranges":[{"startOffset":312,"endOffset":998,"count":1},{"startOffset":435,"endOffset":459,"count":0},{"startOffset":821,"endOffset":910,"count":0},{"startOffset":929,"endOffset":973,"count":0}],"isBlockCoverage":true},{"functionName":"getBufferedIpcOutput","ranges":[{"startOffset":1037,"endOffset":1145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/resolve/wait-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5084,"count":1}],"isBlockCoverage":true},{"functionName":"waitForStream","ranges":[{"startOffset":355,"endOffset":868,"count":0}],"isBlockCoverage":false},{"functionName":"handleStdinDestroy","ranges":[{"startOffset":2037,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"spyOnStdinDestroy","ranges":[{"startOffset":2269,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"setStdinCleanedUp","ranges":[{"startOffset":2532,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"handleStreamError","ranges":[{"startOffset":3154,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnoreStreamError","ranges":[{"startOffset":3339,"endOffset":3644,"count":0}],"isBlockCoverage":false},{"functionName":"isInputFileDescriptor","ranges":[{"startOffset":4222,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"isStreamAbort","ranges":[{"startOffset":4588,"endOffset":4641,"count":0}],"isBlockCoverage":false},{"functionName":"isStreamEpipe","ranges":[{"startOffset":5050,"endOffset":5082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/utils/max-listeners.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"incrementMaxListeners","ranges":[{"startOffset":159,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1319,"count":1}],"isBlockCoverage":true},{"functionName":"pipeStreams","ranges":[{"startOffset":229,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"onSourceFinish","ranges":[{"startOffset":535,"endOffset":781,"count":0}],"isBlockCoverage":false},{"functionName":"endDestinationStream","ranges":[{"startOffset":820,"endOffset":891,"count":0}],"isBlockCoverage":false},{"functionName":"onDestinationFinish","ranges":[{"startOffset":978,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"abortSourceStream","ranges":[{"startOffset":1257,"endOffset":1317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1945,"count":1}],"isBlockCoverage":true},{"functionName":"getAsyncIterable","ranges":[{"startOffset":142,"endOffset":669,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamIterable","ranges":[{"startOffset":847,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"handleStreamEnd","ranges":[{"startOffset":1563,"endOffset":1809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true}]},{"scriptId":"507","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/incoming.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3544,"count":1}],"isBlockCoverage":true},{"functionName":"onMessage","ranges":[{"startOffset":1975,"endOffset":2921,"count":1},{"startOffset":2126,"endOffset":2140,"count":0},{"startOffset":2366,"endOffset":2380,"count":0}],"isBlockCoverage":true},{"functionName":"onDisconnect","ranges":[{"startOffset":3042,"endOffset":3500,"count":1},{"startOffset":3241,"endOffset":3334,"count":0}],"isBlockCoverage":true}]},{"scriptId":"508","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1649,"count":1}],"isBlockCoverage":true},{"functionName":"isVerbose","ranges":[{"startOffset":159,"endOffset":226,"count":3}],"isBlockCoverage":true},{"functionName":"isFullVerbose","ranges":[{"startOffset":295,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"getVerboseFunction","ranges":[{"startOffset":480,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"getFdVerbose","ranges":[{"startOffset":875,"endOffset":993,"count":4},{"startOffset":922,"endOffset":952,"count":3},{"startOffset":954,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"getFdGenericVerbose","ranges":[{"startOffset":1310,"endOffset":1446,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1375,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1405,"endOffset":1445,"count":9}],"isBlockCoverage":true},{"functionName":"isVerboseFunction","ranges":[{"startOffset":1545,"endOffset":1589,"count":12}],"isBlockCoverage":true}]},{"scriptId":"509","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1653,"count":1}],"isBlockCoverage":true},{"functionName":"verboseLog","ranges":[{"startOffset":349,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"getVerboseObject","ranges":[{"startOffset":696,"endOffset":913,"count":0}],"isBlockCoverage":false},{"functionName":"getPrintedLines","ranges":[{"startOffset":940,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"getPrintedLine","ranges":[{"startOffset":1091,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"serializeVerboseMessage","ranges":[{"startOffset":1392,"endOffset":1602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/npm-run-path/node_modules/path-key/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"pathKey","ranges":[{"startOffset":15,"endOffset":262,"count":1},{"startOffset":171,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":213,"endOffset":248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/npm-run-path/node_modules/unicorn-magic/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1251,"count":1}],"isBlockCoverage":true},{"functionName":"toPath","ranges":[{"startOffset":273,"endOffset":376,"count":3},{"startOffset":335,"endOffset":361,"count":1},{"startOffset":362,"endOffset":373,"count":2}],"isBlockCoverage":true},{"functionName":"rootDirectory","ranges":[{"startOffset":385,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"traversePathUp","ranges":[{"startOffset":475,"endOffset":787,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":524,"endOffset":780,"count":1},{"startOffset":664,"endOffset":776,"count":8}],"isBlockCoverage":true},{"functionName":"execFile","ranges":[{"startOffset":846,"endOffset":1006,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":1015,"endOffset":1219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/human-signals/build/src/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1208,"count":1}],"isBlockCoverage":true},{"functionName":"getSignalsByName","ranges":[{"startOffset":134,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"getSignalByName","ranges":[{"startOffset":250,"endOffset":385,"count":69}],"isBlockCoverage":true},{"functionName":"getSignalsByNumber","ranges":[{"startOffset":464,"endOffset":650,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":558,"endOffset":608,"count":65}],"isBlockCoverage":true},{"functionName":"getSignalByNumber","ranges":[{"startOffset":677,"endOffset":935,"count":65},{"startOffset":769,"endOffset":781,"count":3},{"startOffset":781,"endOffset":934,"count":62}],"isBlockCoverage":true},{"functionName":"findSignalByNumber","ranges":[{"startOffset":965,"endOffset":1155,"count":65},{"startOffset":1079,"endOffset":1096,"count":30},{"startOffset":1096,"endOffset":1154,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1011,"endOffset":1053,"count":2969}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1118,"endOffset":1152,"count":1890}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/utils/abort-signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"onAbortedSignal","ranges":[{"startOffset":176,"endOffset":301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/io/iterate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3692,"count":1}],"isBlockCoverage":true},{"functionName":"iterateOnSubprocessStream","ranges":[{"startOffset":443,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"stopReadingOnExit","ranges":[{"startOffset":886,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"iterateForResult","ranges":[{"startOffset":1183,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"stopReadingOnStreamEnd","ranges":[{"startOffset":1660,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"iterateOnStream","ranges":[{"startOffset":1830,"endOffset":2388,"count":0}],"isBlockCoverage":false},{"functionName":"iterateOnData","ranges":[{"startOffset":2974,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"getGenerators","ranges":[{"startOffset":3468,"endOffset":3690,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"node:v8","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13337,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":2300,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":2811,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":4440,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":4992,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":6167,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":6964,"endOffset":7374,"count":0}],"isBlockCoverage":false},{"functionName":"setHeapSnapshotNearHeapLimit","ranges":[{"startOffset":7428,"endOffset":7734,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":8005,"endOffset":8321,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewTypeToIndex","ranges":[{"startOffset":8324,"endOffset":9056,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewIndexToType","ranges":[{"startOffset":9058,"endOffset":9638,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":9687,"endOffset":9775,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":9945,"endOffset":10979,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":11170,"endOffset":11989,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":12113,"endOffset":12257,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":12433,"endOffset":12558,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12560,"endOffset":12878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"node:internal/heap_utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2427,"count":1}],"isBlockCoverage":false},{"functionName":"getHeapSnapshotOptions","ranges":[{"startOffset":708,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":1141,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":1299,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1372,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1556,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"queryObjects","ranges":[{"startOffset":1661,"endOffset":2339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"node:internal/promise_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3074,"count":1}],"isBlockCoverage":false},{"functionName":"initAll","ranges":[{"startOffset":476,"endOffset":974,"count":0}],"isBlockCoverage":false},{"functionName":"makeRunHook","ranges":[{"startOffset":976,"endOffset":1512,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1014,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"maybeFastPath","ranges":[{"startOffset":1650,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1737,"endOffset":2029,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2031,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"makeUseHook","ranges":[{"startOffset":2193,"endOffset":2433,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2259,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":2592,"endOffset":2990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/normalize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3261,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeTransforms","ranges":[{"startOffset":373,"endOffset":550,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":445,"endOffset":483,"count":4}],"isBlockCoverage":true},{"functionName":"getTransforms","ranges":[{"startOffset":575,"endOffset":1041,"count":4},{"startOffset":833,"endOffset":988,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":666,"endOffset":703,"count":4}],"isBlockCoverage":true},{"functionName":"normalizeTransform","ranges":[{"startOffset":1071,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDuplex","ranges":[{"startOffset":1505,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeTransformStream","ranges":[{"startOffset":2169,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeGenerator","ranges":[{"startOffset":2567,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"sortTransforms","ranges":[{"startOffset":3166,"endOffset":3259,"count":4},{"startOffset":3218,"endOffset":3243,"count":1},{"startOffset":3244,"endOffset":3259,"count":3}],"isBlockCoverage":true}]},{"scriptId":"519","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/convert/shared.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"safeWaitForSubprocessStdin","ranges":[{"startOffset":147,"endOffset":295,"count":0}],"isBlockCoverage":false},{"functionName":"safeWaitForSubprocessStdout","ranges":[{"startOffset":341,"endOffset":493,"count":0}],"isBlockCoverage":false},{"functionName":"waitForSubprocessStdin","ranges":[{"startOffset":534,"endOffset":646,"count":0}],"isBlockCoverage":false},{"functionName":"waitForSubprocessStdout","ranges":[{"startOffset":688,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"waitForSubprocess","ranges":[{"startOffset":940,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"destroyOtherStream","ranges":[{"startOffset":1060,"endOffset":1199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/pretty-ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4170,"count":1}],"isBlockCoverage":true},{"functionName":"isZero","ranges":[{"startOffset":58,"endOffset":94,"count":0}],"isBlockCoverage":false},{"functionName":"pluralize","ranges":[{"startOffset":114,"endOffset":180,"count":0}],"isBlockCoverage":false},{"functionName":"prettyMilliseconds","ranges":[{"startOffset":301,"endOffset":4169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":306,"count":1}],"isBlockCoverage":true},{"functionName":"logError","ranges":[{"startOffset":145,"endOffset":304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/object-mode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1881,"count":1}],"isBlockCoverage":true},{"functionName":"getTransformObjectModes","ranges":[{"startOffset":674,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputObjectModes","ranges":[{"startOffset":892,"endOffset":1139,"count":0}],"isBlockCoverage":false},{"functionName":"getInputObjectModes","ranges":[{"startOffset":1170,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"getFdObjectMode","ranges":[{"startOffset":1593,"endOffset":1879,"count":4},{"startOffset":1759,"endOffset":1833,"count":0},{"startOffset":1836,"endOffset":1876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1665,"endOffset":1702,"count":4}],"isBlockCoverage":true}]},{"scriptId":"523","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/direction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2862,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamDirection","ranges":[{"startOffset":667,"endOffset":1045,"count":4},{"startOffset":835,"endOffset":867,"count":1},{"startOffset":869,"endOffset":987,"count":0},{"startOffset":1022,"endOffset":1042,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":742,"endOffset":797,"count":4}],"isBlockCoverage":true},{"functionName":"getStdioItemDirection","ranges":[{"startOffset":1078,"endOffset":1170,"count":4},{"startOffset":1134,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"anyDirection","ranges":[{"startOffset":1303,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"alwaysInput","ranges":[{"startOffset":1340,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"webStream","ranges":[{"startOffset":1680,"endOffset":1733,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStream","ranges":[{"startOffset":1736,"endOffset":1921,"count":0}],"isBlockCoverage":false},{"functionName":"native","ranges":[{"startOffset":1976,"endOffset":2253,"count":1},{"startOffset":2106,"endOffset":2146,"count":0},{"startOffset":2195,"endOffset":2250,"count":0}],"isBlockCoverage":true},{"functionName":"getStandardStreamDirection","ranges":[{"startOffset":2294,"endOffset":2456,"count":1},{"startOffset":2346,"endOffset":2368,"count":0},{"startOffset":2431,"endOffset":2454,"count":0}],"isBlockCoverage":true}]},{"scriptId":"524","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3771,"count":1}],"isBlockCoverage":true},{"functionName":"handleNativeStream","ranges":[{"startOffset":793,"endOffset":1070,"count":4},{"startOffset":893,"endOffset":913,"count":0},{"startOffset":939,"endOffset":1016,"count":0},{"startOffset":1019,"endOffset":1067,"count":0}],"isBlockCoverage":true},{"functionName":"handleNativeStreamSync","ranges":[{"startOffset":1245,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetFd","ranges":[{"startOffset":1685,"endOffset":2228,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetFdNumber","ranges":[{"startOffset":2257,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"handleNativeStreamAsync","ranges":[{"startOffset":2551,"endOffset":2997,"count":0}],"isBlockCoverage":false},{"functionName":"getStandardStream","ranges":[{"startOffset":3513,"endOffset":3769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/duplicate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3975,"count":1}],"isBlockCoverage":true},{"functionName":"filterDuplicates","ranges":[{"startOffset":277,"endOffset":535,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":309,"endOffset":534,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":533,"count":4},{"startOffset":453,"endOffset":489,"count":0},{"startOffset":492,"endOffset":533,"count":0}],"isBlockCoverage":true},{"functionName":"getDuplicateStream","ranges":[{"startOffset":717,"endOffset":1347,"count":4},{"startOffset":902,"endOffset":916,"count":1},{"startOffset":916,"endOffset":931,"count":3},{"startOffset":931,"endOffset":1051,"count":0},{"startOffset":1051,"endOffset":1093,"count":3},{"startOffset":1093,"endOffset":1209,"count":0},{"startOffset":1209,"endOffset":1250,"count":3},{"startOffset":1250,"endOffset":1345,"count":0}],"isBlockCoverage":true},{"functionName":"getOtherStdioItems","ranges":[{"startOffset":1423,"endOffset":1615,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1476,"endOffset":1614,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1526,"endOffset":1562,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1572,"endOffset":1612,"count":6}],"isBlockCoverage":true},{"functionName":"validateDuplicateStreamSync","ranges":[{"startOffset":1735,"endOffset":1952,"count":0}],"isBlockCoverage":false},{"functionName":"getDuplicateStreamInstance","ranges":[{"startOffset":2438,"endOffset":2895,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameValue","ranges":[{"startOffset":2919,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"validateDuplicateTransform","ranges":[{"startOffset":3500,"endOffset":3721,"count":0}],"isBlockCoverage":false},{"functionName":"throwOnDuplicateStream","ranges":[{"startOffset":3755,"endOffset":3973,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1711,"count":1}],"isBlockCoverage":true},{"functionName":"getValidateTransformInput","ranges":[{"startOffset":201,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"validateStringTransformInput","ranges":[{"startOffset":368,"endOffset":638,"count":0}],"isBlockCoverage":false},{"functionName":"getValidateTransformReturn","ranges":[{"startOffset":750,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"validateObjectTransformReturn","ranges":[{"startOffset":967,"endOffset":1056,"count":0}],"isBlockCoverage":false},{"functionName":"validateStringTransformReturn","ranges":[{"startOffset":1097,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"validateEmptyReturn","ranges":[{"startOffset":1405,"endOffset":1709,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/encoding-transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1624,"count":1}],"isBlockCoverage":true},{"functionName":"getEncodingTransformGenerator","ranges":[{"startOffset":728,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"encodingUint8ArrayGenerator","ranges":[{"startOffset":1132,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"encodingStringGenerator","ranges":[{"startOffset":1372,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"encodingStringFinal","ranges":[{"startOffset":1505,"endOffset":1622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/run-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1739,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":136,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"transformChunk","ranges":[{"startOffset":497,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"finalChunks","ranges":[{"startOffset":931,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"generatorFinalChunks","ranges":[{"startOffset":1127,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1473,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"identityGenerator","ranges":[{"startOffset":1701,"endOffset":1737,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/transform/run-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1355,"count":1}],"isBlockCoverage":true},{"functionName":"pushChunksSync","ranges":[{"startOffset":101,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"runTransformSync","ranges":[{"startOffset":403,"endOffset":539,"count":0}],"isBlockCoverage":false},{"functionName":"transformChunkSync","ranges":[{"startOffset":576,"endOffset":868,"count":0}],"isBlockCoverage":false},{"functionName":"finalChunksSync","ranges":[{"startOffset":902,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"generatorFinalChunksSync","ranges":[{"startOffset":1100,"endOffset":1288,"count":0}],"isBlockCoverage":false},{"functionName":"identityGenerator","ranges":[{"startOffset":1317,"endOffset":1353,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/stdio-option.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2297,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeStdioOption","ranges":[{"startOffset":323,"endOffset":623,"count":1},{"startOffset":523,"endOffset":576,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":438,"endOffset":503,"count":3}],"isBlockCoverage":true},{"functionName":"getStdioArray","ranges":[{"startOffset":648,"endOffset":1302,"count":1},{"startOffset":696,"endOffset":764,"count":0},{"startOffset":790,"endOffset":950,"count":0},{"startOffset":1020,"endOffset":1301,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":736,"endOffset":759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":908,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1266,"endOffset":1298,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlias","ranges":[{"startOffset":1322,"endOffset":1401,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1363,"endOffset":1400,"count":3}],"isBlockCoverage":true},{"functionName":"addDefaultValue","ranges":[{"startOffset":1428,"endOffset":1721,"count":3},{"startOffset":1490,"endOffset":1561,"count":0},{"startOffset":1619,"endOffset":1697,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1517,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStdioSync","ranges":[{"startOffset":1929,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"isOutputPipeOnly","ranges":[{"startOffset":2179,"endOffset":2295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/stdio/input-option.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1291,"count":1}],"isBlockCoverage":true},{"functionName":"handleInputOptions","ranges":[{"startOffset":253,"endOffset":385,"count":4},{"startOffset":303,"endOffset":379,"count":1},{"startOffset":381,"endOffset":385,"count":3}],"isBlockCoverage":true},{"functionName":"handleInputOption","ranges":[{"startOffset":414,"endOffset":520,"count":1},{"startOffset":448,"endOffset":520,"count":0}],"isBlockCoverage":true},{"functionName":"getInputType","ranges":[{"startOffset":544,"endOffset":848,"count":0}],"isBlockCoverage":false},{"functionName":"handleInputFileOption","ranges":[{"startOffset":881,"endOffset":989,"count":1},{"startOffset":923,"endOffset":989,"count":0}],"isBlockCoverage":true},{"functionName":"getInputFileType","ranges":[{"startOffset":1017,"endOffset":1289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/ipc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"shouldLogIpc","ranges":[{"startOffset":204,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"logIpcOutput","ranges":[{"startOffset":283,"endOffset":456,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":555,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsBuffer","ranges":[{"startOffset":66,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToNodeBuffer","ranges":[{"startOffset":503,"endOffset":553,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsString","ranges":[{"startOffset":160,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"initString","ranges":[{"startOffset":293,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"useTextDecoder","ranges":[{"startOffset":373,"endOffset":440,"count":0}],"isBlockCoverage":false},{"functionName":"addStringChunk","ranges":[{"startOffset":466,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"truncateStringChunk","ranges":[{"startOffset":554,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"getFinalStringChunk","ranges":[{"startOffset":650,"endOffset":766,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/contents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamContents","ranges":[{"startOffset":80,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"appendFinalChunk","ranges":[{"startOffset":978,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"appendChunk","ranges":[{"startOffset":1271,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"addNewChunk","ranges":[{"startOffset":1776,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"getChunkType","ranges":[{"startOffset":1940,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2647,"endOffset":2763,"count":0}],"isBlockCoverage":true}]},{"scriptId":"536","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@sec-ant/readable-stream/dist/ponyfill/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":175,"count":1}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/array-buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3333,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsArrayBuffer","ranges":[{"startOffset":128,"endOffset":250,"count":0}],"isBlockCoverage":false},{"functionName":"initArrayBuffer","ranges":[{"startOffset":276,"endOffset":314,"count":0}],"isBlockCoverage":false},{"functionName":"useTextEncoder","ranges":[{"startOffset":340,"endOffset":374,"count":0}],"isBlockCoverage":false},{"functionName":"useUint8Array","ranges":[{"startOffset":438,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"useUint8ArrayWithOffset","ranges":[{"startOffset":503,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"truncateArrayBufferChunk","ranges":[{"startOffset":612,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"addArrayBufferChunk","ranges":[{"startOffset":763,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"resizeArrayBufferSlow","ranges":[{"startOffset":1276,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"resizeArrayBuffer","ranges":[{"startOffset":1857,"endOffset":2150,"count":0}],"isBlockCoverage":false},{"functionName":"getNewContentsLength","ranges":[{"startOffset":2248,"endOffset":2326,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeArrayBuffer","ranges":[{"startOffset":2382,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"hasArrayBufferResize","ranges":[{"startOffset":2871,"endOffset":2910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsArray","ranges":[{"startOffset":121,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"initArray","ranges":[{"startOffset":251,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":294,"endOffset":301,"count":0}],"isBlockCoverage":false},{"functionName":"addArrayChunk","ranges":[{"startOffset":326,"endOffset":411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1406,"count":1}],"isBlockCoverage":true},{"functionName":"defaultVerboseFunction","ranges":[{"startOffset":186,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"serializeTimestamp","ranges":[{"startOffset":661,"endOffset":834,"count":0}],"isBlockCoverage":false},{"functionName":"padField","ranges":[{"startOffset":854,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"getFinalIcon","ranges":[{"startOffset":934,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":1081,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"output","ranges":[{"startOffset":1122,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"ipc","ranges":[{"startOffset":1139,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":1218,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":1264,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"output","ranges":[{"startOffset":1285,"endOffset":1299,"count":0}],"isBlockCoverage":false},{"functionName":"ipc","ranges":[{"startOffset":1307,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1331,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"duration","ranges":[{"startOffset":1391,"endOffset":1401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/verbose/custom.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"applyVerboseOnLines","ranges":[{"startOffset":129,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"applyVerboseFunction","ranges":[{"startOffset":517,"endOffset":764,"count":0}],"isBlockCoverage":false},{"functionName":"appendNewline","ranges":[{"startOffset":789,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/npm-run-path/node_modules/unicorn-magic/default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":388,"count":1}],"isBlockCoverage":true},{"functionName":"delay","ranges":[{"startOffset":7,"endOffset":387,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/human-signals/build/src/realtime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":352,"count":1}],"isBlockCoverage":true},{"functionName":"getRealtimeSignals","ranges":[{"startOffset":33,"endOffset":120,"count":2}],"isBlockCoverage":true},{"functionName":"getRealtimeSignal","ranges":[{"startOffset":147,"endOffset":305,"count":62}],"isBlockCoverage":true}]},{"scriptId":"543","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/human-signals/build/src/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":601,"count":1}],"isBlockCoverage":true},{"functionName":"getSignals","ranges":[{"startOffset":139,"endOffset":273,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeSignal","ranges":[{"startOffset":304,"endOffset":600,"count":138},{"startOffset":503,"endOffset":518,"count":62},{"startOffset":518,"endOffset":532,"count":76}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/parse-ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1159,"count":1}],"isBlockCoverage":true},{"functionName":"toZeroIfInfinity","ranges":[{"startOffset":25,"endOffset":68,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumber","ranges":[{"startOffset":71,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigint","ranges":[{"startOffset":519,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"parseMilliseconds","ranges":[{"startOffset":823,"endOffset":1158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/execa/lib/ipc/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeIpcStdioArray","ranges":[{"startOffset":99,"endOffset":194,"count":1},{"startOffset":182,"endOffset":194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/get-stream/source/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":24,"endOffset":38,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":61,"endOffset":76,"count":0}],"isBlockCoverage":false},{"functionName":"getContentsProperty","ranges":[{"startOffset":114,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"throwObjectStream","ranges":[{"startOffset":174,"endOffset":266,"count":0}],"isBlockCoverage":false},{"functionName":"getLengthProperty","ranges":[{"startOffset":302,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@sec-ant/readable-stream/dist/ponyfill/fromAnyIterable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":749,"count":1}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":0,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":471,"endOffset":713,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@sec-ant/readable-stream/dist/ponyfill/asyncIterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1725,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93,"endOffset":119,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":137,"endOffset":1115,"count":0}],"isBlockCoverage":true},{"functionName":"i","ranges":[{"startOffset":1136,"endOffset":1177,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":1231,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":1542,"endOffset":1691,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/figures/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6875,"count":1},{"startOffset":6443,"endOffset":6460,"count":0}],"isBlockCoverage":true},{"functionName":"replaceSymbols","ranges":[{"startOffset":6662,"endOffset":6873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yoctocolors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65,"count":1}],"isBlockCoverage":true}]},{"scriptId":"551","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/human-signals/build/src/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"552","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"isUnicodeSupported","ranges":[{"startOffset":52,"endOffset":656,"count":1},{"startOffset":236,"endOffset":324,"count":0},{"startOffset":349,"endOffset":385,"count":0},{"startOffset":408,"endOffset":446,"count":0},{"startOffset":449,"endOffset":477,"count":0},{"startOffset":480,"endOffset":508,"count":0},{"startOffset":511,"endOffset":534,"count":0},{"startOffset":537,"endOffset":563,"count":0},{"startOffset":566,"endOffset":601,"count":0},{"startOffset":604,"endOffset":653,"count":0}],"isBlockCoverage":true}]},{"scriptId":"553","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/yoctocolors/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2870,"count":1},{"startOffset":281,"endOffset":289,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":307,"endOffset":1221,"count":41},{"startOffset":343,"endOffset":372,"count":0}],"isBlockCoverage":true},{"functionName":"openCode","ranges":[{"startOffset":354,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":459,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4091,"count":1},{"startOffset":3434,"endOffset":3452,"count":0}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":277,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":612,"endOffset":3423,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":763,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":977,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1503,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1795,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":2060,"endOffset":2174,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":2217,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2434,"endOffset":2864,"count":1}],"isBlockCoverage":true},{"functionName":"escapePath","ranges":[{"startOffset":2461,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":2644,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2936,"endOffset":3370,"count":1}],"isBlockCoverage":true},{"functionName":"escapePath","ranges":[{"startOffset":2963,"endOffset":3100,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":3148,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":3455,"endOffset":3751,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":3752,"endOffset":4063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5531,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":355,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"processPatterns","ranges":[{"startOffset":1163,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":2825,"endOffset":3965,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":4023,"endOffset":4121,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":4173,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":4482,"endOffset":4868,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":4938,"endOffset":5147,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":5215,"endOffset":5467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1}],"isBlockCoverage":true}]},{"scriptId":"557","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":123,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":258,"endOffset":576,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/errno.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":113,"endOffset":186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":145,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":608,"endOffset":700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3010,"count":1},{"startOffset":2154,"endOffset":2173,"count":0},{"startOffset":2552,"endOffset":2581,"count":0}],"isBlockCoverage":true},{"functionName":"unixify","ranges":[{"startOffset":1352,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":1451,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":1569,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"escapeWindowsPath","ranges":[{"startOffset":2193,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"escapePosixPath","ranges":[{"startOffset":2351,"endOffset":2457,"count":0}],"isBlockCoverage":false},{"functionName":"convertWindowsPathToPattern","ranges":[{"startOffset":2611,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"convertPosixPathToPattern","ranges":[{"startOffset":2860,"endOffset":2946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7965,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":1465,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1608,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"hasBraceExpansion","ranges":[{"startOffset":2712,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":3146,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":3322,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":3456,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":3601,"endOffset":3680,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":3728,"endOffset":3817,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":3869,"endOffset":3958,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternsInsideCurrentDirectory","ranges":[{"startOffset":4205,"endOffset":4347,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternsOutsideCurrentDirectory","ranges":[{"startOffset":4631,"endOffset":4751,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternRelatedToParentDirectory","ranges":[{"startOffset":4833,"endOffset":4955,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":5035,"endOffset":5133,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":5179,"endOffset":5251,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":5287,"endOffset":5375,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":5431,"endOffset":5599,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":5671,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":5935,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":6517,"endOffset":7150,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":7194,"endOffset":7279,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":7305,"endOffset":7420,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":7472,"endOffset":7578,"count":0}],"isBlockCoverage":false},{"functionName":"removeDuplicateSlashes","ranges":[{"startOffset":7813,"endOffset":7907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13898,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":188,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"hasBraces","ranges":[{"startOffset":235,"endOffset":326,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":890,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2887,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3546,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4309,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5473,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6812,"endOffset":7086,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7871,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8996,"endOffset":9252,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":10053,"endOffset":10261,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10975,"endOffset":11271,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11723,"endOffset":11761,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":12110,"endOffset":12146,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12538,"endOffset":12758,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13325,"endOffset":13558,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13612,"endOffset":13781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4380,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1363,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1799,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2411,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3145,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4122,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1099,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1349,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1769,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1971,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2179,"endOffset":2516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6406,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2311,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2583,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2864,"endOffset":2958,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2982,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3115,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3283,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4797,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5593,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2797,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":832,"endOffset":2769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6899,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"574","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"575","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/micromatch/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":629,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":135,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":523,"endOffset":628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/merge2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3241,"count":1}],"isBlockCoverage":true},{"functionName":"merge2","ranges":[{"startOffset":280,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":2702,"endOffset":3240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/utils/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":298,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":122,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":218,"endOffset":270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":814,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":217,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":332,"endOffset":587,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":592,"endOffset":778,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1213,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderAsync","ranges":[{"startOffset":246,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":407,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":755,"endOffset":1179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1390,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":378,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":732,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":956,"endOffset":1154,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1188,"endOffset":1389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":895,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":148,"endOffset":349,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":354,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":743,"endOffset":813,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":814,"endOffset":894,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3157,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":318,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":821,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"get isDestroyed","ranges":[{"startOffset":1050,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1114,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1313,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1388,"endOffset":1460,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1465,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1538,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1778,"endOffset":2168,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2173,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2428,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3054,"endOffset":3123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1009,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":311,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":631,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":807,"endOffset":1008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3686,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":346,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":620,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1625,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2248,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3536,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3607,"endOffset":3685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":985,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":305,"endOffset":594,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":616,"endOffset":753,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":783,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1172,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":100,"endOffset":1000,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":1022,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1093,"endOffset":1171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":100,"endOffset":597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":696,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":135,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":563,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":582,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":305,"endOffset":522,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1034,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":167,"endOffset":1033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/queue-microtask/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":402,"count":1},{"startOffset":210,"endOffset":218,"count":0},{"startOffset":283,"endOffset":401,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":285,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":990,"count":1},{"startOffset":295,"endOffset":424,"count":0},{"startOffset":794,"endOffset":837,"count":0},{"startOffset":956,"endOffset":988,"count":0}],"isBlockCoverage":true}]},{"scriptId":"598","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"599","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":145,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":608,"endOffset":700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/providers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":419,"count":1}],"isBlockCoverage":true},{"functionName":"joinPathSegments","ranges":[{"startOffset":112,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1990,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":309,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":551,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1411,"endOffset":1962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1076,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":209,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":943,"endOffset":1045,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":640,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":363,"endOffset":580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6125,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":77,"endOffset":3896,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3898,"endOffset":3917,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3919,"endOffset":4422,"count":0}],"isBlockCoverage":false},{"functionName":"queueAsPromised","ranges":[{"startOffset":4424,"endOffset":6055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1052,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":199,"endOffset":350,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":388,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":520,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":701,"endOffset":1006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":132,"endOffset":329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1021,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":185,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":635,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":145,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":322,"endOffset":372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1911,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":249,"endOffset":407,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":412,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":554,"endOffset":637,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":642,"endOffset":787,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":792,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1127,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1269,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1814,"endOffset":1878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1250,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":178,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1117,"endOffset":1219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":205,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":523,"endOffset":617,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":622,"endOffset":913,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":918,"endOffset":1034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/readers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1870,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":289,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":424,"endOffset":502,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":513,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":1275,"endOffset":1579,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1584,"endOffset":1835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2000,"count":1}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":307,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":697,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":793,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":1559,"endOffset":1969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2466,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":188,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":333,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":581,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":704,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":961,"endOffset":1444,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":1449,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":1759,"endOffset":2043,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":2048,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":2175,"endOffset":2306,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":2311,"endOffset":2433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/matchers/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":170,"endOffset":1384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/matchers/matcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1568,"count":1}],"isBlockCoverage":true},{"functionName":"Matcher","ranges":[{"startOffset":135,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":384,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":778,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":1370,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"618","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2686,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":139,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":316,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":672,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":1473,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":1554,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":1640,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":1742,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":1860,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":2150,"endOffset":2652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/filters/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":139,"endOffset":205,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":210,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":290,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"620","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/transformers/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":845,"count":1}],"isBlockCoverage":true},{"functionName":"EntryTransformer","ranges":[{"startOffset":144,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":215,"endOffset":289,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":294,"endOffset":806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1198,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":256,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":372,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":975,"endOffset":1161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":779,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderSync","ranges":[{"startOffset":214,"endOffset":323,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":328,"endOffset":553,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":558,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1330,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":251,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":390,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":477,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":883,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1208,"endOffset":1297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fast-glob/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2849,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":645,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":2589,"endOffset":2675,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":2680,"endOffset":2818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"625","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cross-spawn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1}],"isBlockCoverage":true},{"functionName":"spawn","ranges":[{"startOffset":131,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":591,"endOffset":1038,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cross-spawn/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1}],"isBlockCoverage":true},{"functionName":"detectShebang","ranges":[{"startOffset":354,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonShell","ranges":[{"startOffset":661,"endOffset":2367,"count":1},{"startOffset":740,"endOffset":1170,"count":0},{"startOffset":1172,"endOffset":2366,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1963,"endOffset":2020,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2369,"endOffset":3039,"count":1},{"startOffset":2494,"endOffset":2546,"count":0},{"startOffset":2580,"endOffset":2584,"count":0},{"startOffset":3004,"endOffset":3012,"count":0}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cross-spawn/lib/util/resolveCommand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1557,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCommandAttempt","ranges":[{"startOffset":118,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCommand","ranges":[{"startOffset":1406,"endOffset":1522,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/which/which.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3163,"count":1},{"startOffset":177,"endOffset":182,"count":0}],"isBlockCoverage":true},{"functionName":"getNotFoundError","ranges":[{"startOffset":246,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":344,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"which","ranges":[{"startOffset":1168,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":2299,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/isexe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1},{"startOffset":92,"endOffset":128,"count":0}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":211,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":930,"endOffset":1191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/isexe/mode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":66,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":199,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":281,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"checkMode","ranges":[{"startOffset":372,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/path-key/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"pathKey","ranges":[{"startOffset":31,"endOffset":304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cross-spawn/lib/util/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1172,"count":1}],"isBlockCoverage":true},{"functionName":"escapeCommand","ranges":[{"startOffset":121,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":243,"endOffset":1088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cross-spawn/lib/util/readShebang.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"readShebang","ranges":[{"startOffset":93,"endOffset":517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/shebang-command/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":79,"endOffset":385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/shebang-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"636","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/cross-spawn/lib/enoent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1480,"count":1}],"isBlockCoverage":true},{"functionName":"notFoundError","ranges":[{"startOffset":60,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"hookChildProcess","ranges":[{"startOffset":360,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENT","ranges":[{"startOffset":1025,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENTSync","ranges":[{"startOffset":1197,"endOffset":1375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28375,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13187,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13398,"endOffset":14076,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14177,"endOffset":14941,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15016,"endOffset":15266,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15268,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15781,"endOffset":18082,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18257,"endOffset":18533,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18829,"endOffset":19563,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19565,"endOffset":19615,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20062,"endOffset":21418,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21420,"endOffset":21484,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21658,"endOffset":22258,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22260,"endOffset":22327,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22624,"endOffset":22863,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23061,"endOffset":23329,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23594,"endOffset":23870,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24176,"endOffset":26865,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26931,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27141,"endOffset":27297,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27360,"endOffset":27543,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27545,"endOffset":27943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28244,"endOffset":28349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1140,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"640","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"643","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"644","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/readdirp/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"647","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/anymatch/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/chokidar/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"657","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1878,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1670,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1702,"endOffset":1712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16368,"count":1},{"startOffset":170,"endOffset":266,"count":0},{"startOffset":507,"endOffset":518,"count":0},{"startOffset":520,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":1007,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2098,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2586,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":5072,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5388,"endOffset":5433,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5516,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5774,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":6075,"endOffset":6113,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6114,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6420,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6651,"endOffset":7317,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7319,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":9001,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11330,"endOffset":12413,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12478,"endOffset":12951,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12953,"endOffset":13218,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13558,"endOffset":16297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/fsevents/fsevents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2561,"count":1},{"startOffset":184,"endOffset":281,"count":0}],"isBlockCoverage":true},{"functionName":"watch","ranges":[{"startOffset":360,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1310,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"getFileType","ranges":[{"startOffset":1480,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"anyIsTrue","ranges":[{"startOffset":1725,"endOffset":1828,"count":0}],"isBlockCoverage":false},{"functionName":"getEventType","ranges":[{"startOffset":1829,"endOffset":2239,"count":0}],"isBlockCoverage":false},{"functionName":"getFileChanges","ranges":[{"startOffset":2240,"endOffset":2481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":479,"count":1}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":95,"endOffset":417,"count":2},{"startOffset":196,"endOffset":258,"count":0},{"startOffset":260,"endOffset":371,"count":0}],"isBlockCoverage":true}]},{"scriptId":"661","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9881,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":174,"endOffset":234,"count":2},{"startOffset":212,"endOffset":234,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":988,"endOffset":2794,"count":4},{"startOffset":1057,"endOffset":1370,"count":2},{"startOffset":1370,"endOffset":1384,"count":0},{"startOffset":1385,"endOffset":1398,"count":0},{"startOffset":1419,"endOffset":1460,"count":2},{"startOffset":1448,"endOffset":1459,"count":0},{"startOffset":1462,"endOffset":1537,"count":0},{"startOffset":1537,"endOffset":1567,"count":2},{"startOffset":1627,"endOffset":1663,"count":0},{"startOffset":1668,"endOffset":1714,"count":2},{"startOffset":1819,"endOffset":1973,"count":0},{"startOffset":1973,"endOffset":2741,"count":2},{"startOffset":2741,"endOffset":2773,"count":0},{"startOffset":2773,"endOffset":2793,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1084,"endOffset":1131,"count":2}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":1159,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1787,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":1993,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3342,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4558,"endOffset":4712,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5348,"endOffset":5409,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5819,"endOffset":5987,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6622,"endOffset":6662,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7153,"endOffset":7663,"count":2},{"startOffset":7247,"endOffset":7277,"count":0},{"startOffset":7302,"endOffset":7307,"count":0},{"startOffset":7341,"endOffset":7345,"count":0},{"startOffset":7384,"endOffset":7388,"count":0},{"startOffset":7493,"endOffset":7532,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8536,"endOffset":9042,"count":2},{"startOffset":8649,"endOffset":8710,"count":0},{"startOffset":8842,"endOffset":8900,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9504,"endOffset":9732,"count":2},{"startOffset":9560,"endOffset":9565,"count":0},{"startOffset":9624,"endOffset":9629,"count":0},{"startOffset":9642,"endOffset":9730,"count":0}],"isBlockCoverage":true}]},{"scriptId":"662","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1994,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":189,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":284,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":344,"endOffset":397,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":421,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":502,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":565,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":910,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1046,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1317,"endOffset":1474,"count":2},{"startOffset":1395,"endOffset":1455,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1498,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"exports.basename","ranges":[{"startOffset":1795,"endOffset":1992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4437,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3974,"endOffset":4313,"count":2}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4354,"endOffset":4433,"count":2},{"startOffset":4399,"endOffset":4414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"665","url":"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27544,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25032,"count":2},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2074,"endOffset":2078,"count":0},{"startOffset":2119,"endOffset":2126,"count":0},{"startOffset":2175,"endOffset":2191,"count":0},{"startOffset":2221,"endOffset":2250,"count":0},{"startOffset":2322,"endOffset":2360,"count":0},{"startOffset":6880,"endOffset":8103,"count":0},{"startOffset":8184,"endOffset":23909,"count":32},{"startOffset":8238,"endOffset":8261,"count":0},{"startOffset":8330,"endOffset":9146,"count":0},{"startOffset":9292,"endOffset":9355,"count":0},{"startOffset":9357,"endOffset":10489,"count":0},{"startOffset":10632,"endOffset":10648,"count":0},{"startOffset":10650,"endOffset":10765,"count":0},{"startOffset":10828,"endOffset":10985,"count":0},{"startOffset":11046,"endOffset":11134,"count":2},{"startOffset":11134,"endOffset":11159,"count":30},{"startOffset":11159,"endOffset":11594,"count":2},{"startOffset":11190,"endOffset":11221,"count":0},{"startOffset":11223,"endOffset":11292,"count":0},{"startOffset":11365,"endOffset":11403,"count":0},{"startOffset":11405,"endOffset":11470,"count":0},{"startOffset":11534,"endOffset":11541,"count":0},{"startOffset":11594,"endOffset":11659,"count":28},{"startOffset":11659,"endOffset":12018,"count":0},{"startOffset":12018,"endOffset":12043,"count":28},{"startOffset":12043,"endOffset":13498,"count":0},{"startOffset":13498,"endOffset":13553,"count":28},{"startOffset":13553,"endOffset":13577,"count":0},{"startOffset":13579,"endOffset":13846,"count":0},{"startOffset":13846,"endOffset":13871,"count":28},{"startOffset":13871,"endOffset":15001,"count":0},{"startOffset":15001,"endOffset":15056,"count":28},{"startOffset":15056,"endOffset":15209,"count":2},{"startOffset":15089,"endOffset":15150,"count":0},{"startOffset":15209,"endOffset":15265,"count":26},{"startOffset":15265,"endOffset":15526,"count":0},{"startOffset":15526,"endOffset":15583,"count":26},{"startOffset":15583,"endOffset":16193,"count":4},{"startOffset":15874,"endOffset":15908,"count":0},{"startOffset":15910,"endOffset":16109,"count":0},{"startOffset":16193,"endOffset":16247,"count":22},{"startOffset":16247,"endOffset":16813,"count":6},{"startOffset":16276,"endOffset":16298,"count":0},{"startOffset":16300,"endOffset":16549,"count":0},{"startOffset":16597,"endOffset":16619,"count":2},{"startOffset":16620,"endOffset":16644,"count":2},{"startOffset":16646,"endOffset":16733,"count":2},{"startOffset":16733,"endOffset":16813,"count":4},{"startOffset":16813,"endOffset":16877,"count":16},{"startOffset":16877,"endOffset":17657,"count":0},{"startOffset":17657,"endOffset":17718,"count":16},{"startOffset":17718,"endOffset":18018,"count":0},{"startOffset":18018,"endOffset":18072,"count":16},{"startOffset":18072,"endOffset":18622,"count":0},{"startOffset":18622,"endOffset":18682,"count":16},{"startOffset":18682,"endOffset":18907,"count":0},{"startOffset":18907,"endOffset":18967,"count":16},{"startOffset":18967,"endOffset":19268,"count":10},{"startOffset":19011,"endOffset":19050,"count":0},{"startOffset":19268,"endOffset":19364,"count":6},{"startOffset":19366,"endOffset":19573,"count":0},{"startOffset":19573,"endOffset":19658,"count":6},{"startOffset":19660,"endOffset":19717,"count":0},{"startOffset":19717,"endOffset":19749,"count":6},{"startOffset":19749,"endOffset":22948,"count":2},{"startOffset":19787,"endOffset":19838,"count":0},{"startOffset":19949,"endOffset":19972,"count":0},{"startOffset":20094,"endOffset":20139,"count":0},{"startOffset":20141,"endOffset":20219,"count":0},{"startOffset":20260,"endOffset":20313,"count":0},{"startOffset":20355,"endOffset":20407,"count":0},{"startOffset":20428,"endOffset":20453,"count":0},{"startOffset":20454,"endOffset":20465,"count":0},{"startOffset":20466,"endOffset":20479,"count":0},{"startOffset":20481,"endOffset":20559,"count":0},{"startOffset":20636,"endOffset":20813,"count":0},{"startOffset":20846,"endOffset":20854,"count":0},{"startOffset":20856,"endOffset":21073,"count":0},{"startOffset":21161,"endOffset":21561,"count":0},{"startOffset":21693,"endOffset":21697,"count":0},{"startOffset":22178,"endOffset":22229,"count":0},{"startOffset":22231,"endOffset":22948,"count":0},{"startOffset":22948,"endOffset":23036,"count":4},{"startOffset":23036,"endOffset":23217,"count":0},{"startOffset":23217,"endOffset":23285,"count":4},{"startOffset":23286,"endOffset":23308,"count":0},{"startOffset":23310,"endOffset":23380,"count":0},{"startOffset":23380,"endOffset":23442,"count":4},{"startOffset":23443,"endOffset":23465,"count":0},{"startOffset":23467,"endOffset":23887,"count":4},{"startOffset":23500,"endOffset":23585,"count":0},{"startOffset":23614,"endOffset":23701,"count":0},{"startOffset":23805,"endOffset":23881,"count":2},{"startOffset":23887,"endOffset":23909,"count":4},{"startOffset":23940,"endOffset":24118,"count":0},{"startOffset":24147,"endOffset":24323,"count":0},{"startOffset":24352,"endOffset":24528,"count":0},{"startOffset":24618,"endOffset":24698,"count":0},{"startOffset":24792,"endOffset":25013,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1942,"endOffset":2046,"count":2},{"startOffset":2007,"endOffset":2019,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2854,"endOffset":2883,"count":36}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2913,"endOffset":2946,"count":4}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":2982,"endOffset":3014,"count":34},{"startOffset":3009,"endOffset":3014,"count":0}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3036,"endOffset":3070,"count":16}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3090,"endOffset":3173,"count":34}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3193,"endOffset":3304,"count":32},{"startOffset":3245,"endOffset":3259,"count":18},{"startOffset":3260,"endOffset":3273,"count":14}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3324,"endOffset":3600,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3623,"endOffset":3677,"count":2}],"isBlockCoverage":true},{"functionName":"decrement","ranges":[{"startOffset":3700,"endOffset":3749,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4074,"endOffset":5009,"count":32},{"startOffset":4117,"endOffset":4609,"count":2},{"startOffset":4158,"endOffset":4207,"count":0},{"startOffset":4274,"endOffset":4322,"count":0},{"startOffset":4357,"endOffset":4380,"count":0},{"startOffset":4381,"endOffset":4392,"count":0},{"startOffset":4393,"endOffset":4406,"count":0},{"startOffset":4408,"endOffset":4603,"count":0},{"startOffset":4635,"endOffset":4658,"count":0},{"startOffset":4660,"endOffset":4723,"count":0},{"startOffset":4743,"endOffset":4756,"count":0},{"startOffset":4808,"endOffset":4830,"count":14},{"startOffset":4832,"endOffset":4945,"count":4},{"startOffset":4867,"endOffset":4880,"count":2},{"startOffset":4945,"endOffset":5008,"count":28}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5034,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5491,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6972,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7814,"endOffset":7894,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25255,"endOffset":27517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1376,"count":1}],"isBlockCoverage":false}]},{"scriptId":"667","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10095,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1838,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3553,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3628,"endOffset":4433,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4435,"endOffset":4670,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4672,"endOffset":4845,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":4862,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6476,"endOffset":6539,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6562,"endOffset":6913,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7023,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7194,"endOffset":7307,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7309,"endOffset":7437,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7439,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9014,"endOffset":9295,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9450,"endOffset":9612,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9614,"endOffset":9718,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":9821,"endOffset":9978,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10008,"endOffset":10093,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3453,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":376,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1352,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2020,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2422,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2882,"endOffset":3451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":164,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":644,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1102,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":192,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":701,"endOffset":845,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":880,"endOffset":1100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1379,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":280,"endOffset":874,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1009,"endOffset":1070,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1097,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1207,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1330,"endOffset":1377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9353,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2700,"endOffset":3048,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupall","ranges":[{"startOffset":3051,"endOffset":3563,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":3667,"endOffset":6701,"count":3},{"startOffset":3979,"endOffset":5375,"count":0},{"startOffset":5394,"endOffset":5602,"count":0},{"startOffset":5680,"endOffset":5784,"count":0},{"startOffset":5881,"endOffset":6036,"count":0},{"startOffset":6037,"endOffset":6047,"count":0},{"startOffset":6117,"endOffset":6700,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":6847,"endOffset":7197,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":7200,"endOffset":7999,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":8153,"endOffset":8449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9214,"endOffset":9342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2785,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":623,"endOffset":1081,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1083,"endOffset":2016,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1118,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2277,"endOffset":2749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"node:internal/child_process/serialization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5360,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":989,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1304,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1727,"endOffset":1862,"count":1}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1867,"endOffset":3396,"count":1},{"startOffset":1941,"endOffset":1948,"count":0},{"startOffset":2631,"endOffset":2637,"count":0},{"startOffset":2746,"endOffset":2854,"count":0},{"startOffset":3229,"endOffset":3250,"count":0}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3401,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":4255,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":4365,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":5154,"endOffset":5317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"node:internal/events/symbols","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":false}]}],"timestamp":679377.290084,"source-map-cache":{"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/bin/console.ts":{"lineLengths":[2,75,17,75,1,66,48,1,76,42,1,29,59,3,59,57,53,3,57,15,34,66,56,5,28,2,23,22,15,27,35,7,47,66,56,25,28,3,0,3412],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/bin/console.ts"],"sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Ace entry point\n|--------------------------------------------------------------------------\n|\n| The \"console.ts\" file is the entrypoint for booting the AdonisJS\n| command-line framework and executing commands.\n|\n| Commands do not boot the application, unless the currently running command\n| has \"options.startApp\" flag set to true.\n|\n*/\n\nimport 'reflect-metadata'\nimport { Ignitor, prettyPrintError } from '@adonisjs/core'\n\n/**\n * URL to the application root. AdonisJS need it to resolve\n * paths to file and directories for scaffolding commands\n */\nconst APP_ROOT = new URL('../', import.meta.url)\n\n/**\n * The importer is used to import files in context of the\n * application.\n */\nconst IMPORTER = (filePath: string) => {\n  if (filePath.startsWith('./') || filePath.startsWith('../')) {\n    return import(new URL(filePath, APP_ROOT).href)\n  }\n  return import(filePath)\n}\n\nnew Ignitor(APP_ROOT, { importer: IMPORTER })\n  .tap((app) => {\n    app.booting(async () => {\n      await import('#start/env')\n    })\n    app.listen('SIGTERM', () => app.terminate())\n    app.listenIf(app.managedByPm2, 'SIGINT', () => app.terminate())\n  })\n  .ace()\n  .handle(process.argv.splice(2))\n  .catch((error) => {\n    process.exitCode = 1\n    prettyPrintError(error)\n  })\n"],"names":["Ignitor","prettyPrintError","APP_ROOT","URL","url","IMPORTER","filePath","startsWith","href","importer","tap","app","booting","listen","terminate","listenIf","managedByPm2","ace","handle","process","argv","splice","catch","error","exitCode"],"mappings":"AAAA;;;;;;;;;;;AAWA,GAEA,OAAO,mBAAkB;AACzB,SAASA,OAAO,EAAEC,gBAAgB,QAAQ,iBAAgB;AAE1D;;;CAGC,GACD,MAAMC,WAAW,IAAIC,IAAI,OAAO,YAAYC,GAAG;AAE/C;;;CAGC,GACD,MAAMC,WAAW,CAACC;IAChB,IAAIA,SAASC,UAAU,CAAC,SAASD,SAASC,UAAU,CAAC,QAAQ;QAC3D,OAAO,MAAM,CAAC,IAAIJ,IAAIG,UAAUJ,UAAUM,IAAI;IAChD;IACA,OAAO,MAAM,CAACF;AAChB;AAEA,IAAIN,QAAQE,UAAU;IAAEO,UAAUJ;AAAS,GACxCK,GAAG,CAAC,CAACC;IACJA,IAAIC,OAAO,CAAC;QACV,MAAM,MAAM,CAAC;IACf;IACAD,IAAIE,MAAM,CAAC,WAAW,IAAMF,IAAIG,SAAS;IACzCH,IAAII,QAAQ,CAACJ,IAAIK,YAAY,EAAE,UAAU,IAAML,IAAIG,SAAS;AAC9D,GACCG,GAAG,GACHC,MAAM,CAACC,QAAQC,IAAI,CAACC,MAAM,CAAC,IAC3BC,KAAK,CAAC,CAACC;IACNJ,QAAQK,QAAQ,GAAG;IACnBvB,iBAAiBsB;AACnB","file":"/Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/bin/console.ts","sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/build/index.js":{"lineLengths":[38,55,33,23,66,2,58,81,61,34,85,53,16,2,0,16,39,0,21,18,32,25,30,24,24,36,27,35,25,24,30,34,2,0,16,20,5,19,5,11,24,28,3,5,30,5,21,97,3,5,45,5,29,28,42,64,31,7,5,24,3,5,54,5,33,29,80,37,49,48,29,122,9,48,40,9,22,7,40,34,29,31,7,45,36,7,19,7,58,12,19,19,67,49,17,6,3,5,32,5,15,56,3,2,0,16,36,40,43,47,72,0,15,37,45,0,16,24,26,49,39,37,49,55,39,51,47,38,3,43,57,51,41,73,26,2,67,22,14,22,83,32,3,2,33,33,18,2,39,34,24,2,32,35,17,2,38,36,23,2,33,73,18,2,33,54,18,2,0,23,36,44,44,44,45,82,43,43,12,25,25,17,25,3,24,5,50,5,17,5,44,5,17,5,53,5,21,5,28,5,21,5,64,43,5,14,5,25,5,14,5,21,5,15,5,71,45,5,17,64,13,5,23,82,83,85,89,89,82,43,68,25,7,3,5,72,60,4,77,4,10,57,8,5,40,16,90,52,20,42,82,8,5,47,42,148,8,5,64,42,119,8,5,32,82,5,24,3,5,40,4,71,4,10,73,8,5,36,16,88,21,42,74,8,5,32,84,5,26,3,5,56,5,36,16,59,14,23,29,24,8,7,44,7,16,19,20,18,19,18,18,19,19,8,13,6,34,49,23,61,7,23,62,7,36,65,7,26,22,56,16,23,57,16,22,56,16,21,55,16,7,7,12,25,28,6,3,5,67,28,5,22,16,28,52,5,58,12,36,36,22,41,28,39,40,20,9,36,39,20,9,27,6,3,5,58,5,33,16,39,45,50,48,44,7,90,36,87,9,50,7,7,78,54,92,49,5,34,80,54,26,23,51,54,11,16,22,51,54,11,53,60,11,36,65,11,16,22,21,51,54,11,93,40,93,13,60,11,7,7,3,5,42,5,19,5,34,5,11,5,63,50,5,8,5,61,48,5,9,5,27,5,16,26,3,5,35,5,16,26,3,5,62,8,5,16,49,3,5,34,5,21,40,3,5,37,5,17,36,3,5,34,5,14,33,3,5,35,5,15,34,3,5,53,22,5,13,24,13,5,48,53,45,39,25,23,26,9,7,48,46,48,25,23,26,9,7,25,3,5,61,13,5,19,3,5,63,5,16,19,9,37,41,25,21,25,41,18,5,3,5,39,5,12,12,48,40,29,31,24,26,29,6,3,5,53,5,24,33,32,93,30,23,32,41,9,5,3,5,53,5,27,33,32,105,44,9,5,3,5,50,5,21,34,3,5,54,5,18,37,3,5,47,5,30,39,55,68,23,32,72,28,28,32,36,9,5,50,32,99,28,12,35,25,32,36,9,5,3,5,47,5,43,39,76,23,32,76,43,9,5,50,32,99,28,12,35,25,32,43,9,5,3,5,48,5,25,39,52,43,66,7,30,32,83,32,42,9,5,3,2,0,25,12,5,48,5,19,50,41,75,6,4,5,48,5,19,50,41,75,6,3,2,0,26,13,5,46,5,19,50,41,71,6,4,5,47,5,20,50,41,72,6,4,5,46,5,19,50,41,71,6,4,5,50,5,18,50,41,70,6,3,2,0,25,27,8,10,29,22,26,3,5,27,5,44,77,3,5,37,5,24,22,16,5,41,32,5,50,3,5,68,51,5,26,83,46,55,25,83,5,54,3,5,62,29,5,27,80,46,55,25,83,5,54,3,5,63,29,5,28,80,46,55,25,83,5,54,3,5,62,5,28,46,89,66,25,85,5,56,3,5,47,5,23,97,72,90,3,5,61,5,18,30,19,49,20,50,20,51,21,51,5,3,2,0,25,39,71,27,10,28,23,26,46,102,6,3,5,54,5,38,28,48,50,6,30,58,7,52,33,23,7,6,86,3,5,45,5,41,40,14,31,53,8,7,3,2,0,17,39,44,51,0,18,33,0,17,24,79,2,41,20,14,3,20,13,3,11,1,63,108,43,27,25,96,3,62,1,55,48,87,3,7,68,19,96,3,1,47,82,31,83,6,3,37,59,31,97,6,3,70,1,0,28,45,89,0,29,31,12,10,33,30,26,3,5,55,5,47,79,3,5,51,5,23,94,76,94,3,5,69,18,5,22,34,20,39,83,14,20,39,80,14,5,3,5,56,31,5,18,34,20,32,90,10,20,32,87,10,5,3,2,0,28,30,11,10,32,28,26,3,5,67,16,5,27,101,85,3,5,53,5,23,43,3,5,35,5,58,53,30,16,5,95,17,76,7,23,25,32,7,17,3,5,66,16,5,27,37,16,5,55,3,5,72,5,36,54,83,117,77,96,28,81,6,3,2,0,23,45,5,21,5,30,57,17,60,30,7,66,44,4,5,46,5,41,12,43,42,75,76,16,59,63,10,8,6,3,5,51,5,41,12,43,40,67,16,47,56,10,8,6,3,5,69,20,5,34,42,44,95,9,5,12,89,41,102,7,6,3,5,39,5,22,36,16,5,67,3,5,60,9,5,24,27,18,5,51,98,27,33,16,57,61,8,19,5,16,3,5,64,5,16,92,59,26,37,45,7,3,18,52,49,59,17,5,53,105,6,3,5,29,5,15,57,30,24,13,5,20,68,13,5,22,3,2,17,15,44,19,4,43,17,64,37,0,29,24,12,25,30,3,5,43,5,23,64,3,5,68,50,5,30,98,3,2,0,27,60,30,15,5,66,30,5,23,5,39,5,55,5,38,5,27,97,3,5,47,5,33,70,53,39,81,3,5,41,5,31,79,56,13,5,62,33,18,22,55,8,13,5,60,61,13,5,159,56,13,5,22,56,13,5,40,3,2,0,16,29,40,5,57,21,5,28,41,71,6,18,28,5,4,5,61,32,5,38,5,60,24,5,19,66,3,5,61,9,5,47,5,67,24,5,46,22,29,6,4,5,73,57,5,18,5,20,5,23,5,60,20,5,12,5,80,43,5,15,5,64,60,5,18,5,54,5,16,5,61,5,19,5,72,39,4,70,33,5,39,5,58,57,25,5,47,5,78,73,43,5,40,5,60,48,5,11,5,45,5,15,5,56,50,50,16,5,24,5,17,5,35,5,25,5,15,37,3,41,42,30,3,5,65,60,53,4,68,39,5,22,79,34,14,21,26,25,8,5,12,48,42,51,6,3,5,63,32,5,32,70,29,79,30,27,3,5,71,23,5,34,49,67,26,42,74,5,62,70,52,69,27,3,5,60,19,5,48,9,51,69,28,44,76,7,32,91,20,33,43,31,61,46,66,63,29,18,11,9,7,31,25,61,43,34,15,7,77,34,73,56,72,66,32,21,24,32,50,5,3,5,68,31,4,57,5,24,69,48,16,3,5,56,14,5,29,33,91,5,50,3,5,66,21,4,75,37,5,21,33,81,5,31,16,3,5,39,5,28,60,42,28,107,51,12,79,5,16,3,5,61,5,27,64,43,3,5,41,5,14,23,3,5,73,59,5,17,112,3,5,72,58,5,35,50,20,41,75,8,12,97,5,98,3,5,68,24,5,27,61,3,5,66,39,5,23,32,3,5,42,5,20,29,3,5,44,4,73,65,5,16,37,3,5,63,32,5,26,50,24,18,5,62,3,5,52,5,34,65,37,31,3,5,68,26,5,19,28,3,5,65,21,5,34,45,86,5,92,46,14,14,42,8,85,34,37,3,5,68,5,36,44,14,14,42,8,85,34,37,3,5,64,17,5,21,41,16,3,5,52,5,21,41,16,3,5,60,5,20,40,16,3,5,65,5,23,43,16,3,5,61,5,22,42,16,3,5,75,53,5,16,33,13,5,31,59,27,49,39,25,41,40,14,32,7,58,37,95,86,63,9,5,64,3,5,31,5,27,64,57,52,19,51,5,62,81,30,51,5,63,30,3,5,70,41,5,33,33,24,5,38,34,85,8,5,41,3,5,57,32,5,31,33,24,5,39,3,5,69,63,5,22,36,93,5,38,34,85,8,5,33,24,5,28,75,23,86,85,5,60,62,3,5,51,22,5,18,16,3,2,0,11,54,0,23,89,45,5,21,5,30,55,5,40,5,41,31,16,5,12,7,45,44,68,18,49,54,12,10,7,6,3,5,39,5,39,32,16,5,12,7,45,46,65,18,45,54,12,10,7,6,3,5,51,5,26,54,19,33,16,48,52,8,19,5,16,3,5,29,5,30,65,54,23,13,5,24,56,20,28,23,25,33,19,6,3,5,23,5,24,71,65,92,24,50,27,3,5,47,5,23,74,49,6,59,26,37,45,7,3,5,27,5,23,65,70,16,13,5,24,49,26,3,5,29,5,15,55,26,24,13,5,54,36,30,29,29,3,2,17,71,37,0,27,41,56,66,41,22,5,56,5,20,5,25,5,10,5,32,5,17,41,46,26,3,5,56,37,5,25,24,66,22,30,29,38,49,23,9,39,22,9,59,22,9,21,7,7,36,33,44,7,92,60,95,7,5,20,3,5,37,5,23,58,54,46,48,54,7,58,66,7,3,5,68,50,5,30,49,58,24,3,2,0,36,33,62,0,16,45,44,0,36,28,15,28,36,3,5,19,5,20,81,81,63,58,63,61,74,56,61,42,40,43,34,49,36,3,2,8,14,19,11,14,17,20,14,13,9,7,13,27,7,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/parser.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/yars_config.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/kernel.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/debug.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/errors.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/commands/base.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/decorators/args.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/decorators/flags.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/formatters/flag.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/formatters/list.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/helpers.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/schemas/main.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/formatters/command.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/formatters/argument.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/commands/list.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/loaders/list_loader.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/exception_handler.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/index.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/commands/help.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/loaders/fs_loader.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/src/generators/index_generator.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/ace/stubs/main.ts"],"sourcesContent":["/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport yargsParser from 'yargs-parser'\nimport { yarsConfig } from './yars_config.js'\n\nimport type {\n  YargsOutput,\n  ParsedOutput,\n  FlagsParserOptions,\n  ArgumentsParserOptions,\n} from './types.js'\n\n/**\n * Parses the command line arguments. The flags are parsed\n * using yargs-parser\n */\nexport class Parser {\n  /**\n   * Parser options\n   */\n  #options: {\n    flagsParserOptions: FlagsParserOptions\n    argumentsParserOptions: ArgumentsParserOptions[]\n  }\n\n  constructor(options: {\n    flagsParserOptions: FlagsParserOptions\n    argumentsParserOptions: ArgumentsParserOptions[]\n  }) {\n    this.#options = options\n  }\n\n  /**\n   * Parsers flags using yargs\n   */\n  #parseFlags(argv: string | string[]) {\n    return yargsParser(argv, { ...this.#options.flagsParserOptions, configuration: yarsConfig })\n  }\n\n  /**\n   * Scans for unknown flags in yargs output.\n   */\n  #scanUnknownFlags(parsed: { [key: string]: any }): string[] {\n    const unknownFlags: string[] = []\n\n    for (let key of Object.keys(parsed)) {\n      if (!this.#options.flagsParserOptions.all.includes(key)) {\n        unknownFlags.push(key)\n      }\n    }\n\n    return unknownFlags\n  }\n\n  /**\n   * Parsers arguments by mimicking the yargs behavior\n   */\n  #parseArguments(parsedOutput: YargsOutput): ParsedOutput {\n    let lastParsedIndex = -1\n\n    const output = this.#options.argumentsParserOptions.map((option, index) => {\n      if (option.type === 'spread') {\n        let value: any[] | undefined = parsedOutput._.slice(index)\n        lastParsedIndex = parsedOutput._.length\n\n        /**\n         * Step 1\n         *\n         * Use default value when original value is not defined.\n         */\n        if (!value.length) {\n          value = Array.isArray(option.default)\n            ? option.default\n            : option.default === undefined\n              ? undefined\n              : [option.default]\n        }\n\n        /**\n         * Step 2\n         *\n         * Call parse method when value is not undefined\n         */\n        if (value !== undefined && option.parse) {\n          value = option.parse(value)\n        }\n\n        return value\n      }\n\n      let value = parsedOutput._[index]\n      lastParsedIndex = index + 1\n\n      /**\n       * Step 1:\n       *\n       * Use default value when original value is undefined\n       * Original value set to empty string will be used\n       * as real value. The behavior is same as yargs\n       * flags parser `--connection=`\n       */\n      if (value === undefined) {\n        value = option.default\n      }\n\n      /**\n       * Step 2\n       *\n       * Call parse method when value is not undefined\n       */\n      if (value !== undefined && option.parse) {\n        value = option.parse(value)\n      }\n\n      return value\n    })\n\n    const { '_': args, '--': o, ...rest } = parsedOutput\n\n    return {\n      args: output,\n      nodeArgs: [],\n      _: args.slice(lastParsedIndex === -1 ? 0 : lastParsedIndex),\n      unknownFlags: this.#scanUnknownFlags(rest),\n      flags: rest,\n    }\n  }\n\n  /**\n   * Parse commandline arguments\n   */\n  parse(argv: string | string[]) {\n    return this.#parseArguments(this.#parseFlags(argv))\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Configuration } from 'yargs-parser'\n\n/**\n * The fixed config used to parse command line arguments using yargs. We\n * do not allow changing these options, since some of the internal\n * checks and features rely on this specific config\n */\nexport const yarsConfig: Partial<Configuration> = {\n  'camel-case-expansion': false,\n  'combine-arrays': true,\n  'short-option-groups': true,\n  'dot-notation': false,\n  'parse-numbers': true,\n  'parse-positional-numbers': false,\n  'boolean-negation': true,\n  'flatten-duplicate-arrays': true,\n  'greedy-arrays': false,\n  'strip-aliased': true,\n  'nargs-eats-options': false,\n  'unknown-options-as-args': false,\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Hooks from '@poppinss/hooks'\nimport { cliui } from '@poppinss/cliui'\nimport { Prompt } from '@poppinss/prompts'\nimport { distance } from 'fastest-levenshtein'\nimport { RuntimeException } from '@poppinss/utils'\n\nimport debug from './debug.js'\nimport { Parser } from './parser.js'\nimport * as errors from './errors.js'\nimport { ListCommand } from './commands/list.js'\nimport { BaseCommand } from './commands/base.js'\nimport { sortAlphabetically } from './helpers.js'\nimport { ListLoader } from './loaders/list_loader.js'\nimport { ExceptionHandler } from './exception_handler.js'\n\nimport type {\n  Flag,\n  UIPrimitives,\n  FlagListener,\n  LoadedHookArgs,\n  CommandMetaData,\n  LoadersContract,\n  LoadingHookArgs,\n  FindingHookArgs,\n  ExecutedHookArgs,\n  ExecutorContract,\n  LoadedHookHandler,\n  AllowedInfoValues,\n  ExecutingHookArgs,\n  LoadingHookHandler,\n  FindingHookHandler,\n  AbstractBaseCommand,\n  ExecutedHookHandler,\n  ExecutingHookHandler,\n} from './types.js'\n\n/**\n * The Ace kernel manages the registration and execution of commands.\n *\n * The kernel is the main entry point of a console application, and\n * is tailored for a standard CLI environment.\n */\nexport class Kernel<Command extends AbstractBaseCommand> {\n  errorHandler: {\n    render(error: unknown, kernel: Kernel<any>): Promise<any>\n  } = new ExceptionHandler()\n\n  /**\n   * The default executor for creating command's instance\n   * and running them\n   */\n  static commandExecutor: ExecutorContract<typeof BaseCommand> = {\n    create(command, parsedArgs, kernel) {\n      return new command(kernel, parsedArgs, kernel.ui, kernel.prompt)\n    },\n    run(command) {\n      return command.exec()\n    },\n  }\n\n  /**\n   * The default command to use when creating kernel instance\n   * via \"static create\" method.\n   */\n  static defaultCommand: typeof BaseCommand = ListCommand\n\n  /**\n   * Creates an instance of kernel with the default executor\n   * and default command\n   */\n  static create() {\n    return new Kernel<typeof BaseCommand>(this.defaultCommand, this.commandExecutor)\n  }\n\n  /**\n   * Listeners for CLI options. Executed for the main command\n   * only\n   */\n  #optionListeners: Map<string, FlagListener<Command>> = new Map()\n\n  /**\n   * The global command is used to register global flags applicable\n   * on all the commands\n   */\n  #globalCommand: typeof BaseCommand = class extends BaseCommand {\n    static options = {\n      allowUnknownFlags: true,\n    }\n  }\n\n  /**\n   * The default command to run when no command is mentioned. The default\n   * command will also run when only flags are mentioned.\n   */\n  #defaultCommand: Command\n\n  /**\n   * Available hooks\n   */\n  #hooks: Hooks<{\n    finding: FindingHookArgs\n    loading: LoadingHookArgs\n    loaded: LoadedHookArgs<Command>\n    executing: ExecutingHookArgs<InstanceType<Command>>\n    executed: ExecutedHookArgs<InstanceType<Command>>\n  }> = new Hooks()\n\n  /**\n   * Executors are used to instantiate a command and execute\n   * the run method.\n   */\n  #executor: ExecutorContract<Command>\n\n  /**\n   * Keeping track of the main command. There are some action (like termination)\n   * that only the main command can perform\n   */\n  #mainCommand?: InstanceType<Command>\n\n  /**\n   * The current state of kernel. The `running` and `terminated`\n   * states are only set when kernel takes over the process.\n   */\n  #state: 'idle' | 'booted' | 'running' | 'completed' = 'idle'\n\n  /**\n   * Collection of loaders to use for loading commands\n   */\n  #loaders: (LoadersContract<Command> | (() => Promise<LoadersContract<Command>>))[] = []\n\n  /**\n   * An array of registered namespaces. Sorted alphabetically\n   */\n  #namespaces: string[] = []\n\n  /**\n   * A collection of aliases for the commands. The key is the alias name\n   * and the value is the command name.\n   *\n   * In case of duplicate aliases, the most recent alias will override\n   * the previous existing alias.\n   */\n  #aliases: Map<string, string> = new Map()\n\n  /**\n   * An collection of expansion arguments and flags set on\n   * an alias. The key is the alias name and the value is\n   * everything after it.\n   */\n  #aliasExpansions: Map<string, string[]> = new Map()\n\n  /**\n   * A collection of commands by the command name. This allows us to keep only\n   * the unique commands and also keep the loader reference to know which\n   * loader to ask for loading the command.\n   */\n  #commands: Map<string, { metaData: CommandMetaData; loader: LoadersContract<Command> }> =\n    new Map()\n\n  /**\n   * The exit code for the kernel. The exit code is inferred\n   * from the main code when not set explicitly.\n   */\n  exitCode?: number\n\n  /**\n   * The UI primitives to use within commands\n   */\n  ui: UIPrimitives = cliui()\n\n  /**\n   * Instance of prompt to display CLI prompts. We share\n   * a single instance with all the commands. This\n   * allows trapping prompts for commands executed\n   * internally.\n   */\n  prompt = new Prompt()\n\n  /**\n   * CLI info map\n   */\n  info: Map<string, AllowedInfoValues> = new Map()\n\n  /**\n   * List of global flags\n   */\n  get flags(): ({ name: string } & Flag)[] {\n    return this.#globalCommand.flags\n  }\n\n  constructor(defaultCommand: Command, executor: ExecutorContract<Command>) {\n    this.#defaultCommand = defaultCommand\n    this.#executor = executor\n  }\n\n  /**\n   * Process command line arguments. All flags before the command\n   * name are considered as Node.js argv and all flags after\n   * the command name are considered as command argv.\n   *\n   * The behavior is same as Node.js CLI, where all flags before the\n   * script file name are Node.js argv.\n   */\n  #processArgv(argv: string[]) {\n    const commandNameIndex = argv.findIndex((value) => !value.startsWith('-'))\n    if (commandNameIndex === -1) {\n      return {\n        nodeArgv: [],\n        commandName: null,\n        commandArgv: argv,\n      }\n    }\n\n    return {\n      nodeArgv: argv.slice(0, commandNameIndex),\n      commandName: argv[commandNameIndex],\n      commandArgv: argv.slice(commandNameIndex + 1),\n    }\n  }\n\n  /**\n   * Creates an instance of a command by parsing and validating\n   * the command line arguments.\n   */\n  async #create<T extends Command>(Command: T, argv: string | string[]): Promise<InstanceType<T>> {\n    /**\n     * Parse CLI argv without global flags. When running commands directly, we\n     * should not be using global flags anyways\n     */\n    const parsed = new Parser(Command.getParserOptions()).parse(argv)\n\n    /**\n     * Validate the parsed output\n     */\n    Command.validate(parsed)\n\n    /**\n     * Construct command instance using the executor\n     */\n    const commandInstance = await this.#executor.create(Command, parsed, this)\n    commandInstance.hydrate()\n\n    return commandInstance as InstanceType<T>\n  }\n\n  /**\n   * Executes a given command. The main commands are executed using the\n   * \"execMain\" method.\n   */\n  async #exec<T extends Command>(commandName: string, argv: string[]): Promise<InstanceType<T>> {\n    const Command = await this.find<T>(commandName)\n\n    /**\n     * Expand aliases\n     */\n    const aliasExpansions = this.#aliasExpansions.get(commandName)\n    if (aliasExpansions) {\n      argv = aliasExpansions.concat(argv)\n      debug('expanding alias %O, cli args %O', commandName, argv)\n    }\n\n    const commandInstance = await this.#create<T>(Command, argv)\n\n    /**\n     * Execute the command using the executor\n     */\n    await this.#hooks.runner('executing').run(commandInstance, false)\n    await this.#executor.run(commandInstance, this)\n    await this.#hooks.runner('executed').run(commandInstance, false)\n\n    return commandInstance\n  }\n\n  /**\n   * Executes the main command and handles the exceptions by\n   * reporting them\n   */\n  async #execMain(commandName: string, nodeArgv: string[], argv: string[]) {\n    try {\n      const Command = await this.find(commandName)\n\n      /**\n       * Expand aliases\n       */\n      const aliasExpansions = this.#aliasExpansions.get(commandName)\n      if (aliasExpansions) {\n        argv = aliasExpansions.concat(argv)\n        debug('expanding alias %O, cli args %O', commandName, argv)\n      }\n\n      /**\n       * Parse CLI argv and also merge global flags parser options.\n       */\n      const parsed = new Parser(\n        Command.getParserOptions(this.#globalCommand.getParserOptions().flagsParserOptions)\n      ).parse(argv)\n\n      /**\n       * Defined only for the main command\n       */\n      parsed.nodeArgs = nodeArgv\n\n      /**\n       * Validate the flags against the global list as well\n       */\n      this.#globalCommand.validate(parsed)\n\n      /**\n       * Run options listeners. Option listeners can terminate\n       * the process early\n       */\n      let shortcircuit = false\n      for (let [option, listener] of this.#optionListeners) {\n        if (parsed.flags[option] !== undefined) {\n          debug('running listener for \"%s\" flag', option)\n          shortcircuit = await listener(Command, this, parsed)\n          if (shortcircuit) {\n            break\n          }\n        }\n      }\n\n      /**\n       * Validate the parsed output\n       */\n      Command.validate(parsed)\n\n      /**\n       * Return early if a flag listener shortcircuits\n       */\n      if (shortcircuit) {\n        debug('short circuiting from flag listener')\n        this.exitCode = this.exitCode ?? 0\n        this.#state = 'completed'\n        return\n      }\n\n      /**\n       * Keep a note of the main command\n       */\n      this.#mainCommand = await this.#executor.create(Command, parsed, this)\n      this.#mainCommand.hydrate()\n\n      /**\n       * Execute the command using the executor\n       */\n      await this.#hooks.runner('executing').run(this.#mainCommand!, true)\n      await this.#executor.run(this.#mainCommand!, this)\n      await this.#hooks.runner('executed').run(this.#mainCommand!, true)\n      this.exitCode = this.exitCode ?? this.#mainCommand!.exitCode\n      this.#state = 'completed'\n    } catch (error) {\n      this.exitCode = 1\n      this.#state = 'completed'\n      await this.errorHandler.render(error, this)\n    }\n  }\n\n  /**\n   * Listen for CLI options and execute an action. Only one listener\n   * can be defined per option.\n   *\n   * The callbacks are only executed for the main command\n   */\n  on(option: string, callback: FlagListener<Command>): this {\n    debug('registering flag listener for \"%s\" flag', option)\n    this.#optionListeners.set(option, callback)\n    return this\n  }\n\n  /**\n   * Define a global flag that is applicable for all the\n   * commands.\n   */\n  defineFlag(\n    name: string,\n    options: Partial<Flag> & { type: 'string' | 'boolean' | 'array' | 'number' }\n  ) {\n    if (this.#state !== 'idle') {\n      throw new RuntimeException(`Cannot register global flag in \"${this.#state}\" state`)\n    }\n\n    this.#globalCommand.defineFlag(name, options)\n  }\n\n  /**\n   * Register a commands loader. The commands will be collected by\n   * all the loaders.\n   *\n   * Incase multiple loaders returns a single command, the command from the\n   * most recent loader will be used.\n   */\n  addLoader(loader: LoadersContract<Command> | (() => Promise<LoadersContract<Command>>)): this {\n    if (this.#state !== 'idle') {\n      throw new RuntimeException(`Cannot add loader in \"${this.#state}\" state`)\n    }\n\n    this.#loaders.push(loader)\n    return this\n  }\n\n  /**\n   * Register alias for a comamnd name.\n   */\n  addAlias(alias: string, command: string): this {\n    const [commandName, ...expansions] = command.split(' ')\n    this.#aliases.set(alias, commandName)\n\n    if (expansions.length) {\n      debug('registering alias %O for command %O with options %O', alias, commandName, expansions)\n      this.#aliasExpansions.set(alias, expansions)\n    } else {\n      debug('registering alias %O for command %O', alias, commandName)\n    }\n\n    return this\n  }\n\n  /**\n   * Check if a command or an alias is registered with kernel\n   */\n  hasCommand(commandName: string): boolean {\n    commandName = this.#aliases.get(commandName) || commandName\n    return this.#commands.has(commandName)\n  }\n\n  /**\n   * Get the current state of the kernel.\n   */\n  getState() {\n    return this.#state\n  }\n\n  /**\n   * Returns a flat list of commands metadata registered with the kernel.\n   * The list is sorted alphabetically by the command name.\n   */\n  getCommands(): CommandMetaData[] {\n    return [...this.#commands.keys()]\n      .sort(sortAlphabetically)\n      .map((name) => this.#commands.get(name)!.metaData)\n  }\n\n  /**\n   * Get a list of commands for a specific namespace. All non-namespaces\n   * commands will be returned if no namespace is defined.\n   */\n  getNamespaceCommands(namespace?: string) {\n    let commandNames = [...this.#commands.keys()]\n\n    /**\n     * Filter a list of commands by the namespace\n     */\n    if (namespace) {\n      commandNames = commandNames.filter(\n        (name) => this.#commands.get(name)!.metaData.namespace === namespace\n      )\n    } else {\n      commandNames = commandNames.filter((name) => !this.#commands.get(name)!.metaData.namespace)\n    }\n\n    return commandNames.sort(sortAlphabetically).map((name) => this.#commands.get(name)!.metaData)\n  }\n\n  /**\n   * Returns the command metadata by its name. Returns null when the\n   * command is missing.\n   */\n  getCommand(commandName: string): CommandMetaData | null {\n    return this.#commands.get(commandName)?.metaData || null\n  }\n\n  /**\n   * Returns a reference for the default command. The return value\n   * is the default command constructor\n   */\n  getDefaultCommand() {\n    return this.#defaultCommand\n  }\n\n  /**\n   * Returns reference to the main command\n   */\n  getMainCommand() {\n    return this.#mainCommand\n  }\n\n  /**\n   * Returns an array of aliases registered.\n   *\n   * - Call `getCommandAliases` method to get aliases for a given command\n   * - Call `getAliasCommand` to get the command or a given alias\n   */\n  getAliases() {\n    return [...this.#aliases.keys()]\n  }\n\n  /**\n   * Returns the command metata for a given alias. Returns null\n   * if alias is not recognized.\n   */\n  getAliasCommand(alias: string): CommandMetaData | null {\n    const aliasCommand = this.#aliases.get(alias)\n    if (!aliasCommand) {\n      return null\n    }\n\n    return this.#commands.get(aliasCommand)?.metaData || null\n  }\n\n  /**\n   * Returns an array of aliases for a given command\n   */\n  getCommandAliases(commandName: string) {\n    return [...this.#aliases.entries()]\n      .filter(([, command]) => {\n        return command === commandName\n      })\n      .map(([alias]) => alias)\n  }\n\n  /**\n   * Returns a list of namespaces. The list is sorted alphabetically\n   * by the namespace name\n   */\n  getNamespaces(): string[] {\n    return this.#namespaces\n  }\n\n  /**\n   * Returns an array of command and aliases name suggestions for\n   * a given keyword.\n   */\n  getCommandSuggestions(keyword: string): string[] {\n    /**\n     * Priortize namespace commands when the keyword matches the\n     * namespace\n     */\n    if (this.#namespaces.includes(keyword)) {\n      return this.getNamespaceCommands(keyword).map((command) => command.commandName)\n    }\n\n    const commandsAndAliases = [...this.#commands.keys()].concat([...this.#aliases.keys()])\n\n    return commandsAndAliases\n      .map((value) => {\n        return {\n          value,\n          distance: distance(keyword, value),\n        }\n      })\n      .sort((current, next) => next.distance - current.distance)\n      .filter((rating) => {\n        return rating.distance <= 3\n      })\n      .map((rating) => rating.value)\n  }\n\n  /**\n   * Returns an array of namespaces suggestions for a given keyword.\n   */\n  getNamespaceSuggestions(keyword: string): string[] {\n    return this.#namespaces\n      .map((value) => {\n        return {\n          value,\n          distance: distance(keyword, value),\n        }\n      })\n      .sort((current, next) => next.distance - current.distance)\n      .filter((rating) => {\n        return rating.distance <= 3\n      })\n      .map((rating) => rating.value)\n  }\n\n  /**\n   * Listen for the event before we begin the process of finding\n   * the command.\n   */\n  finding(callback: FindingHookHandler) {\n    this.#hooks.add('finding', callback)\n    return this\n  }\n\n  /**\n   * Listen for the event when importing the command\n   */\n  loading(callback: LoadingHookHandler) {\n    this.#hooks.add('loading', callback)\n    return this\n  }\n\n  /**\n   * Listen for the event when the command has been imported\n   */\n  loaded(callback: LoadedHookHandler<Command>) {\n    this.#hooks.add('loaded', callback)\n    return this\n  }\n\n  /**\n   * Listen for the event before we start to execute the command.\n   */\n  executing(callback: ExecutingHookHandler<InstanceType<Command>>) {\n    this.#hooks.add('executing', callback)\n    return this\n  }\n\n  /**\n   * Listen for the event after the command has been executed\n   */\n  executed(callback: ExecutedHookHandler<InstanceType<Command>>) {\n    this.#hooks.add('executed', callback)\n    return this\n  }\n\n  /**\n   * Loads commands from all the registered loaders. The \"addLoader\" method\n   * must be called before calling the \"load\" method.\n   */\n  async boot() {\n    if (this.#state !== 'idle') {\n      return\n    }\n\n    /**\n     * Boot global command is not already booted\n     */\n    this.#globalCommand.boot()\n\n    /**\n     * Registering the default command\n     */\n    this.addLoader(new ListLoader([this.#defaultCommand]))\n\n    /**\n     * Set state to booted\n     */\n    this.#state = 'booted'\n\n    /**\n     * A set of unique namespaces. Later, we will store them on kernel\n     * directly as an alphabetically sorted array.\n     */\n    const namespaces: Set<string> = new Set()\n\n    /**\n     * Load metadata for all commands using the loaders\n     */\n    for (let loader of this.#loaders) {\n      let loaderInstance: LoadersContract<Command>\n\n      /**\n       * A loader can be a function that lazily imports and instantiates\n       * a loader\n       */\n      if (typeof loader === 'function') {\n        loaderInstance = await loader()\n      } else {\n        loaderInstance = loader\n      }\n\n      const commands = await loaderInstance.getMetaData()\n\n      commands.forEach((command) => {\n        this.#commands.set(command.commandName, { metaData: command, loader: loaderInstance })\n        command.aliases.forEach((alias) => this.addAlias(alias, command.commandName))\n        command.namespace && namespaces.add(command.namespace)\n      })\n    }\n\n    this.#namespaces = [...namespaces].sort(sortAlphabetically)\n  }\n\n  /**\n   * Find a command by its name\n   */\n  async find<T extends Command>(commandName: string): Promise<T> {\n    /**\n     * Get command name from the alias (if one exists)\n     */\n    commandName = this.#aliases.get(commandName) || commandName\n    await this.#hooks.runner('finding').run(commandName)\n\n    /**\n     * Find if we have a command registered\n     */\n    const command = this.#commands.get(commandName)\n    if (!command) {\n      throw new errors.E_COMMAND_NOT_FOUND([commandName])\n    }\n\n    await this.#hooks.runner('loading').run(command.metaData)\n\n    /**\n     * Find if the loader is able to load the command\n     */\n    const commandConstructor = await command.loader.getCommand(command.metaData)\n    if (!commandConstructor) {\n      throw new errors.E_COMMAND_NOT_FOUND([commandName])\n    }\n\n    await this.#hooks.runner('loaded').run(commandConstructor)\n    return commandConstructor as T\n  }\n\n  /**\n   * Execute a command. The second argument is an array of commandline\n   * arguments (without the command name)\n   */\n  async exec<T extends Command>(commandName: string, argv: string[]) {\n    /**\n     * Boot if not already booted\n     */\n    if (this.#state === 'idle') {\n      await this.boot()\n    }\n\n    /**\n     * Cannot execute commands after the main command has exited\n     */\n    if (this.#state === 'completed') {\n      throw new RuntimeException(\n        'The kernel has been terminated. Create a fresh instance to execute commands'\n      )\n    }\n\n    return this.#exec<T>(commandName, argv)\n  }\n\n  /**\n   * Creates a command instance by parsing and validating\n   * the command-line arguments.\n   */\n  async create<T extends Command>(command: T, argv: string | string[]): Promise<InstanceType<T>> {\n    /**\n     * Boot if not already booted\n     */\n    if (this.#state === 'idle') {\n      await this.boot()\n    }\n\n    return this.#create(command, argv)\n  }\n\n  /**\n   * Handle process argv and execute the command. Calling this method\n   * makes kernel own the process and register SIGNAL listeners\n   */\n  async handle(argv: string[]) {\n    /**\n     * Cannot run multiple main commands from a single process\n     */\n    if (this.#state === 'running') {\n      throw new RuntimeException('Cannot run multiple main commands from a single process')\n    }\n\n    /**\n     * Cannot run multiple main commands from the same instance\n     */\n    if (this.#state === 'completed') {\n      throw new RuntimeException(\n        'The kernel has been terminated. Create a fresh instance to execute commands'\n      )\n    }\n\n    /**\n     * Boot kernel\n     */\n    if (this.#state === 'idle') {\n      await this.boot()\n    }\n\n    this.#state = 'running'\n    const { commandName, nodeArgv, commandArgv } = this.#processArgv(argv)\n\n    /**\n     * Run the default command\n     */\n    if (!commandName) {\n      debug('running default command \"%s\"', this.#defaultCommand.commandName)\n      return this.#execMain(this.#defaultCommand.commandName, nodeArgv, commandArgv)\n    }\n\n    /**\n     * Run the mentioned command as the main command\n     */\n    debug('running main command \"%s\"', commandName)\n    return this.#execMain(commandName, nodeArgv, commandArgv)\n  }\n\n  /**\n   * A named function that returns true. To be used\n   * by flag listeners\n   */\n  shortcircuit() {\n    return true\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\n\nexport default debuglog('adonisjs:ace')\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { errors } from '@poppinss/prompts'\nimport { createError, Exception } from '@poppinss/utils'\n\nexport const E_PROMPT_CANCELLED = errors.E_PROMPT_CANCELLED\n\n/**\n * Command is missing the static property command name\n */\nexport const E_MISSING_COMMAND_NAME = createError<[command: string]>(\n  'Cannot serialize command \"%s\". Missing static property \"commandName\"',\n  'E_MISSING_COMMAND_NAME'\n)\n\n/**\n * Cannot find a command for the given name\n */\nexport const E_COMMAND_NOT_FOUND = class CommandNotFound extends Exception {\n  static status: number = 404\n  commandName: string\n  constructor(args: [command: string]) {\n    super(`Command \"${args[0]}\" is not defined`, { code: 'E_COMMAND_NOT_FOUND' })\n    this.commandName = args[0]\n  }\n}\n\n/**\n * Missing a required flag when running the command\n */\nexport const E_MISSING_FLAG = createError<[flag: string]>(\n  'Missing required option \"%s\"',\n  'E_MISSING_FLAG'\n)\n\n/**\n * Missing value for a flag that accepts values\n */\nexport const E_MISSING_FLAG_VALUE = createError<[flag: string]>(\n  'Missing value for option \"%s\"',\n  'E_MISSING_FLAG_VALUE'\n)\n\n/**\n * Missing a required argument when running the command\n */\nexport const E_MISSING_ARG = createError<[arg: string]>(\n  'Missing required argument \"%s\"',\n  'E_MISSING_ARG'\n)\n\n/**\n * Missing value for an argument\n */\nexport const E_MISSING_ARG_VALUE = createError<[arg: string]>(\n  'Missing value for argument \"%s\"',\n  'E_MISSING_ARG_VALUE'\n)\n\n/**\n * An unknown flag was mentioned\n */\nexport const E_UNKNOWN_FLAG = createError<[flag: string]>(\n  'Unknown flag \"%s\". The mentioned flag is not accepted by the command',\n  'E_UNKNOWN_FLAG'\n)\n\n/**\n * Invalid value provided for the flag\n */\nexport const E_INVALID_FLAG = createError<[flag: string, expectedDataType: string]>(\n  'Invalid value. The \"%s\" flag accepts a \"%s\" value',\n  'E_INVALID_FLAG'\n)\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { inspect } from 'node:util'\nimport string from '@poppinss/utils/string'\nimport Macroable from '@poppinss/macroable'\nimport lodash from '@poppinss/utils/lodash'\nimport { AssertionError } from 'node:assert'\nimport type { Prompt } from '@poppinss/prompts'\nimport type { Colors } from '@poppinss/cliui/types'\nimport { defineStaticProperty, InvalidArgumentsException } from '@poppinss/utils'\n\nimport debug from '../debug.js'\nimport * as errors from '../errors.js'\nimport type { Kernel } from '../kernel.js'\nimport type {\n  Flag,\n  Argument,\n  ParsedOutput,\n  UIPrimitives,\n  CommandOptions,\n  CommandMetaData,\n  FlagsParserOptions,\n  ArgumentsParserOptions,\n} from '../types.js'\n\n/**\n * The base command sets the foundation for defining ace commands.\n * Every command should inherit from the base command.\n */\nexport class BaseCommand extends Macroable {\n  static booted: boolean = false\n\n  /**\n   * Configuration options accepted by the command\n   */\n  static options: CommandOptions\n\n  /**\n   * A collection of aliases for the command\n   */\n  static aliases: string[]\n\n  /**\n   * The command name one can type to run the command\n   */\n  static commandName: string\n\n  /**\n   * The command description\n   */\n  static description: string\n\n  /**\n   * The help text for the command. Help text can be a multiline\n   * string explaining the usage of command\n   */\n  static help?: string | string[]\n\n  /**\n   * Registered arguments\n   */\n  static args: Argument[]\n\n  /**\n   * Registered flags\n   */\n  static flags: Flag[]\n\n  /**\n   * Define static properties on the class. During inheritance, certain\n   * properties must inherit from the parent.\n   */\n  static boot() {\n    if (Object.hasOwn(this, 'booted') && this.booted === true) {\n      return\n    }\n\n    this.booted = true\n    defineStaticProperty(this, 'args', { initialValue: [], strategy: 'inherit' })\n    defineStaticProperty(this, 'flags', { initialValue: [], strategy: 'inherit' })\n    defineStaticProperty(this, 'aliases', { initialValue: [], strategy: 'inherit' })\n    defineStaticProperty(this, 'commandName', { initialValue: '', strategy: 'inherit' })\n    defineStaticProperty(this, 'description', { initialValue: '', strategy: 'inherit' })\n    defineStaticProperty(this, 'help', { initialValue: '', strategy: 'inherit' })\n    defineStaticProperty(this, 'options', {\n      initialValue: { staysAlive: false, allowUnknownFlags: false },\n      strategy: 'inherit',\n    })\n  }\n\n  /**\n   * Specify the argument the command accepts. The arguments via the CLI\n   * will be accepted in the same order as they are defined.\n   *\n   * Mostly, you will be using the `@args` decorator to define the arguments.\n   *\n   * ```ts\n   * Command.defineArgument('entity', { type: 'string' })\n   * ```\n   */\n  static defineArgument(name: string, options: Partial<Argument> & { type: 'string' | 'spread' }) {\n    this.boot()\n    const arg = { name, argumentName: string.dashCase(name), required: true, ...options }\n    const lastArg = this.args[this.args.length - 1]\n\n    /**\n     * Ensure the arg type is specified\n     */\n    if (!arg.type) {\n      throw new InvalidArgumentsException(\n        `Cannot define argument \"${this.name}.${name}\". Specify the argument type`\n      )\n    }\n\n    /**\n     * Ensure we are not adding arguments after a spread argument\n     */\n    if (lastArg && lastArg.type === 'spread') {\n      throw new InvalidArgumentsException(\n        `Cannot define argument \"${this.name}.${name}\" after spread argument \"${this.name}.${lastArg.name}\". Spread argument should be the last one`\n      )\n    }\n\n    /**\n     * Ensure we are not adding a required argument after an optional\n     * argument\n     */\n    if (arg.required && lastArg && lastArg.required === false) {\n      throw new InvalidArgumentsException(\n        `Cannot define required argument \"${this.name}.${name}\" after optional argument \"${this.name}.${lastArg.name}\"`\n      )\n    }\n\n    if (debug.enabled) {\n      debug('defining arg %O, command: %O', arg, `[class: ${this.name}]`)\n    }\n\n    this.args.push(arg)\n  }\n\n  /**\n   * Specify a flag the command accepts.\n   *\n   * Mostly, you will be using the `@flags` decorator to define a flag.\n   *\n   * ```ts\n   * Command.defineFlag('connection', { type: 'string', required: true })\n   * ```\n   */\n  static defineFlag(\n    name: string,\n    options: Partial<Flag> & { type: 'string' | 'boolean' | 'array' | 'number' }\n  ) {\n    this.boot()\n    const flag = { name, flagName: string.dashCase(name), required: false, ...options }\n\n    /**\n     * Ensure the arg type is specified\n     */\n    if (!flag.type) {\n      throw new InvalidArgumentsException(\n        `Cannot define flag \"${this.name}.${name}\". Specify the flag type`\n      )\n    }\n\n    if (debug.enabled) {\n      debug('defining flag %O, command: %O', flag, `[class: ${this.name}]`)\n    }\n\n    this.flags.push(flag)\n  }\n\n  /**\n   * Returns the options for parsing flags and arguments\n   */\n  static getParserOptions(options?: FlagsParserOptions): {\n    flagsParserOptions: Required<FlagsParserOptions>\n    argumentsParserOptions: ArgumentsParserOptions[]\n  } {\n    this.boot()\n\n    const argumentsParserOptions: ArgumentsParserOptions[] = this.args.map((arg) => {\n      return {\n        type: arg.type,\n        default: arg.default,\n        parse: arg.parse,\n      }\n    })\n\n    const flagsParserOptions: Required<FlagsParserOptions> = lodash.merge(\n      {\n        all: [],\n        string: [],\n        boolean: [],\n        array: [],\n        number: [],\n        alias: {},\n        count: [],\n        coerce: {},\n        default: {},\n      },\n      options\n    )\n\n    this.flags.forEach((flag) => {\n      flagsParserOptions.all.push(flag.flagName)\n\n      if (flag.alias) {\n        flagsParserOptions.alias[flag.flagName] = flag.alias\n      }\n      if (flag.parse) {\n        flagsParserOptions.coerce[flag.flagName] = flag.parse\n      }\n      if (flag.default !== undefined) {\n        flagsParserOptions.default[flag.flagName] = flag.default\n      }\n\n      switch (flag.type) {\n        case 'string':\n          flagsParserOptions.string.push(flag.flagName)\n          break\n        case 'boolean':\n          flagsParserOptions.boolean.push(flag.flagName)\n          break\n        case 'number':\n          flagsParserOptions.number.push(flag.flagName)\n          break\n        case 'array':\n          flagsParserOptions.array.push(flag.flagName)\n          break\n      }\n    })\n\n    return {\n      flagsParserOptions,\n      argumentsParserOptions,\n    }\n  }\n\n  /**\n   * Serializes the command to JSON. The return value satisfies the\n   * {@link CommandMetaData}\n   */\n  static serialize(): CommandMetaData {\n    this.boot()\n    if (!this.commandName) {\n      throw new errors.E_MISSING_COMMAND_NAME([this.name])\n    }\n\n    const [namespace, name] = this.commandName.split(':')\n\n    return {\n      commandName: this.commandName,\n      description: this.description,\n      help: this.help,\n      namespace: name ? namespace : null,\n      aliases: this.aliases,\n      flags: this.flags.map((flag) => {\n        const { parse, ...rest } = flag\n        return rest\n      }),\n      args: this.args.map((arg) => {\n        const { parse, ...rest } = arg\n        return rest\n      }),\n      options: this.options,\n    }\n  }\n\n  /**\n   * Validate the yargs parsed output againts the command.\n   */\n  static validate(parsedOutput: ParsedOutput) {\n    this.boot()\n\n    /**\n     * Validates args and their values\n     */\n    this.args.forEach((arg, index) => {\n      const value = parsedOutput.args[index] as string\n      const hasDefinedArgument = value !== undefined\n\n      if (arg.required && !hasDefinedArgument) {\n        throw new errors.E_MISSING_ARG([arg.name])\n      }\n\n      if (hasDefinedArgument && !arg.allowEmptyValue && (value === '' || !value.length)) {\n        if (debug.enabled) {\n          debug('disallowing empty value \"%s\" for arg: \"%s\"', value, arg.name)\n        }\n\n        throw new errors.E_MISSING_ARG_VALUE([arg.name])\n      }\n    })\n\n    /**\n     * Disallow unknown flags\n     */\n    if (!this.options.allowUnknownFlags && parsedOutput.unknownFlags.length) {\n      const unknowFlag = parsedOutput.unknownFlags[0]\n      const unknowFlagName = unknowFlag.length === 1 ? `-${unknowFlag}` : `--${unknowFlag}`\n      throw new errors.E_UNKNOWN_FLAG([unknowFlagName])\n    }\n\n    /**\n     * Validate flags\n     */\n    this.flags.forEach((flag) => {\n      const hasMentionedFlag = Object.hasOwn(parsedOutput.flags, flag.flagName)\n      const value = parsedOutput.flags[flag.flagName]\n\n      /**\n       * Validate the value by flag type\n       */\n      switch (flag.type) {\n        case 'boolean':\n          /**\n           * If flag is required, then it should be mentioned\n           */\n          if (flag.required && !hasMentionedFlag) {\n            throw new errors.E_MISSING_FLAG([flag.flagName])\n          }\n          break\n        case 'number':\n          /**\n           * If flag is required, then it should be mentioned\n           */\n          if (flag.required && !hasMentionedFlag) {\n            throw new errors.E_MISSING_FLAG([flag.flagName])\n          }\n\n          /**\n           * Regardless of whether flag is required or not. If it is mentioned,\n           * then some value should be provided.\n           *\n           * In case of number input, yargs sends undefined\n           */\n          if (hasMentionedFlag && value === undefined) {\n            throw new errors.E_MISSING_FLAG_VALUE([flag.flagName])\n          }\n\n          if (Number.isNaN(value)) {\n            throw new errors.E_INVALID_FLAG([flag.flagName, 'numeric'])\n          }\n          break\n        case 'string':\n        case 'array':\n          /**\n           * If flag is required, then it should be mentioned\n           */\n          if (flag.required && !hasMentionedFlag) {\n            throw new errors.E_MISSING_FLAG([flag.flagName])\n          }\n\n          /**\n           * Regardless of whether flag is required or not. If it is mentioned,\n           * then some value should be provided, unless empty values are\n           * allowed.\n           *\n           * In case of string, flag with no value receives an empty string\n           * In case of array, flag with no value receives an empty array\n           */\n          if (hasMentionedFlag && !flag.allowEmptyValue && (value === '' || !value.length)) {\n            if (debug.enabled) {\n              debug('disallowing empty value \"%s\" for flag: \"%s\"', value, flag.name)\n            }\n\n            throw new errors.E_MISSING_FLAG_VALUE([flag.flagName])\n          }\n      }\n    })\n  }\n\n  /**\n   * Check if a command has been hypdrated\n   */\n  protected hydrated: boolean = false\n\n  /**\n   * The exit code for the command\n   */\n  exitCode?: number\n\n  /**\n   * The error raised at the time of the executing the command.\n   * The value is undefined if no error is raised.\n   */\n  error?: any\n\n  /**\n   * The result property stores the return value of the \"run\"\n   * method (unless commands sets it explicitly)\n   */\n  result?: any\n\n  /**\n   * Logger to log messages\n   */\n  get logger() {\n    return this.ui.logger\n  }\n\n  /**\n   * Add colors to console messages\n   */\n  get colors(): Colors {\n    return this.ui.colors\n  }\n\n  /**\n   * Is the current command the main command executed from the\n   * CLI\n   */\n  get isMain(): boolean {\n    return this.kernel.getMainCommand() === this\n  }\n\n  /**\n   * Reference to the command name\n   */\n  get commandName() {\n    return (this.constructor as typeof BaseCommand).commandName\n  }\n\n  /**\n   * Reference to the command options\n   */\n  get options() {\n    return (this.constructor as typeof BaseCommand).options\n  }\n\n  /**\n   * Reference to the command args\n   */\n  get args() {\n    return (this.constructor as typeof BaseCommand).args\n  }\n\n  /**\n   * Reference to the command flags\n   */\n  get flags() {\n    return (this.constructor as typeof BaseCommand).flags\n  }\n\n  constructor(\n    protected kernel: Kernel<any>,\n    protected parsed: ParsedOutput,\n    public ui: UIPrimitives,\n    public prompt: Prompt\n  ) {\n    super()\n  }\n\n  /**\n   * Hydrate command by setting class properties from\n   * the parsed output\n   */\n  hydrate() {\n    if (this.hydrated) {\n      return\n    }\n\n    const CommandConstructor = this.constructor as typeof BaseCommand\n\n    /**\n     * Set args as properties on the command instance\n     */\n    CommandConstructor.args.forEach((arg, index) => {\n      Object.defineProperty(this, arg.name, {\n        value: this.parsed.args[index],\n        enumerable: true,\n        writable: true,\n        configurable: true,\n      })\n    })\n\n    /**\n     * Set flags as properties on the command instance\n     */\n    CommandConstructor.flags.forEach((flag) => {\n      Object.defineProperty(this, flag.name, {\n        value: this.parsed.flags[flag.flagName],\n        enumerable: true,\n        writable: true,\n        configurable: true,\n      })\n    })\n\n    this.hydrated = true\n  }\n\n  /**\n   * The run method should include the implementation for the\n   * command.\n   */\n  async run(..._: any[]): Promise<any> {}\n\n  /**\n   * Executes the commands by running the command's run method.\n   */\n  async exec() {\n    this.hydrate()\n\n    try {\n      this.result = await this.run()\n      this.exitCode = this.exitCode ?? 0\n      return this.result\n    } catch (error) {\n      this.error = error\n      this.exitCode = this.exitCode ?? 1\n      throw error\n    }\n  }\n\n  /**\n   * JSON representation of the command\n   */\n  toJSON() {\n    return {\n      commandName: (this.constructor as typeof BaseCommand).commandName,\n      options: (this.constructor as typeof BaseCommand).options,\n      args: this.parsed.args,\n      flags: this.parsed.flags,\n      error: this.error,\n      result: this.result,\n      exitCode: this.exitCode,\n    }\n  }\n\n  /**\n   * Assert the command exists with a given exit code\n   */\n  assertExitCode(code: number) {\n    if (this.exitCode !== code) {\n      throw new AssertionError({\n        message: `Expected '${this.commandName}' command to finish with exit code '${code}'`,\n        actual: this.exitCode,\n        expected: code,\n        operator: 'strictEqual',\n        stackStartFn: this.assertExitCode,\n      })\n    }\n  }\n\n  /**\n   * Assert the command exists with a given exit code\n   */\n  assertNotExitCode(code: number) {\n    if (this.exitCode === code) {\n      throw new AssertionError({\n        message: `Expected '${this.commandName}' command to finish without exit code '${this.exitCode}'`,\n        stackStartFn: this.assertNotExitCode,\n      })\n    }\n  }\n\n  /**\n   * Assert the command exists with zero exit code\n   */\n  assertSucceeded() {\n    return this.assertExitCode(0)\n  }\n\n  /**\n   * Assert the command exists with non-zero exit code\n   */\n  assertFailed() {\n    return this.assertNotExitCode(0)\n  }\n\n  /**\n   * Assert command to log the expected message\n   */\n  assertLog(message: string, stream?: 'stdout' | 'stderr') {\n    const logs = this.logger.getLogs()\n    const logMessages = logs.map((log) => log.message)\n    const matchingLog = logs.find((log) => log.message === message)\n\n    /**\n     * No log found\n     */\n    if (!matchingLog) {\n      throw new AssertionError({\n        message: `Expected log messages to include ${inspect(message)}`,\n        actual: logMessages,\n        expected: [message],\n        operator: 'strictEqual',\n        stackStartFn: this.assertLog,\n      })\n    }\n\n    /**\n     * Log is on a different stream\n     */\n    if (stream && matchingLog.stream !== stream) {\n      throw new AssertionError({\n        message: `Expected log message stream to be ${inspect(stream)}, instead received ${inspect(\n          matchingLog.stream\n        )}`,\n        actual: matchingLog.stream,\n        expected: stream,\n        operator: 'strictEqual',\n        stackStartFn: this.assertLog,\n      })\n    }\n  }\n\n  /**\n   * Assert command to log the expected message\n   */\n  assertLogMatches(matchingRegex: RegExp, stream?: 'stdout' | 'stderr') {\n    const logs = this.logger.getLogs()\n    const matchingLog = logs.find((log) => matchingRegex.test(log.message))\n\n    /**\n     * No log found\n     */\n    if (!matchingLog) {\n      throw new AssertionError({\n        message: `Expected log messages to match ${inspect(matchingRegex)}`,\n        stackStartFn: this.assertLogMatches,\n      })\n    }\n\n    /**\n     * Log is on a different stream\n     */\n    if (stream && matchingLog.stream !== stream) {\n      throw new AssertionError({\n        message: `Expected log message stream to be ${inspect(stream)}, instead received ${inspect(\n          matchingLog.stream\n        )}`,\n        actual: matchingLog.stream,\n        expected: stream,\n        operator: 'strictEqual',\n        stackStartFn: this.assertLogMatches,\n      })\n    }\n  }\n\n  /**\n   * Assert the command prints a table to stdout\n   */\n  assertTableRows(rows: string[][]) {\n    const logs = this.logger.getLogs()\n    const hasAllMatchingRows = rows.every((row) => {\n      const columnsContent = row.join('|')\n      return !!logs.find((log) => log.message === columnsContent)\n    })\n\n    if (!hasAllMatchingRows) {\n      throw new AssertionError({\n        message: `Expected log messages to include a table with the expected rows`,\n        operator: 'strictEqual',\n        stackStartFn: this.assertTableRows,\n      })\n    }\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { BaseCommand } from '../commands/base.js'\nimport type { SpreadArgument, StringArgument } from '../types.js'\n\n/**\n * Namespace for defining arguments using decorators.\n */\nexport const args = {\n  /**\n   * Define argument that accepts a string value\n   */\n  string<Type = string>(options?: Partial<Omit<StringArgument<Type>, 'type'>>) {\n    return function addArg<Key extends string, Target extends { [K in Key]?: Type }>(\n      target: Target,\n      propertyName: Key\n    ) {\n      const Command = target.constructor as typeof BaseCommand\n      Command.defineArgument(propertyName, { ...options, type: 'string' })\n    }\n  },\n\n  /**\n   * Define argument that accepts a spread value\n   */\n  spread<Type extends any = string[]>(options?: Partial<Omit<SpreadArgument<Type>, 'type'>>) {\n    return function addArg<Key extends string, Target extends { [K in Key]?: Type }>(\n      target: Target,\n      propertyName: Key\n    ) {\n      const Command = target.constructor as typeof BaseCommand\n      Command.defineArgument(propertyName, { ...options, type: 'spread' })\n    }\n  },\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { BaseCommand } from '../commands/base.js'\nimport type { ArrayFlag, NumberFlag, StringFlag, BooleanFlag } from '../types.js'\n\n/**\n * Namespace for defining flags using decorators.\n */\nexport const flags = {\n  /**\n   * Define option that accepts a string value\n   */\n  string<Type = string>(options?: Partial<Omit<StringFlag<Type>, 'type'>>) {\n    return function addArg<Key extends string, Target extends { [K in Key]?: Type }>(\n      target: Target,\n      propertyName: Key\n    ) {\n      const Command = target.constructor as typeof BaseCommand\n      Command.defineFlag(propertyName, { type: 'string', ...options })\n    }\n  },\n\n  /**\n   * Define option that accepts a boolean value\n   */\n  boolean<Type = boolean>(options?: Partial<Omit<BooleanFlag<Type>, 'type'>>) {\n    return function addArg<Key extends string, Target extends { [K in Key]?: Type }>(\n      target: Target,\n      propertyName: Key\n    ) {\n      const Command = target.constructor as typeof BaseCommand\n      Command.defineFlag(propertyName, { type: 'boolean', ...options })\n    }\n  },\n\n  /**\n   * Define option that accepts a number value\n   */\n  number<Type = number>(options?: Partial<Omit<NumberFlag<Type>, 'type'>>) {\n    return function addArg<Key extends string, Target extends { [K in Key]?: Type }>(\n      target: Target,\n      propertyName: Key\n    ) {\n      const Command = target.constructor as typeof BaseCommand\n      Command.defineFlag(propertyName, { type: 'number', ...options })\n    }\n  },\n\n  /**\n   * Define option that accepts an array of values\n   */\n  array<Type extends any[] = string[]>(options?: Partial<Omit<ArrayFlag<Type>, 'type'>>) {\n    return function addArg<Key extends string, Target extends { [K in Key]?: Type }>(\n      target: Target,\n      propertyName: Key\n    ) {\n      const Command = target.constructor as typeof BaseCommand\n      Command.defineFlag(propertyName, { type: 'array', ...options })\n    }\n  },\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { ArrayFlag, BooleanFlag, Flag, NumberFlag, StringFlag, UIPrimitives } from '../types.js'\n\n/**\n * The flag formatter formats a flag as per the http://docopt.org/ specification.\n */\nexport class FlagFormatter {\n  #flag: Flag\n  #colors: UIPrimitives['colors']\n\n  constructor(flag: Flag, colors: UIPrimitives['colors']) {\n    this.#flag = flag\n    this.#colors = colors\n  }\n\n  /**\n   * Formats the value flag\n   */\n  #formatValueFlag(flag: Flag, valuePlaceholder: string) {\n    return flag.required ? `=${valuePlaceholder}` : `[=${valuePlaceholder}]`\n  }\n\n  /**\n   * Formats the aliases for the flag\n   */\n  #formatAliases(flag: Flag): string[] {\n    if (!flag.alias) {\n      return []\n    }\n\n    if (typeof flag.alias === 'string') {\n      return [`-${flag.alias}`]\n    }\n\n    return flag.alias.map((alias) => `-${alias}`)\n  }\n\n  /**\n   * Formats the array flag by appending ellipsis `...` and wrapping\n   * the value to indicate if it is required or not\n   */\n  #formatArrayFlag(flag: ArrayFlag<string[]>) {\n    const value = this.#formatValueFlag(flag, `${flag.flagName.toUpperCase()}...`)\n    const aliases = this.#formatAliases(flag)\n    const flagWithValue = `--${flag.flagName}${value}`\n\n    if (aliases.length) {\n      return `  ${this.#colors.green(`${aliases.join(',')}, ${flagWithValue}`)}  `\n    }\n\n    return `  ${this.#colors.green(flagWithValue)}  `\n  }\n\n  /**\n   * Formats the string flag by wrapping the value to indicate\n   * if it is required or not\n   */\n  #formatStringFlag(flag: StringFlag<string>) {\n    const value = this.#formatValueFlag(flag, `${flag.flagName.toUpperCase()}`)\n    const aliases = this.#formatAliases(flag)\n    const flagWithValue = `--${flag.flagName}${value}`\n\n    if (aliases.length) {\n      return `  ${this.#colors.green(`${aliases.join(',')}, ${flagWithValue}`)}  `\n    }\n\n    return `  ${this.#colors.green(flagWithValue)}  `\n  }\n\n  /**\n   * Formats the numeric flag by wrapping the value to indicate\n   * if it is required or not\n   */\n  #formatNumericFlag(flag: NumberFlag<number>) {\n    const value = this.#formatValueFlag(flag, `${flag.flagName.toUpperCase()}`)\n    const aliases = this.#formatAliases(flag)\n    const flagWithValue = `--${flag.flagName}${value}`\n\n    if (aliases.length) {\n      return `  ${this.#colors.green(`${aliases.join(',')}, ${flagWithValue}`)}  `\n    }\n\n    return `  ${this.#colors.green(flagWithValue)}  `\n  }\n\n  /**\n   * Formats the boolean flag. Boolean flags needs no wrapping\n   */\n  #formatBooleanFlag(flag: BooleanFlag<boolean>) {\n    const aliases = this.#formatAliases(flag)\n    const negatedVariant = flag.showNegatedVariantInHelp ? `|--no-${flag.flagName}` : ''\n    const flagWithVariant = `--${flag.flagName}${negatedVariant}`\n\n    if (aliases.length) {\n      return `  ${this.#colors.green(`${aliases.join(',')}, ${flagWithVariant}`)}  `\n    }\n\n    return `  ${this.#colors.green(flagWithVariant)}  `\n  }\n\n  /**\n   * Returns formatted description for the flag\n   */\n  formatDescription(): string {\n    const defaultValue = this.#flag.default !== undefined ? `[default: ${this.#flag.default}]` : ''\n    const separator = defaultValue && this.#flag.description ? ' ' : ''\n    return this.#colors.dim(`${this.#flag.description || ''}${separator}${defaultValue}`)\n  }\n\n  /**\n   * Returns a formatted version of the flag name and aliases\n   */\n  formatOption(): string {\n    switch (this.#flag.type) {\n      case 'array':\n        return this.#formatArrayFlag(this.#flag)\n      case 'string':\n        return this.#formatStringFlag(this.#flag)\n      case 'number':\n        return this.#formatNumericFlag(this.#flag)\n      case 'boolean':\n        return this.#formatBooleanFlag(this.#flag)\n    }\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport stringWidth from 'string-width'\nimport { justify, TERMINAL_SIZE, wrap } from '@poppinss/cliui/helpers'\n\nimport type { ListTable } from '../types.js'\n\n/**\n * The list formatter formats the list of commands and flags. The option column\n * is justified to have same width accross all the rows.\n */\nexport class ListFormatter {\n  #tables: ListTable[]\n  #largestOptionColumnWidth: number\n\n  constructor(tables: ListTable[]) {\n    this.#tables = tables\n    this.#largestOptionColumnWidth = Math.max(\n      ...this.#tables\n        .map((table) => table.columns.map((column) => stringWidth(column.option)))\n        .flat()\n    )\n  }\n\n  /**\n   * Formats the table to an array of plain text rows.\n   */\n  #formatTable(table: ListTable, terminalWidth: number): string[] {\n    const options = justify(\n      table.columns.map(({ option }) => option),\n      { maxWidth: this.#largestOptionColumnWidth }\n    )\n\n    const descriptions = wrap(\n      table.columns.map(({ description }) => description),\n      {\n        startColumn: this.#largestOptionColumnWidth,\n        endColumn: terminalWidth,\n        trimStart: true,\n      }\n    )\n\n    return table.columns.map((_, index) => `${options[index]}${descriptions[index]}`)\n  }\n\n  /**\n   * Format tables list into an array of rows\n   */\n  format(terminalWidth: number = TERMINAL_SIZE) {\n    return this.#tables.map((table) => {\n      return {\n        heading: table.heading,\n        rows: this.#formatTable(table, terminalWidth),\n      }\n    })\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Validator } from 'jsonschema'\nimport { readFile } from 'node:fs/promises'\nimport { RuntimeException } from '@poppinss/utils'\n\nimport { schemaRoot } from '../schemas/main.js'\nimport type { AbstractBaseCommand, CommandMetaData, UIPrimitives } from './types.js'\n\nconst schema = JSON.parse(\n  await readFile(new URL('./command_metadata_schema.json', schemaRoot), 'utf8')\n)\n\n/**\n * Helper to sort array of strings alphabetically.\n */\nexport function sortAlphabetically(prev: string, curr: string) {\n  if (curr > prev) {\n    return -1\n  }\n\n  if (curr < prev) {\n    return 1\n  }\n\n  return 0\n}\n\n/**\n * Renders an error message and lists suggestions.\n */\nexport function renderErrorWithSuggestions(\n  ui: UIPrimitives,\n  message: string,\n  suggestions: string[]\n) {\n  const instructions = ui\n    .sticker()\n    .fullScreen()\n    .drawBorder((borderChar, colors) => colors.red(borderChar))\n\n  instructions.add(ui.colors.red(message))\n  if (suggestions.length) {\n    instructions.add('')\n    instructions.add(`${ui.colors.dim('Did you mean?')} ${suggestions.slice(0, 4).join(', ')}`)\n  }\n\n  instructions.getRenderer().logError(instructions.prepare())\n}\n\n/**\n * Validates the metadata of a command to ensure it has all the neccessary\n * properties\n */\nexport function validateCommandMetaData(\n  command: unknown,\n  exportPath: string\n): asserts command is CommandMetaData {\n  if (!command || typeof command !== 'object') {\n    throw new RuntimeException(`Invalid command metadata exported from ${exportPath}`)\n  }\n\n  try {\n    new Validator().validate(command, schema, { throwError: true })\n  } catch (error) {\n    throw new RuntimeException(`Invalid command exported from ${exportPath}. ${error.message}`)\n  }\n}\n\n/**\n * Validates the command class. We do not check it against the \"BaseCommand\"\n * class, because the ace version mis-match could make the validation\n * fail.\n */\nexport function validateCommand<Command extends AbstractBaseCommand>(\n  command: unknown,\n  exportPath: string\n): asserts command is Command {\n  if (typeof command !== 'function' || !command.toString().startsWith('class ')) {\n    throw new RuntimeException(\n      `Invalid command exported from ${exportPath}. Expected command to be a class`\n    )\n  }\n\n  const commandConstructor = command as Function & { serialize: () => unknown }\n  if (typeof commandConstructor.serialize !== 'function') {\n    throw new RuntimeException(\n      `Invalid command exported from ${exportPath}. Expected command to extend the \"BaseCommand\"`\n    )\n  }\n\n  validateCommandMetaData(commandConstructor.serialize(), exportPath)\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const schemaRoot = import.meta.url\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport string from '@poppinss/utils/string'\nimport { TERMINAL_SIZE, wrap } from '@poppinss/cliui/helpers'\n\nimport { ArgumentFormatter } from './argument.js'\nimport type { AllowedInfoValues, CommandMetaData, UIPrimitives } from '../types.js'\n\n/**\n * The command formatter exposes API to format command data for the\n * commands list and the command help.\n */\nexport class CommandFormatter {\n  #command: CommandMetaData\n  #colors: UIPrimitives['colors']\n\n  constructor(command: CommandMetaData, colors: UIPrimitives['colors']) {\n    this.#command = command\n    this.#colors = colors\n  }\n\n  /**\n   * Returns the formatted command name to be displayed in the list\n   * of commands\n   */\n  formatListName(aliases: string[]) {\n    const formattedAliases = aliases.length ? ` ${this.#colors.dim(`(${aliases.join(', ')})`)}` : ''\n    return `  ${this.#colors.green(this.#command.commandName)}${formattedAliases}  `\n  }\n\n  /**\n   * Returns the formatted description of the command\n   */\n  formatDescription() {\n    return this.#command.description || ''\n  }\n\n  /**\n   * Returns multiline command help\n   */\n  formatHelp(binaryName?: AllowedInfoValues, terminalWidth: number = TERMINAL_SIZE): string {\n    const binary = binaryName ? `${binaryName}` : ''\n    if (!this.#command.help) {\n      return ''\n    }\n\n    /**\n     * Normalize help text to be an array of rows\n     */\n    const help = Array.isArray(this.#command.help) ? this.#command.help : [this.#command.help]\n\n    /**\n     * Wrap text when goes over the terminal size\n     */\n    return wrap(\n      help.map((line) => string.interpolate(line, { binaryName: binary })),\n      {\n        startColumn: 2,\n        trimStart: false,\n        endColumn: terminalWidth,\n      }\n    ).join('\\n')\n  }\n\n  /**\n   * Returns the formatted description to be displayed in the list\n   * of commands\n   */\n  formatListDescription() {\n    if (!this.#command.description) {\n      return ''\n    }\n    return this.#colors.dim(this.#command.description)\n  }\n\n  /**\n   * Returns an array of strings, each line contains an individual usage\n   */\n  formatUsage(aliases: string[], binaryName?: AllowedInfoValues): string[] {\n    const binary = binaryName ? `${binaryName} ` : ''\n\n    /**\n     * Display options placeholder for flags\n     */\n    const flags = this.#command.flags.length ? this.#colors.dim('[options]') : ''\n\n    /**\n     * Display a list of named args\n     */\n    const args = this.#command.args\n      .map((arg) => new ArgumentFormatter(arg, this.#colors).formatOption())\n      .join(' ')\n\n    /**\n     * Separator between options placeholder and args\n     */\n    const separator = flags && args ? ` ${this.#colors.dim('[--]')} ` : ''\n\n    const mainUsage = [`  ${binary}${this.#command.commandName} ${flags}${separator}${args}`]\n    return mainUsage.concat(\n      aliases.map((alias) => `  ${binary}${alias} ${flags}${separator}${args}`)\n    )\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Argument, UIPrimitives } from '../types.js'\n\n/**\n * The argument formatter formats an argument as per the http://docopt.org/ specification.\n */\nexport class ArgumentFormatter {\n  #argument: Argument\n  #colors: UIPrimitives['colors']\n\n  constructor(argument: Argument, colors: UIPrimitives['colors']) {\n    this.#argument = argument\n    this.#colors = colors\n  }\n\n  /**\n   * Wraps the optional placeholder on option arguments\n   */\n  #formatArgument(argument: Argument, valuePlaceholder: string) {\n    return argument.required ? `${valuePlaceholder}` : `[${valuePlaceholder}]`\n  }\n\n  /**\n   * Returns formatted description for the argument\n   */\n  formatDescription(): string {\n    const defaultValue = this.#argument.default ? `[default: ${this.#argument.default}]` : ''\n    const separator = defaultValue && this.#argument.description ? ' ' : ''\n    return this.#colors.dim(`${this.#argument.description || ''}${separator}${defaultValue}`)\n  }\n\n  /**\n   * Returns a formatted version of the argument name to be displayed\n   * inside a list\n   */\n  formatListOption(): string {\n    switch (this.#argument.type) {\n      case 'spread':\n        return `  ${this.#colors.green(\n          this.#formatArgument(this.#argument, `${this.#argument.argumentName}...`)\n        )}  `\n      case 'string':\n        return `  ${this.#colors.green(\n          this.#formatArgument(this.#argument, `${this.#argument.argumentName}`)\n        )}  `\n    }\n  }\n\n  /**\n   * Returns a formatted version of the argument name to\n   * be displayed next to usage\n   */\n  formatOption(): string {\n    switch (this.#argument.type) {\n      case 'spread':\n        return this.#colors.dim(\n          `${this.#formatArgument(this.#argument, `<${this.#argument.argumentName}...>`)}`\n        )\n      case 'string':\n        return this.#colors.dim(\n          `${this.#formatArgument(this.#argument, `<${this.#argument.argumentName}>`)}`\n        )\n    }\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { BaseCommand } from './base.js'\nimport { args } from '../decorators/args.js'\nimport { flags } from '../decorators/flags.js'\nimport { FlagFormatter } from '../formatters/flag.js'\nimport { ListFormatter } from '../formatters/list.js'\nimport { renderErrorWithSuggestions } from '../helpers.js'\nimport { CommandFormatter } from '../formatters/command.js'\nimport type { CommandMetaData, Flag, ListTable } from '../types.js'\n\n/**\n * The list command is used to view a list of commands\n */\nexport class ListCommand extends BaseCommand {\n  /**\n   * Command metadata\n   */\n  static commandName: string = 'list'\n  static description: string = 'View list of available commands'\n  static help = [\n    'The list command displays a list of all the commands:',\n    '  {{ binaryName }} list',\n    '',\n    'You can also display the commands for a specific namespace:',\n    '  {{ binaryName }} list <namespace...>',\n  ]\n\n  /**\n   * Optional flag to filter list by namespace\n   */\n  @args.spread({\n    description: 'Filter list by namespace',\n    required: false,\n  })\n  declare namespaces?: string[]\n\n  @flags.boolean({ description: 'Get list of commands as JSON' })\n  declare json?: boolean\n\n  /**\n   * Returns a table for an array of commands.\n   */\n  #makeCommandsTable(heading: string, commands: CommandMetaData[]): ListTable {\n    return {\n      heading: this.colors.yellow(heading),\n      columns: commands.map((command) => {\n        const aliases = this.kernel.getCommandAliases(command.commandName)\n        const commandFormatter = new CommandFormatter(command, this.colors)\n\n        return {\n          option: commandFormatter.formatListName(aliases),\n          description: commandFormatter.formatListDescription(),\n        }\n      }),\n    }\n  }\n\n  /**\n   * Returns a table for an array of global options\n   */\n  #makeOptionsTable(heading: string, flagsList: Flag[]): ListTable {\n    return {\n      heading: this.colors.yellow(heading),\n      columns: flagsList.map((flag) => {\n        const flagFormatter = new FlagFormatter(flag, this.colors)\n\n        return {\n          option: flagFormatter.formatOption(),\n          description: flagFormatter.formatDescription(),\n        }\n      }),\n    }\n  }\n\n  /**\n   * Returns an array of tables for all the commands or for mentioned\n   * namespaces only\n   */\n  #getCommandsTables(namespaces?: string[]) {\n    if (namespaces && namespaces.length) {\n      return namespaces.map((namespace) => {\n        return this.#makeCommandsTable(namespace, this.kernel.getNamespaceCommands(namespace))\n      })\n    }\n\n    return [\n      this.#makeCommandsTable('Available commands:', this.kernel.getNamespaceCommands()),\n      ...this.kernel\n        .getNamespaces()\n        .map((namespace) =>\n          this.#makeCommandsTable(namespace, this.kernel.getNamespaceCommands(namespace))\n        ),\n    ]\n  }\n\n  /**\n   * Returns table for the global flags\n   */\n  #getOptionsTable() {\n    if (!this.kernel.flags.length) {\n      return []\n    }\n\n    return [this.#makeOptionsTable('Options:', this.kernel.flags)]\n  }\n\n  /**\n   * Validates the namespaces mentioned via the \"namespaces\"\n   * flag\n   */\n  #validateNamespace(): boolean {\n    if (!this.namespaces) {\n      return true\n    }\n\n    const namespaces = this.kernel.getNamespaces()\n    const unknownNamespace = this.namespaces.find((namespace) => !namespaces.includes(namespace))\n\n    /**\n     * Show error when the namespace is not known\n     */\n    if (unknownNamespace) {\n      renderErrorWithSuggestions(\n        this.ui,\n        `Namespace \"${unknownNamespace}\" is not defined`,\n        this.kernel.getNamespaceSuggestions(unknownNamespace)\n      )\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * The method is used to render a list of options and commands\n   */\n  protected renderList() {\n    const tables = this.#getOptionsTable().concat(this.#getCommandsTables(this.namespaces))\n\n    new ListFormatter(tables).format().forEach((table) => {\n      this.logger.log('')\n      this.logger.log(table.heading)\n      this.logger.log(table.rows.join('\\n'))\n    })\n  }\n\n  protected renderToJSON() {\n    if (this.namespaces && this.namespaces.length) {\n      return this.namespaces\n        .map((namespace) => {\n          return this.kernel.getNamespaceCommands(namespace)\n        })\n        .flat(1)\n    }\n\n    return this.kernel.getNamespaceCommands().concat(\n      this.kernel\n        .getNamespaces()\n        .map((namespace) => this.kernel.getNamespaceCommands(namespace))\n        .flat(1)\n    )\n  }\n\n  /**\n   * Executed by ace directly\n   */\n  async run() {\n    const hasValidNamespaces = this.#validateNamespace()\n    if (!hasValidNamespaces) {\n      this.exitCode = 1\n      return\n    }\n\n    if (this.json) {\n      this.logger.log(JSON.stringify(this.renderToJSON(), null, 2))\n      return\n    }\n\n    this.renderList()\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { AbstractBaseCommand, CommandMetaData, LoadersContract } from '../types.js'\n\n/**\n * List loader exposes the API to register commands as classes\n */\nexport class ListLoader<Command extends AbstractBaseCommand> implements LoadersContract<Command> {\n  #commands: Command[]\n\n  constructor(commands: Command[]) {\n    this.#commands = commands\n  }\n\n  /**\n   * Returns an array of command's metadata\n   */\n  async getMetaData(): Promise<CommandMetaData[]> {\n    return this.#commands.map((command) => command.serialize())\n  }\n\n  /**\n   * Returns the command class constructor for a given command. Null\n   * is returned when unable to lookup the command\n   */\n  async getCommand(metaData: CommandMetaData): Promise<Command | null> {\n    return this.#commands.find((command) => command.commandName === metaData.commandName) || null\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { errors as promptsErrors } from '@poppinss/prompts'\nimport { errors, Kernel } from '../index.js'\nimport { renderErrorWithSuggestions } from './helpers.js'\n\n/**\n * The base exception handler that is used by default to exception\n * ace exceptions.\n *\n * You can extend this class to custom the exception rendering\n * behavior.\n */\nexport class ExceptionHandler {\n  debug: boolean = true\n\n  /**\n   * Known error codes. For these error, only the error message is\n   * reported using the logger\n   */\n  protected knownErrorCodes: string[] = []\n\n  /**\n   * Internal set of known error codes.\n   */\n  protected internalKnownErrorCode = Object.keys(errors)\n\n  /**\n   * Logs error to stderr using logger\n   */\n  protected logError(error: { message: any } & unknown, kernel: Kernel<any>) {\n    kernel.ui.logger.logError(`${kernel.ui.colors.bgRed().white('  ERROR  ')} ${error.message}`)\n  }\n\n  /**\n   * Pretty prints uncaught error in debug mode\n   */\n  protected async prettyPrintError(error: object) {\n    // @ts-expect-error\n    const { default: youchTerminal } = await import('youch-terminal')\n    const { default: Youch } = await import('youch')\n\n    const youch = new Youch(error, {})\n    console.log(youchTerminal(await youch.toJSON(), { displayShortPath: true }))\n  }\n\n  /**\n   * Renders an exception for the console\n   */\n  async render(error: unknown, kernel: Kernel<any>) {\n    /**\n     * Render non object errors or errors without message property\n     * as a string using the logger\n     */\n    if (typeof error !== 'object' || error === null || !('message' in error)) {\n      this.logError({ message: String(error) }, kernel)\n      return\n    }\n\n    /**\n     * Report command not found error with command suggestions\n     */\n    if (error instanceof errors.E_COMMAND_NOT_FOUND) {\n      renderErrorWithSuggestions(\n        kernel.ui,\n        error.message,\n        kernel.getCommandSuggestions(error.commandName)\n      )\n      return\n    }\n\n    /**\n     * Display prompt cancellation error\n     */\n    if (error instanceof promptsErrors.E_PROMPT_CANCELLED) {\n      this.logError({ message: 'Prompt cancelled' }, kernel)\n      return\n    }\n\n    /**\n     * Known errors should always be reported with a message\n     */\n    if (\n      'code' in error &&\n      typeof error.code === 'string' &&\n      (this.internalKnownErrorCode.includes(error.code) ||\n        this.knownErrorCodes.includes(error.code))\n    ) {\n      this.logError({ message: error.message }, kernel)\n      return\n    }\n\n    /**\n     * Log error message only when not in debug mode\n     */\n    if (!this.debug) {\n      this.logError({ message: error.message }, kernel)\n      return\n    }\n\n    return this.prettyPrintError(error)\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport { Parser } from './src/parser.js'\nexport { Kernel } from './src/kernel.js'\nexport * as errors from './src/errors.js'\nexport { args } from './src/decorators/args.js'\nexport { flags } from './src/decorators/flags.js'\nexport * as cliHelpers from '@poppinss/cliui/helpers'\nexport { BaseCommand } from './src/commands/base.js'\nexport { HelpCommand } from './src/commands/help.js'\nexport { ListCommand } from './src/commands/list.js'\nexport { FsLoader } from './src/loaders/fs_loader.js'\nexport { ListLoader } from './src/loaders/list_loader.js'\nexport { ExceptionHandler } from './src/exception_handler.js'\nexport { IndexGenerator } from './src/generators/index_generator.js'\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { TERMINAL_SIZE, wrap } from '@poppinss/cliui/helpers'\n\nimport { BaseCommand } from './base.js'\nimport { args } from '../decorators/args.js'\nimport { ListFormatter } from '../formatters/list.js'\nimport { FlagFormatter } from '../formatters/flag.js'\nimport { renderErrorWithSuggestions } from '../helpers.js'\nimport { CommandFormatter } from '../formatters/command.js'\nimport { ArgumentFormatter } from '../formatters/argument.js'\nimport type { CommandMetaData, ListTable } from '../types.js'\n\n/**\n * The Help command is used to view help for a given command\n */\nexport class HelpCommand extends BaseCommand {\n  /**\n   * Command metadata\n   */\n  static commandName: string = 'help'\n  static description: string = 'View help for a given command'\n\n  /**\n   * The command name argument\n   */\n  @args.string({ description: 'Command name', argumentName: 'command' })\n  declare name: string\n\n  /**\n   * Returns the command arguments table\n   */\n  #makeArgumentsTable(heading: string, command: CommandMetaData): ListTable[] {\n    if (!command.args.length) {\n      return []\n    }\n\n    return [\n      {\n        heading: this.colors.yellow(heading),\n        columns: command.args.map((arg) => {\n          const formatter = new ArgumentFormatter(arg, this.colors)\n          return {\n            option: formatter.formatListOption(),\n            description: formatter.formatDescription(),\n          }\n        }),\n      },\n    ]\n  }\n\n  /**\n   * Returns the commands options table\n   */\n  #makeOptionsTable(heading: string, command: CommandMetaData): ListTable[] {\n    if (!command.flags.length) {\n      return []\n    }\n\n    return [\n      {\n        heading: this.colors.yellow(heading),\n        columns: command.flags.map((flag) => {\n          const formatter = new FlagFormatter(flag, this.colors)\n          return {\n            option: formatter.formatOption(),\n            description: formatter.formatDescription(),\n          }\n        }),\n      },\n    ]\n  }\n\n  /**\n   * Validates the command name to ensure it exists\n   */\n  #validateCommandName(): boolean {\n    const command = this.kernel.getCommand(this.name)\n    if (!command) {\n      renderErrorWithSuggestions(\n        this.ui,\n        `Command \"${this.name}\" is not defined`,\n        this.kernel.getCommandSuggestions(this.name)\n      )\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Logs command description\n   */\n  protected renderDescription(command: CommandMetaData) {\n    const formatter = new CommandFormatter(command, this.colors)\n    const description = formatter.formatDescription()\n\n    if (!description) {\n      return\n    }\n\n    this.logger.log('')\n    this.logger.log(this.colors.yellow('Description:'))\n    this.logger.log(\n      wrap([description], {\n        startColumn: 2,\n        trimStart: false,\n        endColumn: TERMINAL_SIZE,\n      }).join('\\n')\n    )\n  }\n\n  /**\n   * Logs command usage\n   */\n  protected renderUsage(command: CommandMetaData) {\n    const aliases = this.kernel.getCommandAliases(command.commandName)\n    const formatter = new CommandFormatter(command, this.colors)\n    const usage = formatter.formatUsage(aliases, this.kernel.info.get('binary')).join('\\n')\n\n    this.logger.log('')\n    this.logger.log(this.colors.yellow('Usage:'))\n    this.logger.log(usage)\n  }\n\n  /**\n   * Logs commands arguments and options tables\n   */\n  protected renderList(command: CommandMetaData) {\n    const tables = this.#makeArgumentsTable('Arguments:', command).concat(\n      this.#makeOptionsTable('Options:', command)\n    )\n\n    new ListFormatter(tables).format().forEach((table) => {\n      this.logger.log('')\n      this.logger.log(table.heading)\n      this.logger.log(table.rows.join('\\n'))\n    })\n  }\n\n  /**\n   * Logs command help text\n   */\n  protected renderHelp(command: CommandMetaData) {\n    const formatter = new CommandFormatter(command, this.colors)\n    const help = formatter.formatHelp(this.kernel.info.get('binary'))\n    if (!help) {\n      return\n    }\n\n    this.logger.log('')\n    this.logger.log(this.colors.yellow('Help:'))\n    this.logger.log(help)\n  }\n\n  /**\n   * Executed by ace directly\n   */\n  async run() {\n    const isValidCommand = this.#validateCommandName()\n    if (!isValidCommand) {\n      this.exitCode = 1\n      return\n    }\n\n    const command = this.kernel.getCommand(this.name)!\n    this.renderDescription(command)\n    this.renderUsage(command)\n    this.renderList(command)\n    this.renderHelp(command)\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fileURLToPath } from 'node:url'\nimport { basename, extname, relative } from 'node:path'\nimport { fsReadAll, importDefault, slash } from '@poppinss/utils'\n\nimport { validateCommand } from '../helpers.js'\nimport type { AbstractBaseCommand, CommandMetaData, LoadersContract } from '../types.js'\n\nconst JS_MODULES = ['.js', '.cjs', '.mjs']\n\n/**\n * Fs loader exposes the API to load commands from a directory. All files\n * ending with \".js\", \".cjs\", \".mjs\", \".ts\" and \".mts\" are considered\n * as commands\n */\nexport class FsLoader<Command extends AbstractBaseCommand> implements LoadersContract<Command> {\n  /**\n   * Absolute path to directory from which to load files\n   */\n  #comandsDirectory: string\n\n  /**\n   * File to ignore files\n   */\n  #filter?: (filePath: string) => boolean\n\n  /**\n   * An array of loaded commands\n   */\n  #commands: { command: Command; filePath: string }[] = []\n\n  constructor(comandsDirectory: string, filter?: (filePath: string) => boolean) {\n    this.#comandsDirectory = comandsDirectory\n    this.#filter = filter\n  }\n\n  /**\n   * Returns a collection of commands. The command value\n   * is unknown and must be validated\n   */\n  async #loadCommands(): Promise<Record<string, unknown>> {\n    const commands: Record<string, unknown> = {}\n\n    /**\n     * Scanning all files\n     */\n    const commandFiles = await fsReadAll(this.#comandsDirectory, {\n      pathType: 'url',\n      ignoreMissingRoot: true,\n      filter: (filePath: string) => {\n        const ext = extname(filePath)\n\n        /**\n         * Ignore files prefixed with _\n         */\n        if (basename(filePath).startsWith('_')) {\n          return false\n        }\n\n        if (JS_MODULES.includes(ext)) {\n          return true\n        }\n\n        if (ext === '.ts' && !filePath.endsWith('.d.ts')) {\n          return true\n        }\n\n        return false\n      },\n    })\n\n    /**\n     * Importing files and validating the exports to have a default\n     * export\n     */\n    for (let file of commandFiles) {\n      /**\n       * Remapping .ts files to .js, otherwise the file cannot imported\n       */\n      if (file.endsWith('.ts')) {\n        file = file.replace(/\\.ts$/, '.js')\n      }\n\n      const relativeFileName = slash(relative(this.#comandsDirectory, fileURLToPath(file)))\n\n      /**\n       * Import file if no filters are defined or the filter\n       * allows the file\n       */\n      if (!this.#filter || this.#filter(relativeFileName)) {\n        commands[relativeFileName] = await importDefault(() => import(file), relativeFileName)\n      }\n    }\n\n    return commands\n  }\n\n  /**\n   * Returns the metadata of commands\n   */\n  async getMetaData(): Promise<CommandMetaData[]> {\n    const commandsCollection = await this.#loadCommands()\n\n    Object.keys(commandsCollection).forEach((key) => {\n      const command = commandsCollection[key]\n      validateCommand<Command>(command, `\"${key}\" file`)\n      this.#commands.push({ command, filePath: key })\n    })\n\n    return this.#commands.map(({ command, filePath }) => {\n      return Object.assign({}, command.serialize(), { filePath })\n    })\n  }\n\n  /**\n   * Returns the command class constructor for a given command. Null\n   * is returned when unable to lookup the command\n   */\n  async getCommand(metaData: CommandMetaData): Promise<Command | null> {\n    return (\n      this.#commands.find(({ command }) => {\n        return command.commandName === metaData.commandName\n      })?.command || null\n    )\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { join } from 'node:path'\nimport { copyFile, mkdir, writeFile } from 'node:fs/promises'\n\nimport { stubsRoot } from '../../stubs/main.js'\nimport { FsLoader } from '../loaders/fs_loader.js'\n\n/**\n * The index generators creates a commands laoder that can be lazily\n * imported.\n *\n * Also, a command.json index file is created that has metadata for all\n * the files. Doing so, speeds up the commands lookup, as we do not\n * have to import all the classes just to find if a command exists\n * or not.\n */\nexport class IndexGenerator {\n  #commandsDir: string\n\n  constructor(commandsDir: string) {\n    this.#commandsDir = commandsDir\n  }\n\n  /**\n   * Generate index\n   */\n  async generate(): Promise<any> {\n    const commandsMetaData = await new FsLoader(this.#commandsDir).getMetaData()\n\n    const indexJSON = JSON.stringify({ commands: commandsMetaData, version: 1 })\n    const indexFile = join(this.#commandsDir, 'commands.json')\n\n    const loaderFile = join(this.#commandsDir, 'main.js')\n    const loaderStub = join(stubsRoot, 'commands_loader.stub')\n\n    const loaderTypes = join(this.#commandsDir, 'main.d.ts')\n    const loaderTypesStub = join(stubsRoot, 'commands_loader_types.stub')\n\n    await mkdir(this.#commandsDir, { recursive: true })\n    console.log(`artifacts directory: ${this.#commandsDir}`)\n\n    await writeFile(indexFile, indexJSON)\n    console.log('create commands.json')\n\n    await copyFile(loaderStub, loaderFile)\n    console.log('create main.js')\n\n    await copyFile(loaderTypesStub, loaderTypes)\n    console.log('create main.d.ts')\n  }\n}\n","/*\n * @adonisjs/ace\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { getDirname } from '@poppinss/utils'\n\nexport const stubsRoot = getDirname(import.meta.url)\n"],"mappings":"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","names":["value","args","RuntimeException","args","string","TERMINAL_SIZE","wrap","TERMINAL_SIZE","wrap","string","flags","args","Kernel","RuntimeException","TERMINAL_SIZE","wrap","wrap","TERMINAL_SIZE"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/build/index.js":{"lineLengths":[8,12,11,15,29,0,13,63,0,16,24,26,67,56,3,57,78,77,42,12,2,47,43,33,5,2,0,19,26,10,9,23,26,48,3,5,68,12,4,69,44,5,20,20,55,24,54,13,54,25,42,9,22,8,19,6,22,41,24,5,21,3,2,0,16,28,34,15,27,27,37,36,37,5,36,3,5,76,69,5,37,34,53,5,39,3,5,25,5,33,35,3,5,45,5,26,53,30,5,22,52,5,34,3,5,64,5,39,44,30,19,5,61,85,3,5,57,56,51,12,5,39,52,41,7,3,5,39,5,31,36,22,29,31,27,24,29,15,7,26,46,35,17,9,14,36,63,17,9,61,7,28,7,20,3,5,64,5,17,65,61,20,13,40,57,34,49,53,70,54,16,32,13,55,80,32,13,11,30,16,30,9,7,18,3,2,0,19,26,5,37,5,11,24,28,3,5,42,5,46,30,19,5,46,40,42,35,19,28,39,7,24,27,7,7,17,3,5,46,5,35,48,41,32,20,65,41,8,5,25,98,21,3,5,26,5,19,42,3,2,0,13,22,5,26,5,10,23,26,3,5,58,54,28,5,40,61,41,48,3,5,76,69,5,37,41,3,5,25,5,33,37,3,5,53,5,28,5,59,54,18,5,24,47,21,3,26,39,31,5,38,19,22,5,24,3,19,30,29,3,2,8,6,12,12,15,26,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/env.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/errors.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/validator.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/parser.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/processor.ts"],"sourcesContent":["/*\n * @adonisjs/env\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { schema as envSchema, type ValidateFn } from '@poppinss/validator-lite'\nimport { EnvValidator } from './validator.js'\nimport { EnvProcessor } from './processor.js'\nimport { EnvParser } from './parser.js'\n\n/**\n * A wrapper over \"process.env\" with types information.\n *\n * ```ts\n * const validate = Env.rules({\n *   PORT: Env.schema.number()\n * })\n *\n * const validatedEnvVars = validate(process.env)\n *\n * const env = new EnvValues(validatedEnvVars)\n * env.get('PORT') // type === number\n * ```\n */\nexport class Env<EnvValues extends Record<string, any>> {\n  /**\n   * A cache of env values\n   */\n  #values: EnvValues\n\n  constructor(values: EnvValues) {\n    this.#values = values\n  }\n\n  /**\n   * Create an instance of the env class by validating the\n   * environment variables. Also, the `.env` files are\n   * loaded from the appRoot\n   */\n  static async create<Schema extends { [key: string]: ValidateFn<unknown> }>(\n    appRoot: URL,\n    schema: Schema\n  ): Promise<\n    Env<{\n      [K in keyof Schema]: ReturnType<Schema[K]>\n    }>\n  > {\n    const values = await new EnvProcessor(appRoot).process()\n    const validator = this.rules(schema)\n    return new Env(validator.validate(values))\n  }\n\n  /**\n   * Define an identifier for any environment value. The callback is invoked\n   * when the value match the identifier to modify its interpolation.\n   */\n  static identifier(name: string, callback: (value: string) => Promise<string> | string): void {\n    EnvParser.identifier(name, callback)\n  }\n\n  /**\n   * Remove an identifier\n   */\n  static removeIdentifier(name: string): void {\n    EnvParser.removeIdentifier(name)\n  }\n\n  /**\n   * The schema builder for defining validation rules\n   */\n  static schema = envSchema\n\n  /**\n   * Define the validation rules for validating environment\n   * variables. The return value is an instance of the\n   * env validator\n   */\n  static rules<T extends { [key: string]: ValidateFn<unknown> }>(schema: T): EnvValidator<T> {\n    const validator = new EnvValidator<T>(schema)\n    return validator\n  }\n\n  /**\n   * Get the value of an environment variable by key. The values are\n   * lookedup inside the validated environment and \"process.env\"\n   * is used as a fallback.\n   *\n   * The second param is the default value, which is returned when\n   * the environment variable does not exist.\n   *\n   * ```ts\n   * Env.get('PORT')\n   *\n   * // With default value\n   * Env.get('PORT', 3000)\n   * ```\n   */\n  get<K extends keyof EnvValues>(key: K): EnvValues[K]\n  get<K extends keyof EnvValues>(\n    key: K,\n    defaultValue: Exclude<EnvValues[K], undefined>\n  ): Exclude<EnvValues[K], undefined>\n  get(key: string): string | undefined\n  get(key: string, defaultValue: string): string\n  get(key: string, defaultValue?: any): any {\n    /**\n     * Return cached value\n     */\n    if (this.#values[key] !== undefined) {\n      return this.#values[key]\n    }\n\n    /**\n     * Get value from \"process.env\" and update the cache\n     */\n    const envValue = process.env[key]\n    if (envValue) {\n      return envValue\n    }\n\n    /**\n     * Return default value when unable to lookup any other value\n     */\n    return defaultValue\n  }\n\n  /**\n   * Update/set value of an environment variable.\n   *\n   * The value is not casted/validated using the validator, so make sure\n   * to set the correct data type.\n   *\n   * ```ts\n   * Env.set('PORT', 3000)\n   *\n   * Env.get('PORT') === 3000 // true\n   * process.env.PORT === '3000' // true\n   * ```\n   */\n  set<K extends keyof EnvValues>(key: K, value: EnvValues[K]): void\n  set(key: string, value: string): void\n  set(key: string | keyof EnvValues, value: any): void {\n    this.#values[key] = value\n    process.env[key as string] = value\n  }\n}\n","/*\n * @adonisjs/env\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createError, Exception } from '@poppinss/utils'\n\n/**\n * Exception raised when one or more env variables\n * are invalid\n */\nexport const E_INVALID_ENV_VARIABLES = class EnvValidationException extends Exception {\n  static message = 'Validation failed for one or more environment variables'\n  static code = 'E_INVALID_ENV_VARIABLES'\n  help: string = ''\n}\n\nexport const E_IDENTIFIER_ALREADY_DEFINED = createError<[string]>(\n  'The identifier \"%s\" is already defined',\n  'E_IDENTIFIER_ALREADY_DEFINED',\n  500\n)\n","/*\n * @adonisjs/env\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Exception } from '@poppinss/utils'\nimport { ValidateFn } from '@poppinss/validator-lite'\n\nimport { E_INVALID_ENV_VARIABLES } from './errors.js'\n\n/**\n * Exposes the API to validate environment variables against a\n * pre-defined schema.\n *\n * The class is not exported in the main API and used internally.\n */\nexport class EnvValidator<Schema extends { [key: string]: ValidateFn<unknown> }> {\n  #schema: Schema\n  #error: Exception\n\n  constructor(schema: Schema) {\n    this.#schema = schema\n    this.#error = new E_INVALID_ENV_VARIABLES()\n  }\n\n  /**\n   * Accepts an object of values to validate against the pre-defined\n   * schema.\n   *\n   * The return value is a merged copy of the original object and the\n   * values mutated by the schema validator.\n   */\n  validate(values: { [K: string]: string | undefined }): {\n    [K in keyof Schema]: ReturnType<Schema[K]>\n  } {\n    const help: string[] = []\n\n    const validated = Object.keys(this.#schema).reduce(\n      (result, key) => {\n        const value = process.env[key] || values[key]\n\n        try {\n          result[key] = this.#schema[key](key, value) as any\n        } catch (error) {\n          help.push(`- ${error.message}`)\n        }\n        return result\n      },\n      { ...values }\n    ) as { [K in keyof Schema]: ReturnType<Schema[K]> }\n\n    if (help.length) {\n      this.#error.help = help.join('\\n')\n      throw this.#error\n    }\n\n    return validated\n  }\n}\n","/*\n * @adonisjs/env\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport dotenv, { DotenvParseOutput } from 'dotenv'\nimport { E_IDENTIFIER_ALREADY_DEFINED } from './errors.js'\n\n/**\n * Env parser parses the environment variables from a string formatted\n * as a key-value pair seperated using an `=`. For example:\n *\n * ```dotenv\n * PORT=3333\n * HOST=127.0.0.1\n * ```\n *\n * The variables can reference other environment variables as well using `$`.\n * For example:\n *\n * ```dotenv\n * PORT=3333\n * REDIS_PORT=$PORT\n * ```\n *\n * The variables using characters other than letters can wrap variable\n * named inside a curly brace.\n *\n * ```dotenv\n * APP-PORT=3333\n * REDIS_PORT=${APP-PORT}\n * ```\n *\n * You can escape the `$` sign with a backtick.\n *\n * ```dotenv\n * REDIS_PASSWORD=foo\\$123\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const parser = new EnvParser(envContents)\n * const output = parser.parse()\n *\n * // The output is a key-value pair\n * ```\n */\nexport class EnvParser {\n  #envContents: string\n  #preferProcessEnv: boolean = true\n  static #identifiers: Record<string, (value: string) => Promise<string> | string> = {}\n\n  constructor(envContents: string, options?: { ignoreProcessEnv: boolean }) {\n    if (options?.ignoreProcessEnv) {\n      this.#preferProcessEnv = false\n    }\n\n    this.#envContents = envContents\n  }\n\n  /**\n   * Define an identifier for any environment value. The callback is invoked\n   * when the value match the identifier to modify its interpolation.\n   */\n  static identifier(name: string, callback: (value: string) => Promise<string> | string): void {\n    if (this.#identifiers[name]) {\n      throw new E_IDENTIFIER_ALREADY_DEFINED([name])\n    }\n\n    this.#identifiers[name] = callback\n  }\n\n  /**\n   * Remove an identifier\n   */\n  static removeIdentifier(name: string): void {\n    delete this.#identifiers[name]\n  }\n\n  /**\n   * Returns the value from the parsed object\n   */\n  #getValue(key: string, parsed: DotenvParseOutput): string {\n    if (this.#preferProcessEnv && process.env[key]) {\n      return process.env[key]!\n    }\n\n    if (parsed[key]) {\n      return this.#interpolate(parsed[key], parsed)\n    }\n\n    return process.env[key] || ''\n  }\n\n  /**\n   * Interpolating the token wrapped inside the mustache braces.\n   */\n  #interpolateMustache(token: string, parsed: DotenvParseOutput) {\n    /**\n     * Finding the closing brace. If closing brace is missing, we\n     * consider the block as a normal string\n     */\n    const closingBrace = token.indexOf('}')\n    if (closingBrace === -1) {\n      return token\n    }\n\n    /**\n     * Then we pull everything until the closing brace, except\n     * the opening brace and trim off all white spaces.\n     */\n    const varReference = token.slice(1, closingBrace).trim()\n\n    /**\n     * Getting the value of the reference inside the braces\n     */\n    return `${this.#getValue(varReference, parsed)}${token.slice(closingBrace + 1)}`\n  }\n\n  /**\n   * Interpolating the variable reference starting with a\n   * `$`. We only capture numbers,letter and underscore.\n   * For other characters, one can use the mustache\n   * braces.\n   */\n  #interpolateVariable(token: string, parsed: any) {\n    return token.replace(/[a-zA-Z0-9_]+/, (key) => {\n      return this.#getValue(key, parsed)\n    })\n  }\n\n  /**\n   * Interpolates the referenced values\n   */\n  #interpolate(value: string, parsed: DotenvParseOutput): string {\n    const tokens = value.split('$')\n\n    let newValue = ''\n    let skipNextToken = true\n\n    tokens.forEach((token) => {\n      /**\n       * If the value is an escaped sequence, then we replace it\n       * with a `$` and then skip the next token.\n       */\n      if (token === '\\\\') {\n        newValue += '$'\n        skipNextToken = true\n        return\n      }\n\n      /**\n       * Use the value as it is when \"skipNextToken\" is set to true.\n       */\n      if (skipNextToken) {\n        /**\n         * Replace the ending escape sequence with a $\n         */\n        newValue += token.replace(/\\\\$/, '$')\n        /**\n         *  and then skip the next token if it ends with escape sequence\n         */\n        if (token.endsWith('\\\\')) {\n          return\n        }\n      } else {\n        /**\n         * Handle mustache block\n         */\n        if (token.startsWith('{')) {\n          newValue += this.#interpolateMustache(token, parsed)\n          return\n        }\n\n        /**\n         * Process all words as variable\n         */\n        newValue += this.#interpolateVariable(token, parsed)\n      }\n\n      /**\n       * Process next token\n       */\n      skipNextToken = false\n    })\n\n    return newValue\n  }\n\n  /**\n   * Parse the env string to an object of environment variables.\n   */\n  async parse(): Promise<DotenvParseOutput> {\n    const envCollection = dotenv.parse(this.#envContents.trim())\n    const identifiers = Object.keys(EnvParser.#identifiers)\n    let result: DotenvParseOutput = {}\n\n    $keyLoop: for (const key in envCollection) {\n      const value = this.#getValue(key, envCollection)\n\n      if (value.includes(':')) {\n        for (const identifier of identifiers) {\n          if (value.startsWith(`${identifier}:`)) {\n            result[key] = await EnvParser.#identifiers[identifier](\n              value.substring(identifier.length + 1)\n            )\n\n            continue $keyLoop\n          }\n\n          if (value.startsWith(`${identifier}\\\\:`)) {\n            result[key] = identifier + value.substring(identifier.length + 1)\n\n            continue $keyLoop\n          }\n        }\n\n        result[key] = value\n      } else {\n        result[key] = value\n      }\n    }\n\n    return result\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport debug from './debug.js'\nimport { EnvParser } from './parser.js'\nimport { EnvLoader } from './loader.js'\n\n/**\n * Env processors loads, parses and process environment variables.\n */\nexport class EnvProcessor {\n  /**\n   * App root is needed to load files\n   */\n  #appRoot: URL\n\n  constructor(appRoot: URL) {\n    this.#appRoot = appRoot\n  }\n\n  /**\n   * Parse env variables from raw contents\n   */\n  async #processContents(envContents: string, store: Record<string, any>) {\n    /**\n     * Collected env variables\n     */\n    if (!envContents.trim()) {\n      return store\n    }\n\n    const parser = new EnvParser(envContents)\n    const values = await parser.parse()\n\n    Object.keys(values).forEach((key) => {\n      let value = process.env[key]\n\n      if (!value) {\n        value = values[key]\n        process.env[key] = values[key]\n      }\n\n      if (!store[key]) {\n        store[key] = value\n      }\n    })\n\n    return store\n  }\n\n  /**\n   * Parse env variables by loading dot files.\n   */\n  async #loadAndProcessDotFiles() {\n    const loader = new EnvLoader(this.#appRoot)\n    const envFiles = await loader.load()\n\n    if (debug.enabled) {\n      debug(\n        'processing .env files (priority from top to bottom) %O',\n        envFiles.map((file) => file.path)\n      )\n    }\n\n    /**\n     * Collected env variables\n     */\n    const envValues: Record<string, any> = {}\n    await Promise.all(envFiles.map(({ contents }) => this.#processContents(contents, envValues)))\n    return envValues\n  }\n\n  /**\n   * Process env variables\n   */\n  async process() {\n    return this.#loadAndProcessDotFiles()\n  }\n}\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/build/index.js":{"lineLengths":[8,14,15,17,20,29,29,0,23,31,16,1,8,14,15,15,27,34,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/define_config.ts"],"sourcesContent":["/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { RcFileInput } from './types.js'\n\n/**\n * Define rcFile config\n */\nexport function defineConfig(config: RcFileInput): RcFileInput {\n  return config\n}\n"],"mappings":";;;;;;;;;AAcO,SAAS,aAAa,QAAkC;AAC7D,SAAO;AACT;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/build/index.js":{"lineLengths":[8,13,16,29,8,13,26,2,33],"data":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/build/index.js":{"lineLengths":[8,13,15,24,19,25,20,14,11,10,11,17,8,13,16,9,9,15,21,12,29,0,27,34,44,48,5,44,5,23,5,70,40,5,48,5,75,70,10,5,60,5,68,5,19,5,36,5,22,5,49,23,5,22,21,22,26,26,4,5,59,13,5,35,5,53,13,5,19,5,25,5,24,37,71,28,51,70,24,10,10,8,5,37,3,5,56,27,5,23,74,29,50,5,28,29,5,21,3,5,28,5,16,39,24,31,11,3,5,60,17,5,27,30,21,5,30,20,5,18,3,5,59,38,5,25,22,3,5,66,5,23,38,19,5,53,19,5,62,19,5,80,19,5,16,3,5,38,5,39,39,55,72,57,13,5,71,3,5,42,5,42,39,55,72,57,13,5,44,15,9,31,27,30,9,7,7,3,5,38,5,39,39,55,71,71,9,51,13,5,72,3,5,51,13,5,49,44,28,7,3,5,57,9,5,52,44,47,16,33,29,19,34,12,28,10,8,7,3,5,51,5,49,56,39,55,23,6,3,5,34,5,27,80,38,53,18,50,18,14,50,5,3,5,45,5,37,80,38,63,18,60,18,14,60,5,3,5,44,5,28,47,40,13,5,49,39,13,5,51,19,12,7,76,28,8,23,6,3,5,47,5,28,47,49,46,5,77,56,5,50,66,85,80,58,44,82,7,32,5,44,3,2,8,13,15,19,14,11,10,11,17,8,13,16,9,9,15,30,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/exception_handler.ts"],"sourcesContent":["/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport is from '@sindresorhus/is'\nimport Macroable from '@poppinss/macroable'\nimport type { Level } from '@adonisjs/logger/types'\n\nimport { parseRange } from './helpers.js'\nimport * as errors from './exceptions.js'\nimport type { HttpContext } from './http_context/main.js'\nimport type { HttpError, StatusPageRange, StatusPageRenderer } from './types/server.js'\n\n/**\n * The base HTTP exception handler one can inherit from to handle\n * HTTP exceptions.\n *\n * The HTTP exception handler has support for\n *\n * - Ability to render exceptions by calling the render method on the exception.\n * - Rendering status pages\n * - Pretty printing errors during development\n * - Transforming errors to JSON or HTML using content negotiation\n * - Reporting errors\n */\nexport class ExceptionHandler extends Macroable {\n  /**\n   * Computed from the status pages property\n   */\n  #expandedStatusPages?: Record<number, StatusPageRenderer>\n\n  /**\n   * Whether or not to render debug info. When set to true, the errors\n   * will have the complete error stack.\n   */\n  protected debug: boolean = process.env.NODE_ENV !== 'production'\n\n  /**\n   * Whether or not to render status pages. When set to true, the unhandled\n   * errors with matching status codes will be rendered using a status\n   * page.\n   */\n  protected renderStatusPages: boolean = process.env.NODE_ENV === 'production'\n\n  /**\n   * A collection of error status code range and the view to render.\n   */\n  protected statusPages: Record<StatusPageRange, StatusPageRenderer> = {}\n\n  /**\n   * Enable/disable errors reporting\n   */\n  protected reportErrors: boolean = true\n\n  /**\n   * An array of exception classes to ignore when\n   * reporting an error\n   */\n  protected ignoreExceptions: any[] = [\n    errors.E_HTTP_EXCEPTION,\n    errors.E_ROUTE_NOT_FOUND,\n    errors.E_CANNOT_LOOKUP_ROUTE,\n    errors.E_HTTP_REQUEST_ABORTED,\n  ]\n\n  /**\n   * An array of HTTP status codes to ignore when reporting\n   * an error\n   */\n  protected ignoreStatuses: number[] = [400, 422, 401]\n\n  /**\n   * An array of error codes to ignore when reporting\n   * an error\n   */\n  protected ignoreCodes: string[] = []\n\n  /**\n   * Expands status pages\n   */\n  #expandStatusPages() {\n    if (!this.#expandedStatusPages) {\n      this.#expandedStatusPages = Object.keys(this.statusPages).reduce(\n        (result, range) => {\n          const renderer = this.statusPages[range as StatusPageRange]\n          result = Object.assign(result, parseRange(range, renderer))\n          return result\n        },\n        {} as Record<number, StatusPageRenderer>\n      )\n    }\n\n    return this.#expandedStatusPages\n  }\n\n  /**\n   * Forcefully tweaking the type of the error object to\n   * have known properties.\n   */\n  #toHttpError(error: unknown): HttpError {\n    const httpError: any = is.object(error) ? error : new Error(String(error))\n    if (!httpError.message) {\n      httpError.message = 'Internal server error'\n    }\n    if (!httpError.status) {\n      httpError.status = 500\n    }\n    return httpError\n  }\n\n  /**\n   * Error reporting context\n   */\n  protected context(ctx: HttpContext): any {\n    const requestId = ctx.request.id()\n    return requestId\n      ? {\n          'x-request-id': requestId,\n        }\n      : {}\n  }\n\n  /**\n   * Returns the log level for an error based upon the error\n   * status code.\n   */\n  protected getErrorLogLevel(error: HttpError): Level {\n    if (error.status >= 500) {\n      return 'error'\n    }\n\n    if (error.status >= 400) {\n      return 'warn'\n    }\n\n    return 'info'\n  }\n\n  /**\n   * A boolean to control if errors should be rendered with\n   * all the available debugging info.\n   */\n  protected isDebuggingEnabled(_: HttpContext): boolean {\n    return this.debug\n  }\n\n  /**\n   * Returns a boolean by checking if an error should be reported.\n   */\n  protected shouldReport(error: HttpError): boolean {\n    if (this.reportErrors === false) {\n      return false\n    }\n\n    if (this.ignoreStatuses.includes(error.status)) {\n      return false\n    }\n\n    if (error.code && this.ignoreCodes.includes(error.code)) {\n      return false\n    }\n\n    if (this.ignoreExceptions.find((exception) => error instanceof exception)) {\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Renders an error to JSON response\n   */\n  async renderErrorAsJSON(error: HttpError, ctx: HttpContext) {\n    if (this.isDebuggingEnabled(ctx)) {\n      const { default: Youch } = await import('youch')\n      const json = await new Youch(error, ctx.request.request).toJSON()\n      ctx.response.status(error.status).send(json.error)\n      return\n    }\n\n    ctx.response.status(error.status).send({ message: error.message })\n  }\n\n  /**\n   * Renders an error to JSON API response\n   */\n  async renderErrorAsJSONAPI(error: HttpError, ctx: HttpContext) {\n    if (this.isDebuggingEnabled(ctx)) {\n      const { default: Youch } = await import('youch')\n      const json = await new Youch(error, ctx.request.request).toJSON()\n      ctx.response.status(error.status).send(json.error)\n      return\n    }\n\n    ctx.response.status(error.status).send({\n      errors: [\n        {\n          title: error.message,\n          code: error.code,\n          status: error.status,\n        },\n      ],\n    })\n  }\n\n  /**\n   * Renders an error to HTML response\n   */\n  async renderErrorAsHTML(error: HttpError, ctx: HttpContext) {\n    if (this.isDebuggingEnabled(ctx)) {\n      const { default: Youch } = await import('youch')\n      const html = await new Youch(error, ctx.request.request).toHTML({\n        cspNonce: 'nonce' in ctx.response ? ctx.response.nonce : undefined,\n      })\n      ctx.response.status(error.status).send(html)\n      return\n    }\n\n    ctx.response.status(error.status).send(`<p> ${error.message} </p>`)\n  }\n\n  /**\n   * Renders the validation error message to a JSON\n   * response\n   */\n  async renderValidationErrorAsJSON(error: HttpError, ctx: HttpContext) {\n    ctx.response.status(error.status).send({\n      errors: error.messages,\n    })\n  }\n\n  /**\n   * Renders the validation error message as per JSON API\n   * spec\n   */\n  async renderValidationErrorAsJSONAPI(error: HttpError, ctx: HttpContext) {\n    ctx.response.status(error.status).send({\n      errors: error.messages.map((message: any) => {\n        return {\n          title: message.message,\n          code: message.rule,\n          source: {\n            pointer: message.field,\n          },\n          meta: message.meta,\n        }\n      }),\n    })\n  }\n\n  /**\n   * Renders the validation error as an HTML string\n   */\n  async renderValidationErrorAsHTML(error: HttpError, ctx: HttpContext) {\n    ctx.response\n      .status(error.status)\n      .type('html')\n      .send(\n        error.messages\n          .map((message: any) => {\n            return `${message.field} - ${message.message}`\n          })\n          .join('<br />')\n      )\n  }\n\n  /**\n   * Renders the error to response\n   */\n  renderError(error: HttpError, ctx: HttpContext) {\n    switch (ctx.request.accepts(['html', 'application/vnd.api+json', 'json'])) {\n      case 'application/vnd.api+json':\n        return this.renderErrorAsJSONAPI(error, ctx)\n      case 'json':\n        return this.renderErrorAsJSON(error, ctx)\n      case 'html':\n      default:\n        return this.renderErrorAsHTML(error, ctx)\n    }\n  }\n\n  /**\n   * Renders the validation error to response\n   */\n  renderValidationError(error: HttpError, ctx: HttpContext) {\n    switch (ctx.request.accepts(['html', 'application/vnd.api+json', 'json'])) {\n      case 'application/vnd.api+json':\n        return this.renderValidationErrorAsJSONAPI(error, ctx)\n      case 'json':\n        return this.renderValidationErrorAsJSON(error, ctx)\n      case 'html':\n      default:\n        return this.renderValidationErrorAsHTML(error, ctx)\n    }\n  }\n\n  /**\n   * Reports an error during an HTTP request\n   */\n  async report(error: unknown, ctx: HttpContext) {\n    const httpError = this.#toHttpError(error)\n    if (!this.shouldReport(httpError)) {\n      return\n    }\n\n    if (typeof httpError.report === 'function') {\n      httpError.report(httpError, ctx)\n      return\n    }\n\n    /**\n     * Log the error using the logger\n     */\n    const level = this.getErrorLogLevel(httpError)\n    ctx.logger.log(\n      level,\n      {\n        ...(level === 'error' || level === 'fatal' ? { err: httpError } : {}),\n        ...this.context(ctx),\n      },\n      httpError.message\n    )\n  }\n\n  /**\n   * Handles the error during the HTTP request.\n   */\n  async handle(error: unknown, ctx: HttpContext) {\n    const httpError = this.#toHttpError(error)\n\n    /**\n     * Self handle exception\n     */\n    if (typeof httpError.handle === 'function') {\n      return httpError.handle(httpError, ctx)\n    }\n\n    /**\n     * Handle validation error using the validation error\n     * renderers\n     */\n    if (httpError.code === 'E_VALIDATION_ERROR' && 'messages' in httpError) {\n      return this.renderValidationError(httpError, ctx)\n    }\n\n    /**\n     * Render status page\n     */\n    const statusPages = this.#expandStatusPages()\n    if (this.renderStatusPages && statusPages[httpError.status]) {\n      const statusPageResponse = await statusPages[httpError.status](httpError, ctx)\n\n      /**\n       * Use return value and convert it into a response\n       */\n      if (\n        statusPageResponse !== undefined && // Return value is explicitly defined\n        !ctx.response.hasLazyBody && // Lazy body is not set\n        statusPageResponse !== ctx.response // Return value is not the instance of response object\n      ) {\n        return ctx.response.safeStatus(httpError.status).send(statusPageResponse)\n      }\n      return statusPageResponse\n    }\n\n    /**\n     * Use the format renderers.\n     */\n    return this.renderError(httpError, ctx)\n  }\n}\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/hooks/build/index.js":{"lineLengths":[16,37,39,20,37,25,67,3,5,45,5,16,5,78,76,30,5,24,5,33,5,18,5,58,5,25,5,41,5,24,5,38,5,26,45,3,5,49,5,24,57,3,5,55,53,24,5,29,28,34,32,12,33,51,48,5,16,3,5,20,5,30,33,13,5,36,29,13,5,27,93,35,39,27,49,9,119,43,29,64,11,45,9,7,5,3,5,21,5,22,35,3,5,38,5,29,34,3,5,28,5,26,33,13,5,38,32,50,26,55,5,38,31,3,2,0,15,19,5,37,5,37,5,64,51,5,9,23,3,5,48,5,23,44,20,19,5,33,3,5,77,22,5,23,44,20,56,5,40,16,3,5,43,5,26,44,20,19,5,36,3,5,56,12,5,16,17,26,13,5,30,3,5,49,5,16,50,40,34,9,7,3,5,51,5,18,55,3,2,8,18,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/hooks/src/runner.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/hooks/src/hooks.ts"],"sourcesContent":["/*\n * @poppinss/hooks\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\nimport { HookHandler, CleanupHandler, HookHandlerProvider } from './types.js'\n\nconst debug = debuglog('poppinss:hooks')\n\n/**\n * Runner allows running a set of specific hook handlers for a given\n * event. You can grab the instance of the runner using the \"hook.runner\" method.\n *\n * ```ts\n * const hooks = new Hooks()\n *\n * await hooks.runner('saving').run()\n * ```\n */\nexport class Runner<HookArgs extends any[], CleanUpArgs extends any[]> {\n  /**\n   * A collection of registered hook handlers\n   */\n  #hookHandlers: Set<\n    HookHandler<HookArgs, CleanUpArgs> | HookHandlerProvider<HookArgs, CleanUpArgs>\n  >\n\n  /**\n   * Cleanup handlers should always be an array of functions. Using a set will\n   * discard duplicates and it is very much possible for two hooks to return\n   * a shared cleanup handler.\n   */\n  #cleanupHandlers: CleanupHandler<CleanUpArgs>[] = []\n\n  /**\n   * State to perform the cleanup\n   */\n  #state: 'idle' | 'cleanup_pending' | 'cleanup_initiated' | 'cleanup_completed' = 'idle'\n\n  /**\n   * A collection of handlers to ignore when executed them\n   */\n  #handlersToIgnore: string[] = []\n\n  /**\n   * Whether or not to skip all the hooks\n   */\n  #skipAllHooks: boolean = false\n\n  /**\n   * Find if cleanup is pending or not\n   */\n  get isCleanupPending() {\n    return this.#state === 'cleanup_pending'\n  }\n\n  constructor(\n    public action: string,\n    hookHandlers?: Set<\n      HookHandler<HookArgs, CleanUpArgs> | HookHandlerProvider<HookArgs, CleanUpArgs>\n    >\n  ) {\n    this.#hookHandlers = hookHandlers || new Set()\n  }\n\n  /**\n   * Filter to check if we should run the handler\n   */\n  #filter(handlerName: string): boolean {\n    return !this.#handlersToIgnore.includes(handlerName)\n  }\n\n  /**\n   * Ignore specific or all hook handlers. Calling this\n   * method multiple times will result in overwriting\n   * the existing state.\n   */\n  without(handlersToIgnore?: string[]): this {\n    if (!handlersToIgnore) {\n      debug('skipping all hooks')\n      this.#skipAllHooks = true\n    } else {\n      this.#skipAllHooks = false\n      debug('skipping %O hooks', handlersToIgnore)\n      this.#handlersToIgnore = handlersToIgnore\n    }\n\n    return this\n  }\n\n  /**\n   * Executing hooks\n   */\n  async #exec(reverse: boolean, data: HookArgs) {\n    if (this.#state !== 'idle') {\n      return\n    }\n\n    this.#state = 'cleanup_pending'\n    if (this.#skipAllHooks) {\n      return\n    }\n\n    debug('running hooks')\n\n    const handlers = reverse ? Array.from(this.#hookHandlers).reverse() : this.#hookHandlers\n    for (let handler of handlers) {\n      if (this.#filter(handler.name)) {\n        if (handler.name) {\n          debug('running hook %s', handler.name)\n        }\n\n        const result = await (typeof handler === 'function'\n          ? handler(...data)\n          : handler.handle(this.action, ...data))\n\n        if (typeof result === 'function') {\n          if (handler.name) {\n            debug('cleanup scheduled by %s hook', handler.name)\n          }\n          this.#cleanupHandlers.push(result)\n        }\n      }\n    }\n  }\n\n  /**\n   * Execute handlers\n   */\n  async run(...data: HookArgs): Promise<void> {\n    return this.#exec(false, data)\n  }\n\n  /**\n   * Execute handlers in reverse order\n   */\n  async runReverse(...data: HookArgs): Promise<void> {\n    return this.#exec(true, data)\n  }\n\n  /**\n   * Execute cleanup actions\n   */\n  async cleanup(...data: CleanUpArgs) {\n    if (!this.isCleanupPending) {\n      return\n    }\n\n    this.#state = 'cleanup_initiated'\n    debug('performing cleanup')\n\n    let startIndex = this.#cleanupHandlers.length\n    while (startIndex--) {\n      await this.#cleanupHandlers[startIndex](...data)\n    }\n\n    this.#state = 'cleanup_completed'\n    this.#cleanupHandlers = []\n  }\n}\n","/*\n * @poppinss/hooks\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Runner } from './runner.js'\nimport { HookHandler, HookHandlerProvider } from './types.js'\n\n/**\n * Quite simple implementation register lifecycle hooks around specific events.\n *\n * ```ts\n * const hooks = new Hooks()\n *\n * hooks.add('saving', function hashPassword(entity) {\n * })\n * ```\n */\nexport class Hooks<Events extends Record<string, [any[], any[]]>> {\n  /**\n   * A collection of registered hooks\n   */\n  #hooks: {\n    [Event in keyof Events]: Map<\n      Event,\n      Set<\n        | HookHandler<Events[Event][0], Events[Event][1]>\n        | HookHandlerProvider<Events[Event][0], Events[Event][1]>\n      >\n    >\n  }[keyof Events] = new Map()\n\n  /**\n   * Get access to all the registered hooks. The return value is\n   * a map of the event name and a set of handlers.\n   */\n  all() {\n    return this.#hooks\n  }\n\n  /**\n   * Find if a handler for a given event exists.\n   */\n  has<Event extends keyof Events>(\n    event: Event,\n    handler:\n      | HookHandler<Events[Event][0], Events[Event][1]>\n      | HookHandlerProvider<Events[Event][0], Events[Event][1]>\n  ): boolean {\n    const handlers = this.#hooks.get(event)\n    if (!handlers) {\n      return false\n    }\n\n    return handlers.has(handler)\n  }\n\n  /**\n   * Add a hook handler for a given event. Adding the same handler twice will\n   * result in a noop.\n   */\n  add<Event extends keyof Events>(\n    event: Event,\n    handler:\n      | HookHandler<Events[Event][0], Events[Event][1]>\n      | HookHandlerProvider<Events[Event][0], Events[Event][1]>\n  ): this {\n    const handlers = this.#hooks.get(event)\n\n    /**\n     * Instantiate handlers\n     */\n    if (!handlers) {\n      this.#hooks.set(event, new Set())\n    }\n\n    this.#hooks.get(event)!.add(handler)\n    return this\n  }\n\n  /**\n   * Remove hook handler for a given event.\n   */\n  remove<Event extends keyof Events>(\n    event: Event,\n    handler:\n      | HookHandler<Events[Event][0], Events[Event][1]>\n      | HookHandlerProvider<Events[Event][0], Events[Event][1]>\n  ): boolean {\n    const handlers = this.#hooks.get(event)\n    if (!handlers) {\n      return false\n    }\n\n    return handlers.delete(handler)\n  }\n\n  /**\n   * Clear all the hooks for a specific event or all the\n   * events.\n   */\n  clear(event?: keyof Events): void {\n    if (!event) {\n      this.#hooks.clear()\n      return\n    }\n\n    this.#hooks.delete(event)\n  }\n\n  /**\n   * Merge hooks from an existing hooks instance.\n   */\n  merge(hooks: Hooks<Events>) {\n    hooks.all().forEach((actionHooks, action) => {\n      actionHooks.forEach((handler) => {\n        this.add(action, handler)\n      })\n    })\n  }\n\n  /**\n   * Returns an instance of the runner to run hooks\n   */\n  runner<Event extends Extract<keyof Events, string>>(\n    action: Event\n  ): Runner<Events[Event][0], Events[Event][1]> {\n    return new Runner(action, this.#hooks.get(action))\n  }\n}\n"],"mappings":";AASA,SAAS,gBAAgB;AAGzB,IAAM,QAAQ,SAAS,gBAAgB;AAYhC,IAAM,SAAN,MAAgE;AAAA,EAqCrE,YACS,QACP,cAGA;AAJO;AAKP,SAAK,gBAAgB,gBAAgB,oBAAI,IAAI;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,mBAAkD,CAAC;AAAA;AAAA;AAAA;AAAA,EAKnD,SAAiF;AAAA;AAAA;AAAA;AAAA,EAKjF,oBAA8B,CAAC;AAAA;AAAA;AAAA;AAAA,EAK/B,gBAAyB;AAAA;AAAA;AAAA;AAAA,EAKzB,IAAI,mBAAmB;AACrB,WAAO,KAAK,WAAW;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAcA,QAAQ,aAA8B;AACpC,WAAO,CAAC,KAAK,kBAAkB,SAAS,WAAW;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,kBAAmC;AACzC,QAAI,CAAC,kBAAkB;AACrB,YAAM,oBAAoB;AAC1B,WAAK,gBAAgB;AAAA,IACvB,OAAO;AACL,WAAK,gBAAgB;AACrB,YAAM,qBAAqB,gBAAgB;AAC3C,WAAK,oBAAoB;AAAA,IAC3B;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,MAAM,SAAkB,MAAgB;AAC5C,QAAI,KAAK,WAAW,QAAQ;AAC1B;AAAA,IACF;AAEA,SAAK,SAAS;AACd,QAAI,KAAK,eAAe;AACtB;AAAA,IACF;AAEA,UAAM,eAAe;AAErB,UAAM,WAAW,UAAU,MAAM,KAAK,KAAK,aAAa,EAAE,QAAQ,IAAI,KAAK;AAC3E,aAAS,WAAW,UAAU;AAC5B,UAAI,KAAK,QAAQ,QAAQ,IAAI,GAAG;AAC9B,YAAI,QAAQ,MAAM;AAChB,gBAAM,mBAAmB,QAAQ,IAAI;AAAA,QACvC;AAEA,cAAM,SAAS,OAAO,OAAO,YAAY,aACrC,QAAQ,GAAG,IAAI,IACf,QAAQ,OAAO,KAAK,QAAQ,GAAG,IAAI;AAEvC,YAAI,OAAO,WAAW,YAAY;AAChC,cAAI,QAAQ,MAAM;AAChB,kBAAM,gCAAgC,QAAQ,IAAI;AAAA,UACpD;AACA,eAAK,iBAAiB,KAAK,MAAM;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,MAA+B;AAC1C,WAAO,KAAK,MAAM,OAAO,IAAI;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cAAc,MAA+B;AACjD,WAAO,KAAK,MAAM,MAAM,IAAI;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAW,MAAmB;AAClC,QAAI,CAAC,KAAK,kBAAkB;AAC1B;AAAA,IACF;AAEA,SAAK,SAAS;AACd,UAAM,oBAAoB;AAE1B,QAAI,aAAa,KAAK,iBAAiB;AACvC,WAAO,cAAc;AACnB,YAAM,KAAK,iBAAiB,UAAU,EAAE,GAAG,IAAI;AAAA,IACjD;AAEA,SAAK,SAAS;AACd,SAAK,mBAAmB,CAAC;AAAA,EAC3B;AACF;;;AC9IO,IAAM,QAAN,MAA2D;AAAA;AAAA;AAAA;AAAA,EAIhE,SAQkB,oBAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,MAAM;AACJ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IACE,OACA,SAGS;AACT,UAAM,WAAW,KAAK,OAAO,IAAI,KAAK;AACtC,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,IACT;AAEA,WAAO,SAAS,IAAI,OAAO;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IACE,OACA,SAGM;AACN,UAAM,WAAW,KAAK,OAAO,IAAI,KAAK;AAKtC,QAAI,CAAC,UAAU;AACb,WAAK,OAAO,IAAI,OAAO,oBAAI,IAAI,CAAC;AAAA,IAClC;AAEA,SAAK,OAAO,IAAI,KAAK,EAAG,IAAI,OAAO;AACnC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OACE,OACA,SAGS;AACT,UAAM,WAAW,KAAK,OAAO,IAAI,KAAK;AACtC,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,IACT;AAEA,WAAO,SAAS,OAAO,OAAO;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAA4B;AAChC,QAAI,CAAC,OAAO;AACV,WAAK,OAAO,MAAM;AAClB;AAAA,IACF;AAEA,SAAK,OAAO,OAAO,KAAK;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAsB;AAC1B,UAAM,IAAI,EAAE,QAAQ,CAAC,aAAa,WAAW;AAC3C,kBAAY,QAAQ,CAAC,YAAY;AAC/B,aAAK,IAAI,QAAQ,OAAO;AAAA,MAC1B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,OACE,QAC4C;AAC5C,WAAO,IAAI,OAAO,QAAQ,KAAK,OAAO,IAAI,MAAM,CAAC;AAAA,EACnD;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/build/index.js":{"lineLengths":[8,15,29,0,11,43,61,0,15,27,63,17,16,14,19,15,12,20,31,5,17,18,19,19,20,17,20,29,2,0,15,34,39,0,16,38,34,20,24,3,23,27,3,23,1,0,27,35,29,13,14,3,15,3,16,25,3,5,48,5,22,23,3,5,36,5,22,21,3,5,14,5,21,27,3,2,0,15,19,12,13,12,4,5,40,11,5,20,5,39,5,12,5,33,5,11,5,25,5,10,5,40,5,27,5,48,11,5,24,5,24,5,15,29,21,56,26,6,3,5,56,37,5,29,40,39,52,49,40,7,7,3,5,57,5,26,33,13,5,65,56,50,96,55,7,18,103,76,5,3,5,52,5,17,26,45,5,26,3,5,60,15,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,22,5,21,35,26,87,6,16,3,5,24,5,12,31,29,95,5,16,3,5,32,5,24,35,16,3,5,50,5,37,44,16,3,5,45,43,15,5,27,35,16,3,5,17,5,12,28,29,92,8,41,130,50,9,13,5,32,35,29,86,21,75,32,7,58,48,3,2,0,23,41,20,13,5,19,5,11,5,19,5,11,5,43,5,10,5,51,5,12,5,53,5,27,38,28,39,21,55,6,3,5,17,5,30,63,28,41,5,17,3,5,19,5,27,28,43,5,19,3,5,22,5,26,29,41,3,5,17,5,23,83,12,41,30,42,7,50,20,3,5,52,5,17,26,45,5,26,3,5,30,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,53,18,5,43,44,16,3,5,54,5,22,62,64,64,32,55,53,10,5,22,3,5,30,5,15,52,3,5,51,5,30,64,64,61,21,69,5,22,3,5,59,13,5,23,60,3,5,50,5,24,62,64,52,82,22,3,5,56,5,17,59,3,2,0,24,21,15,55,18,13,16,37,6,15,78,24,5,4,5,29,5,18,5,20,5,11,5,51,5,12,5,45,5,17,24,28,3,5,50,5,14,36,13,5,31,13,5,44,30,64,12,73,5,22,31,22,32,3,5,52,5,17,26,45,5,26,3,5,31,5,25,30,16,3,5,21,5,11,28,20,16,3,5,19,5,25,36,18,5,55,16,3,5,17,5,10,28,29,56,92,44,5,3,5,43,12,5,17,35,16,3,2,0,21,20,5,33,5,11,5,43,5,10,5,39,5,12,13,40,3,15,35,3,29,67,21,21,77,6,3,5,27,5,31,41,34,49,5,25,3,5,47,5,19,19,21,50,19,19,48,21,53,18,49,19,49,19,51,5,3,5,38,5,31,18,21,5,72,3,5,72,46,5,31,18,21,5,82,63,3,5,39,5,32,33,3,5,28,5,29,28,43,5,19,3,5,25,5,23,17,16,5,12,45,30,42,7,51,20,3,5,52,5,17,26,45,5,26,3,5,45,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,16,5,16,36,3,5,46,5,22,42,3,5,51,12,5,22,42,3,5,75,45,5,21,41,3,5,33,5,36,45,68,56,56,19,3,5,24,5,29,52,3,5,31,5,34,70,45,66,56,56,19,3,5,22,5,27,55,3,5,31,5,34,90,70,45,66,56,56,32,3,5,22,5,27,55,3,5,33,5,36,45,68,56,56,19,3,5,24,5,29,52,3,5,30,5,33,45,65,56,56,19,3,5,21,5,26,49,3,5,31,5,34,45,66,56,56,19,3,5,22,5,27,50,3,5,33,5,24,21,19,11,17,16,64,88,67,67,25,7,6,64,3,5,27,5,17,117,3,5,40,5,18,101,3,2,0,22,30,40,22,26,12,15,4,5,47,5,12,5,58,5,24,5,50,5,19,5,51,5,20,5,37,5,18,5,40,5,21,5,28,5,10,5,12,5,11,5,21,5,38,31,4,29,21,61,55,6,3,5,46,5,26,75,3,5,43,5,24,43,3,5,59,5,66,31,15,22,101,3,5,37,5,17,57,40,50,22,6,98,19,22,8,3,5,40,5,20,57,40,53,22,6,31,21,22,79,3,5,38,5,29,57,40,59,22,6,61,3,5,65,10,5,25,64,41,10,62,6,81,3,5,49,5,17,31,13,5,53,3,5,31,5,14,62,13,5,81,87,111,3,5,34,5,23,34,3,5,52,5,17,26,45,5,26,3,5,60,15,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,44,5,16,26,100,16,3,5,47,5,24,32,16,3,5,36,5,17,37,41,37,5,42,16,3,5,54,31,5,13,94,37,41,37,5,46,16,3,13,28,23,32,47,7,76,32,5,35,39,63,33,41,24,2,18,37,5,26,25,22,2,5,15,34,5,21,11,3,5,24,5,12,43,3,2,0,20,42,18,22,23,3,13,5,34,5,15,5,40,5,24,5,57,5,12,5,66,22,5,21,5,23,5,18,22,49,21,5,3,5,26,5,14,23,3,5,43,5,17,34,3,5,46,5,14,43,3,5,40,5,23,88,3,5,34,5,23,37,3,5,63,5,22,41,16,3,5,19,5,11,28,39,28,16,3,5,59,52,5,19,32,28,16,3,5,27,5,28,30,68,38,28,16,3,5,24,5,23,27,68,36,28,16,3,2,0,33,29,5,43,5,10,5,39,5,12,5,29,5,24,45,17,3,5,17,5,23,36,83,5,23,91,5,136,3,5,54,23,5,29,47,3,5,39,5,28,46,54,27,89,7,13,5,81,40,3,5,41,5,30,52,52,73,69,59,3,5,38,5,27,34,16,60,5,52,50,69,64,3,5,25,5,21,30,21,45,23,47,20,44,5,3,5,22,5,18,68,3,5,52,5,17,26,45,5,26,3,5,60,15,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,29,5,16,34,16,3,5,21,5,12,95,24,3,2,0,33,29,5,21,5,11,5,43,5,10,5,39,5,12,5,29,5,24,24,21,60,6,3,5,17,5,23,68,44,12,62,3,5,57,5,26,64,16,18,5,41,3,5,48,5,25,79,3,5,50,5,28,49,86,20,24,3,5,49,5,27,48,69,56,34,17,24,2,5,54,19,3,5,52,5,30,50,69,56,52,26,24,2,5,25,45,19,3,5,25,5,21,30,18,42,21,45,23,47,20,44,5,3,5,22,5,18,93,33,76,6,70,44,5,3,5,52,5,17,26,45,5,26,3,5,60,15,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,29,5,16,34,16,3,5,21,5,12,45,47,7,24,3,2,0,29,25,5,43,5,10,5,39,5,12,5,29,5,24,45,17,3,5,17,5,23,36,46,5,23,54,5,99,3,5,39,5,28,46,54,27,47,7,13,5,41,48,40,3,5,41,5,30,52,73,69,49,3,3,5,38,5,27,34,16,60,5,50,69,54,3,3,5,25,5,21,30,21,45,23,47,20,44,5,3,5,22,5,18,68,3,5,52,5,17,26,45,5,26,3,5,60,15,5,25,30,16,3,5,45,5,15,24,33,5,24,3,5,42,5,20,25,16,3,5,29,5,16,34,16,3,5,21,5,12,95,24,3,2,0,23,33,34,45,3,15,1,25,5,23,5,8,5,12,5,11,5,69,36,5,17,5,27,5,14,5,31,5,18,29,21,61,56,67,6,28,46,39,50,12,49,34,9,5,3,5,65,26,5,25,36,16,13,5,22,36,35,6,9,79,41,44,39,14,31,41,7,21,29,25,36,5,3,5,26,5,14,23,3,5,24,5,24,58,16,3,5,55,5,39,22,32,5,16,3,5,56,5,43,23,32,5,16,3,5,35,5,11,47,3,5,52,5,17,45,3,5,60,15,5,25,46,16,3,5,42,5,20,41,16,3,5,14,5,15,33,13,5,28,53,27,36,32,5,3,2,0,26,28,13,13,22,3,15,20,3,5,16,5,16,51,3,5,56,5,22,22,3,5,15,5,22,3,5,25,5,21,51,3,2,0,11,30,26,39,20,3,79,78,30,31,28,30,88,47,44,32,4,25,89,47,44,32,4,35,78,34,31,19,4,35,78,40,37,25,4,10,20,11,10,10,10,12,17,27,23,27,47,14,48,7,84,6,32,31,35,6,28,28,32,28,5,4,1,8,18,15,9,17,8,14,8,27,7,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/index.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/icons.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/table.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/colors.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/renderers/console.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/logger/action.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/logger/spinner.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/logger/main.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/instructions.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/tasks/task.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/tasks/renderers/verbose.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/tasks/renderers/minimal.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/tasks/renderers/raw.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/tasks/manager.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/renderers/memory.ts"],"sourcesContent":["/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport supportsColor from 'supports-color'\nimport { Colors } from '@poppinss/colors/types'\nimport { default as poppinssColors } from '@poppinss/colors'\n\nimport { icons } from './src/icons.js'\nimport { Table } from './src/table.js'\nimport { useColors } from './src/colors.js'\nimport { Logger } from './src/logger/main.js'\nimport { Instructions } from './src/instructions.js'\nimport { TaskManager } from './src/tasks/manager.js'\nimport { MemoryRenderer } from './src/renderers/memory.js'\nimport { ConsoleRenderer } from './src/renderers/console.js'\nimport type { RendererContract, TableOptions, TaskManagerOptions } from './src/types.js'\n\nexport {\n  icons,\n  Table,\n  Logger,\n  TaskManager,\n  Instructions,\n  MemoryRenderer,\n  ConsoleRenderer,\n  poppinssColors as colors,\n}\n\n/**\n * Create a new CLI UI instance.\n *\n * - The \"raw\" mode is tailored for testing\n * - The \"silent\" mode should be used when the terminal does not support colors. We\n *   automatically perform the detection\n */\nexport function cliui(options: Partial<{ mode: 'raw' | 'silent' | 'normal' }> = {}) {\n  let mode = options.mode\n\n  /**\n   * Use silent mode when not explicit mode is defined\n   */\n  if (!mode && !supportsColor.stdout) {\n    mode = 'silent'\n  }\n\n  /**\n   * Renderer to use\n   */\n  let renderer: RendererContract = mode === 'raw' ? new MemoryRenderer() : new ConsoleRenderer()\n\n  /**\n   * Colors instance in use\n   */\n  let colors = useColors({ silent: mode === 'silent', raw: mode === 'raw' })\n\n  /**\n   * Logger\n   */\n  const logger = new Logger()\n  logger.useRenderer(renderer)\n  logger.useColors(colors)\n\n  /**\n   * Render instructions inside a box\n   */\n  const instructions = () => {\n    const instructionsInstance = new Instructions({ icons: true, raw: mode === 'raw' })\n    instructionsInstance.useRenderer(renderer)\n    instructionsInstance.useColors(colors)\n    return instructionsInstance\n  }\n\n  /**\n   * Similar to instructions. But without the `pointer` icon\n   */\n  const sticker = () => {\n    const instructionsInstance = new Instructions({ icons: false, raw: mode === 'raw' })\n    instructionsInstance.useRenderer(renderer)\n    instructionsInstance.useColors(colors)\n    return instructionsInstance\n  }\n\n  /**\n   * Initiates a group of tasks\n   */\n  const tasks = (tasksOptions?: Partial<TaskManagerOptions>) => {\n    const manager = new TaskManager({ raw: mode === 'raw', ...tasksOptions })\n    manager.useRenderer(renderer)\n    manager.useColors(colors)\n    return manager\n  }\n\n  /**\n   * Instantiate a new table\n   */\n  const table = (tableOptions?: Partial<TableOptions>) => {\n    const tableInstance = new Table({ raw: mode === 'raw', ...tableOptions })\n    tableInstance.useRenderer(renderer)\n    tableInstance.useColors(colors)\n    return tableInstance\n  }\n\n  return {\n    colors,\n    logger,\n    table,\n    tasks,\n    icons,\n    sticker,\n    instructions,\n    switchMode(modeToUse: 'raw' | 'silent' | 'normal') {\n      mode = modeToUse\n\n      /**\n       * Use memory renderer in raw mode, otherwise switch to\n       * console renderer\n       */\n      if (mode === 'raw') {\n        this.useRenderer(new MemoryRenderer())\n      } else {\n        this.useRenderer(new ConsoleRenderer())\n      }\n\n      this.useColors(useColors({ silent: mode === 'silent', raw: mode === 'raw' }))\n    },\n    useRenderer(rendererToUse: RendererContract) {\n      renderer = rendererToUse\n      logger.useRenderer(renderer)\n    },\n    useColors(colorsToUse: Colors) {\n      colors = colorsToUse\n      logger.useColors(colors)\n      this.colors = colors\n    },\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst { platform } = process\n\n/**\n * A collection of platform specific icons\n */\nexport const icons =\n  platform === 'win32' && !process.env.WT_SESSION\n    ? {\n        tick: '√',\n        cross: '×',\n        bullet: '*',\n        nodejs: '♦',\n        pointer: '>',\n        info: 'i',\n        warning: '‼',\n        squareSmallFilled: '[█]',\n      }\n    : {\n        tick: '✔',\n        cross: '✖',\n        bullet: '●',\n        nodejs: '⬢',\n        pointer: '❯',\n        info: 'ℹ',\n        warning: '⚠',\n        squareSmallFilled: '◼',\n      }\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport CliTable from 'cli-table3'\nimport stringWidth from 'string-width'\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { useColors } from './colors.js'\nimport { TERMINAL_SIZE } from './helpers.js'\nimport { ConsoleRenderer } from './renderers/console.js'\nimport type { RendererContract, TableHead, TableOptions, TableRow } from './types.js'\n\n/**\n * Exposes the API to represent a table\n */\nexport class Table {\n  #state: {\n    colWidths?: number[]\n    head: TableHead\n    rows: TableRow[]\n  } = {\n    head: [],\n    rows: [],\n  }\n\n  /**\n   * Size of the largest row for a given\n   * column\n   */\n  #columnSizes: number[] = []\n\n  /**\n   * The renderer to use to output logs\n   */\n  #renderer?: RendererContract\n\n  /**\n   * Logger configuration options\n   */\n  #options: TableOptions\n\n  /**\n   * The colors reference\n   */\n  #colors?: Colors\n\n  /**\n   * Whether or not to render full width\n   */\n  #renderFullWidth: boolean = false\n\n  /**\n   * The column index that should take remaining\n   * width.\n   */\n  #fluidColumnIndex: number = 0\n\n  /**\n   * Padding for columns\n   */\n  #padding: number = 2\n\n  constructor(options: Partial<TableOptions> = {}) {\n    this.#options = {\n      raw: options.raw === undefined ? false : options.raw,\n      chars: options.chars,\n    }\n  }\n\n  /**\n   * Tracking the column size and keeping on the largest\n   * one by tracking the content size\n   */\n  #storeColumnSize(columns: string[]) {\n    columns.forEach((column, index) => {\n      const size = stringWidth(column)\n      const existingSize = this.#columnSizes[index]\n      if (!existingSize || existingSize < size) {\n        this.#columnSizes[index] = size\n      }\n    })\n  }\n\n  /**\n   * Computes the col widths based when in fullwidth mode\n   */\n  #computeColumnsWidth() {\n    /**\n     * Do not compute columns size, when rendering in full-width\n     */\n    if (!this.#renderFullWidth) {\n      return\n    }\n\n    /**\n     * The terminal columns\n     */\n    let columns = TERMINAL_SIZE - (this.#columnSizes.length + 1)\n\n    this.#state.colWidths = this.#state.colWidths || []\n    this.#columnSizes.forEach((column, index) => {\n      /**\n       * The column width will be the size of the biggest\n       * text + padding left + padding right\n       */\n      this.#state.colWidths![index] = this.#state.colWidths![index] || column + this.#padding * 2\n\n      /**\n       * Compute remaining columns\n       */\n      columns = columns - this.#state.colWidths![index]\n    })\n\n    /**\n     * If there are remaining columns, then assign them\n     * to the fluid column.\n     */\n    if (columns) {\n      const index =\n        this.#fluidColumnIndex > this.#columnSizes.length - 1 ? 0 : this.#fluidColumnIndex\n      this.#state.colWidths![index] = this.#state.colWidths![index] + columns\n    }\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer() {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer. Logs to \"stdout\" and \"stderr\"\n   * by default\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Define table head\n   */\n  head(headColumns: TableHead): this {\n    this.#state.head = headColumns\n    this.#storeColumnSize(\n      headColumns.map((column) => (typeof column === 'string' ? column : column.content))\n    )\n    return this\n  }\n\n  /**\n   * Add a new table row\n   */\n  row(row: TableRow): this {\n    this.#state.rows.push(row)\n\n    if (Array.isArray(row)) {\n      this.#storeColumnSize(row.map((cell) => (typeof cell === 'string' ? cell : cell.content)))\n    }\n\n    return this\n  }\n\n  /**\n   * Define custom column widths\n   */\n  columnWidths(widths: number[]): this {\n    this.#state.colWidths = widths\n    return this\n  }\n\n  /**\n   * Toggle whether or render in full width or not\n   */\n  fullWidth(renderFullWidth: boolean = true): this {\n    this.#renderFullWidth = renderFullWidth\n    return this\n  }\n\n  /**\n   * Define the column index that should take\n   * will remaining width when rendering in\n   * full-width\n   */\n  fluidColumnIndex(index: number): this {\n    this.#fluidColumnIndex = index\n    return this\n  }\n\n  /**\n   * Render table\n   */\n  render() {\n    if (this.#options.raw) {\n      this.getRenderer().log(\n        this.#state.head.map((col) => (typeof col === 'string' ? col : col.content)).join('|')\n      )\n\n      this.#state.rows.forEach((row) => {\n        const content = Array.isArray(row)\n          ? row.map((cell) => (typeof cell === 'string' ? cell : cell.content))\n          : Object.keys(row)\n\n        this.getRenderer().log(content.join('|'))\n      })\n\n      return\n    }\n\n    this.#computeColumnsWidth()\n\n    /**\n     * Types of \"cli-table3\" are out of the sync from the\n     * implementation\n     */\n    const cliTable = new CliTable({\n      head: this.#state.head,\n      style: { 'head': [], 'border': ['dim'], 'padding-left': 2, 'padding-right': 2 },\n      wordWrap: true,\n      ...(this.#state.colWidths ? { colWidths: this.#state.colWidths } : {}),\n      chars: this.#options.chars,\n    } as any)\n\n    this.#state.rows.forEach((row) => cliTable.push(row))\n    this.getRenderer().log(cliTable.toString())\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport colors from '@poppinss/colors'\nimport type { Colors } from '@poppinss/colors/types'\n\n/**\n * Returns the colors instance based upon the environment.\n *\n * - The \"raw\" option returns the colors instance that prefix the color\n *   transformations as raw text\n * - The \"silent\" option returns the colors instance that performs no\n *   color transformations\n */\nexport function useColors(options: { raw?: boolean; silent?: boolean } = {}): Colors {\n  if (options.raw) {\n    return colors.raw()\n  }\n\n  if (options.silent) {\n    return colors.silent()\n  }\n\n  return colors.ansi()\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport logUpdate from 'log-update'\nimport type { RendererContract } from '../types.js'\n\n/**\n * Renders messages to the \"stdout\" and \"stderr\"\n */\nexport class ConsoleRenderer implements RendererContract {\n  getLogs() {\n    return []\n  }\n\n  flushLogs(): void {}\n\n  log(message: string) {\n    console.log(message)\n  }\n\n  /**\n   * Log message by overwriting the existing one\n   */\n  logUpdate(message: string) {\n    logUpdate(message)\n  }\n\n  /**\n   * Persist the last logged message\n   */\n  logUpdatePersist() {\n    logUpdate.done()\n  }\n\n  /**\n   * Log error\n   */\n  logError(message: string) {\n    console.error(message)\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport prettyHrtime from 'pretty-hrtime'\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { useColors } from '../colors.js'\nimport { ConsoleRenderer } from '../renderers/console.js'\nimport type { ActionOptions, RendererContract } from '../types.js'\n\n/**\n * Exposes the API to print actions in one of the following three states\n *\n * - failed\n * - succeeded\n * - skipped\n */\nexport class Action {\n  #startTime?: [number, number]\n\n  /**\n   * Action options\n   */\n  #options: ActionOptions\n\n  /**\n   * Action message\n   */\n  #message: string\n\n  /**\n   * Reference to the colors implementation\n   */\n  #colors?: Colors\n\n  /**\n   * The renderer to use for writing to the console\n   */\n  #renderer?: RendererContract\n\n  /**\n   * Whether or not to display duration of the action\n   */\n  #displayDuration: boolean = false\n\n  constructor(message: string, options: Partial<ActionOptions> = {}) {\n    this.#message = message\n    this.#startTime = process.hrtime()\n    this.#options = {\n      dim: options.dim === undefined ? false : options.dim,\n    }\n  }\n\n  /**\n   * Format label\n   */\n  #formatLabel(label: string, color: keyof Colors) {\n    label = this.getColors()[color](`${label.toUpperCase()}:`) as string\n\n    if (this.#options.dim) {\n      return this.getColors().dim(label)\n    }\n\n    return label\n  }\n\n  /**\n   * Format message\n   */\n  #formatMessage(message: string) {\n    if (this.#options.dim) {\n      return this.getColors().dim(message)\n    }\n\n    return message\n  }\n\n  /**\n   * Format the suffix\n   */\n  #formatSuffix(message: string) {\n    message = `(${message})`\n    return this.getColors().dim(message)\n  }\n\n  /**\n   * Format error\n   */\n  #formatError(error: string | Error) {\n    let message = typeof error === 'string' ? error : error.stack || error.message\n\n    return `\\n    ${message\n      .split('\\n')\n      .map((line) => {\n        if (this.#options.dim) {\n          line = this.getColors().dim(line)\n        }\n\n        return `     ${this.getColors().red(line)}`\n      })\n      .join('\\n')}`\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer(): RendererContract {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer.\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Toggle whether to display duration for completed\n   * tasks or not.\n   */\n  displayDuration(displayDuration: boolean = true) {\n    this.#displayDuration = displayDuration\n    return this\n  }\n\n  /**\n   * Prepares the message to mark action as successful\n   */\n  prepareSucceeded() {\n    const formattedLabel = this.#formatLabel('done', 'green')\n    const formattedMessage = this.#formatMessage(this.#message)\n\n    let logMessage = `${formattedLabel}    ${formattedMessage}`\n    if (this.#displayDuration) {\n      logMessage = `${logMessage} ${this.#formatSuffix(\n        prettyHrtime(process.hrtime(this.#startTime))\n      )}`\n    }\n\n    return logMessage\n  }\n\n  /**\n   * Mark action as successful\n   */\n  succeeded() {\n    this.getRenderer().log(this.prepareSucceeded())\n  }\n\n  /**\n   * Prepares the message to mark action as skipped\n   */\n  prepareSkipped(skipReason?: string) {\n    const formattedLabel = this.#formatLabel('skipped', 'cyan')\n    const formattedMessage = this.#formatMessage(this.#message)\n\n    let logMessage = `${formattedLabel} ${formattedMessage}`\n    if (skipReason) {\n      logMessage = `${logMessage} ${this.#formatSuffix(skipReason)}`\n    }\n\n    return logMessage\n  }\n\n  /**\n   * Mark action as skipped. An optional skip reason can be\n   * supplied\n   */\n  skipped(skipReason?: string) {\n    this.getRenderer().log(this.prepareSkipped(skipReason))\n  }\n\n  /**\n   * Prepares the message to mark action as failed\n   */\n  prepareFailed(error: string | Error) {\n    const formattedLabel = this.#formatLabel('failed', 'red')\n    const formattedMessage = this.#formatMessage(this.#message)\n    const formattedError = this.#formatError(error)\n\n    const logMessage = `${formattedLabel}  ${formattedMessage} ${formattedError}`\n    return logMessage\n  }\n\n  /**\n   * Mark action as failed. An error message is required\n   */\n  failed(error: string | Error) {\n    this.getRenderer().logError(this.prepareFailed(error))\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { ConsoleRenderer } from '../renderers/console.js'\nimport type { LoggerMessageOptions, RendererContract, SpinnerMessage } from '../types.js'\n\n/**\n * Textual spinner to print a message with dotted progress\n * bar.\n */\nexport class Spinner {\n  #animator = {\n    frames: ['.  ', '.. ', '...', ' ..', '  .', '   '],\n    interval: 200,\n    index: 0,\n    getFrame() {\n      return this.frames[this.index]\n    },\n    advance() {\n      this.index = this.index + 1 === this.frames.length ? 0 : this.index + 1\n      return this.index\n    },\n  }\n\n  /**\n   * The state of the spinner\n   */\n  #state: 'idle' | 'running' | 'stopped' = 'idle'\n\n  /**\n   * Spinner message\n   */\n  #message: SpinnerMessage\n\n  /**\n   * The renderer to use for writing to the console\n   */\n  #renderer?: RendererContract\n\n  /**\n   * Custom method to handle animation result\n   */\n  #spinnerWriter?: (line: string) => void\n\n  constructor(message: SpinnerMessage) {\n    this.#message = message\n  }\n\n  /**\n   * Loop over the message and animate the spinner\n   */\n  #animate() {\n    if (this.#state !== 'running') {\n      return\n    }\n\n    /**\n     * Do not write when in silent mode\n     */\n    if (this.#message.silent) {\n      return\n    }\n\n    const frame = this.#animator.getFrame()\n\n    if (this.#spinnerWriter) {\n      this.#spinnerWriter(`${this.#message.render()} ${frame}`)\n    } else {\n      this.getRenderer().logUpdate(`${this.#message.render()} ${frame}`)\n    }\n\n    setTimeout(() => {\n      this.#animator.advance()\n      this.#animate()\n    }, this.#animator.interval)\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer(): RendererContract {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define the custom renderer\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Star the spinner\n   */\n  start(): this {\n    this.#state = 'running'\n    this.#animate()\n    return this\n  }\n\n  /**\n   * Update spinner\n   */\n  update(text: string, options?: LoggerMessageOptions): this {\n    if (this.#state !== 'running') {\n      return this\n    }\n\n    Object.assign(this.#message, { text, ...options })\n    return this\n  }\n\n  /**\n   * Stop spinner\n   */\n  stop() {\n    this.#state = 'stopped'\n    this.#animator.index = 0\n\n    if (!this.#spinnerWriter && !this.#message.silent) {\n      this.getRenderer().logUpdate(`${this.#message.render()} ${this.#animator.frames[2]}`)\n      this.getRenderer().logUpdatePersist()\n    }\n  }\n\n  /**\n   * Tap into spinner to manually write the\n   * output.\n   */\n  tap(callback: (line: string) => void): this {\n    this.#spinnerWriter = callback\n    return this\n  }\n}\n","/*\n * @poppinss/clui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { Action } from './action.js'\nimport { Spinner } from './spinner.js'\nimport { useColors } from '../colors.js'\nimport { ConsoleRenderer } from '../renderers/console.js'\n\nimport type {\n  LoggingTypes,\n  LoggerOptions,\n  RendererContract,\n  LoggerMessageOptions,\n} from '../types.js'\n\n/**\n * CLI logger to log messages to the console. The output is consistently\n * formatted.\n */\nexport class Logger implements RendererContract {\n  /**\n   * Logger configuration options\n   */\n  #options: LoggerOptions\n\n  /**\n   * Reference to the colors implementation\n   */\n  #colors?: Colors\n\n  /**\n   * The renderer to use to output logs\n   */\n  #renderer?: RendererContract\n\n  getLogs(): { message: string; stream: 'stdout' | 'stderr' }[] {\n    return this.getRenderer().getLogs()\n  }\n\n  flushLogs(): void {\n    this.getRenderer().flushLogs()\n  }\n\n  constructor(options: Partial<LoggerOptions> = {}) {\n    const dimOutput = options.dim === undefined ? false : options.dim\n\n    this.#options = {\n      dim: dimOutput,\n      dimLabels: options.dimLabels === undefined ? dimOutput : options.dimLabels,\n    }\n  }\n\n  /**\n   * Color the logger label\n   */\n  #colorizeLabel(color: keyof Colors, text: string): string {\n    text = this.getColors()[color](text) as string\n\n    if (this.#options.dimLabels) {\n      return `[ ${this.getColors().dim(text)} ]`\n    }\n\n    return `[ ${text} ]`\n  }\n\n  /**\n   * Returns the label for a given logging type\n   */\n  #getLabel(type: LoggingTypes): string {\n    switch (type) {\n      case 'success':\n        return this.#colorizeLabel('green', type)\n      case 'error':\n      case 'fatal':\n        return this.#colorizeLabel('red', type)\n      case 'warning':\n        return this.#colorizeLabel('yellow', 'warn')\n      case 'info':\n        return this.#colorizeLabel('blue', type)\n      case 'debug':\n        return this.#colorizeLabel('cyan', type)\n      case 'await':\n        return this.#colorizeLabel('cyan', 'wait')\n    }\n  }\n\n  /**\n   * Appends the suffix to the message\n   */\n  #addSuffix(message: string, suffix?: string): string {\n    if (!suffix) {\n      return message\n    }\n\n    return `${message} ${this.getColors().dim().yellow(`(${suffix})`)}`\n  }\n\n  /**\n   * Prepends the prefix to the message. We do not DIM the prefix, since\n   * gray doesn't have much brightness already\n   */\n  #addPrefix(message: string, prefix?: string): string {\n    if (!prefix) {\n      return message\n    }\n\n    prefix = prefix.replace(/%time%/, new Date().toISOString())\n    return `${this.getColors().dim(`[${prefix}]`)} ${message}`\n  }\n\n  /**\n   * Prepends the prefix to the message\n   */\n  #prefixLabel(message: string, label: string) {\n    return `${label} ${message}`\n  }\n\n  /**\n   * Decorate message string\n   */\n  #decorateMessage(message: string): string {\n    if (this.#options.dim) {\n      return this.getColors().dim(message)\n    }\n\n    return message\n  }\n\n  /**\n   * Decorate error stack\n   */\n  #formatStack(stack?: string): string {\n    if (!stack) {\n      return ''\n    }\n\n    return `\\n${stack\n      .split('\\n')\n      .splice(1)\n      .map((line) => {\n        if (this.#options.dim) {\n          line = this.getColors().dim(line)\n        }\n\n        return `      ${this.getColors().red(line)}`\n      })\n      .join('\\n')}`\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer(): RendererContract {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer to output logos\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Log message\n   */\n  log(message: string) {\n    this.getRenderer().log(message)\n  }\n\n  /**\n   * Log message by updating the existing line\n   */\n  logUpdate(message: string) {\n    this.getRenderer().logUpdate(message)\n  }\n\n  /**\n   * Persist log line written using the `logUpdate`\n   * method.\n   */\n  logUpdatePersist() {\n    this.getRenderer().logUpdatePersist()\n  }\n\n  /**\n   * Log error message using the renderer. It is similar to `console.error`\n   * but uses the underlying renderer instead\n   */\n  logError(message: string) {\n    this.getRenderer().logError(message)\n  }\n\n  /**\n   * Prepares the success message\n   */\n  prepareSuccess(message: string, options?: LoggerMessageOptions) {\n    message = this.#decorateMessage(message)\n    message = this.#prefixLabel(message, this.#getLabel('success'))\n    message = this.#addPrefix(message, options?.prefix)\n    message = this.#addSuffix(message, options?.suffix)\n    return message\n  }\n\n  /**\n   * Log success message\n   */\n  success(message: string, options?: LoggerMessageOptions) {\n    this.log(this.prepareSuccess(message, options))\n  }\n\n  /**\n   * Prepares the error message\n   */\n  prepareError(message: string | { message: string }, options?: LoggerMessageOptions) {\n    message = typeof message === 'string' ? message : message.message\n    message = this.#decorateMessage(message)\n    message = this.#prefixLabel(message, this.#getLabel('error'))\n    message = this.#addPrefix(message, options?.prefix)\n    message = this.#addSuffix(message, options?.suffix)\n\n    return message\n  }\n\n  /**\n   * Log error message\n   */\n  error(message: string | { message: string }, options?: LoggerMessageOptions) {\n    this.logError(this.prepareError(message, options))\n  }\n\n  /**\n   * Prepares the fatal message\n   */\n  prepareFatal(\n    message: string | { message: string; stack?: string },\n    options?: LoggerMessageOptions\n  ) {\n    const stack = this.#formatStack(typeof message === 'string' ? undefined : message.stack)\n\n    message = typeof message === 'string' ? message : message.message\n    message = this.#decorateMessage(message)\n    message = this.#prefixLabel(message, this.#getLabel('error'))\n    message = this.#addPrefix(message, options?.prefix)\n    message = this.#addSuffix(message, options?.suffix)\n\n    return `${message}${stack}`\n  }\n\n  /**\n   * Log fatal message\n   */\n  fatal(message: string | { message: string; stack?: string }, options?: LoggerMessageOptions) {\n    this.logError(this.prepareFatal(message, options))\n  }\n\n  /**\n   * Prepares the warning message\n   */\n  prepareWarning(message: string, options?: LoggerMessageOptions) {\n    message = this.#decorateMessage(message)\n    message = this.#prefixLabel(message, this.#getLabel('warning'))\n    message = this.#addPrefix(message, options?.prefix)\n    message = this.#addSuffix(message, options?.suffix)\n\n    return message\n  }\n\n  /**\n   * Log warning message\n   */\n  warning(message: string, options?: LoggerMessageOptions) {\n    this.log(this.prepareWarning(message, options))\n  }\n\n  /**\n   * Prepares the info message\n   */\n  prepareInfo(message: string, options?: LoggerMessageOptions) {\n    message = this.#decorateMessage(message)\n    message = this.#prefixLabel(message, this.#getLabel('info'))\n    message = this.#addPrefix(message, options?.prefix)\n    message = this.#addSuffix(message, options?.suffix)\n\n    return message\n  }\n\n  /**\n   * Log info message\n   */\n  info(message: string, options?: LoggerMessageOptions) {\n    this.log(this.prepareInfo(message, options))\n  }\n\n  /**\n   * Prepares the debug message\n   */\n  prepareDebug(message: string, options?: LoggerMessageOptions) {\n    message = this.#decorateMessage(message)\n    message = this.#prefixLabel(message, this.#getLabel('debug'))\n    message = this.#addPrefix(message, options?.prefix)\n    message = this.#addSuffix(message, options?.suffix)\n\n    return message\n  }\n\n  /**\n   * Log debug message\n   */\n  debug(message: string, options?: LoggerMessageOptions) {\n    this.log(this.prepareDebug(message, options))\n  }\n\n  /**\n   * Log a message with a spinner\n   */\n  await(text: string, options?: LoggerMessageOptions) {\n    const message = {\n      logger: this,\n      text,\n      ...options,\n      render() {\n        let decorated = this.logger.#decorateMessage(this.text)\n        decorated = this.logger.#prefixLabel(decorated, this.logger.#getLabel('await'))\n        decorated = this.logger.#addPrefix(decorated, this.prefix)\n        decorated = this.logger.#addSuffix(decorated, this.suffix)\n        return decorated\n      },\n    }\n\n    return new Spinner(message).useRenderer(this.getRenderer())\n  }\n\n  /**\n   * Initiates a new action\n   */\n  action(title: string) {\n    return new Action(title, { dim: this.#options.dim })\n      .useColors(this.getColors())\n      .useRenderer(this.getRenderer())\n  }\n\n  /**\n   * Create a new child instance of self\n   */\n  child(options?: Partial<LoggerOptions>): Logger {\n    return new (this.constructor as typeof Logger)(options)\n      .useColors(this.getColors())\n      .useRenderer(this.getRenderer())\n  }\n}\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport boxes from 'cli-boxes'\nimport stringWidth from 'string-width'\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { icons } from './icons.js'\nimport { useColors } from './colors.js'\nimport { TERMINAL_SIZE } from './helpers.js'\nimport { ConsoleRenderer } from './renderers/console.js'\nimport type { InstructionsOptions, RendererContract } from './types.js'\n\n/**\n * The box styling used by the instructions\n */\nconst BOX = boxes.round\n\n/**\n * The API to render instructions wrapped inside a box\n */\nexport class Instructions {\n  #state: {\n    heading?: { text: string; width: number }\n    content: { text: string; width: number }[]\n  } = {\n    content: [],\n  }\n\n  /**\n   * Renderer to use for rendering instructions\n   */\n  #renderer?: RendererContract\n\n  /**\n   * Length of the widest line inside instructions content\n   */\n  #widestLineLength = 0\n\n  /**\n   * Number of white spaces on the left of the box\n   */\n  #leftPadding = 4\n\n  /**\n   * Number of white spaces on the right of the box\n   */\n  #rightPadding = 8\n\n  /**\n   * Number of empty lines at the top\n   */\n  #paddingTop = 1\n\n  /**\n   * Number of empty lines at the bottom\n   */\n  #paddingBottom = 1\n\n  /**\n   * Reference to the colors\n   */\n  #colors?: Colors\n\n  /**\n   * Options\n   */\n  #options: InstructionsOptions\n\n  /**\n   * Draws the border\n   */\n  #drawBorder: (border: string, colors: Colors) => string = (border, colors) => {\n    return colors.dim(border)\n  }\n\n  constructor(options: Partial<InstructionsOptions> = {}) {\n    this.#options = {\n      icons: options.icons === undefined ? true : options.icons,\n      raw: options.raw === undefined ? false : options.raw,\n    }\n  }\n\n  /**\n   * Returns the length of the horizontal line\n   */\n  #getHorizontalLength() {\n    return this.#widestLineLength + this.#leftPadding + this.#rightPadding\n  }\n\n  /**\n   * Repeats text for given number of times\n   */\n  #repeat(text: string, times: number) {\n    return new Array(times + 1).join(text)\n  }\n\n  /**\n   * Wraps content inside the left and right vertical lines\n   */\n  #wrapInVerticalLines(content: string, leftWhitespace: string, rightWhitespace: string) {\n    return `${this.#drawBorder(\n      BOX.left,\n      this.getColors()\n    )}${leftWhitespace}${content}${rightWhitespace}${this.#drawBorder(BOX.right, this.getColors())}`\n  }\n\n  /**\n   * Returns the top line for the box\n   */\n  #getTopLine(): string {\n    const horizontalLength = this.#getHorizontalLength()\n    const horizontalLine = this.#repeat(\n      this.#drawBorder(BOX.top, this.getColors()),\n      horizontalLength\n    )\n\n    return `${this.#drawBorder(BOX.topLeft, this.getColors())}${horizontalLine}${this.#drawBorder(\n      BOX.topRight,\n      this.getColors()\n    )}`\n  }\n\n  /**\n   * Returns the bottom line for the box\n   */\n  #getBottomLine(): string {\n    const horizontalLength = this.#getHorizontalLength()\n    const horizontalLine = this.#repeat(\n      this.#drawBorder(BOX.bottom, this.getColors()),\n      horizontalLength\n    )\n    return `${this.#drawBorder(\n      BOX.bottomLeft,\n      this.getColors()\n    )}${horizontalLine}${this.#drawBorder(BOX.bottomRight, this.getColors())}`\n  }\n\n  /**\n   * Returns the heading border bottom\n   */\n  #getHeadingBorderBottom(): string {\n    const horizontalLength = this.#getHorizontalLength()\n    const horizontalLine = this.#repeat(\n      this.#drawBorder(boxes.single.top, this.getColors()),\n      horizontalLength\n    )\n    return this.#wrapInVerticalLines(horizontalLine, '', '')\n  }\n\n  /**\n   * Decorates the instruction line by wrapping it inside the box\n   * lines\n   */\n  #getContentLine(line: { text: string; width: number }): string {\n    const leftWhitespace = this.#repeat(' ', this.#leftPadding)\n    const rightWhitespace = this.#repeat(\n      ' ',\n      this.#widestLineLength - line.width + this.#rightPadding\n    )\n    return this.#wrapInVerticalLines(line.text, leftWhitespace, rightWhitespace)\n  }\n\n  /**\n   * Returns the heading line by applying padding\n   */\n  #getHeading(): string | undefined {\n    if (!this.#state.heading) {\n      return\n    }\n\n    return this.#getContentLine(this.#state.heading)\n  }\n\n  /**\n   * Returns the formatted body\n   */\n  #getBody(): string | undefined {\n    if (!this.#state.content || !this.#state.content.length) {\n      return\n    }\n\n    const top = new Array(this.#paddingTop).fill('').map(this.#getEmptyLineNode)\n    const bottom = new Array(this.#paddingBottom).fill('').map(this.#getEmptyLineNode)\n\n    return top\n      .concat(this.#state.content)\n      .concat(bottom)\n      .map((line) => this.#getContentLine(line))\n      .join('\\n')\n  }\n\n  /**\n   * Returns node for a empty line\n   */\n  #getEmptyLineNode() {\n    return { text: '', width: 0 }\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer() {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer. Logs to \"stdout\" and \"stderr\"\n   * by default\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Draw the instructions box in fullscreen\n   */\n  fullScreen(): this {\n    const borderWidth = 2\n    this.#widestLineLength = TERMINAL_SIZE - (this.#leftPadding + this.#rightPadding) - borderWidth\n\n    return this\n  }\n\n  /**\n   * Attach a callback to self draw the borders\n   */\n  drawBorder(callback: (borderChar: string, colors: Colors) => string) {\n    this.#drawBorder = callback\n    return this\n  }\n\n  /**\n   * Define heading for instructions\n   */\n  heading(text: string): this {\n    const width = stringWidth(text)\n    if (width > this.#widestLineLength) {\n      this.#widestLineLength = width\n    }\n\n    this.#state.heading = { text, width }\n    return this\n  }\n\n  /**\n   * Add new instruction. Each instruction is rendered\n   * in a new line inside a box\n   */\n  add(text: string): this {\n    text = this.#options.icons ? `${this.getColors().dim(icons.pointer)} ${text}` : `${text}`\n\n    const width = stringWidth(text)\n    if (width > this.#widestLineLength) {\n      this.#widestLineLength = width\n    }\n\n    this.#state.content.push({ text, width })\n    return this\n  }\n\n  prepare(): string {\n    /**\n     * Render content as it is in raw mode\n     */\n    if (this.#options.raw) {\n      let output: string[] = []\n      if (this.#state.heading) {\n        output.push(this.#state.heading.text)\n      }\n\n      output = output.concat(this.#state.content.map(({ text }) => text))\n      return output.join('\\n')\n    }\n\n    const top = this.#getTopLine()\n    const heading = this.#getHeading()\n    const headingBorderBottom = this.#getHeadingBorderBottom()\n    const body = this.#getBody()\n    const bottom = this.#getBottomLine()\n\n    let output = `${top}\\n`\n\n    /**\n     * Draw heading if it exists\n     */\n    if (heading) {\n      output = `${output}${heading}`\n    }\n\n    /**\n     * Draw the border between the heading and the body if\n     * both exists\n     */\n    if (heading && body) {\n      output = `${output}\\n${headingBorderBottom}\\n`\n    }\n\n    /**\n     * Draw body if it exists\n     */\n    if (body) {\n      output = `${output}${body}`\n    }\n\n    return `${output}\\n${bottom}`\n  }\n\n  /**\n   * Render instructions\n   */\n  render() {\n    this.getRenderer().log(this.prepare())\n  }\n}\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport prettyHrtime from 'pretty-hrtime'\n\n/**\n * Task exposes a very simple API to create tasks with states, along with a\n * listener to listen for the task state updates.\n *\n * The task itself has does not render anything to the console. The task\n * renderers does that.\n */\nexport class Task {\n  #startTime?: [number, number]\n\n  /**\n   * Last logged line for the task\n   */\n  #lastLogLine?: string\n\n  /**\n   * Define one or more update listeners\n   */\n  #updateListeners: ((task: this) => void)[] = []\n\n  /**\n   * Duration of the task. Updated after the task is over\n   */\n  #duration?: string\n\n  /**\n   * Message set after completing the task. Can be an error or the\n   * a success message\n   */\n  #completionMessage?: string | { message: string; stack?: string }\n\n  /**\n   * Task current state\n   */\n  #state: 'idle' | 'running' | 'failed' | 'succeeded' = 'idle'\n\n  constructor(public title: string) {}\n\n  #notifyListeners() {\n    for (let listener of this.#updateListeners) {\n      listener(this)\n    }\n  }\n\n  /**\n   * Access the task state\n   */\n  getState() {\n    return this.#state\n  }\n\n  /**\n   * Get the time spent in running the task\n   */\n  getDuration() {\n    return this.#duration || null\n  }\n\n  /**\n   * Get error occurred while running the task\n   */\n  getError() {\n    return this.#completionMessage || null\n  }\n\n  /**\n   * Get task completion success message\n   */\n  getSuccessMessage() {\n    return typeof this.#completionMessage === 'string' ? this.#completionMessage : null\n  }\n\n  /**\n   * Last logged line for the task\n   */\n  getLastLoggedLine() {\n    return this.#lastLogLine || null\n  }\n\n  /**\n   * Bind a listener to listen to the state updates of the task\n   */\n  onUpdate(listener: (task: this) => void): this {\n    this.#updateListeners.push(listener)\n    return this\n  }\n\n  /**\n   * Start the task\n   */\n  start() {\n    this.#state = 'running'\n    this.#startTime = process.hrtime()\n    this.#notifyListeners()\n    return this\n  }\n\n  /**\n   * Update task with log messages. Based upon the renderer\n   * in use, it may only display one line at a time.\n   */\n  update(message: string): this {\n    this.#lastLogLine = message\n    this.#notifyListeners()\n    return this\n  }\n\n  /**\n   * Mark task as completed\n   */\n  markAsSucceeded(message?: string): this {\n    this.#state = 'succeeded'\n    this.#duration = prettyHrtime(process.hrtime(this.#startTime))\n    this.#completionMessage = message\n    this.#notifyListeners()\n    return this\n  }\n\n  /**\n   * Mark task as failed\n   */\n  markAsFailed(error: string | { message: string; stack?: string }): this {\n    this.#state = 'failed'\n    this.#duration = prettyHrtime(process.hrtime(this.#startTime))\n    this.#completionMessage = error\n    this.#notifyListeners()\n    return this\n  }\n}\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { Task } from '../task.js'\nimport { useColors } from '../../colors.js'\nimport type { RendererContract } from '../../types.js'\nimport { ConsoleRenderer } from '../../renderers/console.js'\n\n/**\n * Verbose renderer shows a detailed output of the tasks and the\n * messages logged by a given task\n */\nexport class VerboseRenderer {\n  /**\n   * Reference to the colors implementation\n   */\n  #colors?: Colors\n\n  /**\n   * The renderer to use to output logs\n   */\n  #renderer?: RendererContract\n\n  /**\n   * List of registered tasks\n   */\n  #registeredTasks: Task[] = []\n\n  #notifiedTasks: Set<string> = new Set()\n\n  constructor() {}\n\n  /**\n   * Format error\n   */\n  #formatError(error: string | { message: string; stack?: string }) {\n    if (typeof error === 'string') {\n      return `${this.#getAnsiIcon('│', 'dim')}${this.getColors().red(error)}`\n    }\n\n    if (!error.stack) {\n      return `${this.#getAnsiIcon('│', 'dim')}${this.getColors().red(error.message)}`\n    }\n\n    return `${error.stack\n      .split('\\n')\n      .map((line) => `${this.#getAnsiIcon('│', 'dim')} ${this.getColors().red(line)}`)\n      .join('\\n')}`\n  }\n\n  /**\n   * Returns the ansi icon back when icons are enabled\n   * or an empty string\n   */\n  #getAnsiIcon(icon: string, color: keyof Colors) {\n    return this.getColors()[color](`${icon} `)\n  }\n\n  /**\n   * Renders message for a running task\n   */\n  #renderRunningTask(task: Task) {\n    if (this.#notifiedTasks.has(task.title)) {\n      const lastLoggedLine = task.getLastLoggedLine()\n      if (lastLoggedLine) {\n        this.getRenderer().log(`${this.#getAnsiIcon('│', 'dim')}${lastLoggedLine}`)\n      }\n\n      return\n    }\n\n    this.getRenderer().log(`${this.#getAnsiIcon('┌', 'dim')}${task.title}`)\n    this.#notifiedTasks.add(task.title)\n  }\n\n  /**\n   * Renders message for a succeeded task\n   */\n  #renderSucceededTask(task: Task) {\n    const successMessage = task.getSuccessMessage()\n    const icon = this.#getAnsiIcon('└', 'dim')\n    const status = this.getColors().green(successMessage || 'Completed')\n    const duration = this.getColors().dim(`(${task.getDuration()})`)\n    this.getRenderer().log(`${icon}${status} ${duration}`)\n  }\n\n  /**\n   * Renders message for a failed task\n   */\n  #renderFailedTask(task: Task) {\n    const error = task.getError()\n    if (error) {\n      this.getRenderer().logError(this.#formatError(error))\n    }\n\n    const icon = this.#getAnsiIcon('└', 'dim')\n    const status = this.getColors().red('Failed')\n    const duration = this.getColors().dim(`(${task.getDuration()})`)\n    this.getRenderer().logError(`${icon}${status} ${duration}`)\n  }\n\n  /**\n   * Renders a given task\n   */\n  #renderTask(task: Task) {\n    switch (task.getState()) {\n      case 'running':\n        return this.#renderRunningTask(task)\n      case 'succeeded':\n        return this.#renderSucceededTask(task)\n      case 'failed':\n        return this.#renderFailedTask(task)\n    }\n  }\n\n  /**\n   * Renders all tasks\n   */\n  #renderTasks() {\n    this.#registeredTasks.forEach((task) => this.#renderTask(task))\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer() {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer. Logs to \"stdout\" and \"stderr\"\n   * by default\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Register tasks to render\n   */\n  tasks(tasks: Task[]): this {\n    this.#registeredTasks = tasks\n    return this\n  }\n\n  /**\n   * Render all tasks\n   */\n  render() {\n    this.#registeredTasks.forEach((task) => task.onUpdate(($task) => this.#renderTask($task)))\n    this.#renderTasks()\n  }\n}\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { Task } from '../task.js'\nimport { icons } from '../../icons.js'\nimport { useColors } from '../../colors.js'\nimport { ConsoleRenderer } from '../../renderers/console.js'\nimport type { TaskRendererOptions, RendererContract } from '../../types.js'\n\n/**\n * As the name suggests, render tasks in minimal UI for better viewing\n * experience.\n */\nexport class MinimalRenderer {\n  /**\n   * Renderer options\n   */\n  #options: TaskRendererOptions\n\n  /**\n   * Reference to the colors implementation\n   */\n  #colors?: Colors\n\n  /**\n   * The renderer to use to output logs\n   */\n  #renderer?: RendererContract\n\n  /**\n   * List of registered tasks\n   */\n  #registeredTasks: Task[] = []\n\n  constructor(options: TaskRendererOptions) {\n    this.#options = {\n      icons: options.icons === undefined ? true : options.icons,\n    }\n  }\n\n  /**\n   * Format error\n   */\n  #formatError(error: string | { message: string; stack?: string }) {\n    let message = typeof error === 'string' ? error : error.message\n    message = this.getColors().red(message)\n\n    return `\\n  ${message\n      .split('\\n')\n      .map((line) => `${line}`)\n      .join('\\n')}`\n  }\n\n  /**\n   * Returns the pointer icon, if icons are not disabled.\n   */\n  #getPointerIcon(color: keyof Colors) {\n    const icon = this.#options.icons ? `${icons.pointer} ` : ''\n    if (!icon) {\n      return icon\n    }\n\n    return this.getColors()[color](icon)\n  }\n\n  /**\n   * Returns the display string for an idle task\n   */\n  #renderIdleTask(task: Task) {\n    return `${this.#getPointerIcon('dim')}${this.getColors().dim(task.title)}`\n  }\n\n  /**\n   * Returns the display string for a running task\n   */\n  #renderRunningTask(task: Task) {\n    const lastLogLine = task.getLastLoggedLine()\n    const title = this.#options.icons ? `${icons.pointer} ${task.title}` : task.title\n\n    return `${title}\\n  ${lastLogLine || ''}`\n  }\n\n  /**\n   * Returns the display string for a failed task\n   */\n  #renderFailedTask(task: Task) {\n    const pointer = this.#getPointerIcon('red')\n    const duration = this.getColors().dim(`(${task.getDuration()!})`)\n\n    let message = `${pointer}${task.title} ${duration}`\n\n    const error = task.getError()\n    if (!error) {\n      return `${message}\\n`\n    }\n\n    message = `${message}${this.#formatError(error)}`\n    return message\n  }\n\n  /**\n   * Returns the display string for a succeeded task\n   */\n  #renderSucceededTask(task: Task) {\n    const pointer = this.#getPointerIcon('green')\n    const duration = this.getColors().dim(`(${task.getDuration()!})`)\n\n    let message = `${pointer}${task.title} ${duration}`\n\n    const successMessage = task.getSuccessMessage()\n    if (!successMessage) {\n      return `${message}\\n`\n    }\n\n    message = `${message}\\n  ${this.getColors().green(successMessage)}`\n    return message\n  }\n\n  /**\n   * Renders a given task\n   */\n  #renderTask(task: Task): string {\n    switch (task.getState()) {\n      case 'idle':\n        return this.#renderIdleTask(task)\n      case 'running':\n        return this.#renderRunningTask(task)\n      case 'succeeded':\n        return this.#renderSucceededTask(task)\n      case 'failed':\n        return this.#renderFailedTask(task)\n    }\n  }\n\n  /**\n   * Renders all tasks\n   */\n  #renderTasks() {\n    const lastTaskState = this.#registeredTasks[this.#registeredTasks.length - 1].getState()\n    this.getRenderer().logUpdate(\n      this.#registeredTasks.map((task) => this.#renderTask(task)).join('\\n')\n    )\n    if (lastTaskState === 'succeeded' || lastTaskState === 'failed') {\n      this.getRenderer().logUpdatePersist()\n    }\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer() {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer. Logs to \"stdout\" and \"stderr\"\n   * by default\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Register tasks to render\n   */\n  tasks(tasks: Task[]): this {\n    this.#registeredTasks = tasks\n    return this\n  }\n\n  /**\n   * Render all tasks\n   */\n  render() {\n    this.#registeredTasks.forEach((task) => {\n      task.onUpdate(() => this.#renderTasks())\n    })\n    this.#renderTasks()\n  }\n}\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { Task } from '../task.js'\nimport { useColors } from '../../colors.js'\nimport type { RendererContract } from '../../types.js'\nimport { ConsoleRenderer } from '../../renderers/console.js'\n\n/**\n * Raw renderer shows a detailed output of the tasks without using any\n * ansi characters\n */\nexport class RawRenderer {\n  /**\n   * Reference to the colors implementation\n   */\n  #colors?: Colors\n\n  /**\n   * The renderer to use to output logs\n   */\n  #renderer?: RendererContract\n\n  /**\n   * List of registered tasks\n   */\n  #registeredTasks: Task[] = []\n\n  #notifiedTasks: Set<string> = new Set()\n\n  constructor() {}\n\n  /**\n   * Format error\n   */\n  #formatError(error: string | { message: string; stack?: string }) {\n    if (typeof error === 'string') {\n      return `${this.getColors().red(error)}`\n    }\n\n    if (!error.stack) {\n      return `${this.getColors().red(error.message)}`\n    }\n\n    return `${error.stack\n      .split('\\n')\n      .map((line) => ` ${this.getColors().red(line)}`)\n      .join('\\n')}`\n  }\n\n  /**\n   * Renders message for a running task\n   */\n  #renderRunningTask(task: Task) {\n    if (this.#notifiedTasks.has(task.title)) {\n      const lastLoggedLine = task.getLastLoggedLine()\n      if (lastLoggedLine) {\n        this.getRenderer().log(lastLoggedLine)\n      }\n\n      return\n    }\n\n    this.getRenderer().log(`${task.title}\\n${new Array(task.title.length + 1).join('-')}`)\n    this.#notifiedTasks.add(task.title)\n  }\n\n  /**\n   * Renders message for a succeeded task\n   */\n  #renderSucceededTask(task: Task) {\n    const successMessage = task.getSuccessMessage()\n    const status = this.getColors().green(successMessage || 'completed')\n    const duration = this.getColors().dim(`(${task.getDuration()})`)\n    this.getRenderer().log(`${status} ${duration}\\n`)\n  }\n\n  /**\n   * Renders message for a failed task\n   */\n  #renderFailedTask(task: Task) {\n    const error = task.getError()\n    if (error) {\n      this.getRenderer().logError(this.#formatError(error))\n    }\n\n    const status = this.getColors().red('failed')\n    const duration = this.getColors().dim(`(${task.getDuration()})`)\n    this.getRenderer().logError(`${status} ${duration}\\n`)\n  }\n\n  /**\n   * Renders a given task\n   */\n  #renderTask(task: Task) {\n    switch (task.getState()) {\n      case 'running':\n        return this.#renderRunningTask(task)\n      case 'succeeded':\n        return this.#renderSucceededTask(task)\n      case 'failed':\n        return this.#renderFailedTask(task)\n    }\n  }\n\n  /**\n   * Renders all tasks\n   */\n  #renderTasks() {\n    this.#registeredTasks.forEach((task) => this.#renderTask(task))\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer() {\n    if (!this.#renderer) {\n      this.#renderer = new ConsoleRenderer()\n    }\n\n    return this.#renderer\n  }\n\n  /**\n   * Define a custom renderer. Logs to \"stdout\" and \"stderr\"\n   * by default\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#renderer = renderer\n    return this\n  }\n\n  /**\n   * Returns the colors implementation in use\n   */\n  getColors(): Colors {\n    if (!this.#colors) {\n      this.#colors = useColors()\n    }\n\n    return this.#colors\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#colors = color\n    return this\n  }\n\n  /**\n   * Register tasks to render\n   */\n  tasks(tasks: Task[]): this {\n    this.#registeredTasks = tasks\n    return this\n  }\n\n  /**\n   * Render all tasks\n   */\n  render() {\n    this.#registeredTasks.forEach((task) => task.onUpdate(($task) => this.#renderTask($task)))\n    this.#renderTasks()\n  }\n}\n","/*\n * @poppinss/cliui\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Colors } from '@poppinss/colors/types'\n\nimport { Task } from './task.js'\nimport { VerboseRenderer } from './renderers/verbose.js'\nimport { MinimalRenderer } from './renderers/minimal.js'\nimport type { TaskManagerOptions, TaskCallback, RendererContract } from '../types.js'\nimport { RawRenderer } from './renderers/raw.js'\n\n/**\n * Transforms error message\n */\nfunction TRANSFORM_ERROR<T extends string>(error: T): { isError: true; message: string }\nfunction TRANSFORM_ERROR<T extends Error>(error: T): T\nfunction TRANSFORM_ERROR<T extends string | Error>(error: T) {\n  if (typeof error === 'string') {\n    return { isError: true, message: error }\n  }\n\n  return error\n}\n\n/**\n * Exposes the API to create a group of tasks and run them in sequence\n */\nexport class TaskManager {\n  /**\n   * Last handled error\n   */\n  error?: any\n\n  /**\n   * Options\n   */\n  #options: TaskManagerOptions\n\n  /**\n   * The renderer to use for rendering tasks. The verbose renderer is\n   * used When \"raw\" is set to true.\n   */\n  #tasksRenderer: MinimalRenderer | VerboseRenderer | RawRenderer\n\n  /**\n   * A set of created tasks\n   */\n  #tasks: { task: Task; callback: TaskCallback }[] = []\n\n  /**\n   * State of the tasks manager\n   */\n  #state: 'idle' | 'running' | 'succeeded' | 'failed' = 'idle'\n\n  constructor(options: Partial<TaskManagerOptions> = {}) {\n    this.#options = {\n      icons: options.icons === undefined ? true : options.icons,\n      raw: options.raw === undefined ? false : options.raw,\n      verbose: options.verbose === undefined ? false : options.verbose,\n    }\n\n    /**\n     * Using verbose renderer when in raw mode\n     */\n    if (this.#options.raw) {\n      this.#tasksRenderer = new RawRenderer()\n    } else if (this.#options.verbose) {\n      this.#tasksRenderer = new VerboseRenderer()\n    } else {\n      /**\n       * Otheriwse using the minimal renderer\n       */\n      this.#tasksRenderer = new MinimalRenderer({\n        icons: this.#options.icons,\n      })\n    }\n  }\n\n  /**\n   * Run a given task. The underlying code assumes that tasks are\n   * executed in sequence.\n   */\n  async #runTask(index: number) {\n    const task = this.#tasks[index]\n    if (!task) {\n      return\n    }\n\n    /**\n     * Start the underlying task\n     */\n    task.task.start()\n\n    /**\n     * Update task progress\n     */\n    const update = (logMessage: string) => {\n      task.task.update(logMessage)\n    }\n\n    /**\n     * Invoke callback\n     */\n    try {\n      const response = await task.callback({ error: TRANSFORM_ERROR, update })\n      if (typeof response === 'string') {\n        task.task.markAsSucceeded(response)\n        await this.#runTask(index + 1)\n      } else {\n        this.#state = 'failed'\n        task.task.markAsFailed(response)\n      }\n    } catch (error) {\n      this.#state = 'failed'\n      this.error = error\n      task.task.markAsFailed(error)\n    }\n  }\n\n  /**\n   * Access the task state\n   */\n  getState() {\n    return this.#state\n  }\n\n  /**\n   * Register a new task\n   */\n  add(title: string, callback: TaskCallback): this {\n    this.#tasks.push({ task: new Task(title), callback })\n    return this\n  }\n\n  /**\n   * Register a new task, when the \"conditional = true\"\n   */\n  addIf(conditional: boolean, title: string, callback: TaskCallback): this {\n    if (conditional) {\n      this.add(title, callback)\n    }\n    return this\n  }\n\n  /**\n   * Register a new task, when the \"conditional = false\"\n   */\n  addUnless(conditional: boolean, title: string, callback: TaskCallback): this {\n    if (!conditional) {\n      this.add(title, callback)\n    }\n    return this\n  }\n\n  /**\n   * Get access to registered tasks\n   */\n  tasks() {\n    return this.#tasks.map(({ task }) => task)\n  }\n\n  /**\n   * Returns the renderer for rendering the messages\n   */\n  getRenderer() {\n    return this.#tasksRenderer.getRenderer()\n  }\n\n  /**\n   * Define a custom renderer. Logs to \"stdout\" and \"stderr\"\n   * by default\n   */\n  useRenderer(renderer: RendererContract): this {\n    this.#tasksRenderer.useRenderer(renderer)\n    return this\n  }\n\n  /**\n   * Define a custom colors implementation\n   */\n  useColors(color: Colors): this {\n    this.#tasksRenderer.useColors(color)\n    return this\n  }\n\n  /**\n   * Run tasks\n   */\n  async run() {\n    if (this.#state !== 'idle') {\n      return\n    }\n\n    this.#state = 'running'\n    this.#tasksRenderer.tasks(this.tasks()).render()\n    await this.#runTask(0)\n\n    if (this.#state === 'running') {\n      this.#state = 'succeeded'\n    }\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { RendererContract } from '../types.js'\n\n/**\n * Keeps log messages within memory. Useful for testing\n */\nexport class MemoryRenderer implements RendererContract {\n  #logs: { message: string; stream: 'stdout' | 'stderr' }[] = []\n\n  getLogs() {\n    return this.#logs\n  }\n\n  flushLogs(): void {\n    this.#logs = []\n  }\n\n  /**\n   * Log message\n   */\n  log(message: string) {\n    this.#logs.push({ message, stream: 'stdout' })\n  }\n\n  /**\n   * For memory renderer the logUpdate is similar to log\n   */\n  logUpdate(message: string) {\n    this.log(message)\n  }\n\n  /**\n   * Its a noop\n   */\n  logUpdatePersist() {}\n\n  /**\n   * Log message as error\n   */\n  logError(message: string) {\n    this.#logs.push({ message, stream: 'stderr' })\n  }\n}\n"],"mappings":"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","names":["stringWidth","colors","stringWidth","output","prettyHrtime","colors"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/build/src/helpers.js":{"lineLengths":[8,16,10,11,6,30,8,16,10,11,6,2,35],"data":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/build/index.js":{"lineLengths":[38,33,23,66,2,0,18,27,0,14,64,48,0,16,41,30,0,23,36,45,26,5,35,5,10,5,45,5,19,5,49,5,24,5,24,5,19,5,55,5,22,34,28,5,3,5,67,4,31,62,5,31,75,44,45,46,7,13,5,35,37,5,3,5,67,4,31,5,36,37,3,5,60,33,4,43,26,5,31,74,3,5,64,35,4,43,26,5,37,74,3,5,71,35,4,43,5,29,37,3,5,41,5,22,37,3,28,38,3,22,131,3,27,135,3,20,94,3,5,39,5,26,19,31,25,25,15,6,55,38,5,45,68,36,30,32,9,14,30,32,9,110,42,32,9,111,32,9,7,5,3,5,56,22,5,32,34,38,5,17,3,5,31,5,43,47,36,5,18,3,5,48,5,35,34,13,5,58,72,3,5,57,5,44,34,41,38,7,13,5,38,99,5,63,44,64,7,29,3,17,3,5,40,5,21,26,16,3,5,49,5,12,32,3,5,49,5,12,33,3,5,64,5,23,34,16,3,5,67,5,26,41,16,3,5,57,5,31,19,29,14,27,38,35,56,40,10,9,18,5,38,40,83,26,32,38,9,64,29,14,27,38,13,9,18,5,27,12,25,36,33,83,25,8,7,16,3,5,57,5,23,38,62,7,27,12,26,11,7,16,3,5,22,5,25,34,39,43,46,44,52,41,39,47,45,39,37,5,60,32,56,3,2,0,15,111,0,24,20,39,42,2,45,53,0,14,24,11,39,14,39,33,9,5,4,5,77,5,26,21,47,65,46,57,68,49,5,23,42,5,32,3,5,27,5,29,28,42,33,50,34,38,44,42,42,46,40,40,50,3,5,54,5,30,28,42,32,50,49,38,34,38,44,42,42,46,40,40,50,3,5,63,5,32,28,42,36,50,34,44,42,42,46,40,40,50,3,5,19,5,33,28,42,35,50,34,38,44,42,42,46,40,40,50,3,5,76,5,41,28,42,34,50,34,38,44,42,42,46,39,40,40,40,50,3,5,54,5,41,28,42,34,50,34,44,67,42,42,46,40,40,16,16,31,41,66,9,22,8,6,50,3,5,62,5,43,28,42,39,50,34,44,42,42,67,46,40,40,49,27,51,7,49,7,16,16,31,41,66,9,22,8,6,50,3,5,72,13,5,47,28,42,40,50,34,44,46,42,16,13,94,6,42,40,46,42,36,40,45,40,50,3,5,48,5,17,46,62,7,44,76,24,3,2,0,16,24,26,46,3,46,84,0,18,19,39,25,26,28,7,20,27,9,8,13,6,9,52,34,21,22,39,7,18,5,3,2,8,9,26,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/enquirer.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/base.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/colors.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/mocked_prompt.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/icons.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/prompt_options.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/prompts/src/errors.ts"],"sourcesContent":["/*\n * @poppinss/prompts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport enq from 'enquirer'\nimport { BasePrompt } from './base.js'\nimport { E_PROMPT_CANCELLED } from './errors.js'\n\n/**\n * Since the typings for `enquirer` package is badly broken, we\n * need to cast it to any to make it usable\n */\nconst enquirer = enq as any\n\n/**\n * Uses the `enquirer` package to prompt user for input. The `$prompt`\n * method is invoked by the extended `Prompt` class.\n */\nexport class Prompt extends BasePrompt {\n  protected async prompt(options: any): Promise<any> {\n    let cancelled = false\n    options = Object.assign(\n      {\n        onCancel() {\n          cancelled = true\n        },\n      },\n      options\n    )\n\n    try {\n      const output = await enquirer.prompt(options)\n      return output[options.name]\n    } catch (error) {\n      if (cancelled) {\n        throw new E_PROMPT_CANCELLED()\n      }\n\n      throw error\n    }\n  }\n}\n","/*\n * @poppinss/prompts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { AssertionError } from 'node:assert'\nimport { ObjectBuilder } from '@poppinss/utils'\n\nimport {\n  PromptChoice,\n  ListPromptOptions,\n  TextPromptOptions,\n  TogglePromptOptions,\n  ChoicePromptOptions,\n  BooleanPromptOptions,\n  MultiplePromptOptions,\n  AutoCompletePromptOptions,\n} from './types.js'\n\nimport { colors } from './colors.js'\nimport { MockedPrompt } from './mocked_prompt.js'\nimport { promptHiglight, promptPrefix, promptStyles } from './prompt_options.js'\n\n/**\n * Base prompt class exposes the public API for triggering prompts. The\n * implementations just need to implement a single prompt method.\n */\nexport abstract class BasePrompt {\n  traps: {\n    prompts: Map<string, { prompt: MockedPrompt; triggerError: AssertionError }>\n    verify: () => void\n  } = {\n    prompts: new Map(),\n    verify() {\n      this.prompts.forEach((entry) => {\n        throw entry.triggerError\n      })\n    },\n  }\n\n  /**\n   * Handle the prompt. The mocked prompts are given preference if one exists\n   */\n  #handlePrompt(options: any) {\n    let mockedPrompt: MockedPrompt | undefined\n\n    if (this.traps.prompts.has(options.name)) {\n      mockedPrompt = this.traps.prompts.get(options.name)!.prompt\n      this.traps.prompts.delete(options.name)\n    } else if (this.traps.prompts.has(options.message)) {\n      mockedPrompt = this.traps.prompts.get(options.message)!.prompt\n      this.traps.prompts.delete(options.message)\n    }\n\n    if (mockedPrompt) {\n      return mockedPrompt.handle(options)\n    }\n\n    return this.prompt(options)\n  }\n\n  protected abstract prompt(options: any): Promise<any>\n\n  /**\n   * Prompts for text input\n   */\n  async ask<Result extends any = string>(\n    title: string,\n    options?: TextPromptOptions<Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'input')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('hint', options.hint)\n    builder.add('initial', options.default)\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('validate', options.validate)\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Prompt to accept a list of comma separated values\n   */\n  async list<Result extends any = string[]>(\n    title: string,\n    options?: ListPromptOptions<Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'list')\n    builder.add('name', options.name || 'prompt')\n    builder.add('sep', options.seperator || ',')\n    builder.add('name', options.name)\n    builder.add('message', title)\n    builder.add('hint', options.hint)\n    builder.add('initial', options.default)\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('validate', options.validate)\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Prompts for text input but masks the output (for password)\n   */\n  async secure<Result extends any = string>(\n    title: string,\n    options?: TextPromptOptions<Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'password')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('initial', options.default)\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('validate', options.validate)\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Asks for `Y/n`\n   */\n  async confirm<Result extends any = boolean>(\n    title: string,\n    options?: BooleanPromptOptions<Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'confirm')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('hint', options.hint)\n    builder.add('initial', options.default)\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('validate', options.validate)\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Similar to [[this.confirm]] but with custom names for the `Y/n` options\n   */\n  async toggle<Result extends any = boolean>(\n    title: string,\n    choices: [string, string],\n    options?: TogglePromptOptions<Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'toggle')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('hint', options.hint)\n    builder.add('initial', options.default)\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('validate', options.validate)\n    builder.add('enabled', choices[0])\n    builder.add('disabled', choices[1])\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Prompt to select a value from the list of options\n   */\n  async choice<Choice extends string, Result extends any = Choice>(\n    title: string,\n    choices: readonly (Choice | PromptChoice<Choice>)[],\n    options?: ChoicePromptOptions<Choice, Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'select')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('initial', options.default)\n    builder.add('hint', options.hint || 'Press <ENTER> to select')\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('validate', options.validate)\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    builder.add(\n      'choices',\n      choices.map((choice) => {\n        if (typeof choice === 'string') {\n          return { name: choice, message: choice, value: choice }\n        }\n        return choice\n      })\n    )\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Prompt to select multiple values from the list of options\n   */\n  async multiple<Choice extends string, Result extends any = Choice[]>(\n    title: string,\n    choices: readonly (Choice | PromptChoice<Choice>)[],\n    options?: MultiplePromptOptions<Choice, Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'multiselect')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('initial', options.default)\n    builder.add('result', options.result)\n    builder.add('format', options.format)\n    builder.add('hint', options.hint || 'Press <SPACE> to select')\n    builder.add('validate', options.validate)\n    builder.add('prefix', promptPrefix)\n    builder.add('styles', promptStyles)\n\n    builder.add('indicator', (state: any, choice: any) => {\n      if (choice.enabled) {\n        return colors.cyan(state.symbols.radio.on)\n      }\n      return colors.dim(state.symbols.radio.off)\n    })\n\n    builder.add(\n      'choices',\n      choices.map((choice) => {\n        if (typeof choice === 'string') {\n          return { name: choice, message: choice, value: choice }\n        }\n        return choice\n      })\n    )\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Prompt to select one or multiple values from the list of searchable\n   * options.\n   */\n  async autocomplete<\n    Choice extends string,\n    Multiple extends boolean = false,\n    Result extends any = Multiple extends true ? Choice[] : Choice,\n  >(\n    title: string,\n    choices: readonly Choice[],\n    options?: AutoCompletePromptOptions<Choice, Multiple, Result>\n  ): Promise<Result> {\n    options = options || {}\n\n    const builder = new ObjectBuilder({})\n    builder.add('type', 'autocomplete')\n    builder.add('name', options.name || 'prompt')\n    builder.add('message', title)\n    builder.add('initial', options.default)\n    builder.add('multiple', options.multiple)\n    builder.add('result', options.result)\n    builder.add(\n      'hint',\n      options.hint || options.multiple ? 'Press <SPACE> to select' : 'Press <ENTER> to select'\n    )\n    builder.add('format', options.format)\n    builder.add('limit', options.limit)\n    builder.add('validate', options.validate)\n    builder.add('footer', options.footer)\n    builder.add('choices', choices)\n    builder.add('prefix', promptPrefix)\n    builder.add('highlight', promptHiglight)\n    builder.add('styles', promptStyles)\n\n    return this.#handlePrompt(builder.toObject())\n  }\n\n  /**\n   * Trap a prompt by its message or unique name\n   */\n  trap(message: string) {\n    /**\n     * Trigger error is raised when the prompt is not triggered but\n     * trapped\n     */\n    const triggerError = new AssertionError({\n      message: `Expected prompt \"${message}\" to get triggered`,\n    })\n    const mockedPrompt = new MockedPrompt()\n\n    this.traps.prompts.set(message, { prompt: mockedPrompt, triggerError })\n    return mockedPrompt\n  }\n}\n","/*\n * @poppinss/prompts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport useColors from '@poppinss/colors'\nimport { Colors } from '@poppinss/colors/types'\n\n/**\n * Colors and icons to use.\n */\nconst colors: Colors = useColors.ansi()\nexport { colors }\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { inspect } from 'node:util'\nimport { AssertionError } from 'node:assert'\nimport { PromptState } from './types.js'\n\nexport class MockedPrompt {\n  /**\n   * The final answer to reply with\n   */\n  #answer: any\n\n  /**\n   * The selected index for the select prompt\n   */\n  #choiceSelection?: number\n\n  /**\n   * Selected indexes for the multi-select prompt\n   */\n  #multiChoiceSelection?: number[]\n\n  /**\n   * Expected assertions\n   */\n  #assertions: {\n    value: string\n    expectsError: boolean // Does assertion expects error?\n    expectedErrorMessage?: string | RegExp\n    error: AssertionError\n  }[] = []\n\n  /**\n   * Set the answer without overriding the existing one\n   */\n  #setAnswer(answer: string | number | boolean | string[]) {\n    if (this.#answer === undefined) {\n      this.#answer = answer\n    }\n  }\n\n  /**\n   * Choose the default option when no explicit selection was made.\n   *\n   * - Choose the initial value\n   * - Or, select the first option, if no initial value exists\n   */\n  #setSelectDefaults(options: any) {\n    const defaultAnswer = options.initial !== undefined ? options.initial : 0\n    if (typeof defaultAnswer === 'number') {\n      if (this.#choiceSelection === undefined) {\n        this.#choiceSelection = defaultAnswer\n      }\n\n      return\n    }\n\n    if (defaultAnswer !== undefined) {\n      this.#setAnswer(defaultAnswer)\n    }\n  }\n\n  /**\n   * Choose the default option when no explicit selection was made.\n   *\n   * - Choose the initial value\n   */\n  #setMultiSelectDefaults(options: any) {\n    this.#setAnswer(options.initial)\n  }\n\n  /**\n   * Select the default answer for the toggle prompt when no\n   * explicit selection was made.\n   *\n   * - Choose the initial value (if exists)\n   * - Set answer to false\n   */\n  #setToggleDefaults(options: any) {\n    this.#setAnswer(options.initial !== undefined ? options.initial : false)\n  }\n\n  /**\n   * Select the default answer for the confirmation prompt, when\n   * no explicit selection was made\n   *\n   * - Choose the initial value (if exists)\n   * - Set answer to false\n   */\n  #setConfirmationDefaults(options: any) {\n    this.#setAnswer(options.initial !== undefined ? options.initial : false)\n  }\n\n  /**\n   * Select the default answer for the input and password prompts, when\n   * no explicit selection was made\n   *\n   * - Choose the initial value (if exists)\n   */\n  #setTextDefaults(options: any) {\n    this.#setAnswer(options.initial)\n  }\n\n  /**\n   * Conditionals to find the prompt type\n   */\n  #isToggle(options: any) {\n    return options.type === 'toggle'\n  }\n  #isConfirmation(options: any) {\n    return options.type === 'confirm'\n  }\n  #isSelect(options: any) {\n    return (\n      (options.type === 'select' && options.choices) ||\n      (options.type === 'autocomplete' && !options.multiple && options.choices)\n    )\n  }\n  #isMultiSelect(options: any) {\n    return (\n      (options.type === 'multiselect' && options.choices) ||\n      (options.type === 'autocomplete' && options.multiple && options.choices)\n    )\n  }\n  #isText(options: any) {\n    return options.type === 'input' || options.type === 'password' || options.type === 'list'\n  }\n\n  /**\n   * Run assertions on the final answer\n   */\n  async #assert(options: any) {\n    /**\n     * State for the validation method\n     */\n    const state: PromptState<any> = {\n      message: options.message,\n      type: options.type,\n      name: options.name,\n      value: '',\n    }\n\n    /**\n     * Expected there should be assertions, but the prompt has not\n     * defined the validate function\n     */\n    if (!options.validate && this.#assertions.length) {\n      throw this.#assertions[0].error\n    }\n\n    /**\n     * Go through all the expected assertions\n     */\n    for (let assertion of this.#assertions) {\n      const result = await options.validate(assertion.value, state)\n\n      /**\n       * Expected the value to pass the validation, but the validation\n       * result returns a non true value\n       */\n      if (!assertion.expectsError) {\n        if (result !== true) {\n          throw assertion.error\n        }\n      } else {\n        /**\n         * Expected the value to fail the assertion, but the\n         * validation method returned true\n         */\n        if (result === true) {\n          throw assertion.error\n        }\n\n        /**\n         * Validation failed but the error message is different\n         */\n        if (\n          typeof assertion.expectedErrorMessage === 'string' &&\n          result !== assertion.expectedErrorMessage\n        ) {\n          assertion.error.actual = result\n          throw assertion.error\n        }\n\n        if (\n          assertion.expectedErrorMessage instanceof RegExp &&\n          !assertion.expectedErrorMessage.test(result)\n        ) {\n          throw assertion.error\n        }\n      }\n    }\n  }\n\n  /**\n   * Format user input. Inside CLI, the method is called\n   * as the user types\n   */\n  #formatInput(input: string, options: any) {\n    if (options.type === 'list') {\n      return input.split(options.sep)\n    }\n\n    return input\n  }\n\n  /**\n   * Transform the final result\n   */\n  async #transformResult(result: any, options: any) {\n    if (typeof options.result === 'function') {\n      return options.result(result)\n    }\n\n    return result\n  }\n\n  /**\n   * Convert the user selection choice to answer\n   */\n  #convertChoiceToAnswer(options: any) {\n    if (this.#answer !== undefined) {\n      return\n    }\n\n    const answer = options.choices[this.#choiceSelection!]\n    this.#setAnswer(typeof answer === 'string' ? answer : answer?.name)\n  }\n\n  /**\n   * Convert the user multiple selection choice to answer\n   */\n  #convertMultipleChoicesToAnswer(options: any) {\n    if (this.#answer !== undefined) {\n      if (!Array.isArray(this.#answer)) {\n        this.#answer = [this.#answer]\n      }\n      return\n    }\n\n    /**\n     * Initiate multi choice selection array\n     */\n    if (!this.#multiChoiceSelection) {\n      this.#multiChoiceSelection =\n        this.#choiceSelection !== undefined ? [this.#choiceSelection] : []\n    }\n\n    const answers = this.#multiChoiceSelection.map((index) => {\n      const answer = options.choices[index]\n      return typeof answer === 'string' ? answer : answer?.name\n    })\n\n    this.#setAnswer(answers)\n  }\n\n  constructor() {}\n\n  /**\n   * Reply to prompt with a given answer\n   */\n  replyWith(answer: string | string[] | boolean | number): this {\n    this.#answer = answer\n    return this\n  }\n\n  /**\n   * Accept the confirmation or the toggle prompt\n   */\n  accept(): this {\n    return this.replyWith(true)\n  }\n\n  /**\n   * Reject the confirmation or the toggle prompt\n   */\n  reject(): this {\n    return this.replyWith(false)\n  }\n\n  /**\n   * Choose a select option by index. The index starts with zero\n   */\n  chooseOption(index: number): this {\n    this.#choiceSelection = index\n    return this\n  }\n\n  /**\n   * Choose multiple options by indexes. The index starts with zero\n   */\n  chooseOptions(indexes: number[]): this {\n    this.#multiChoiceSelection = indexes\n    return this\n  }\n\n  /**\n   * Expect the given value to fail the prompt validation\n   */\n  assertFails(value: string, message?: string | RegExp): this {\n    if (!message) {\n      this.#assertions.push({\n        value,\n        expectsError: true,\n        expectedErrorMessage: message,\n        error: new AssertionError({\n          message: 'Expected prompt validation to fail',\n          stackStartFn: this.assertFails,\n        }),\n      })\n      return this\n    }\n\n    if (typeof message === 'string') {\n      const error = new AssertionError({\n        message: `Expected prompt validation message to equal ${inspect(message)}`,\n        expected: message,\n        operator: 'strictEqual',\n        stackStartFn: this.assertFails,\n      })\n      Object.defineProperty(error, 'showDiff', { value: true })\n\n      this.#assertions.push({\n        value,\n        expectsError: true,\n        expectedErrorMessage: message,\n        error,\n      })\n\n      return this\n    }\n\n    this.#assertions.push({\n      value,\n      expectsError: true,\n      expectedErrorMessage: message,\n      error: new AssertionError({\n        message: `Expected prompt validation message to match ${inspect(message)}`,\n        expected: message,\n      }),\n    })\n\n    return this\n  }\n\n  /**\n   * Expect the given value to pass the prompt validation\n   */\n  assertPasses(value: string): this {\n    const error = new AssertionError({\n      message: 'Expected assertion to pass, instead it failed',\n    })\n    this.#assertions.push({\n      value,\n      expectsError: false,\n      error: error,\n    })\n\n    return this\n  }\n\n  /**\n   * Handle the prompt\n   */\n  async handle(options: any): Promise<any> {\n    if (this.#isSelect(options)) {\n      this.#setSelectDefaults(options)\n      this.#convertChoiceToAnswer(options)\n    } else if (this.#isMultiSelect(options)) {\n      this.#setMultiSelectDefaults(options)\n      this.#convertMultipleChoicesToAnswer(options)\n    } else if (this.#isToggle(options)) {\n      this.#setToggleDefaults(options)\n    } else if (this.#isConfirmation(options)) {\n      this.#setConfirmationDefaults(options)\n    } else if (this.#isText(options)) {\n      this.#setTextDefaults(options)\n    }\n\n    this.#answer = this.#formatInput(this.#answer, options)\n    await this.#assert(options)\n    return this.#transformResult(this.#answer, options)\n  }\n}\n","/*\n * @poppinss/prompts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const icons =\n  process.platform === 'win32' && !process.env.WT_SESSION ? { pointer: '>' } : { pointer: '❯' }\n","/*\n * @poppinss/prompts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { colors } from './colors.js'\nimport { icons } from './icons.js'\n\n/**\n * Styles used by prompts\n */\nexport const promptStyles = {\n  danger: (value: string) => colors.red(value),\n  submitted: (value: string) => colors.cyan(value),\n}\n\n/**\n * Prompt prefix\n */\nexport const promptPrefix = colors.dim(icons.pointer)\n\n/**\n * Highlight style used by prompt\n */\nexport const promptHiglight = (value: string) => colors.yellow(value)\n","/*\n * @poppinss/prompts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createError } from '@poppinss/utils'\n\nexport const E_PROMPT_CANCELLED = createError('Prompt cancelled', 'E_PROMPT_CANCELLED', 500)\n"],"mappings":"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","names":["AssertionError","AssertionError"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/index.js":{"lineLengths":[8,21,29,8,9,22,29,8,28,18,29,8,12,13,29,8,14,29,0,11,59,69,0,16,28,28,25,9,11,39,24,48,3,12,25,3,13,25,3,48,25,3,20,25,3,14,25,3,5,31,5,13,23,3,5,50,20,5,22,51,3,2,0,17,41,59,1,0,24,50,41,38,147,46,14,24,7,7,3,31,1,0,32,44,51,15,10,4,43,37,52,49,28,27,25,22,9,13,5,47,88,25,23,20,7,3,1,0,17,34,44,43,1,0,23,59,45,63,0,21,33,49,56,0,22,37,85,1,0,21,35,29,1,62,44,37,28,48,22,58,73,8,6,11,3,50,21,20,31,12,20,27,12,24,41,12,24,37,12,15,47,3,1,45,95,91,19,7,35,19,46,16,5,16,3,68,33,79,3,44,1,0,24,36,50,33,32,33,16,3,53,16,3,15,1,0,23,63,43,43,109,126,14,11,81,72,4,1,47,26,24,96,53,25,15,19,5,100,20,1,0,25,28,29,21,20,5,59,43,3,5,66,5,23,30,19,5,52,89,3,5,68,5,38,54,72,3,5,49,5,28,51,48,18,5,26,18,5,37,18,5,34,18,5,26,3,2,0,24,27,14,9,41,31,58,3,19,27,18,5,54,18,5,5,29,16,3,5,31,5,15,28,16,3,5,27,5,12,36,3,5,43,5,12,28,3,5,42,5,14,23,3,2,0,20,37,46,45,74,58,71,43,68,37,114,3,25,30,26,4,1,0,11,26,39,1,27,29,1,33,43,1,8,12,28,17,16,19,9,9,10,14,23,10,14,12,13,14,16,15,12,14,12,19,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/index.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/secret.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/compose.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/import_default.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/define_static_property.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/flatten.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/fs_import_all.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/fs_read_all.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/natural_sort.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/is_script_file.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/message_builder.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/object_builder.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/safe_equal.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fileURLToPath } from 'node:url'\nimport { join as pathJoin, dirname as pathDirname } from 'node:path'\n\nexport { Secret } from './src/secret.js'\nexport { base64 } from './src/base64.js'\nexport { compose } from './src/compose.js'\nexport { importDefault } from './src/import_default.js'\nexport { defineStaticProperty } from './src/define_static_property.js'\nexport { Exception, createError } from './src/exception.js'\nexport { flatten } from './src/flatten.js'\nexport { fsImportAll } from './src/fs_import_all.js'\nexport { fsReadAll } from './src/fs_read_all.js'\nexport { isScriptFile } from './src/is_script_file.js'\nexport { MessageBuilder } from './src/message_builder.js'\nexport { naturalSort } from './src/natural_sort.js'\nexport { ObjectBuilder } from './src/object_builder.js'\nexport { safeEqual } from './src/safe_equal.js'\nexport { slash } from './src/slash.js'\nexport { RuntimeException } from './src/exceptions/runtime_exception.js'\nexport { InvalidArgumentsException } from './src/exceptions/invalid_arguments_exception.js'\n\n/**\n * Get dirname for a given file path URL\n */\nexport function getDirname(url: string | URL) {\n  return pathDirname(getFilename(url))\n}\n\n/**\n * Get filename for a given file path URL\n */\nexport function getFilename(url: string | URL) {\n  return fileURLToPath(url)\n}\n\n/**\n * Join paths to a URL instance or a URL string. The return\n * value will be a file path without the `file:///` protocol.\n */\nexport function joinToURL(url: string | URL, ...str: string[]) {\n  return pathJoin(getDirname(url), ...str)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst REDACTED = '[redacted]'\n\n/**\n * Define a Secret value that hides itself from the logs or the console\n * statements.\n *\n * The idea is to prevent accidental leaking of sensitive information.\n * Idea borrowed from.\n * https://transcend.io/blog/keep-sensitive-values-out-of-your-logs-with-types\n */\nexport class Secret<T> {\n  /** The secret value */\n  #value: T\n  #keyword: string\n\n  constructor(value: T, redactedKeyword?: string) {\n    this.#value = value\n    this.#keyword = redactedKeyword || REDACTED\n  }\n\n  toJSON(): string {\n    return this.#keyword\n  }\n  valueOf(): string {\n    return this.#keyword\n  }\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.#keyword\n  }\n  toLocaleString(): string {\n    return this.#keyword\n  }\n  toString(): string {\n    return this.#keyword\n  }\n\n  /**\n   * Returns the original value\n   */\n  release(): T {\n    return this.#value\n  }\n\n  /**\n   * Transform the original value and create a new\n   * secret from it.\n   */\n  map<R>(transformFunc: (value: T) => R): Secret<R> {\n    return new Secret(transformFunc(this.#value))\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Constructor } from './types.js'\n\ninterface UnaryFunction<T, R> {\n  (source: T): R\n}\n\n/**\n * Compose a class by applying mixins to it.\n * The code is inspired by https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/, its\n * just that I have added the support for static types too.\n */\nexport function compose<T extends Constructor, A>(superclass: T, mixin: UnaryFunction<T, A>): A\nexport function compose<T extends Constructor, A, B>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>\n): B\nexport function compose<T extends Constructor, A, B, C>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>\n): C\nexport function compose<T extends Constructor, A, B, C, D>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>\n): D\nexport function compose<T extends Constructor, A, B, C, D, E>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinE: UnaryFunction<D, E>\n): E\nexport function compose<T extends Constructor, A, B, C, D, E, F>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>\n): F\nexport function compose<T extends Constructor, A, B, C, D, E, F, G>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>,\n  mixinG: UnaryFunction<F, G>\n): G\nexport function compose<T extends Constructor, A, B, C, D, E, F, G, H>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>,\n  mixinG: UnaryFunction<F, G>,\n  mixinH: UnaryFunction<G, H>\n): H\nexport function compose<T extends Constructor, A, B, C, D, E, F, G, H, I>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>,\n  mixinG: UnaryFunction<F, G>,\n  mixinH: UnaryFunction<G, H>,\n  mixinI: UnaryFunction<H, I>\n): I\nexport function compose<T extends Constructor, Mixins extends UnaryFunction<T, T>>(\n  superclass: T,\n  ...mixins: Mixins[]\n) {\n  return mixins.reduce((c, mixin) => mixin(c), superclass)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from './exceptions/runtime_exception.js'\n\n/**\n * Dynamically import a module and ensure it has a default export\n */\nexport async function importDefault<T extends object>(\n  importFn: () => Promise<T>,\n  filePath?: string\n): Promise<T extends { default: infer A } ? A : never> {\n  const moduleExports = await importFn()\n\n  /**\n   * Make sure a default export exists\n   */\n  if (!('default' in moduleExports)) {\n    const errorMessage = filePath\n      ? `Missing \"export default\" in module \"${filePath}\"`\n      : `Missing \"export default\" from lazy import \"${importFn}\"`\n\n    throw new RuntimeException(errorMessage, {\n      cause: {\n        source: importFn,\n      },\n    })\n  }\n\n  return moduleExports.default as Promise<T extends { default: infer A } ? A : never>\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport lodash from '@poppinss/utils/lodash'\n\ntype Constructor = new (...args: any[]) => any\ntype AbstractConstructor = abstract new (...args: any[]) => any\n\n/**\n * Define static properties on a class with inheritance in play.\n */\nexport function defineStaticProperty<\n  T extends Constructor | AbstractConstructor,\n  Prop extends keyof T,\n>(\n  self: T,\n  propertyName: Prop,\n  {\n    initialValue,\n    strategy,\n  }: {\n    initialValue: T[Prop]\n    strategy: 'inherit' | 'define' | ((value: T[Prop]) => T[Prop])\n  }\n) {\n  if (!self.hasOwnProperty(propertyName)) {\n    const value = self[propertyName]\n\n    /**\n     * Define the property as it is when the strategy is set\n     * to \"define\". Or the value on the prototype chain\n     * is set to undefined.\n     */\n    if (strategy === 'define' || value === undefined) {\n      Object.defineProperty(self, propertyName, {\n        value: initialValue,\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      })\n      return\n    }\n\n    Object.defineProperty(self, propertyName, {\n      value: typeof strategy === 'function' ? strategy(value) : lodash.cloneDeep(value),\n      configurable: true,\n      enumerable: true,\n      writable: true,\n    })\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { flattie } from 'flattie'\n\n/**\n * Recursively flatten an object/array.\n */\nexport function flatten<X = Record<string, any>, Y = unknown>(\n  input: Y,\n  glue?: string,\n  keepNullish?: boolean\n): X {\n  return flattie(input, glue, keepNullish)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fileURLToPath } from 'node:url'\nimport lodash from '@poppinss/utils/lodash'\nimport { extname, relative, sep } from 'node:path'\n\nimport { fsReadAll } from './fs_read_all.js'\nimport { ImportAllFilesOptions } from './types.js'\nimport { isScriptFile } from './is_script_file.js'\n\n/**\n * Import the file and update the values collection with the default\n * export.\n */\nasync function importFile(\n  basePath: string,\n  fileURL: string,\n  values: any,\n  options: ImportAllFilesOptions\n) {\n  /**\n   * Converting URL to file path\n   */\n  const filePath = fileURLToPath(fileURL)\n\n  /**\n   * Grab file extension\n   */\n  const fileExtension = extname(filePath)\n\n  const collectionKey = relative(basePath, filePath) // Get file relative path\n    .replace(new RegExp(`${fileExtension}$`), '') // Get rid of the file extension\n    .split(sep) // Convert nested paths to an array of keys\n\n  /**\n   * Import module\n   */\n  const exportedValue =\n    fileExtension === '.json'\n      ? await import(fileURL, { with: { type: 'json' } })\n      : await import(fileURL)\n\n  lodash.set(\n    values,\n    options.transformKeys ? options.transformKeys(collectionKey) : collectionKey,\n    exportedValue.default ? exportedValue.default : { ...exportedValue }\n  )\n}\n\n/**\n * Returns an array of file paths from the given location. You can\n * optionally filter and sort files by passing relevant options\n *\n * ```ts\n * await fsReadAll(new URL('./', import.meta.url))\n *\n * await fsReadAll(new URL('./', import.meta.url), {\n *   filter: (filePath) => filePath.endsWith('.js')\n * })\n\n * await fsReadAll(new URL('./', import.meta.url), {\n *   absolute: true,\n *   unixPaths: true\n * })\n* ```\n */\nexport async function fsImportAll(\n  location: string | URL,\n  options?: ImportAllFilesOptions\n): Promise<any> {\n  options = options || {}\n  const collection: any = {}\n  const normalizedLocation = typeof location === 'string' ? location : fileURLToPath(location)\n  const files = await fsReadAll(normalizedLocation, {\n    filter: isScriptFile,\n    ...options,\n    pathType: 'url',\n  })\n\n  /**\n   * Parallelly import all the files and mutate the values collection\n   */\n  await Promise.all(files.map((file) => importFile(normalizedLocation, file, collection, options!)))\n\n  return collection\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { join } from 'node:path'\nimport { readdir, stat } from 'node:fs/promises'\nimport { fileURLToPath, pathToFileURL } from 'node:url'\n\nimport { slash } from './slash.js'\nimport { naturalSort } from './natural_sort.js'\nimport { ReadAllFilesOptions } from './types.js'\n\n/**\n * Filter to remove dot files\n */\nfunction filterDotFiles(fileName: string) {\n  return fileName[0] !== '.'\n}\n\n/**\n * Read all files from the directory recursively\n */\nasync function readFiles(\n  root: string,\n  files: string[],\n  options: ReadAllFilesOptions,\n  relativePath: string\n): Promise<void> {\n  const location = join(root, relativePath)\n  const stats = await stat(location)\n\n  if (stats.isDirectory()) {\n    let locationFiles = await readdir(location)\n\n    await Promise.all(\n      locationFiles.filter(filterDotFiles).map((file) => {\n        return readFiles(root, files, options, join(relativePath, file))\n      })\n    )\n\n    return\n  }\n\n  const pathType = options.pathType || 'relative'\n  switch (pathType) {\n    case 'relative':\n      files.push(relativePath)\n      break\n    case 'absolute':\n      files.push(location)\n      break\n    case 'unixRelative':\n      files.push(slash(relativePath))\n      break\n    case 'unixAbsolute':\n      files.push(slash(location))\n      break\n    case 'url':\n      files.push(pathToFileURL(location).href)\n  }\n}\n\n/**\n * Returns an array of file paths from the given location. You can\n * optionally filter and sort files by passing relevant options\n *\n * ```ts\n * await fsReadAll(new URL('./', import.meta.url))\n *\n * await fsReadAll(new URL('./', import.meta.url), {\n *   filter: (filePath) => filePath.endsWith('.js')\n * })\n\n * await fsReadAll(new URL('./', import.meta.url), {\n *   absolute: true,\n *   unixPaths: true\n * })\n* ```\n */\nexport async function fsReadAll(\n  location: string | URL,\n  options?: ReadAllFilesOptions\n): Promise<string[]> {\n  const normalizedLocation = typeof location === 'string' ? location : fileURLToPath(location)\n  const normalizedOptions = Object.assign({ absolute: false, sort: naturalSort }, options)\n  const files: string[] = []\n\n  /**\n   * Check to see if the root directory exists and ignore\n   * error when \"ignoreMissingRoot\" is set to true\n   */\n  try {\n    await stat(normalizedLocation)\n  } catch (error) {\n    if (normalizedOptions.ignoreMissingRoot) {\n      return []\n    }\n\n    throw error\n  }\n\n  await readFiles(normalizedLocation, files, normalizedOptions, '')\n\n  if (normalizedOptions.filter) {\n    return files.filter(normalizedOptions.filter).sort(normalizedOptions.sort)\n  }\n\n  return files.sort(normalizedOptions.sort)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Perform natural sorting with \"Array.sort()\" method\n */\nexport function naturalSort(current: string, next: string) {\n  return current.localeCompare(next, undefined, { numeric: true, sensitivity: 'base' })\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extname } from 'node:path'\nconst JS_MODULES = ['.js', '.json', '.cjs', '.mjs']\n\n/**\n * Returns `true` when file ends with `.js`, `.json` or\n * `.ts` but not `.d.ts`.\n */\nexport function isScriptFile(filePath: string) {\n  const ext = extname(filePath)\n\n  if (JS_MODULES.includes(ext)) {\n    return true\n  }\n\n  if (ext === '.ts' && !filePath.endsWith('.d.ts')) {\n    return true\n  }\n\n  return false\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport json from './json/main.js'\nimport milliseconds from './string/milliseconds.js'\n\n/**\n * Message builder exposes an API to \"JSON.stringify\" values by\n * encoding purpose and expiry date inside them.\n *\n * The return value must be further encrypted to prevent tempering.\n */\nexport class MessageBuilder {\n  #getExpiryDate(expiresIn?: string | number): undefined | Date {\n    if (!expiresIn) {\n      return undefined\n    }\n\n    const expiryMs = milliseconds.parse(expiresIn)\n    return new Date(Date.now() + expiryMs)\n  }\n\n  /**\n   * Returns a boolean telling, if message has been expired or not\n   */\n  #isExpired(message: any) {\n    if (!message.expiryDate) {\n      return false\n    }\n\n    const expiryDate = new Date(message.expiryDate)\n    return Number.isNaN(expiryDate.getTime()) || expiryDate < new Date()\n  }\n\n  /**\n   * Builds a message by encoding expiry date and purpose inside it.\n   */\n  build(message: any, expiresIn?: string | number, purpose?: string): string {\n    const expiryDate = this.#getExpiryDate(expiresIn)\n    return json.safeStringify({ message, purpose, expiryDate })!\n  }\n\n  /**\n   * Verifies the message for expiry and purpose.\n   */\n  verify<T extends any>(message: any, purpose?: string): null | T {\n    const parsed = json.safeParse(message)\n\n    /**\n     * After JSON.parse we do not receive a valid object\n     */\n    if (typeof parsed !== 'object' || !parsed) {\n      return null\n    }\n\n    /**\n     * Missing \".message\" property\n     */\n    if (!parsed.message) {\n      return null\n    }\n\n    /**\n     * Ensure purposes are same.\n     */\n    if (parsed.purpose !== purpose) {\n      return null\n    }\n\n    /**\n     * Ensure isn't expired\n     */\n    if (this.#isExpired(parsed)) {\n      return null\n    }\n\n    return parsed.message\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { OmitProperties } from './types.js'\n\n/**\n * A simple class to build an object incrementally. It is helpful when you\n * want to add properties to the object conditionally.\n *\n * Instead of writing\n * ```\n * const obj = {\n *   ...(user.id ? { id: user.id } : {}),\n *   ...(user.firstName && user.lastName ? { name: `${user.firstName} ${user.lastName}` } : {}),\n * }\n * ```\n *\n * You can write\n *\n * const obj = new ObjectBuilder()\n *   .add('id', user.id)\n *   .add(\n *     'fullName',\n *     user.firstName && user.lastName ? `${user.firstName} ${user.lastName}` : undefined\n *   )\n *   .toObject()\n */\nexport class ObjectBuilder<\n  ReturnType extends Record<string, any>,\n  IgnoreNull extends boolean = false,\n> {\n  #ignoreNull: boolean\n  values: ReturnType\n\n  constructor(initialValue: ReturnType, ignoreNull?: IgnoreNull) {\n    this.values = initialValue\n    this.#ignoreNull = ignoreNull === true ? true : false\n  }\n\n  /**\n   * Add a key-value pair to the object\n   *\n   * - Undefined values are ignored\n   * - Null values are ignored, when `ignoreNull` is set to true\n   */\n  add<Prop extends string>(key: Prop, value: undefined): this\n  add<Prop extends string, Value>(\n    key: Prop,\n    value: Value\n  ): ObjectBuilder<ReturnType & { [P in Prop]: Value }, IgnoreNull>\n  add<Prop extends string, Value>(key: Prop, value: Value): this {\n    if (value === undefined) {\n      return this\n    }\n\n    if (this.#ignoreNull === true && value === null) {\n      return this\n    }\n\n    ;(this.values as any)[key] = value\n    return this\n  }\n\n  /**\n   * Remove key from the object\n   */\n  remove<K extends keyof ReturnType>(key: K): this {\n    delete this.values[key]\n    return this\n  }\n\n  /**\n   * Find if a value exists\n   */\n  has<K extends keyof ReturnType>(key: K): boolean {\n    return this.get(key) !== undefined\n  }\n\n  /**\n   * Get the existing value for a given key\n   */\n  get<K extends keyof ReturnType>(key: K): ReturnType[K] {\n    return this.values[key]\n  }\n\n  /**\n   * Get the underlying constructed object\n   */\n  toObject(): IgnoreNull extends true\n    ? { [K in keyof OmitProperties<ReturnType, null>]: ReturnType[K] }\n    : { [K in keyof ReturnType]: ReturnType[K] } {\n    return this.values\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Buffer } from 'node:buffer'\nimport { timingSafeEqual } from 'node:crypto'\n\ntype BufferSafeValue =\n  | ArrayBuffer\n  | SharedArrayBuffer\n  | number[]\n  | string\n  | { valueOf(): string | object }\n  | { [Symbol.toPrimitive](hint: 'string'): string }\n\n/**\n * Compare two values to see if they are equal. The comparison is done in\n * a way to avoid timing-attacks.\n */\nexport function safeEqual<T extends BufferSafeValue, U extends BufferSafeValue>(\n  trustedValue: T,\n  userInput: U\n): boolean {\n  if (typeof trustedValue === 'string' && typeof userInput === 'string') {\n    /**\n     * The length of the comparison value.\n     */\n    const trustedLength = Buffer.byteLength(trustedValue)\n\n    /**\n     * Expected value\n     */\n    const trustedValueBuffer = Buffer.alloc(trustedLength, 0, 'utf-8')\n    trustedValueBuffer.write(trustedValue)\n\n    /**\n     * Actual value (taken from user input)\n     */\n    const userValueBuffer = Buffer.alloc(trustedLength, 0, 'utf-8')\n    userValueBuffer.write(userInput)\n\n    /**\n     * Ensure values are same and also have same length\n     */\n    return (\n      timingSafeEqual(trustedValueBuffer, userValueBuffer) &&\n      trustedLength === Buffer.byteLength(userInput)\n    )\n  }\n\n  return timingSafeEqual(\n    Buffer.from(trustedValue as ArrayBuffer | SharedArrayBuffer),\n    Buffer.from(userInput as ArrayBuffer | SharedArrayBuffer)\n  )\n}\n"],"mappings":"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","names":["fileURLToPath","fileURLToPath","lodash","extname","default","fileURLToPath","extname","lodash","fileURLToPath"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/src/string/main.js":{"lineLengths":[8,14,33,33,8,25,2,32],"data":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/macroable/build/index.js":{"lineLengths":[11,23,5,4,75,4,10,32,8,5,29,33,3,5,4,78,4,10,44,19,7,8,4,69,4,10,27,4,44,19,18,8,5,55,49,13,45,24,45,32,30,18,27,13,9,21,8,25,23,7,3,2,8,22,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/macroable/index.ts"],"sourcesContent":["/*\n * @poppinss/macroable\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Adds capabilities for extending the class from outside-in, in the form\n * of macros and getters.\n */\nexport default abstract class Macroable {\n  /**\n   *\n   * Macros are standard properties that gets added to the class prototype.\n   *\n   * ```ts\n   * MyClass.macro('foo', 'bar')\n   * ```\n   */\n  static macro<T extends { new (...args: any[]): any }, K extends keyof InstanceType<T>>(\n    this: T,\n    name: K,\n    value: InstanceType<T>[K]\n  ): void {\n    this.prototype[name] = value\n  }\n\n  /**\n   *\n   * Getters are added to the class prototype using the Object.defineProperty.\n   *\n   * ```ts\n   * MyClass.getter('foo', function foo () {\n   *   return 'bar'\n   * })\n   * ```\n   *\n   * You can add a singleton getter by enabling the `singleton` flag.\n   *\n   * ```ts\n   * const singleton = true\n   *\n   * MyClass.getter('foo', function foo () {\n   *   return 'bar'\n   * }, singleton)\n   * ```\n   */\n  static getter<T extends { new (...args: any[]): any }, K extends keyof InstanceType<T>>(\n    this: T,\n    name: K,\n    accumulator: () => InstanceType<T>[K],\n    singleton: boolean = false\n  ): void {\n    Object.defineProperty(this.prototype, name, {\n      get() {\n        const value = accumulator.call(this)\n\n        if (singleton) {\n          Object.defineProperty(this, name, {\n            configurable: false,\n            enumerable: false,\n            value: value,\n            writable: false,\n          })\n        }\n\n        return value\n      },\n      configurable: true,\n      enumerable: false,\n    })\n  }\n}\n"],"mappings":";AAaA,IAA8B,YAA9B,MAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAStC,OAAO,MAEL,MACA,OACM;AACN,SAAK,UAAU,IAAI,IAAI;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,OAAO,OAEL,MACA,aACA,YAAqB,OACf;AACN,WAAO,eAAe,KAAK,WAAW,MAAM;AAAA,MAC1C,MAAM;AACJ,cAAM,QAAQ,YAAY,KAAK,IAAI;AAEnC,YAAI,WAAW;AACb,iBAAO,eAAe,MAAM,MAAM;AAAA,YAChC,cAAc;AAAA,YACd,YAAY;AAAA,YACZ;AAAA,YACA,UAAU;AAAA,UACZ,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA,MACA,cAAc;AAAA,MACd,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/build/chunk-H6UKLEIO.js":{"lineLengths":[38,33,23,66,2,0,16,41,44,45,0,15,37,45,0,16,23,11,19,49,83,44,3,5,41,5,29,9,57,44,21,36,20,7,49,5,3,5,59,29,5,16,42,42,24,32,77,77,5,115,32,65,5,19,75,21,31,49,9,5,63,59,21,27,45,9,5,19,64,21,26,44,9,5,46,19,20,38,7,32,63,21,29,47,9,5,20,3,2,0,8,11,16,11,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/loader.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/env/src/debug.ts"],"sourcesContent":["/*\n * @adonisjs/env\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fileURLToPath } from 'node:url'\nimport { readFile } from 'node:fs/promises'\nimport { isAbsolute, join } from 'node:path'\n\nimport debug from './debug.js'\n\n/**\n * Read the contents of one or more dot-env files. Following is how the files\n * are read.\n *\n * - Load file from the \"ENV_PATH\" environment file.\n *    (Raise error if file is missing)\n *\n * - If \"ENV_PATH\" is not defined, then find \".env\" file in the app root.\n *    (Ignore if file is missing)\n *\n * - Find \".env.[NODE_ENV]\" file in the app root.\n *    (Ignore if file is missing)\n *\n * ```ts\n * const loader = new EnvLoader(new URL('./', import.meta.url))\n *\n * const { envContents, currentEnvContents } = await loader.load()\n *\n * // envContents: Contents of .env or file specified via ENV_PATH\n * // currentEnvContents: Contents of .env.[NODE_ENV] file\n * ```\n */\nexport class EnvLoader {\n  #appRoot: string\n  #loadExampleFile: boolean\n\n  constructor(appRoot: string | URL, loadExampleFile: boolean = false) {\n    this.#appRoot = typeof appRoot === 'string' ? appRoot : fileURLToPath(appRoot)\n    this.#loadExampleFile = loadExampleFile\n  }\n\n  /**\n   * Optionally read a file from the disk\n   */\n  async #loadFile(filePath: string | URL): Promise<{ fileExists: boolean; contents: string }> {\n    try {\n      const contents = await readFile(filePath, 'utf-8')\n      return { contents, fileExists: true }\n    } catch (error) {\n      /* c8 ignore next 3 */\n      if (error.code !== 'ENOENT') {\n        throw error\n      }\n\n      return { contents: '', fileExists: false }\n    }\n  }\n\n  /**\n   * Load contents of the main dot-env file and the current\n   * environment dot-env file\n   */\n  async load(): Promise<{ contents: string; path: string; fileExists: boolean }[]> {\n    const ENV_PATH = process.env.ENV_PATH\n    const NODE_ENV = process.env.NODE_ENV\n    const envFiles: { path: string; contents: string; fileExists: boolean }[] = []\n\n    if (debug.enabled) {\n      debug('ENV_PATH variable is %s', ENV_PATH ? 'set' : 'not set')\n      debug('NODE_ENV variable is %s', NODE_ENV ? 'set' : 'not set')\n    }\n\n    /**\n     * Base path to load .env files from\n     */\n    const baseEnvPath = ENV_PATH\n      ? isAbsolute(ENV_PATH)\n        ? ENV_PATH\n        : join(this.#appRoot, ENV_PATH)\n      : this.#appRoot\n\n    if (debug.enabled) {\n      debug('dot-env files base path \"%s\"', baseEnvPath)\n    }\n\n    /**\n     * 1st\n     * The top most priority is given to the \".env.[NODE_ENV].local\" file\n     */\n    if (NODE_ENV) {\n      const nodeEnvLocalFile = join(baseEnvPath, `.env.${NODE_ENV}.local`)\n      envFiles.push({\n        path: nodeEnvLocalFile,\n        ...(await this.#loadFile(nodeEnvLocalFile)),\n      })\n    }\n\n    /**\n     * 2nd\n     * Next, we give priority to the \".env.local\" file\n     */\n    if (!NODE_ENV || !['test', 'testing'].includes(NODE_ENV)) {\n      const envLocalFile = join(baseEnvPath, '.env.local')\n      envFiles.push({\n        path: envLocalFile,\n        ...(await this.#loadFile(envLocalFile)),\n      })\n    }\n\n    /**\n     * 3rd\n     * Next, we give priority to the \".env.[NODE_ENV]\" file\n     */\n    if (NODE_ENV) {\n      const nodeEnvFile = join(baseEnvPath, `.env.${NODE_ENV}`)\n      envFiles.push({\n        path: nodeEnvFile,\n        ...(await this.#loadFile(nodeEnvFile)),\n      })\n    }\n\n    /**\n     * Finally, we push the contents of the \".env\" file.\n     */\n    const envFile = join(baseEnvPath, '.env')\n    envFiles.push({\n      path: envFile,\n      ...(await this.#loadFile(envFile)),\n    })\n\n    /**\n     * Load example file\n     */\n    if (this.#loadExampleFile) {\n      const envExampleFile = join(baseEnvPath, '.env.example')\n      envFiles.push({\n        path: envExampleFile,\n        ...(await this.#loadFile(envExampleFile)),\n      })\n    }\n\n    return envFiles\n  }\n}\n","/*\n * @adonisjs/env\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\nexport default debuglog('adonisjs:env')\n"],"mappings":";;;;;;;AASA,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AACzB,SAAS,YAAY,YAAY;;;ACFjC,SAAS,gBAAgB;AACzB,IAAO,gBAAQ,SAAS,cAAc;;;AD2B/B,IAAM,YAAN,MAAgB;AAAA,EACrB;AAAA,EACA;AAAA,EAEA,YAAY,SAAuB,kBAA2B,OAAO;AACnE,SAAK,WAAW,OAAO,YAAY,WAAW,UAAU,cAAc,OAAO;AAC7E,SAAK,mBAAmB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,UAAU,UAA4E;AAC1F,QAAI;AACF,YAAM,WAAW,MAAM,SAAS,UAAU,OAAO;AACjD,aAAO,EAAE,UAAU,YAAY,KAAK;AAAA,IACtC,SAAS,OAAO;AAEd,UAAI,MAAM,SAAS,UAAU;AAC3B,cAAM;AAAA,MACR;AAEA,aAAO,EAAE,UAAU,IAAI,YAAY,MAAM;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAA2E;AAC/E,UAAM,WAAW,QAAQ,IAAI;AAC7B,UAAM,WAAW,QAAQ,IAAI;AAC7B,UAAM,WAAsE,CAAC;AAE7E,QAAI,cAAM,SAAS;AACjB,oBAAM,2BAA2B,WAAW,QAAQ,SAAS;AAC7D,oBAAM,2BAA2B,WAAW,QAAQ,SAAS;AAAA,IAC/D;AAKA,UAAM,cAAc,WAChB,WAAW,QAAQ,IACjB,WACA,KAAK,KAAK,UAAU,QAAQ,IAC9B,KAAK;AAET,QAAI,cAAM,SAAS;AACjB,oBAAM,gCAAgC,WAAW;AAAA,IACnD;AAMA,QAAI,UAAU;AACZ,YAAM,mBAAmB,KAAK,aAAa,QAAQ,QAAQ,QAAQ;AACnE,eAAS,KAAK;AAAA,QACZ,MAAM;AAAA,QACN,GAAI,MAAM,KAAK,UAAU,gBAAgB;AAAA,MAC3C,CAAC;AAAA,IACH;AAMA,QAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,SAAS,EAAE,SAAS,QAAQ,GAAG;AACxD,YAAM,eAAe,KAAK,aAAa,YAAY;AACnD,eAAS,KAAK;AAAA,QACZ,MAAM;AAAA,QACN,GAAI,MAAM,KAAK,UAAU,YAAY;AAAA,MACvC,CAAC;AAAA,IACH;AAMA,QAAI,UAAU;AACZ,YAAM,cAAc,KAAK,aAAa,QAAQ,QAAQ,EAAE;AACxD,eAAS,KAAK;AAAA,QACZ,MAAM;AAAA,QACN,GAAI,MAAM,KAAK,UAAU,WAAW;AAAA,MACtC,CAAC;AAAA,IACH;AAKA,UAAM,UAAU,KAAK,aAAa,MAAM;AACxC,aAAS,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,GAAI,MAAM,KAAK,UAAU,OAAO;AAAA,IAClC,CAAC;AAKD,QAAI,KAAK,kBAAkB;AACzB,YAAM,iBAAiB,KAAK,aAAa,cAAc;AACvD,eAAS,KAAK;AAAA,QACZ,MAAM;AAAA,QACN,GAAI,MAAM,KAAK,UAAU,cAAc;AAAA,MACzC,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/build/chunk-PRQWD6EY.js":{"lineLengths":[8,11,15,29,0,16,24,26,55,47,79,73,73,69,55,63,55,57,53,50,3,46,45,58,30,2,41,54,26,2,41,69,26,2,42,55,27,2,37,70,22,2,39,52,24,2,40,53,25,2,48,60,33,2,50,56,35,2,41,55,26,2,50,58,35,2,53,61,38,2,0,20,40,42,44,59,18,5,56,21,5,28,11,12,14,18,12,13,12,11,21,13,15,16,10,12,15,10,4,5,51,11,5,28,79,40,36,23,14,30,12,8,5,12,17,10,6,4,5,43,5,24,33,4,5,51,5,25,29,84,38,4,5,42,5,25,116,4,5,47,5,29,91,4,5,49,5,48,98,85,28,26,28,12,26,5,67,4,5,54,5,52,106,4,5,45,5,25,105,4,5,50,5,29,91,4,5,45,5,28,108,4,5,50,5,32,94,4,5,47,5,30,131,4,5,52,5,34,96,4,5,45,5,28,138,4,5,50,5,32,94,4,5,43,5,26,156,4,5,48,5,30,92,4,5,44,5,27,158,4,5,49,5,31,93,4,5,44,5,27,158,4,5,49,5,31,93,4,5,43,5,26,156,4,5,48,5,30,92,4,5,53,5,35,91,53,23,23,5,44,4,5,44,5,27,107,4,5,49,5,31,93,4,5,46,5,29,120,4,5,48,9,5,43,126,4,5,51,5,33,95,4,5,46,5,29,129,4,5,51,5,33,95,4,5,43,5,49,193,4,5,48,5,53,98,4,5,53,5,47,178,4,5,56,5,51,96,4,5,42,5,25,128,4,5,46,5,28,120,4,5,54,5,28,95,3,2,36,0,24,36,37,48,0,21,19,19,23,25,19,25,34,36,30,34,27,17,13,17,37,23,27,31,25,21,31,27,31,23,29,16,2,0,24,26,5,55,25,5,15,21,17,18,24,17,18,16,12,17,19,21,6,11,4,5,32,5,10,23,57,30,3,5,35,5,24,46,3,5,38,5,23,47,19,5,38,13,5,43,41,5,48,48,5,44,50,5,12,44,54,45,6,3,5,33,5,15,80,25,13,5,276,3,5,48,5,18,51,65,22,46,18,36,61,7,57,61,7,14,37,79,8,7,3,5,44,5,19,53,67,23,46,19,37,63,7,58,58,7,14,38,80,8,7,3,5,45,5,19,52,63,16,26,18,39,65,7,14,43,60,8,7,3,5,46,5,16,51,34,24,57,7,25,58,7,82,14,25,14,59,30,8,7,3,5,66,5,11,39,51,12,42,47,59,36,38,43,67,59,38,14,34,51,55,8,27,6,3,2,0,21,36,41,52,43,44,87,0,25,56,27,11,5,31,5,16,5,56,33,5,9,24,28,3,5,53,50,45,5,21,32,16,3,5,27,5,34,29,51,12,79,75,52,5,32,3,2,0,26,27,11,5,35,5,14,5,58,33,5,9,24,28,3,5,54,56,42,5,21,29,16,3,5,40,5,19,28,61,11,54,45,73,23,56,22,9,7,5,61,30,3,2,0,27,36,39,49,28,30,5,24,5,26,42,23,5,28,33,27,5,34,26,5,34,20,5,15,3,5,33,5,13,72,3,2,0,27,29,5,32,5,13,5,41,5,11,24,28,3,5,60,5,34,50,19,5,68,3,5,47,5,13,22,16,3,5,56,5,31,18,67,32,17,6,44,16,3,5,25,5,18,88,53,65,20,3,2,0,28,51,30,5,36,5,18,5,69,64,20,5,39,5,65,10,5,13,5,40,5,11,24,28,3,5,54,5,34,50,19,5,68,3,5,30,5,28,96,3,5,77,69,18,5,36,50,62,30,18,5,35,33,100,8,5,51,33,81,8,5,35,3,5,67,5,14,91,53,85,3,5,38,5,13,22,16,3,5,56,5,31,18,68,32,17,6,44,16,3,5,45,5,20,44,20,37,21,79,47,40,70,9,40,38,9,7,7,3,5,64,24,5,16,43,26,30,7,5,3,5,45,5,17,43,27,31,7,5,3,5,45,5,17,43,27,31,7,5,25,3,5,48,5,20,64,30,34,7,5,46,3,2,0,21,43,5,61,12,5,12,5,52,12,5,23,5,68,13,5,28,14,4,5,49,5,11,5,36,5,15,5,37,5,21,5,30,5,17,17,18,19,20,5,20,5,23,5,39,5,35,5,51,5,17,54,3,5,54,5,17,44,3,5,57,5,23,50,3,5,44,5,17,25,3,5,57,5,18,68,3,5,50,5,17,35,3,5,61,5,22,40,3,5,69,16,5,23,61,3,5,56,33,5,16,38,3,5,58,33,5,16,38,3,5,32,5,25,48,3,5,61,5,22,49,3,5,62,5,15,50,3,5,56,5,16,43,3,5,49,8,5,22,43,3,5,40,5,20,30,3,5,46,29,5,11,25,69,82,5,4,5,62,51,5,22,5,60,46,5,22,33,12,28,38,44,48,58,58,51,37,28,7,49,36,7,59,32,44,45,39,53,9,5,3,5,42,5,27,37,3,5,53,15,5,20,29,3,5,60,54,12,5,31,67,92,5,99,36,54,55,16,3,5,42,5,14,23,3,5,54,56,42,5,21,42,16,3,5,53,50,45,5,21,42,16,3,5,87,54,5,50,23,59,5,3,5,64,25,5,28,33,16,3,5,69,27,5,32,35,16,3,5,47,5,43,22,35,5,16,3,5,52,5,47,22,37,5,16,3,5,57,27,5,23,43,16,3,5,69,16,4,36,45,67,28,37,5,16,36,72,13,5,36,33,53,40,36,30,3,5,55,19,5,20,40,16,3,5,69,16,4,64,42,29,5,16,38,68,13,5,33,50,33,35,70,54,44,40,49,32,27,3,5,61,17,4,63,17,5,25,24,26,12,41,5,3,5,60,5,21,41,16,3,5,70,16,4,59,62,59,40,5,25,35,69,13,5,34,41,51,34,67,25,41,48,31,26,39,25,3,5,51,10,5,24,23,26,12,40,5,3,5,53,16,5,24,44,16,3,5,67,30,4,48,44,5,21,68,73,13,5,37,29,54,44,37,31,3,5,54,5,30,63,3,5,53,5,21,51,3,5,56,5,22,49,3,5,39,5,24,67,3,5,39,5,24,67,3,5,42,5,27,70,3,5,42,5,27,70,3,5,43,5,28,71,3,5,40,5,25,68,3,5,47,5,31,74,3,5,38,5,23,66,3,5,38,5,23,66,3,5,36,5,21,64,3,5,42,16,5,27,70,3,5,49,5,33,76,3,5,39,5,24,67,3,5,41,5,26,69,3,5,43,5,28,71,3,5,40,5,25,68,3,5,38,5,23,66,3,5,43,5,28,71,3,5,41,5,26,69,3,5,43,5,28,71,3,5,41,5,26,69,3,5,39,5,24,67,3,5,42,5,27,70,3,5,74,72,41,5,28,26,34,101,8,5,44,3,5,74,72,41,5,35,26,34,101,8,5,65,3,5,43,5,12,12,28,40,37,44,28,61,78,6,3,2,0,8,17,21,15,13,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/errors.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/generators.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/rc_file/parser.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/directories.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/application.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/managers/config.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/managers/rc_file.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/managers/node_env.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/managers/preloads.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/managers/providers.ts"],"sourcesContent":["/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createError } from '@poppinss/utils'\n\n/**\n * The exception is raised when the \"pattern\" property is missing\n * in the meta file object.\n */\nexport const E_MISSING_METAFILE_PATTERN = createError<[fileProperty: string]>(\n  'Invalid metafile entry \"%s\". Missing pattern property',\n  'E_MISSING_METAFILE_PATTERN'\n)\n\n/**\n * The exception is raised when the \"file\" property is missing\n * in the preload file object\n */\nexport const E_MISSING_PRELOAD_FILE = createError<[preloadProperty: string]>(\n  'Invalid preload entry \"%s\". Missing file property',\n  'E_MISSING_PRELOAD_FILE'\n)\n\n/**\n * The exception is raised when the \"file\" property is not a function\n */\nexport const E_INVALID_PRELOAD_FILE = createError<[preloadProperty: string]>(\n  'Invalid preload entry \"%s\". The file property must be a function',\n  'E_INVALID_PRELOAD_FILE'\n)\n\n/**\n * The exception is raised when the \"file\" property is missing\n * in the provider object\n */\nexport const E_MISSING_PROVIDER_FILE = createError<[preloadProperty: string]>(\n  'Invalid provider entry \"%s\". Missing file property',\n  'E_MISSING_PROVIDER_FILE'\n)\n\n/**\n * The exception is raised when the \"file\" property is not a function\n * in provider object\n */\nexport const E_INVALID_PROVIDER = createError<[preloadProperty: string]>(\n  'Invalid provider entry \"%s\". The file property must be a function',\n  'E_INVALID_PROVIDER'\n)\n\n/**\n * The exception is raised when the \"name\" property is missing\n * in the suite object\n */\nexport const E_MISSING_SUITE_NAME = createError<[suiteProperty: string]>(\n  'Invalid suite entry \"%s\". Missing name property',\n  'E_MISSING_SUITE_NAME'\n)\n\n/**\n * The exception is raised when the \"files\" property is missing\n * in the suite object\n */\nexport const E_MISSING_SUITE_FILES = createError<[suiteProperty: string]>(\n  'Invalid suite entry \"%s\". Missing files property',\n  'E_MISSING_SUITE_FILES'\n)\n\n/**\n * The exception is raised when the \"devServerCommand\" is missing\n * in assetsBundler object\n */\nexport const E_MISSING_BUNDLER_DEV_COMMAND = createError(\n  'Invalid assetsBundler entry. Missing devServer property',\n  'E_MISSING_BUNDLER_DEV_COMMAND'\n)\n\n/**\n * The exception is raised when the \"buildCommand\" is missing\n * in assetsBundler object\n */\nexport const E_MISSING_BUNDLER_BUILD_COMMAND = createError(\n  'Invalid assetsBundler entry. Missing build property',\n  'E_MISSING_BUNDLER_BUILD_COMMAND'\n)\n\n/**\n * The exception is raised when the \"name\" is missing\n * in assetsBundler object\n */\nexport const E_MISSING_BUNDLER_NAME = createError(\n  'Invalid assetsBundler entry. Missing name property',\n  'E_MISSING_BUNDLER_NAME'\n)\n\n/**\n * The exception is raised when the \"name\" is missing\n * in assembler.runner object\n */\nexport const E_MISSING_ASSEMBLER_RUNNER_NAME = createError(\n  'Invalid assembler.runner entry. Missing name property',\n  'E_MISSING_ASSEMBLER_RUNNER_NAME'\n)\n\n/**\n * The exception is raised when the \"command\" is missing\n * in assembler.runner object\n */\nexport const E_MISSING_ASSEMBLER_RUNNER_COMMAND = createError(\n  'Invalid assembler.runner entry. Missing command property',\n  'E_MISSING_ASSEMBLER_RUNNER_COMMAND'\n)\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { slash } from '@poppinss/utils'\nimport { extname, join } from 'node:path'\nimport string from '@poppinss/utils/string'\nimport StringBuilder from '@poppinss/utils/string_builder'\n\n/**\n * Generators used for scaffolding\n */\nconst generators = {\n  /**\n   * The given controller names will always be generated\n   * in singular form\n   */\n  singularControllerNames: [\n    'home',\n    'admin',\n    'session',\n    'application',\n    'money',\n    'signup',\n    'login',\n    'auth',\n    'authentication',\n    'adonis',\n    'adonisjs',\n    'dashboard',\n    'api',\n    'about',\n    'conatact',\n    'blog',\n  ],\n\n  /**\n   * Creates the entity path and name from the user\n   * input.\n   */\n  createEntity(entityName: string) {\n    /**\n     * Get rid of extensions\n     */\n    entityName = entityName.replace(new RegExp(`${extname(entityName)}$`), '')\n\n    /**\n     * Split to see if we are dealing with a path\n     */\n    const parts = entityName.split('/')\n\n    /**\n     * Last part is always the entity name\n     */\n    const [name] = parts.splice(-1)\n\n    /**\n     * Still have parts? Join them back\n     */\n    if (parts.length) {\n      return {\n        path: parts.join('/'),\n        name,\n      }\n    }\n\n    /**\n     * Use relative current dir\n     */\n    return {\n      path: './',\n      name,\n    }\n  },\n\n  /**\n   * Construct paths to make an import path\n   */\n  importPath(...paths: string[]) {\n    return slash(join(...paths))\n  },\n\n  /**\n   * Converts an entity name to database table name\n   */\n  tableName(entityName: string) {\n    return new StringBuilder(\n      this.modelName(new StringBuilder(entityName).removeSuffix('table').toString())\n    )\n      .plural()\n      .snakeCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to model name\n   */\n  modelName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('model')\n      .singular()\n      .pascalCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to model file name\n   */\n  modelFileName(entityName: string) {\n    return new StringBuilder(this.modelName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to a controller name\n   */\n  controllerName(entityName: string, singular: boolean = false) {\n    const controller = new StringBuilder(entityName).removeExtension().removeSuffix('controller')\n\n    if (this.singularControllerNames.includes(controller.toString().toLowerCase())) {\n      controller.singular()\n    } else if (singular) {\n      controller.singular()\n    } else {\n      controller.plural()\n    }\n\n    return controller.pascalCase().suffix('Controller').toString()\n  },\n\n  /**\n   * Converts an entity name to a controller file name\n   */\n  controllerFileName(entityName: string, singular: boolean = false) {\n    return new StringBuilder(this.controllerName(entityName, singular))\n      .snakeCase()\n      .ext('.ts')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to an event name\n   */\n  eventName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('event')\n      .pascalCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to an event file name\n   */\n  eventFileName(entityName: string) {\n    return new StringBuilder(this.eventName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to listener name\n   */\n  listenerName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('listener')\n      .pascalCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to listener file name\n   */\n  listenerFileName(entityName: string) {\n    return new StringBuilder(this.listenerName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to middleware name\n   */\n  middlewareName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('middleware')\n      .pascalCase()\n      .suffix('Middleware')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to middleware file name\n   */\n  middlewareFileName(entityName: string) {\n    return new StringBuilder(this.middlewareName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to provider name\n   */\n  providerName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('provider')\n      .singular()\n      .pascalCase()\n      .suffix('Provider')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to provider file name\n   */\n  providerFileName(entityName: string) {\n    return new StringBuilder(this.providerName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to policy name\n   */\n  policyName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('policy')\n      .removeSuffix('model')\n      .singular()\n      .pascalCase()\n      .suffix('Policy')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to policy file name\n   */\n  policyFileName(entityName: string) {\n    return new StringBuilder(this.policyName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to factory name\n   */\n  factoryName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('factory')\n      .removeSuffix('model')\n      .singular()\n      .pascalCase()\n      .suffix('Factory')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to factory file name\n   */\n  factoryFileName(entityName: string) {\n    return new StringBuilder(this.factoryName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to service name\n   */\n  serviceName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('service')\n      .removeSuffix('model')\n      .singular()\n      .pascalCase()\n      .suffix('Service')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to service file name\n   */\n  serviceFileName(entityName: string) {\n    return new StringBuilder(this.serviceName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to seeder name\n   */\n  seederName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('seeder')\n      .removeSuffix('model')\n      .singular()\n      .pascalCase()\n      .suffix('Seeder')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to seeder file name\n   */\n  seederFileName(entityName: string) {\n    return new StringBuilder(this.seederName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to command terminal name\n   */\n  commandTerminalName(entityName: string) {\n    const dashCase = new StringBuilder(this.commandName(entityName)).dashCase().toString()\n\n    const [namespace, ...rest] = dashCase.split('-')\n    if (!rest.length) {\n      return namespace\n    }\n\n    return `${namespace}:${rest.join('-')}`\n  },\n\n  /**\n   * Converts an entity name to command name\n   */\n  commandName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('command')\n      .pascalCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to command file name\n   */\n  commandFileName(entityName: string) {\n    return new StringBuilder(this.commandName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to validator name\n   */\n  validatorName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('validator')\n      .singular()\n      .pascalCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to validator action\n   * name\n   */\n  validatorActionName(entityName: string, action: string) {\n    return new StringBuilder(this.validatorName(entityName))\n      .prefix(`${action}_`)\n      .suffix('_validator')\n      .camelCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to validator file name\n   */\n  validatorFileName(entityName: string) {\n    return new StringBuilder(this.validatorName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to exception name\n   */\n  exceptionName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('exception')\n      .pascalCase()\n      .suffix('Exception')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to exception file name\n   */\n  exceptionFileName(entityName: string) {\n    return new StringBuilder(this.exceptionName(entityName)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to mailer name\n   */\n  mailerName(entityName: string, type: 'notification' | 'provision' = 'notification') {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('notification')\n      .removeSuffix('provision')\n      .removeSuffix('mailer')\n      .pascalCase()\n      .suffix(string.pascalCase(type))\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to mailer file name\n   */\n  mailerFileName(entityName: string, type: 'notification' | 'provision' = 'notification') {\n    return new StringBuilder(this.mailerName(entityName, type)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity name to class-based mail name\n   */\n  mailName(entityName: string, type: string = 'notification') {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix(type)\n      .removeSuffix('mailer')\n      .removeSuffix('mail')\n      .pascalCase()\n      .suffix(string.pascalCase(type))\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to class-name mail filename\n   */\n  mailFileName(entityName: string, type: string = 'notification') {\n    return new StringBuilder(this.mailName(entityName, type)).snakeCase().ext('.ts').toString()\n  },\n\n  /**\n   * Converts an entity to test group name\n   */\n  testGroupName(entity: { path: string; name: string }) {\n    return new StringBuilder(`${entity.path}/${entity.name}`)\n      .removeExtension()\n      .removeSuffix('.spec')\n      .sentenceCase()\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to test file name\n   */\n  testFileName(entityName: string) {\n    return new StringBuilder(entityName)\n      .removeExtension()\n      .removeSuffix('.spec')\n      .snakeCase()\n      .ext('.spec.ts')\n      .toString()\n  },\n\n  /**\n   * Converts an entity name to the view template file\n   */\n  viewFileName(entityName: string) {\n    return new StringBuilder(entityName).removeExtension().snakeCase().ext('.edge').toString()\n  },\n}\n\nexport default generators\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { inspect } from 'node:util'\nimport globParent from 'glob-parent'\nimport { ObjectBuilder } from '@poppinss/utils'\n\nimport * as errors from '../errors.js'\nimport { directories } from '../directories.js'\nimport type { AppEnvironments, MetaFileNode, PreloadNode, ProviderNode, RcFile } from '../types.js'\n\n/**\n * Rc file parser is used to parse and validate the `adonisrc.js` file contents.\n */\nexport class RcFileParser {\n  /**\n   * Defaults for the RcFile. This object initiates all\n   * the known properties\n   */\n  #defaults: RcFile = {\n    typescript: true,\n    preloads: [],\n    metaFiles: [],\n    commandsAliases: {},\n    commands: [],\n    providers: [],\n    directories: directories,\n    tests: {\n      suites: [],\n      timeout: 2000,\n      forceExit: true,\n    },\n    raw: {},\n  }\n\n  /**\n   * RcFile merged with defaults\n   */\n  #rcFile: RcFile\n\n  constructor(rcFile: Record<string, any>) {\n    this.#rcFile = Object.assign(this.#defaults, rcFile)\n    this.#rcFile.raw = rcFile\n  }\n\n  /**\n   * An array of known environments\n   */\n  #knownEnvironments(): Exclude<AppEnvironments, 'unknown'>[] {\n    return ['web', 'console', 'test', 'repl']\n  }\n\n  /**\n   * Returns the assets bundler object\n   */\n  #getAssetsBundler(): RcFile['assetsBundler'] {\n    if (this.#rcFile.assetsBundler === false) {\n      return false\n    }\n\n    if (!this.#rcFile.assetsBundler) {\n      return\n    }\n\n    if (!this.#rcFile.assetsBundler.name) {\n      throw new errors.E_MISSING_BUNDLER_NAME()\n    }\n\n    if (!this.#rcFile.assetsBundler.devServer) {\n      throw new errors.E_MISSING_BUNDLER_DEV_COMMAND()\n    }\n\n    if (!this.#rcFile.assetsBundler.build) {\n      throw new errors.E_MISSING_BUNDLER_BUILD_COMMAND()\n    }\n\n    return {\n      name: this.#rcFile.assetsBundler.name,\n      devServer: this.#rcFile.assetsBundler.devServer,\n      build: this.#rcFile.assetsBundler.build,\n    }\n  }\n\n  /**\n   * Returns the assembler object\n   */\n  #getHooks(): RcFile['hooks'] {\n    // @ts-expect-error - Keep supporting the old `unstable_assembler` property for now\n    const hooksProperty = this.#rcFile.hooks || this.#rcFile.unstable_assembler\n    if (!hooksProperty) {\n      return\n    }\n\n    return new ObjectBuilder({})\n      .add('onBuildStarting', hooksProperty.onBuildStarting)\n      .add('onBuildCompleted', hooksProperty.onBuildCompleted)\n      .add('onDevServerStarted', hooksProperty.onDevServerStarted)\n      .add('onSourceFileChanged', hooksProperty.onSourceFileChanged)\n      .toObject()\n  }\n\n  /**\n   * Returns a normalized array of preload files\n   */\n  #getPreloads(): PreloadNode[] {\n    return this.#rcFile.preloads.map((preload: PreloadNode | PreloadNode['file']) => {\n      const normalizedPreload =\n        typeof preload === 'function'\n          ? {\n              file: preload,\n              environment: this.#knownEnvironments(),\n            }\n          : preload\n\n      if (!normalizedPreload.file) {\n        throw new errors.E_MISSING_PRELOAD_FILE([inspect(preload)])\n      }\n\n      if (typeof normalizedPreload.file !== 'function') {\n        throw new errors.E_INVALID_PRELOAD_FILE([inspect(preload)])\n      }\n\n      return {\n        file: normalizedPreload.file,\n        environment: normalizedPreload.environment ?? this.#knownEnvironments(),\n      }\n    })\n  }\n\n  /**\n   * Returns a normalized array of providers\n   */\n  #getProviders(): ProviderNode[] {\n    return this.#rcFile.providers.map((provider: ProviderNode | ProviderNode['file']) => {\n      const normalizedProvider =\n        typeof provider === 'function'\n          ? {\n              file: provider,\n              environment: this.#knownEnvironments(),\n            }\n          : provider\n\n      if (!normalizedProvider.file) {\n        throw new errors.E_MISSING_PROVIDER_FILE([inspect(provider)])\n      }\n\n      if (typeof normalizedProvider.file !== 'function') {\n        throw new errors.E_INVALID_PROVIDER([inspect(provider)])\n      }\n\n      return {\n        file: normalizedProvider.file,\n        environment: normalizedProvider.environment ?? this.#knownEnvironments(),\n      }\n    })\n  }\n\n  /**\n   * Returns a nornalized array of meta files\n   */\n  #getMetaFiles(): MetaFileNode[] {\n    return this.#rcFile.metaFiles.map((pattern: MetaFileNode | string) => {\n      const normalizeMetaFile =\n        typeof pattern === 'string'\n          ? {\n              pattern: pattern,\n              reloadServer: true,\n            }\n          : pattern\n\n      if (!normalizeMetaFile.pattern) {\n        throw new errors.E_MISSING_METAFILE_PATTERN([inspect(pattern)])\n      }\n\n      return {\n        pattern: normalizeMetaFile.pattern,\n        reloadServer: normalizeMetaFile.reloadServer ?? true,\n      }\n    })\n  }\n\n  /**\n   * Returns a normalized array of test suites\n   */\n  #getSuites() {\n    const suites = this.#rcFile.tests.suites || []\n\n    return suites.map((suite) => {\n      if (!suite.name) {\n        throw new errors.E_MISSING_SUITE_NAME([inspect(suite)])\n      }\n\n      if (!suite.files) {\n        throw new errors.E_MISSING_SUITE_FILES([inspect(suite)])\n      }\n\n      const files = Array.isArray(suite.files) ? [...suite.files] : [suite.files]\n      return {\n        name: suite.name,\n        files: files,\n        directories: files.map((file) => globParent(file)),\n        timeout: suite.timeout,\n      }\n    })\n  }\n\n  /**\n   * Parse and validate file contents and merge them with defaults\n   */\n  parse(): RcFile {\n    const assembler = this.#getHooks()\n    const assetsBundler = this.#getAssetsBundler()\n\n    return {\n      typescript: this.#rcFile.typescript,\n      ...(assembler ? { hooks: assembler } : {}),\n      ...(assetsBundler !== undefined ? { assetsBundler } : {}),\n      preloads: this.#getPreloads(),\n      metaFiles: this.#getMetaFiles(),\n      commands: [...this.#rcFile.commands],\n      directories: { ...directories, ...this.#rcFile.directories },\n      commandsAliases: { ...this.#rcFile.commandsAliases },\n      providers: this.#getProviders(),\n      tests: {\n        suites: this.#getSuites(),\n        timeout: this.#rcFile.tests.timeout ?? 2000,\n        forceExit: this.#rcFile.tests.forceExit ?? true,\n      },\n      raw: this.#rcFile.raw,\n    }\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { DirectoriesNode } from './types.js'\n\n/**\n * List of default directories\n */\nexport const directories: DirectoriesNode = {\n  config: 'config',\n  commands: 'commands',\n  contracts: 'contracts',\n  public: 'public',\n  providers: 'providers',\n  languageFiles: 'resources/lang',\n  migrations: 'database/migrations',\n  seeders: 'database/seeders',\n  factories: 'database/factories',\n  views: 'resources/views',\n  start: 'start',\n  tmp: 'tmp',\n  tests: 'tests',\n  httpControllers: 'app/controllers',\n  models: 'app/models',\n  services: 'app/services',\n  exceptions: 'app/exceptions',\n  mailers: 'app/mailers',\n  mails: 'app/mails',\n  middleware: 'app/middleware',\n  policies: 'app/policies',\n  validators: 'app/validators',\n  events: 'app/events',\n  listeners: 'app/listeners',\n  stubs: 'stubs',\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Hooks from '@poppinss/hooks'\nimport { fileURLToPath } from 'node:url'\nimport { join, relative } from 'node:path'\nimport { Container } from '@adonisjs/fold'\nimport Macroable from '@poppinss/macroable'\nimport type { HookHandler } from '@poppinss/hooks/types'\nimport { importDefault, RuntimeException } from '@poppinss/utils'\n\nimport debug from './debug.js'\nimport generators from './generators.js'\nimport { ConfigManager } from './managers/config.js'\nimport { RcFileManager } from './managers/rc_file.js'\nimport { NodeEnvManager } from './managers/node_env.js'\nimport { PreloadsManager } from './managers/preloads.js'\nimport { ProvidersManager } from './managers/providers.js'\nimport type {\n  Importer,\n  SemverNode,\n  HooksState,\n  AppEnvironments,\n  ApplicationStates,\n} from './types.js'\n\n/**\n * Application class manages the state of an AdonisJS application. It includes\n *\n * - Setting up the base features like importing config and setting up logger.\n * - Parsing the \"adonisrc.js\" file\n * - Setting up the IoC container\n * - Registering an booting providers\n * - Invoking lifecycle methods on the providers and hooks\n */\nexport class Application<ContainerBindings extends Record<any, any>> extends Macroable {\n  /**\n   * Importer function to import modules from the application\n   * context\n   */\n  #importer?: Importer\n\n  /**\n   * Flag to know if we have started the termination\n   * process\n   */\n  #terminating: boolean = false\n\n  /**\n   * The environment in which the app is running. Currently we track\n   * pm2 only\n   */\n  #surroundedEnvironment = {\n    pm2: false,\n  }\n\n  /**\n   * Application root. The path must end with '/'\n   */\n  #appRoot: URL\n\n  /**\n   * Current application environment\n   */\n  #environment: AppEnvironments\n\n  /**\n   * Current state of the application\n   */\n  #state: ApplicationStates = 'created'\n\n  /**\n   * Managers for sub-features\n   */\n  #configManager: ConfigManager\n  #rcFileManager: RcFileManager\n  #nodeEnvManager: NodeEnvManager\n  #preloadsManager: PreloadsManager\n  #providersManager: ProvidersManager\n\n  /**\n   * Lifecycle hooks\n   */\n  #hooks = new Hooks<{\n    initiating: HooksState<ContainerBindings>\n    booting: HooksState<ContainerBindings>\n    booted: HooksState<ContainerBindings>\n    starting: HooksState<ContainerBindings>\n    ready: HooksState<ContainerBindings>\n    terminating: HooksState<ContainerBindings>\n  }>()\n\n  /**\n   * Store info metadata about the app.\n   */\n  info: Map<'appName' | 'version' | 'adonisVersion' | string, any> = new Map()\n\n  /**\n   * Returns the application name from the info map\n   */\n  get appName() {\n    return this.info.get('appName') || 'adonisjs_app'\n  }\n\n  /**\n   * Returns the application version from the info map\n   */\n  get version(): SemverNode | null {\n    return this.info.get('version') || null\n  }\n\n  /**\n   * The parsed version for the \"@adonisjs/core\" package.\n   */\n  get adonisVersion(): SemverNode | null {\n    return this.info.get('adonisVersion') || null\n  }\n\n  /**\n   * The URL for the root of the application\n   */\n  get appRoot() {\n    return this.#appRoot\n  }\n\n  /**\n   * A boolean to know if the application has been booted\n   */\n  get isBooted() {\n    return this.#state !== 'created' && this.#state !== 'initiated'\n  }\n\n  /**\n   * A boolean to know if the application is ready\n   */\n  get isReady() {\n    return this.#state === 'ready'\n  }\n\n  /**\n   * A boolean to know if the application has been terminated\n   */\n  get isTerminated() {\n    return this.#state === 'terminated'\n  }\n\n  /**\n   * A boolean to know if the application is in the middle of getting\n   * terminating\n   */\n  get isTerminating() {\n    return this.#terminating && this.#state !== 'terminated'\n  }\n\n  /**\n   * Reference to the config class. The value is defined\n   * after the \"init\" method call\n   */\n  get config() {\n    return this.#configManager.config\n  }\n\n  /**\n   * Reference to the parsed rc file. The value is defined\n   * after the \"init\" method call\n   */\n  get rcFile() {\n    return this.#rcFileManager.rcFile\n  }\n\n  /**\n   * Normalized current NODE_ENV\n   */\n  get nodeEnvironment() {\n    return this.#nodeEnvManager.nodeEnvironment\n  }\n\n  /**\n   * Return true when `this.nodeEnvironment === 'production'`\n   */\n  get inProduction(): boolean {\n    return this.nodeEnvironment === 'production'\n  }\n\n  /**\n   * Return true when `this.nodeEnvironment === 'development'`\n   */\n  get inDev(): boolean {\n    return this.nodeEnvironment === 'development'\n  }\n\n  /**\n   * Returns true when `this.nodeEnvironment === 'test'`\n   */\n  get inTest(): boolean {\n    return this.nodeEnvironment === 'test'\n  }\n\n  /**\n   * Find if the process is managed and run under\n   * pm2\n   */\n  get managedByPm2() {\n    return this.#surroundedEnvironment.pm2\n  }\n\n  /**\n   * Reference to scaffolding generators\n   */\n  get generators() {\n    return generators\n  }\n\n  /**\n   * Reference to the stubs module to scaffold\n   * resources or eject stubs\n   */\n  stubs = {\n    create: async () => {\n      const { StubsManager } = await import('./stubs/manager.js')\n      return new StubsManager(this, this.makePath(this.rcFile.directories.stubs))\n    },\n  }\n\n  /**\n   * A flag to know if VineJS provider is configured. When set\n   * to true, you may import `@vinejs/vine` package\n   */\n  usingVineJS: boolean = false\n\n  /**\n   * A flag to know if Edge provider is configured. When set\n   * to true, you may import `edge.js` package\n   */\n  usingEdgeJS: boolean = false\n\n  /**\n   * Reference to the AdonisJS IoC container. The value is defined\n   * after the \"init\" method call\n   */\n  declare container: Container<ContainerBindings>\n\n  constructor(appRoot: URL, options: { environment: AppEnvironments; importer?: Importer }) {\n    super()\n\n    this.#appRoot = appRoot\n    this.#importer = options.importer\n    this.#environment = options.environment\n    this.#nodeEnvManager = new NodeEnvManager()\n    this.#configManager = new ConfigManager(this.appRoot)\n    this.#rcFileManager = new RcFileManager(this.appRoot)\n    this.#providersManager = new ProvidersManager({\n      environment: this.#environment,\n      providersState: [this],\n    })\n    this.#preloadsManager = new PreloadsManager({\n      environment: this.#environment,\n    })\n    this.#surroundedEnvironment.pm2 = !!process.env.pm2_id\n\n    if (debug.enabled) {\n      debug('app environment :%O', {\n        pm2: this.#surroundedEnvironment.pm2,\n        environment: this.#environment,\n        nodeEnv: this.#nodeEnvManager.nodeEnvironment,\n      })\n    }\n  }\n\n  /**\n   * Instantiate the application container\n   */\n  #instantiateContainer() {\n    this.container = new Container<ContainerBindings>()\n  }\n\n  /**\n   * The current environment in which the application\n   * is running\n   */\n  getEnvironment() {\n    return this.#environment\n  }\n\n  /**\n   * Switch the environment in which the app is running. The\n   * environment can only be changed before the app is\n   * booted.\n   */\n  setEnvironment(environment: AppEnvironments): this {\n    if (this.#state !== 'created' && this.#state !== 'initiated') {\n      throw new RuntimeException('Cannot switch environment once the app has been booted')\n    }\n\n    debug('switching environment { from:\"%s\", to: \"%s\" }', this.#environment, environment)\n    this.#environment = environment\n    this.#preloadsManager.setEnvironment(environment)\n    this.#providersManager.setEnvironment(environment)\n    return this\n  }\n\n  /**\n   * The current state of the application.\n   */\n  getState() {\n    return this.#state\n  }\n\n  /**\n   * Specify the contents of the \"adonisrc.js\" file as\n   * an object. Calling this method will disable loading\n   * the \"adonisrc.js\" file from the disk.\n   */\n  rcContents(value: Record<string, any>): this {\n    this.#rcFileManager.rcContents(value)\n    return this\n  }\n\n  /**\n   * Define the config values to use when booting the\n   * config provider. Calling this method disables\n   * reading files from the config directory.\n   */\n  useConfig(values: Record<any, any>): this {\n    this.#configManager.useConfig(values)\n    return this\n  }\n\n  /**\n   * Notify the parent process when the Node.js process is spawned with an IPC channel.\n   * The arguments accepted are same as \"process.send\"\n   */\n  notify(\n    message: any,\n    sendHandle?: any,\n    options?: {\n      swallowErrors?: boolean | undefined\n      keepOpen?: boolean | undefined\n    },\n    callback?: (error: Error | null) => void\n  ) {\n    if (process.send) {\n      process.send(message, sendHandle, options, callback)\n    }\n  }\n\n  /**\n   * Listen for a process signal. This method is same as calling\n   * \"process.on(signal)\"\n   */\n  listen(signal: NodeJS.Signals, callback: NodeJS.SignalsListener): this {\n    process.on(signal, callback)\n    return this\n  }\n\n  /**\n   * Listen for a process signal once. This method is same as calling\n   * \"process.once(signal)\"\n   */\n  listenOnce(signal: NodeJS.Signals, callback: NodeJS.SignalsListener): this {\n    process.once(signal, callback)\n    return this\n  }\n\n  /**\n   * Listen for a process signal conditionally.\n   */\n  listenIf(conditional: boolean, signal: NodeJS.Signals, callback: NodeJS.SignalsListener): this {\n    if (conditional) {\n      process.on(signal, callback)\n    }\n\n    return this\n  }\n\n  /**\n   * Listen for a process signal once conditionally.\n   */\n  listenOnceIf(\n    conditional: boolean,\n    signal: NodeJS.Signals,\n    callback: NodeJS.SignalsListener\n  ): this {\n    if (conditional) {\n      process.once(signal, callback)\n    }\n\n    return this\n  }\n\n  /**\n   * Register hooks that are called before the app starts\n   * the initiating process\n   */\n  initiating(\n    handler: HookHandler<[Application<ContainerBindings>], [Application<ContainerBindings>]>\n  ): this {\n    this.#hooks.add('initiating', handler)\n    return this\n  }\n\n  /**\n   * Initiate the application. Calling this method performs following\n   * operations.\n   *\n   * - Parses the \"adonisrc.js\" file\n   * - Validate and set environment variables\n   * - Loads the application config from the configured config dir.\n   * - Configures the logger\n   * - Instantiates the IoC container\n   */\n  async init() {\n    if (this.#state !== 'created') {\n      debug('cannot initiate app from state \"%s\"', this.#state)\n      return\n    }\n\n    debug('initiating app')\n\n    /**\n     * Metadata management is not considering part\n     * of initiating the app\n     */\n    this.#instantiateContainer()\n\n    /**\n     * Notify we are about to initiate the app\n     */\n    await this.#hooks.runner('initiating').run(this)\n\n    /**\n     * Initiate essentials\n     */\n    await this.#rcFileManager.process()\n\n    /**\n     * Cleanup registered hooks\n     */\n    this.#hooks.clear('initiating')\n    this.#state = 'initiated'\n  }\n\n  /**\n   * Register hooks that are called before the app boot\n   * process starts\n   */\n  booting(\n    handler: HookHandler<[Application<ContainerBindings>], [Application<ContainerBindings>]>\n  ): this {\n    this.#hooks.add('booting', handler)\n    return this\n  }\n\n  /**\n   * Boot the application. Calling this method performs the following\n   * operations.\n   *\n   * - Resolve providers and call the \"register\" method on them.\n   * - Call the \"boot\" method on providers\n   * - Run the \"booted\" hooks\n   */\n  async boot() {\n    if (this.#state !== 'initiated') {\n      debug('cannot boot app from state \"%s\"', this.#state)\n      return\n    }\n\n    debug('booting app')\n\n    /**\n     * Execute booting hooks\n     */\n    await this.#hooks.runner('booting').run(this)\n    this.#hooks.clear('booting')\n\n    /**\n     * Process node env and config files\n     */\n    this.#nodeEnvManager.process()\n    await this.#configManager.process(this.rcFile.directories.config)\n\n    /**\n     * Boot providers\n     */\n    this.#providersManager.use(this.rcFile.providers)\n    await this.#providersManager.register()\n    await this.#providersManager.boot()\n\n    /**\n     * Notify the app is booted\n     */\n    await this.#hooks.runner('booted').run(this)\n    this.#hooks.clear('booted')\n    this.#state = 'booted'\n  }\n\n  /**\n   * Register a hook to get notified when the application has\n   * been booted.\n   *\n   * The hook will be called immediately if the app has already\n   * been booted.\n   */\n  async booted(\n    handler: HookHandler<[Application<ContainerBindings>], [Application<ContainerBindings>]>\n  ): Promise<void> {\n    if (this.isBooted) {\n      await handler(this)\n    } else {\n      this.#hooks.add('booted', handler)\n    }\n  }\n\n  /**\n   * Register hooks that are called when the app is starting\n   */\n  starting(\n    handler: HookHandler<[Application<ContainerBindings>], [Application<ContainerBindings>]>\n  ): this {\n    this.#hooks.add('starting', handler)\n    return this\n  }\n\n  /**\n   * Start the application. Calling this method performs the following\n   * operations.\n   *\n   * - Run the \"start\" lifecycle hooks on all the providers\n   * - Start the application by invoking the supplied callback\n   * - Run the \"ready\" lifecycle hooks on all the providers\n   * - Run the \"ready\" application hooks\n   */\n  async start(callback: (app: this) => void | Promise<void>) {\n    if (this.#state !== 'booted') {\n      debug('cannot start app from state \"%s\"', this.#state)\n      return\n    }\n\n    debug('starting app')\n\n    /**\n     * Pre start phase\n     */\n    await this.#providersManager.start()\n    await this.#hooks.runner('starting').run(this)\n    this.#hooks.clear('starting')\n\n    await this.#preloadsManager.use(this.rcFile.preloads).import()\n\n    /**\n     * Callback to perform start of the application\n     */\n    await callback(this)\n\n    /**\n     * Post start phase\n     */\n    await this.#providersManager.ready()\n    await this.#hooks.runner('ready').run(this)\n    this.#hooks.clear('ready')\n\n    /**\n     * App ready\n     */\n    this.#state = 'ready'\n\n    /**\n     * Notify process is ready\n     */\n    debug('application ready')\n    this.notify('ready')\n  }\n\n  /**\n   * Register hooks that are called when the app is\n   * ready\n   */\n  async ready(\n    handler: HookHandler<[Application<ContainerBindings>], [Application<ContainerBindings>]>\n  ): Promise<void> {\n    if (this.isReady) {\n      await handler(this)\n    } else {\n      this.#hooks.add('ready', handler)\n    }\n  }\n\n  /**\n   * Register hooks that are called before the app is\n   * terminated.\n   */\n  terminating(\n    handler: HookHandler<[Application<ContainerBindings>], [Application<ContainerBindings>]>\n  ): this {\n    this.#hooks.add('terminating', handler)\n    return this\n  }\n\n  /**\n   * Terminate application gracefully. Calling this method performs\n   * the following operations.\n   *\n   * - Run \"shutdown\" hooks on all the providers\n   * - Run \"terminating\" app lifecycle hooks\n   */\n  async terminate() {\n    if (this.#state === 'created' || this.#state === 'terminated') {\n      debug('cannot terminate app from state \"%s\"', this.#state)\n      return\n    }\n\n    debug('terminating app')\n    this.#terminating = true\n    await this.#hooks.runner('terminating').run(this)\n    await this.#providersManager.shutdown()\n    this.#hooks.clear('terminating')\n    this.#state = 'terminated'\n  }\n\n  /**\n   * Returns relative path to a file from the app root\n   */\n  relativePath(absolutePath: string) {\n    return relative(fileURLToPath(this.appRoot), absolutePath)\n  }\n\n  /**\n   * Returns URL to a path from the application root.\n   */\n  makeURL(...paths: string[]): URL {\n    return new URL(join(...paths), this.#appRoot)\n  }\n\n  /**\n   * Returns file system path from the application root.\n   */\n  makePath(...paths: string[]): string {\n    return fileURLToPath(this.makeURL(...paths))\n  }\n\n  /**\n   * Makes path to the config directory\n   */\n  configPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.config, ...paths)\n  }\n\n  /**\n   * Makes path to the public directory\n   */\n  publicPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.public, ...paths)\n  }\n\n  /**\n   * Makes path to the providers directory\n   */\n  providersPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.providers, ...paths)\n  }\n\n  /**\n   * Makes path to the factories directory\n   */\n  factoriesPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.factories, ...paths)\n  }\n\n  /**\n   * Makes path to the migrations directory\n   */\n  migrationsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.migrations, ...paths)\n  }\n\n  /**\n   * Makes path to the seeders directory\n   */\n  seedersPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.seeders, ...paths)\n  }\n\n  /**\n   * Makes path to the language files directory\n   */\n  languageFilesPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.languageFiles, ...paths)\n  }\n\n  /**\n   * Makes path to the views directory\n   */\n  viewsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.views, ...paths)\n  }\n\n  /**\n   * Makes path to the start directory\n   */\n  startPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.start, ...paths)\n  }\n\n  /**\n   * Makes path to the tmp directory\n   */\n  tmpPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.tmp, ...paths)\n  }\n\n  /**\n   * Makes path to the contracts directory\n   * @deprecated\n   */\n  contractsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.contracts, ...paths)\n  }\n\n  /**\n   * Makes path to the http controllers directory\n   */\n  httpControllersPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.httpControllers, ...paths)\n  }\n\n  /**\n   * Makes path to the models directory\n   */\n  modelsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.models, ...paths)\n  }\n\n  /**\n   * Makes path to the services directory\n   */\n  servicesPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.services, ...paths)\n  }\n\n  /**\n   * Makes path to the exceptions directory\n   */\n  exceptionsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.exceptions, ...paths)\n  }\n\n  /**\n   * Makes path to the mailers directory\n   */\n  mailersPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.mailers, ...paths)\n  }\n\n  /**\n   * Makes path to the mails directory\n   */\n  mailsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.mails, ...paths)\n  }\n\n  /**\n   * Makes path to the middleware directory\n   */\n  middlewarePath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.middleware, ...paths)\n  }\n\n  /**\n   * Makes path to the policies directory\n   */\n  policiesPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.policies, ...paths)\n  }\n\n  /**\n   * Makes path to the validators directory\n   */\n  validatorsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.validators, ...paths)\n  }\n\n  /**\n   * Makes path to the commands directory\n   */\n  commandsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.commands, ...paths)\n  }\n\n  /**\n   * Makes path to the events directory\n   */\n  eventsPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.events, ...paths)\n  }\n\n  /**\n   * Makes path to the listeners directory\n   */\n  listenersPath(...paths: string[]): string {\n    return this.makePath(this.rcFile.directories.listeners, ...paths)\n  }\n\n  /**\n   * Import a module by identifier. This method uses the importer function\n   * defined at the time of creating the application instance and throws\n   * an error if no importer was defined.\n   */\n  import(moduleIdentifier: string) {\n    if (!this.#importer) {\n      throw new RuntimeException(\n        `Cannot import \"${moduleIdentifier}\". Register a module importer with the application first.`\n      )\n    }\n    return this.#importer(moduleIdentifier)\n  }\n\n  /**\n   * Import a module by identifier. This method uses the importer function\n   * defined at the time of creating the application instance and throws\n   * an error if no importer was defined.\n   */\n  importDefault<T extends object>(moduleIdentifier: string) {\n    if (!this.#importer) {\n      throw new RuntimeException(\n        `Cannot import \"${moduleIdentifier}\". Register a module importer with the application first.`\n      )\n    }\n\n    return importDefault<T>(() => this.#importer!(moduleIdentifier))\n  }\n\n  /**\n   * JSON representation of the application\n   */\n  toJSON() {\n    return {\n      isReady: this.isReady,\n      isTerminating: this.isTerminating,\n      environment: this.#environment,\n      nodeEnvironment: this.nodeEnvironment,\n      appName: this.appName,\n      version: this.version ? this.version.toString() : null,\n      adonisVersion: this.adonisVersion ? this.adonisVersion.toString() : null,\n    }\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Config, ConfigLoader } from '@adonisjs/config'\nimport debug from '../debug.js'\n\n/**\n * Env manager is used to load, parse, validate and set environment\n * variables.\n */\nexport class ConfigManager {\n  #appRoot: URL\n\n  /**\n   * Config tree set explicitly\n   */\n  #configValues?: Record<any, any>\n\n  /**\n   * Reference to the config class. The value is defined\n   * after the \"init\" method call\n   */\n  config!: Config\n\n  constructor(appRoot: URL) {\n    this.#appRoot = appRoot\n  }\n\n  /**\n   * Define the config values to use when booting the\n   * config provider. Calling this method disables\n   * reading files from the config directory.\n   */\n  useConfig(values: Record<any, any>): this {\n    this.#configValues = values\n    return this\n  }\n\n  /**\n   * Process config values.\n   */\n  async process(configDirectory: string) {\n    if (this.#configValues) {\n      this.config = new Config(this.#configValues)\n    } else {\n      const loader = new ConfigLoader(new URL(configDirectory, this.#appRoot))\n      debug('loading config from directory \"%s\"', configDirectory)\n      this.config = new Config(await loader.load())\n    }\n\n    this.#configValues = undefined\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport debug from '../debug.js'\nimport type { RcFile } from '../types.js'\nimport { RcFileParser } from '../rc_file/parser.js'\n\n/**\n * RcFileManager is used to process the raw contents or the contents\n * of \"adonisrc.js\" file.\n */\nexport class RcFileManager {\n  #appRoot: URL\n\n  /**\n   * RcFile contents set explicitly\n   */\n  #rcContents?: Record<string, any>\n\n  /**\n   * Reference to the parsed rc file. The value is defined\n   * after the \"init\" method call\n   */\n  rcFile!: RcFile\n\n  constructor(appRoot: URL) {\n    this.#appRoot = appRoot\n  }\n\n  /**\n   * Specify the contents of the \"adonisrc.js\" file as\n   * an object. Calling this method will disable loading\n   * the \"adonisrc.js\" file from the disk.\n   */\n  rcContents(value: Record<string, any>): this {\n    this.#rcContents = value\n    return this\n  }\n\n  /**\n   * Process the contents for the rcFile\n   */\n  async process() {\n    if (!this.#rcContents) {\n      const rcTSFile = new URL('adonisrc.js', this.#appRoot)\n\n      try {\n        const rcExports = await import(rcTSFile.href)\n        this.#rcContents = rcExports.default\n        debug('adonisrc.ts file contents: %O', this.#rcContents)\n      } catch (error) {\n        if (!/Cannot find module/.test(error.message)) {\n          throw error\n        }\n      }\n    }\n\n    this.rcFile = new RcFileParser(this.#rcContents!).parse()\n    this.#rcContents = undefined\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Aliases for different environments\n */\nconst TEST_ENVS = ['test', 'testing']\nconst PROD_ENVS = ['prod', 'production']\nconst DEV_ENVS = ['dev', 'develop', 'development']\n\n/**\n * NodeEnvManager is used to extract a normalized node environment by\n * inspect the \"process.env.NODE_ENV\".\n *\n * - The \"test\" and \"testing\" envs are normalized to \"test\"\n * - The \"prod\" and \"production\" envs are normalized to \"production\"\n * - The \"dev\", \"develop\", and \"development\" envs are normalized to \"development\"\n */\nexport class NodeEnvManager {\n  nodeEnvironment: 'unknown' | 'development' | 'production' | 'test' | string = 'unknown'\n\n  /**\n   * Normalizes node env\n   */\n  #normalizeNodeEnv(env?: string) {\n    if (!env || typeof env !== 'string') {\n      return 'unknown'\n    }\n\n    env = env.toLowerCase()\n    if (DEV_ENVS.includes(env)) {\n      return 'development'\n    }\n\n    if (PROD_ENVS.includes(env)) {\n      return 'production'\n    }\n\n    if (TEST_ENVS.includes(env)) {\n      return 'test'\n    }\n\n    return env\n  }\n\n  /**\n   * Capture the current node env\n   */\n  process() {\n    this.nodeEnvironment = this.#normalizeNodeEnv(process.env.NODE_ENV)\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport debug from '../debug.js'\nimport type { AppEnvironments, PreloadNode } from '../types.js'\n\n/**\n * The PreloadsManager class is used to resolve and import preload modules.\n *\n * The class relies on \"import.meta.resolve\" to resolve the provider modules from\n * the root of the application.\n */\nexport class PreloadsManager {\n  /**\n   * List of registered preloads\n   */\n  #list: PreloadNode[] = []\n\n  /**\n   * The options accepted by the manager.\n   */\n  #options: {\n    environment: AppEnvironments\n  }\n\n  constructor(options: { environment: AppEnvironments }) {\n    this.#options = options\n  }\n\n  /**\n   * Filters the preload modules by the current environment.\n   */\n  #filterByEnvironment(provider: PreloadNode) {\n    if (this.#options.environment === 'unknown') {\n      return false\n    }\n\n    return provider.environment.includes(this.#options.environment)\n  }\n\n  /**\n   * Pass an array of preload modules to import\n   */\n  use(list: PreloadNode[]): this {\n    this.#list = list\n    return this\n  }\n\n  /**\n   * Switch the environment in which the app is running.\n   */\n  setEnvironment(environment: AppEnvironments): this {\n    debug(\n      'switching environment for preloads { from:\"%s\", to: \"%s\" }',\n      this.#options.environment,\n      environment\n    )\n    this.#options.environment = environment\n    return this\n  }\n\n  /**\n   * Import preload files\n   */\n  async import() {\n    const preloads = this.#list.filter((preload) => this.#filterByEnvironment(preload))\n    debug('preloading modules %O', preloads)\n\n    await Promise.all(preloads.map((preload) => preload.file()))\n\n    this.#list = []\n  }\n}\n","/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from '@poppinss/utils'\n\nimport debug from '../debug.js'\nimport type { ProviderNode, AppEnvironments, ContainerProviderContract } from '../types.js'\n\n/**\n * The ProvidersManager class is used to resolve, import and execute lifecycle\n * methods on registered providers.\n *\n * The class relies on \"import.meta.resolve\" to resolve the provider modules from\n * the root of the application.\n *\n * Also, a single instance of the provider is used to executed all the hooks.\n */\nexport class ProvidersManager {\n  /**\n   * An array of collected providers\n   */\n  #providers: ContainerProviderContract[] = []\n\n  /**\n   * An array of providers with the `shutdown` method. We release the\n   * values from the providers array and only keep the once with\n   * shutdown method\n   */\n  #providersWithShutdownListeners: ContainerProviderContract[] = []\n\n  /**\n   * An array of providers modules picked from the \".adonisrc.ts\"\n   * file.\n   */\n  #list: ProviderNode[] = []\n\n  /**\n   * The options accepted by the manager\n   */\n  #options: {\n    environment: AppEnvironments\n    providersState: any[]\n  }\n\n  constructor(options: { environment: AppEnvironments; providersState: any[] }) {\n    this.#options = options\n  }\n\n  /**\n   * Filters the providers by the current environment.\n   */\n  #filterByEnvironment(provider: ProviderNode) {\n    if (this.#options.environment === 'unknown') {\n      return false\n    }\n\n    return provider.environment.includes(this.#options.environment)\n  }\n\n  /**\n   * Check if value is a class\n   */\n  #isAClass(providerClass: any) {\n    return typeof providerClass === 'function' && providerClass.toString().startsWith('class ')\n  }\n\n  /**\n   * Imports all providers from the registered module path. The method relies\n   * on --experimental-import-meta-resolve flag to resolve paths from\n   * the app root.\n   */\n  async #resolveProvider(provider: ProviderNode): Promise<{\n    new (...args: any[]): ContainerProviderContract\n  } | null> {\n    const providerExports = await provider.file()\n    const exportsLength = Object.keys(providerExports).length\n\n    /**\n     * Return null when there are no exports\n     */\n    if (exportsLength === 0) {\n      return null\n    }\n\n    /**\n     * If there are exports and not a default export, then we consider\n     * it to be an invalid provider\n     */\n    if (!providerExports.default) {\n      throw new RuntimeException(\n        `Invalid exports from \"${provider.file.toString()}\" provider. It must have a default export`\n      )\n    }\n\n    /**\n     * If the default export is not a class, then also we consider it\n     * to be an invalid provider\n     */\n    if (!this.#isAClass(providerExports.default)) {\n      throw new RuntimeException(\n        `Default export from module \"${provider.file.toString()}\" is not a class`\n      )\n    }\n\n    return providerExports.default\n  }\n\n  /**\n   * Resolves all providers from the supplied list of module paths.\n   */\n  #resolve() {\n    const providers = this.#list.filter((provider) => this.#filterByEnvironment(provider))\n    debug('loading providers %O', providers)\n\n    return Promise.all(providers.map((provider) => this.#resolveProvider(provider)))\n  }\n\n  /**\n   * Pass an array of providers to use\n   */\n  use(list: ProviderNode[]): this {\n    this.#list = list\n    return this\n  }\n\n  /**\n   * Switch the environment in which the app is running.\n   */\n  setEnvironment(environment: AppEnvironments): this {\n    debug(\n      'switching environment for providers { from:\"%s\", to: \"%s\" }',\n      this.#options.environment,\n      environment\n    )\n    this.#options.environment = environment\n    return this\n  }\n\n  /**\n   * Invoke register method on the providers.\n   */\n  async register() {\n    const providers = await this.#resolve()\n    this.#list = []\n\n    providers.forEach((provider) => {\n      if (provider) {\n        const providerInstance = new provider(...this.#options.providersState)\n        this.#providers.push(providerInstance)\n\n        if (providerInstance.shutdown) {\n          this.#providersWithShutdownListeners.push(providerInstance)\n        }\n\n        if (providerInstance.register) {\n          providerInstance.register()\n        }\n      }\n    })\n  }\n\n  /**\n   * Invoke boot method on the providers. The existing providers\n   * instances are used.\n   */\n  async boot() {\n    for (let provider of this.#providers) {\n      if (provider.boot) {\n        await provider.boot()\n      }\n    }\n  }\n\n  /**\n   * Invoke start method on all the providers\n   */\n  async start() {\n    for (let provider of this.#providers) {\n      if (provider.start) {\n        await provider.start()\n      }\n    }\n  }\n\n  /**\n   * Invoke ready method on all the providers\n   */\n  async ready() {\n    for (let provider of this.#providers) {\n      if (provider.ready) {\n        await provider.ready()\n      }\n    }\n\n    this.#providers = []\n  }\n\n  /**\n   * Invoke shutdown method on all the providers\n   */\n  async shutdown() {\n    for (let provider of this.#providersWithShutdownListeners) {\n      if (provider.shutdown) {\n        await provider.shutdown()\n      }\n    }\n\n    this.#providersWithShutdownListeners = []\n  }\n}\n"],"mappings":"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","names":["join","RuntimeException","RuntimeException","join"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/build/chunk-7WA7C5MT.js":{"lineLengths":[38,33,23,66,2,0,15,37,45,0,8,11,15,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/application/src/debug.ts"],"sourcesContent":["/*\n * @adonisjs/application\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\nexport default debuglog('adonisjs:app')\n"],"mappings":";;;;;;;AASA,SAAS,gBAAgB;AACzB,IAAO,gBAAQ,SAAS,cAAc;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/build/chunk-CEXVRLXG.js":{"lineLengths":[38,33,23,66,2,0,16,24,26,47,44,3,46,37,67,22,2,36,64,21,2,0,20,44,87,90,0,14,41,52,18,7,20,20,3,5,22,5,19,84,3,5,47,5,32,57,3,2,0,26,41,86,29,5,61,35,5,13,5,69,66,47,5,19,23,67,3,5,70,30,4,13,13,14,15,14,12,4,75,71,5,37,49,67,5,95,88,3,5,62,5,28,38,18,5,59,28,18,5,62,19,18,5,69,74,3,2,0,20,36,11,5,61,35,5,13,5,69,47,5,19,5,62,26,5,11,5,67,5,19,5,25,5,19,35,3,24,152,61,38,73,53,3,5,29,5,27,37,36,5,29,37,5,3,5,73,30,4,13,13,14,15,14,12,4,78,72,5,40,33,71,82,92,97,8,8,86,3,5,50,5,27,36,18,5,77,51,18,5,72,21,18,5,48,14,18,5,58,58,10,6,23,18,5,9,77,94,62,13,18,5,3,5,57,5,18,61,3,2,0,8,17,12,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/src/errors.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/src/encryption.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/src/hmac.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/encryption/src/message_verifier.ts"],"sourcesContent":["/*\n * @adonisjs/encryption\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createError } from '@poppinss/utils'\n\nexport const E_INSECURE_APP_KEY = createError(\n  'The value of \"app.appKey\" should be atleast 16 characters long',\n  'E_INSECURE_APP_KEY'\n)\n\nexport const E_MISSING_APP_KEY = createError(\n  'Missing \"app.appKey\". The key is required to encrypt values',\n  'E_MISSING_APP_KEY'\n)\n","/*\n * @adonisjs/encryption\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport string from '@poppinss/utils/string'\nimport { base64, MessageBuilder } from '@poppinss/utils'\nimport { createHash, createCipheriv, createDecipheriv } from 'node:crypto'\n\nimport { Hmac } from './hmac.js'\nimport * as errors from './errors.js'\nimport type { EncryptionOptions } from './types.js'\nimport { MessageVerifier } from './message_verifier.js'\n\n/**\n * The encryption class allows encrypting and decrypting values using `aes-256-cbc` or `aes-128-cbc`\n * algorithms. The encrypted value uses a unique iv for every encryption and this ensures semantic\n * security (read more https://en.wikipedia.org/wiki/Semantic_security).\n */\nexport class Encryption {\n  #options: Required<EncryptionOptions>\n\n  /**\n   * The key for signing and encrypting values. It is derived\n   * from the user provided secret.\n   */\n  #cryptoKey: Buffer\n\n  /**\n   * Use `dot` as a separator for joining encrypted value, iv and the\n   * hmac hash. The idea is borrowed from JWTs.\n   */\n  #separator = '.'\n\n  /**\n   * Reference to the instance of message verifier for signing\n   * and verifying values.\n   */\n  verifier: MessageVerifier\n\n  /**\n   * Reference to base64 object for base64 encoding/decoding values\n   */\n  base64: typeof base64 = base64\n\n  /**\n   * The algorithm in use\n   */\n  get algorithm(): 'aes-256-cbc' {\n    return this.#options.algorithm\n  }\n\n  constructor(options: EncryptionOptions) {\n    const secretValue =\n      options.secret && typeof options.secret === 'object' && 'release' in options.secret\n        ? options.secret.release()\n        : options.secret\n\n    this.#options = { algorithm: 'aes-256-cbc', ...options }\n    this.#validateSecret(secretValue)\n    this.#cryptoKey = createHash('sha256').update(secretValue).digest()\n    this.verifier = new MessageVerifier(secretValue)\n  }\n\n  /**\n   * Validates the app secret\n   */\n  #validateSecret(secret?: string) {\n    if (typeof secret !== 'string') {\n      throw new errors.E_MISSING_APP_KEY()\n    }\n\n    if (secret.length < 16) {\n      throw new errors.E_INSECURE_APP_KEY()\n    }\n  }\n\n  /**\n   * Encrypt a given piece of value using the app secret. A wide range of\n   * data types are supported.\n   *\n   * - String\n   * - Arrays\n   * - Objects\n   * - Booleans\n   * - Numbers\n   * - Dates\n   *\n   * You can optionally define a purpose for which the value was encrypted and\n   * mentioning a different purpose/no purpose during decrypt will fail.\n   */\n  encrypt(payload: any, expiresIn?: string | number, purpose?: string) {\n    /**\n     * Using a random string as the iv for generating unpredictable values\n     */\n    const iv = string.random(16)\n\n    /**\n     * Creating chiper\n     */\n    const cipher = createCipheriv(this.algorithm, this.#cryptoKey, iv)\n\n    /**\n     * Encoding value to a string so that we can set it on the cipher\n     */\n    const encodedValue = new MessageBuilder().build(payload, expiresIn, purpose)\n\n    /**\n     * Set final to the cipher instance and encrypt it\n     */\n    const encrypted = Buffer.concat([cipher.update(encodedValue, 'utf-8'), cipher.final()])\n\n    /**\n     * Concatenate `encrypted value` and `iv` by urlEncoding them. The concatenation is required\n     * to generate the HMAC, so that HMAC checks for integrity of both the `encrypted value`\n     * and the `iv`.\n     */\n    const result = `${this.base64.urlEncode(encrypted)}${this.#separator}${this.base64.urlEncode(\n      iv\n    )}`\n\n    /**\n     * Returns the result + hmac\n     */\n    return `${result}${this.#separator}${new Hmac(this.#cryptoKey).generate(result)}`\n  }\n\n  /**\n   * Decrypt value and verify it against a purpose\n   */\n  decrypt<T extends any>(value: unknown, purpose?: string): T | null {\n    if (typeof value !== 'string') {\n      return null\n    }\n\n    /**\n     * Make sure the encrypted value is in correct format. ie\n     * [encrypted value].[iv].[hash]\n     */\n    const [encryptedEncoded, ivEncoded, hash] = value.split(this.#separator)\n    if (!encryptedEncoded || !ivEncoded || !hash) {\n      return null\n    }\n\n    /**\n     * Make sure we are able to urlDecode the encrypted value\n     */\n    const encrypted = this.base64.urlDecode(encryptedEncoded, 'base64')\n    if (!encrypted) {\n      return null\n    }\n\n    /**\n     * Make sure we are able to urlDecode the iv\n     */\n    const iv = this.base64.urlDecode(ivEncoded)\n    if (!iv) {\n      return null\n    }\n\n    /**\n     * Make sure the hash is correct, it means the first 2 parts of the\n     * string are not tampered.\n     */\n    const isValidHmac = new Hmac(this.#cryptoKey).compare(\n      `${encryptedEncoded}${this.#separator}${ivEncoded}`,\n      hash\n    )\n\n    if (!isValidHmac) {\n      return null\n    }\n\n    /**\n     * The Decipher can raise exceptions with malformed input, so we wrap it\n     * to avoid leaking sensitive information\n     */\n    try {\n      const decipher = createDecipheriv(this.algorithm, this.#cryptoKey, iv)\n      const decrypted = decipher.update(encrypted, 'base64', 'utf8') + decipher.final('utf8')\n      return new MessageBuilder().verify(decrypted, purpose)\n    } catch {\n      return null\n    }\n  }\n\n  /**\n   * Create a children instance with different secret key\n   */\n  child(options?: EncryptionOptions) {\n    return new Encryption({ ...this.#options, ...options })\n  }\n}\n","/*\n * @adonisjs/encryption\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createHmac } from 'node:crypto'\nimport { base64, safeEqual } from '@poppinss/utils'\n\n/**\n * A generic class for generating SHA-256 Hmac for verifying the value\n * integrity.\n */\nexport class Hmac {\n  #key: Buffer\n\n  constructor(key: Buffer) {\n    this.#key = key\n  }\n\n  /**\n   * Generate the hmac\n   */\n  generate(value: string) {\n    return base64.urlEncode(createHmac('sha256', this.#key).update(value).digest())\n  }\n\n  /**\n   * Compare raw value against an existing hmac\n   */\n  compare(value: string, existingHmac: string) {\n    return safeEqual(this.generate(value), existingHmac)\n  }\n}\n","/*\n * @adonisjs/encryption\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createHash } from 'node:crypto'\nimport { base64, MessageBuilder, RuntimeException } from '@poppinss/utils'\nimport { Hmac } from './hmac.js'\n\n/**\n * Message verifier is similar to the encryption. However, the actual payload\n * is not encrypted and just base64 encoded. This is helpful when you are\n * not concerned about the confidentiality of the data, but just want to\n * make sure that is not tampered after encoding.\n */\nexport class MessageVerifier {\n  /**\n   * The key for signing and encrypting values. It is derived\n   * from the user provided secret.\n   */\n  #cryptoKey: Buffer\n\n  /**\n   * Use `dot` as a separator for joining encrypted value, iv and the\n   * hmac hash. The idea is borrowed from JWT's in which each part\n   * of the payload is concatenated with a dot.\n   */\n  #separator = '.'\n\n  constructor(secret: string) {\n    this.#cryptoKey = createHash('sha256').update(secret).digest()\n  }\n\n  /**\n   * Sign a given piece of value using the app secret. A wide range of\n   * data types are supported.\n   *\n   * - String\n   * - Arrays\n   * - Objects\n   * - Booleans\n   * - Numbers\n   * - Dates\n   *\n   * You can optionally define a purpose for which the value was signed and\n   * mentioning a different purpose/no purpose during unsign will fail.\n   */\n  sign(payload: any, expiresIn?: string | number, purpose?: string) {\n    if (payload === null || payload === undefined) {\n      throw new RuntimeException(`Cannot sign \"${payload}\" value`)\n    }\n\n    const encoded = base64.urlEncode(new MessageBuilder().build(payload, expiresIn, purpose))\n    return `${encoded}${this.#separator}${new Hmac(this.#cryptoKey).generate(encoded)}`\n  }\n\n  /**\n   * Unsign a previously signed value with an optional purpose\n   */\n  unsign<T extends any>(payload: string, purpose?: string): T | null {\n    if (typeof payload !== 'string') {\n      return null\n    }\n\n    /**\n     * Ensure value is in correct format\n     */\n    const [encoded, hash] = payload.split(this.#separator)\n    if (!encoded || !hash) {\n      return null\n    }\n\n    /**\n     * Ensure value can be decoded\n     */\n    const decoded = base64.urlDecode(encoded, undefined, false)\n    if (!decoded) {\n      return null\n    }\n\n    const isValid = new Hmac(this.#cryptoKey).compare(encoded, hash)\n    return isValid ? new MessageBuilder().verify(decoded, purpose) : null\n  }\n}\n"],"mappings":"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","names":["base64","MessageBuilder","createHash","base64","base64","base64","createHash","MessageBuilder"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/build/chunk-UQEGDK7Z.js":{"lineLengths":[38,33,23,66,2,0,22,34,45,46,72,62,0,43,30,26,65,56,29,31,5,4,1,0,25,56,113,46,75,5,73,38,43,35,5,67,5,1,0,17,30,60,0,22,44,42,5,18,5,11,5,39,5,18,5,42,5,7,5,40,5,20,5,66,5,15,47,12,20,46,36,50,3,5,36,5,23,63,29,43,31,13,7,22,3,5,70,47,5,41,65,49,28,42,7,75,7,3,5,36,5,32,64,49,28,42,7,36,7,3,2,0,22,45,0,25,44,45,51,46,5,56,24,5,12,5,55,5,14,5,72,66,5,19,5,39,5,18,5,42,5,7,5,40,5,20,5,60,53,15,5,15,5,53,28,5,18,5,67,5,14,47,12,49,20,36,46,42,50,67,53,24,3,5,66,13,5,36,58,3,5,48,5,35,40,72,5,3,5,55,25,5,24,87,3,5,76,5,42,64,14,14,115,42,7,50,28,3,5,61,52,31,4,28,26,5,28,63,3,5,40,5,18,48,41,39,52,60,41,40,35,57,70,50,96,101,99,94,3,5,51,5,27,59,42,75,38,7,3,5,49,5,15,72,16,3,5,50,5,17,73,16,3,5,68,51,5,13,43,3,5,50,5,23,36,32,7,16,3,26,40,38,33,25,9,9,18,5,53,31,24,7,7,16,3,5,44,5,21,50,40,51,43,38,25,93,10,9,7,16,3,5,59,18,4,62,22,5,28,26,49,12,58,5,16,3,5,15,5,35,41,3,5,35,5,34,57,36,75,7,32,16,3,2,0,22,55,23,12,25,3,5,49,5,19,5,79,70,32,5,42,39,83,13,5,41,87,13,5,38,60,13,5,52,3,5,77,73,11,5,33,39,74,13,5,41,60,13,5,38,33,13,5,25,3,5,76,69,17,5,34,39,75,13,5,41,60,13,5,38,33,13,5,25,3,5,82,75,11,5,37,39,78,13,5,41,60,13,5,38,40,13,5,32,3,5,84,77,11,5,47,39,88,13,5,41,67,13,5,38,40,13,5,32,3,5,31,4,10,24,30,8,5,25,85,16,3,5,47,4,10,24,20,8,5,18,72,16,3,5,38,4,10,24,36,8,5,18,75,16,3,5,37,4,10,24,22,8,5,12,71,16,3,5,61,4,10,24,30,8,5,19,35,82,5,36,35,35,7,12,40,5,16,3,5,15,5,26,32,3,2,0,17,41,27,22,15,3,59,1,31,41,38,53,18,5,41,53,18,5,38,52,40,7,18,5,29,32,5,16,9,1,45,38,41,3,43,40,16,1,35,34,31,31,49,12,18,6,3,47,14,3,20,12,18,6,3,18,68,3,49,23,33,20,6,6,4,1,0,15,37,46,0,22,38,5,18,5,11,5,31,5,11,5,32,5,8,5,62,15,4,56,5,21,5,18,5,11,5,39,5,18,5,42,5,7,5,40,5,20,5,75,30,5,24,5,69,48,5,17,5,61,11,5,17,5,65,60,5,19,47,12,20,46,36,36,62,50,3,5,54,26,5,32,38,39,65,42,14,27,88,21,8,5,33,33,16,29,78,10,7,14,27,78,8,5,19,3,5,68,65,10,5,18,58,3,5,80,5,21,45,90,75,3,5,74,69,66,14,4,10,24,58,30,8,4,67,5,25,32,18,5,38,61,36,49,12,38,5,16,3,5,68,52,5,18,32,16,3,5,73,44,5,37,52,33,5,16,3,5,66,13,4,70,33,5,19,81,16,3,5,15,5,26,32,3,5,72,32,4,69,5,29,18,24,36,82,10,7,43,18,5,22,16,3,5,48,5,15,27,3,5,61,25,5,19,27,3,5,23,5,13,22,3,5,26,5,16,25,3,5,26,5,23,28,16,3,5,61,38,5,19,28,3,5,63,10,5,28,40,45,84,26,7,46,83,26,7,22,3,5,45,5,12,12,32,38,36,15,23,29,29,48,13,6,3,2,0,31,57,22,43,16,3,61,1,34,42,1,31,85,1,0,32,40,43,16,3,61,1,34,81,1,48,37,15,16,3,48,1,0,35,40,43,16,3,55,1,37,87,1,51,40,15,16,3,40,1,0,24,26,14,27,34,3,5,61,5,23,47,3,5,58,5,20,47,3,5,60,5,20,23,3,5,33,5,22,76,3,5,38,5,23,76,3,5,35,5,20,51,3,5,26,5,21,28,51,5,28,51,5,27,27,5,3,2,0,17,26,29,30,32,35,35,44,45,44,48,33,0,24,28,26,10,5,69,47,5,20,22,21,24,4,5,53,31,5,11,41,48,46,3,5,39,5,24,24,16,5,38,3,5,71,67,39,5,31,37,45,18,5,51,32,24,5,69,26,26,5,18,3,5,71,68,5,15,37,45,18,5,52,32,24,5,51,26,26,5,18,3,5,72,71,5,16,37,45,18,5,55,32,24,5,52,26,26,5,18,3,5,62,63,10,5,10,25,3,2,0,17,40,64,12,27,29,30,26,34,52,29,3,5,24,5,12,5,63,12,5,14,5,19,5,10,5,44,5,20,5,54,5,20,5,62,52,5,28,5,24,5,18,5,29,5,18,5,46,17,5,15,5,52,5,16,5,65,66,28,5,12,5,69,14,5,6,5,28,5,23,31,64,59,5,3,5,39,5,27,30,85,5,3,5,64,65,22,5,22,67,3,5,63,47,5,8,48,55,29,55,5,21,3,5,85,86,71,4,85,65,5,24,82,86,5,26,83,3,5,69,64,10,5,20,29,69,3,5,75,61,5,26,35,3,5,73,67,5,18,27,69,3,5,25,5,12,34,3,5,49,5,8,27,3,5,42,5,10,29,3,5,57,21,5,9,29,3,5,61,26,5,14,37,3,5,65,4,90,57,5,9,40,3,5,73,67,4,13,10,30,4,26,38,8,5,28,60,3,5,52,4,13,10,24,4,26,27,8,5,28,56,3,5,64,4,13,10,30,8,5,16,48,3,5,34,4,13,10,38,8,5,14,48,3,5,58,53,23,4,13,10,23,8,5,14,31,3,5,76,4,62,4,60,43,50,4,13,10,21,8,5,12,73,66,5,27,3,5,43,5,13,32,3,5,63,45,5,29,28,35,18,21,22,67,14,44,5,3,5,73,67,4,78,68,4,10,6,14,26,78,45,10,8,6,8,4,77,37,4,10,6,14,31,8,6,8,4,105,5,8,36,37,24,5,60,3,5,69,66,38,4,77,37,4,10,6,14,31,8,6,8,4,105,5,9,64,3,5,69,32,4,75,62,4,77,37,4,10,6,14,31,8,6,8,4,105,5,14,45,21,5,82,47,5,63,78,3,5,64,62,13,5,12,39,3,5,65,65,4,77,37,4,10,6,14,31,8,6,8,4,105,5,10,35,81,53,5,16,18,5,16,3,5,69,65,4,77,37,4,10,6,14,31,8,6,8,4,105,5,14,29,16,18,5,63,44,58,3,5,73,60,4,48,5,16,37,38,16,5,48,67,54,50,5,22,3,5,82,12,5,10,63,61,3,5,62,15,5,10,35,3,5,38,4,13,10,18,4,28,22,8,5,27,45,105,3,5,47,40,4,13,10,26,4,28,30,8,5,35,37,33,70,3,5,74,5,33,39,19,5,33,89,23,72,22,9,50,23,9,54,7,6,3,5,61,38,4,74,20,4,85,4,31,33,24,45,40,4,13,10,49,4,31,21,6,4,30,20,6,8,5,13,47,3,5,52,44,4,56,4,80,14,4,13,10,49,19,35,19,45,15,27,6,8,5,18,28,49,3,5,67,48,4,80,14,5,11,28,37,3,5,61,52,4,56,4,80,14,4,13,10,46,17,52,17,52,15,52,6,8,5,23,28,57,3,5,71,48,4,80,14,5,15,28,41,3,5,59,51,4,56,4,80,14,4,13,10,56,20,40,25,45,6,8,5,21,28,55,3,5,70,48,4,80,14,5,14,28,40,3,5,61,52,4,56,4,80,14,5,23,28,57,3,5,70,48,4,80,14,5,15,28,41,3,5,50,5,13,40,3,5,70,66,62,26,4,74,77,4,50,4,10,50,4,46,35,4,27,31,13,34,6,8,5,11,58,19,5,44,58,63,5,17,3,5,26,5,11,25,3,5,66,37,5,17,33,37,3,5,64,61,5,29,33,58,3,5,64,61,5,38,33,59,3,52,33,44,114,5,76,3,5,67,12,5,30,45,21,19,5,75,21,19,5,55,113,3,5,38,5,15,12,20,22,34,23,28,30,28,32,34,32,20,44,6,3,5,31,5,12,28,3,2,0,18,43,34,22,5,51,5,30,5,37,5,20,5,37,5,20,11,12,10,6,46,28,30,26,18,3,5,46,5,29,50,54,50,44,48,53,49,3,5,29,5,21,91,45,3,5,30,5,22,34,16,3,5,49,20,5,13,37,27,16,3,23,38,38,18,5,35,38,18,5,43,16,3,5,35,5,10,19,47,36,52,58,35,46,5,44,50,3,5,51,5,45,32,30,26,5,71,28,3,5,39,5,15,19,35,68,5,44,35,3,2,0,20,28,30,53,43,55,44,3,57,36,17,22,5,2,40,29,26,5,2,62,7,35,5,59,5,58,43,66,44,20,5,35,82,25,20,5,51,22,17,3,2,76,22,55,3,2,0,25,22,16,26,18,18,10,15,16,35,17,20,22,19,23,14,23,24,13,16,19,16,25,25,18,20,23,17,16,24,21,35,22,16,12,22,26,23,18,28,27,25,17,26,27,14,24,16,23,28,23,35,34,27,22,18,26,22,31,29,27,20,19,36,2,0,18,24,24,27,30,30,36,37,40,45,43,40,72,53,0,28,29,45,30,10,27,48,3,5,70,25,5,43,35,40,26,5,83,74,56,3,5,83,83,4,81,4,10,39,8,5,31,92,57,18,5,62,3,5,69,63,5,29,54,31,18,5,62,3,5,54,5,32,57,31,18,5,62,3,2,0,18,45,41,66,12,27,29,18,26,26,62,3,5,24,5,6,5,21,5,16,5,33,5,29,5,57,5,20,5,57,5,10,5,20,5,10,5,56,46,5,21,91,3,5,48,5,20,35,3,5,67,11,5,19,34,3,5,69,37,5,25,40,3,5,56,46,5,17,33,3,5,64,11,5,24,37,3,5,67,12,5,22,41,42,49,15,3,5,64,64,15,5,16,5,69,14,5,6,5,62,60,26,5,18,42,3,5,72,62,16,5,21,37,3,5,70,69,14,5,19,47,3,5,62,5,27,68,3,5,59,5,34,31,30,30,3,5,72,4,12,13,15,14,14,13,5,25,35,22,5,34,20,5,36,22,5,36,108,22,5,32,22,5,83,3,5,74,42,4,33,5,55,82,23,27,5,48,145,40,42,45,26,13,5,23,42,26,13,5,48,32,44,115,32,37,38,5,28,84,103,5,23,28,5,39,40,42,45,58,13,5,62,28,55,72,12,25,22,74,68,16,22,23,20,22,22,71,16,22,85,16,22,77,16,7,5,31,3,5,71,5,35,37,27,35,23,17,9,24,22,26,32,52,55,18,30,81,100,14,11,16,34,9,18,9,28,32,30,9,18,9,39,24,22,9,26,31,7,3,5,53,5,70,9,41,38,77,7,62,35,25,34,7,43,26,15,87,10,15,7,41,60,15,7,48,72,21,24,32,48,51,14,26,77,96,10,7,5,3,5,49,23,4,51,56,5,22,40,3,5,57,30,5,18,28,38,41,20,46,9,7,5,3,5,51,5,25,83,16,3,5,57,12,5,18,51,67,3,5,25,5,16,12,36,22,6,3,5,86,29,4,56,4,13,10,56,8,5,22,45,18,5,68,16,3,5,79,23,4,56,4,13,10,51,8,5,22,45,18,5,28,45,46,26,34,18,5,59,109,32,16,3,5,63,5,26,31,30,5,16,3,5,58,5,21,28,36,29,46,5,16,3,5,45,5,15,36,3,5,25,5,16,35,36,16,3,5,51,8,5,20,34,18,5,36,16,3,5,60,40,4,82,9,4,13,10,61,8,5,23,58,56,16,3,5,29,5,15,31,16,3,5,89,53,4,85,5,31,46,16,3,5,70,66,62,26,4,74,77,4,50,4,13,10,50,4,46,35,4,28,31,13,34,6,8,5,11,87,19,5,44,122,57,5,17,3,5,58,21,5,13,32,38,5,16,3,5,78,67,4,79,68,5,48,49,3,5,22,5,48,41,3,5,86,24,4,40,40,75,31,4,79,68,5,96,63,3,5,69,39,4,84,80,74,27,4,73,4,13,10,63,53,4,45,10,61,17,50,6,8,5,31,95,76,5,49,3,5,77,76,4,75,4,84,80,74,27,4,13,10,63,38,4,45,10,46,22,59,43,6,8,5,71,73,3,5,76,24,4,34,5,72,28,88,64,3,5,29,4,13,10,32,8,5,17,33,16,3,81,77,29,23,5,26,47,5,15,53,5,19,3,5,65,36,5,23,83,3,5,62,36,5,36,20,31,5,3,5,62,37,5,40,21,31,5,3,5,75,33,5,31,62,72,22,18,5,42,16,3,5,78,33,5,40,62,75,22,18,5,42,16,3,5,77,33,5,36,62,74,22,18,5,42,16,3,5,27,5,29,62,50,24,93,42,16,3,5,78,37,4,69,5,12,26,13,5,23,38,13,5,31,47,13,5,37,64,13,5,24,3,5,62,5,14,41,34,3,5,62,5,24,51,34,3,5,62,5,26,35,41,3,5,62,5,31,40,41,3,5,62,5,32,41,41,3,5,62,5,51,60,41,3,5,62,5,15,42,34,3,5,62,5,18,45,34,3,5,62,5,38,47,41,3,5,62,5,39,48,41,3,5,62,5,40,49,41,3,5,62,5,40,38,41,3,5,62,5,32,41,41,3,5,62,5,35,44,41,3,5,62,5,32,41,41,3,5,62,5,41,50,41,3,5,62,5,34,43,41,3,5,62,5,36,45,41,3,5,62,5,39,48,41,3,5,62,5,33,42,41,3,5,62,5,32,41,41,3,5,62,5,40,49,41,3,5,62,5,37,46,41,3,5,62,5,51,60,41,3,5,62,5,38,47,41,3,5,62,5,32,41,41,3,5,62,5,28,37,41,3,5,62,5,38,47,41,3,5,62,5,42,51,41,3,5,62,5,45,48,41,3,5,62,5,41,43,41,3,5,62,5,44,53,41,3,5,62,5,52,52,41,3,5,62,5,41,50,41,3,5,62,5,43,52,41,3,5,62,5,39,48,41,3,5,62,5,43,52,41,3,5,62,5,38,47,41,3,5,62,5,34,43,41,3,5,62,5,42,51,41,3,5,62,5,38,47,41,3,5,62,5,47,56,41,3,2,0,21,35,67,72,0,22,41,45,72,0,23,40,47,50,16,1,0,22,25,5,50,25,5,23,5,55,5,37,5,48,5,26,37,55,37,5,37,3,5,59,5,34,51,30,69,5,30,3,5,26,5,38,54,31,40,45,100,16,41,9,7,5,40,28,18,3,5,49,5,49,61,45,34,83,8,5,32,64,77,5,37,47,134,3,5,29,4,10,16,27,24,20,16,37,8,7,8,5,14,34,31,5,68,36,19,90,6,72,39,67,7,16,3,5,71,67,23,4,74,73,37,5,30,56,56,25,18,5,64,25,18,5,67,31,18,5,60,12,12,55,47,87,6,3,5,47,5,25,42,16,5,54,3,2,0,34,45,0,41,72,24,5,24,5,12,5,41,5,15,5,40,5,11,5,57,28,5,30,5,47,5,11,5,44,5,14,5,43,5,15,50,30,34,36,3,5,62,24,5,45,62,34,91,8,5,3,4,47,5,47,45,34,84,8,5,3,5,45,5,28,27,74,74,24,46,33,29,78,36,88,55,60,14,14,36,87,31,63,9,22,49,51,9,7,5,39,3,5,39,5,31,13,55,56,5,15,3,5,40,5,23,58,3,5,46,5,18,24,16,3,5,56,42,5,24,38,16,3,5,41,5,19,23,18,5,27,16,3,5,49,5,18,18,18,5,26,16,3,5,75,60,12,5,20,12,36,61,48,12,45,5,71,3,5,84,60,12,5,35,12,36,61,48,12,45,5,53,45,25,22,6,58,65,3,2,0,42,25,15,19,29,3,5,32,5,25,62,68,20,7,42,21,7,51,15,3,5,40,5,31,45,17,57,5,17,3,5,27,5,24,40,3,5,42,5,12,24,3,2,0,34,44,5,45,5,15,5,31,5,14,5,40,5,12,37,12,34,30,3,5,32,5,19,81,47,3,5,54,15,5,13,41,3,5,58,12,5,28,40,89,3,5,63,60,12,5,33,50,18,18,5,40,3,5,63,60,12,4,54,5,39,50,18,57,5,46,3,5,55,60,12,5,32,50,18,19,5,39,3,12,65,53,20,11,3,2,0,25,45,46,5,66,9,5,12,65,3,5,42,5,10,12,93,42,6,3,5,42,5,10,79,3,2,0,27,67,55,73,28,12,17,11,19,6,4,1,44,40,22,69,20,6,6,4,1,0,21,40,5,73,5,7,5,32,5,29,5,70,5,23,5,50,5,19,5,52,25,5,21,5,61,64,5,14,5,72,63,5,23,5,54,5,33,42,32,20,3,5,59,27,5,25,74,22,38,13,5,29,3,5,29,5,35,48,3,5,60,53,32,5,19,23,85,6,16,3,5,71,71,64,5,21,45,3,5,46,5,36,58,14,14,14,42,7,30,17,3,5,56,5,25,22,14,67,13,6,3,5,23,5,25,57,3,5,24,5,26,50,3,5,23,5,25,49,3,5,25,5,27,51,3,5,26,5,28,52,3,5,66,22,5,19,37,30,35,15,29,17,3,5,63,5,34,77,15,17,21,42,7,41,28,3,5,58,5,41,77,15,17,20,42,7,41,28,3,5,59,5,15,68,14,42,7,35,22,3,5,68,62,5,25,38,67,37,55,12,44,5,16,3,5,64,29,5,12,57,50,50,72,7,62,53,36,93,10,7,23,35,7,27,29,7,31,49,21,30,26,3,5,61,5,32,61,67,29,14,40,3,5,39,5,45,57,112,27,37,82,73,41,3,5,50,5,51,57,112,27,37,82,73,66,3,2,0,27,36,45,72,0,36,53,25,5,50,30,5,19,5,56,5,16,5,65,10,5,12,26,43,24,4,5,40,5,13,27,24,3,2,0,27,44,61,12,27,29,25,47,28,29,3,5,60,11,5,39,39,3,5,56,37,5,16,69,18,5,56,3,5,62,14,5,22,69,34,98,8,5,29,17,94,5,17,3,5,63,29,5,47,37,31,5,61,3,5,57,22,5,8,5,39,5,11,5,17,5,14,5,21,5,18,5,63,5,24,13,41,3,2,0,21,38,47,98,0,12,48,16,10,23,26,3,16,45,3,20,52,3,2,0,40,62,21,34,40,75,54,16,32,40,30,36,77,5,64,4,1,0,41,29,21,9,28,21,72,54,28,5,4,1,0,45,43,29,54,42,4,1,0,21,20,5,37,5,26,14,6,24,94,5,4,5,45,44,26,5,10,5,38,5,16,5,71,19,5,52,5,58,5,11,5,58,5,7,5,57,5,14,5,18,5,10,5,43,5,12,5,64,5,25,5,47,5,10,5,56,5,18,5,50,5,19,5,61,53,30,4,62,45,5,44,50,57,4,5,51,5,32,39,3,57,20,28,26,26,34,45,75,34,53,3,5,50,5,28,44,59,33,12,34,5,3,5,55,5,34,52,90,41,26,3,5,29,5,33,254,76,58,35,3,5,38,5,24,46,33,73,7,29,49,12,29,42,20,8,29,42,20,8,16,51,66,11,7,6,3,5,75,67,18,5,19,23,85,6,16,3,5,55,47,5,25,33,16,3,5,73,4,38,47,5,16,41,40,26,29,34,77,7,55,89,5,3,5,62,5,25,34,3,5,52,11,5,19,32,3,5,50,19,5,15,24,3,5,49,5,27,81,3,5,50,5,28,96,3,5,53,5,50,27,14,15,55,14,6,3,5,19,5,20,84,67,58,39,35,36,14,6,20,30,54,14,45,11,9,5,38,90,5,46,3,2,0,23,35,45,31,54,28,31,46,23,29,32,16,34,13,19,16,21,19,21,6,9,14,17,28,27,23,19,8,18,21,32,31,24,7,6,11,4,39,91,3,41,32,53,47,32,61,27,46,3,26,1,0,8,8,13,16,13,13,15,10,11,20,24,19,25,21,17,11,5,9,14,9,14,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/route.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/factories/use_return_value.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/executor.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/helpers.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/brisk.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/group.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/resource.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/debug.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/cookies/drivers/plain.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/cookies/drivers/signed.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/cookies/drivers/encrypted.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/cookies/client.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/request.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/cookies/parser.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/redirect.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/exceptions.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/response_status.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/response.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/cookies/serializer.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/main.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/store.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/parser.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/lookup_store/main.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/lookup_store/url_builder.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/lookup_store/route_finder.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/router/matchers.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/define_middleware.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/http_context/main.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/http_context/local_storage.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/server/main.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/qs.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/server/factories/final_handler.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/server/factories/write_response.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/server/factories/middleware_handler.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/http-server/src/define_config.ts"],"sourcesContent":["/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport is from '@sindresorhus/is'\nimport Macroable from '@poppinss/macroable'\nimport Middleware from '@poppinss/middleware'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { Application } from '@adonisjs/application'\nimport { moduleCaller, moduleImporter } from '@adonisjs/fold'\n\nimport { execute } from './executor.js'\nimport { dropSlash } from '../helpers.js'\nimport type { Constructor, LazyImport, OneOrMore } from '../types/base.js'\n\nimport type {\n  MiddlewareFn,\n  ParsedNamedMiddleware,\n  ParsedGlobalMiddleware,\n} from '../types/middleware.js'\n\nimport type {\n  GetControllerHandlers,\n  RouteFn,\n  RouteJSON,\n  RouteMatcher,\n  RouteMatchers,\n  StoreRouteHandler,\n  StoreRouteMiddleware,\n} from '../types/route.js'\nimport debug from '../debug.js'\n\n/**\n * The route class exposes the APIs for constructing a route using the\n * fluent API.\n */\nexport class Route<Controller extends Constructor<any> = any> extends Macroable {\n  /**\n   * Route pattern\n   */\n  #pattern: string\n\n  /**\n   * HTTP Methods for the route\n   */\n  #methods: string[]\n\n  /**\n   * A unique name for the route\n   */\n  #name?: string\n\n  /**\n   * A boolean to prevent route from getting registered within\n   * the store.\n   *\n   * This flag must be set before \"Router.commit\" method\n   */\n  #isDeleted: boolean = false\n\n  /**\n   * Route handler\n   */\n  #handler: StoreRouteHandler\n\n  /**\n   * Matchers inherited from the router\n   */\n  #globalMatchers: RouteMatchers\n\n  /**\n   * Reference to the AdonisJS application\n   */\n  #app: Application<any>\n\n  /**\n   * Middleware registered on the router\n   */\n  #routerMiddleware: ParsedGlobalMiddleware[]\n\n  /**\n   * By default the route is part of the `root` domain. Root domain is used\n   * when no domain is defined\n   */\n  #routeDomain: string = 'root'\n\n  /**\n   * An object of matchers to be forwarded to the store. The matchers\n   * list is populated by calling `where` method\n   */\n  #matchers: RouteMatchers = {}\n\n  /**\n   * Custom prefixes defined on the route or the route parent\n   * groups\n   */\n  #prefixes: string[] = []\n\n  /**\n   * Middleware defined directly on the route or the route parent\n   * routes. We mantain an array for each layer of the stack\n   */\n  #middleware: StoreRouteMiddleware[][] = []\n\n  constructor(\n    app: Application<any>,\n    routerMiddleware: ParsedGlobalMiddleware[],\n    options: {\n      pattern: string\n      methods: string[]\n      handler:\n        | RouteFn\n        | string\n        | [LazyImport<Controller> | Controller, GetControllerHandlers<Controller>?]\n      globalMatchers: RouteMatchers\n    }\n  ) {\n    super()\n    this.#app = app\n    this.#routerMiddleware = routerMiddleware\n    this.#pattern = options.pattern\n    this.#methods = options.methods\n    this.#handler = this.#resolveRouteHandle(options.handler)\n    this.#globalMatchers = options.globalMatchers\n  }\n\n  /**\n   * Resolves the route handler string expression to a\n   * handler method object\n   */\n  #resolveRouteHandle(\n    handler:\n      | RouteFn\n      | string\n      | [LazyImport<Controller> | Controller, GetControllerHandlers<Controller>?]\n  ) {\n    /**\n     * Convert magic string to handle method call\n     */\n    if (typeof handler === 'string') {\n      const parts = handler.split('.')\n      const method = parts.length === 1 ? 'handle' : parts.pop()!\n      const moduleRefId = parts.join('.')\n\n      return {\n        reference: handler,\n        ...moduleImporter(() => this.#app.import(moduleRefId), method).toHandleMethod(),\n        name: handler,\n      }\n    }\n\n    /**\n     * Using a lazily imported controller\n     */\n    if (Array.isArray(handler)) {\n      /**\n       * The first item of the tuple is a class constructor\n       */\n      if (is.class(handler[0])) {\n        return {\n          reference: handler,\n          ...moduleCaller(handler[0], (handler[1] || 'handle') as string).toHandleMethod(),\n        }\n      }\n\n      /**\n       * The first item of the tuple is a function that lazily\n       * loads the controller\n       */\n      return {\n        reference: handler,\n        ...moduleImporter(handler[0], (handler[1] || 'handle') as string).toHandleMethod(),\n      }\n    }\n\n    return handler\n  }\n\n  /**\n   * Returns an object of param matchers by merging global and local\n   * matchers. The local copy is given preference over the global\n   * one's\n   */\n  #getMatchers() {\n    return { ...this.#globalMatchers, ...this.#matchers }\n  }\n\n  /**\n   * Returns a normalized pattern string by prefixing the `prefix` (if defined).\n   */\n  #computePattern(): string {\n    const pattern = dropSlash(this.#pattern)\n    const prefix = this.#prefixes\n      .slice()\n      .reverse()\n      .map((one) => dropSlash(one))\n      .join('')\n\n    return prefix ? `${prefix}${pattern === '/' ? '' : pattern}` : pattern\n  }\n\n  /**\n   * Define matcher for a given param. If a matcher exists, then we do not\n   * override that, since the routes inside a group will set matchers\n   * before the group, so they should have priority over the group\n   * matchers.\n   *\n   * ```ts\n   * Route.group(() => {\n   *   Route.get('/:id', 'handler').where('id', /^[0-9]$/)\n   * }).where('id', /[^a-z$]/)\n   * ```\n   *\n   * The `/^[0-9]$/` will win over the matcher defined by the group\n   */\n  where(param: string, matcher: RouteMatcher | string | RegExp): this {\n    if (this.#matchers[param]) {\n      return this\n    }\n\n    if (typeof matcher === 'string') {\n      this.#matchers[param] = { match: new RegExp(matcher) }\n    } else if (is.regExp(matcher)) {\n      this.#matchers[param] = { match: matcher }\n    } else {\n      this.#matchers[param] = matcher\n    }\n\n    return this\n  }\n\n  /**\n   * Define prefix for the route. Calling this method multiple times\n   * applies multiple prefixes in the reverse order.\n   */\n  prefix(prefix: string): this {\n    this.#prefixes.push(prefix)\n    return this\n  }\n\n  /**\n   * Define a custom domain for the route. We do not overwrite the domain\n   * unless `overwrite` flag is set to true.\n   */\n  domain(domain: string, overwrite: boolean = false): this {\n    if (this.#routeDomain === 'root' || overwrite) {\n      this.#routeDomain = domain\n    }\n    return this\n  }\n\n  /**\n   * Define one or more middleware to be executed before the route\n   * handler.\n   *\n   * Named middleware can be referenced using the name registered with\n   * the router middleware store.\n   */\n  use(middleware: OneOrMore<MiddlewareFn | ParsedNamedMiddleware>): this {\n    this.#middleware.push(Array.isArray(middleware) ? middleware : [middleware])\n    return this\n  }\n\n  /**\n   * @alias use\n   */\n  middleware(middleware: OneOrMore<MiddlewareFn | ParsedNamedMiddleware>): this {\n    return this.use(middleware)\n  }\n\n  /**\n   * Give a unique name to the route. Assinging a new unique removes the\n   * existing name of the route.\n   *\n   * Setting prepends to true prefixes the name to the existing name.\n   */\n  as(name: string, prepend = false): this {\n    if (prepend) {\n      if (!this.#name) {\n        throw new RuntimeException(\n          `Routes inside a group must have names before calling \"router.group.as\"`\n        )\n      }\n\n      this.#name = `${name}.${this.#name}`\n      return this\n    }\n\n    this.#name = name\n    return this\n  }\n\n  /**\n   * Check if the route was marked to be deleted\n   */\n  isDeleted(): boolean {\n    return this.#isDeleted\n  }\n\n  /**\n   * Mark route as deleted. Deleted routes are not registered\n   * with the route store\n   */\n  markAsDeleted() {\n    this.#isDeleted = true\n  }\n\n  /**\n   * Get the route name\n   */\n  getName(): string | undefined {\n    return this.#name\n  }\n\n  /**\n   * Get the route pattern\n   */\n  getPattern(): string {\n    return this.#pattern\n  }\n\n  /**\n   * Set the route pattern\n   */\n  setPattern(pattern: string): this {\n    this.#pattern = pattern\n    return this\n  }\n\n  /**\n   * Returns the stack of middleware registered on the route.\n   * The value is shared by reference.\n   */\n  getMiddleware() {\n    return this.#middleware\n  }\n\n  /**\n   * Returns the middleware instance for persistence inside the\n   * store\n   */\n  #getMiddlewareForStore() {\n    const middleware = new Middleware<StoreRouteMiddleware>()\n\n    this.#routerMiddleware.forEach((one) => {\n      debug('adding global middleware to route %s, %O', this.#pattern, one)\n      middleware.add(one)\n    })\n    this.#middleware.flat().forEach((one) => {\n      debug('adding named middleware to route %s, %O', this.#pattern, one)\n      middleware.add(one)\n    })\n\n    return middleware\n  }\n\n  /**\n   * Returns JSON representation of the route\n   */\n  toJSON(): RouteJSON {\n    return {\n      domain: this.#routeDomain,\n      pattern: this.#computePattern(),\n      matchers: this.#getMatchers(),\n      meta: {},\n      name: this.#name,\n      handler: this.#handler,\n      methods: this.#methods,\n      middleware: this.#getMiddlewareForStore(),\n      execute: execute,\n    }\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { HttpContext } from '../../http_context/main.js'\n\n/**\n * A factory function that uses the return value of the request\n * pipeline as the response\n */\nexport function useReturnValue(ctx: HttpContext) {\n  return function (value: any) {\n    if (\n      value !== undefined && // Return value is explicitly defined\n      !ctx.response.hasLazyBody && // Lazy body is not set\n      value !== ctx.response // Return value is not the instance of response object\n    ) {\n      ctx.response.send(value)\n    }\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { ContainerResolver } from '@adonisjs/fold'\nimport type { StoreRouteNode } from '../types/route.js'\nimport type { HttpContext } from '../http_context/main.js'\nimport type { ServerErrorHandler } from '../types/server.js'\nimport { useReturnValue } from './factories/use_return_value.js'\n\n/**\n * Executor to execute the route middleware pipeline the route\n * handler\n */\nexport function execute(\n  route: StoreRouteNode,\n  resolver: ContainerResolver<any>,\n  ctx: HttpContext,\n  errorResponder: ServerErrorHandler['handle']\n) {\n  return route.middleware\n    .runner()\n    .errorHandler((error) => errorResponder(error, ctx))\n    .finalHandler(async () => {\n      if (typeof route.handler === 'function') {\n        return Promise.resolve(route.handler(ctx)).then(useReturnValue(ctx))\n      }\n\n      return route.handler.handle(resolver, ctx).then(useReturnValue(ctx))\n    })\n    .run(async (middleware, next) => {\n      if (typeof middleware === 'function') {\n        return middleware(ctx, next)\n      }\n\n      return middleware.handle(resolver, ctx, next, middleware.args)\n    })\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Cache from 'tmp-cache'\nimport { InvalidArgumentsException } from '@poppinss/utils'\n\nimport { Route } from './router/route.js'\nimport { BriskRoute } from './router/brisk.js'\nimport { RouteGroup } from './router/group.js'\nimport type { RouteJSON } from './types/route.js'\nimport { RouteResource } from './router/resource.js'\n\nconst proxyCache = new Cache({ max: 200 })\n\n/**\n * Makes input string consistent by having only the starting\n * slash\n */\nexport function dropSlash(input: string): string {\n  if (input === '/') {\n    return '/'\n  }\n\n  return `/${input.replace(/^\\//, '').replace(/\\/$/, '')}`\n}\n\n/**\n * Returns a flat list of routes from the route groups and resources\n */\nexport function toRoutesJSON(\n  routes: (RouteGroup | Route | RouteResource | BriskRoute)[]\n): RouteJSON[] {\n  return routes.reduce((list: RouteJSON[], route) => {\n    if (route instanceof RouteGroup) {\n      list = list.concat(toRoutesJSON(route.routes))\n      return list\n    }\n\n    if (route instanceof RouteResource) {\n      list = list.concat(toRoutesJSON(route.routes))\n      return list\n    }\n\n    if (route instanceof BriskRoute) {\n      if (route.route && !route.route.isDeleted()) {\n        list.push(route.route.toJSON())\n      }\n      return list\n    }\n\n    if (!route.isDeleted()) {\n      list.push(route.toJSON())\n    }\n\n    return list\n  }, [])\n}\n\n/**\n * Helper to know if the remote address should\n * be trusted.\n */\nexport function trustProxy(\n  remoteAddress: string,\n  proxyFn: (addr: string, distance: number) => boolean\n): boolean {\n  if (proxyCache.has(remoteAddress)) {\n    return proxyCache.get(remoteAddress) as boolean\n  }\n\n  const result = proxyFn(remoteAddress, 0)\n  proxyCache.set(remoteAddress, result)\n  return result\n}\n\n/**\n * Parses a range expression to an object filled with the range\n */\nexport function parseRange<T>(range: string, value: T): Record<number, T> {\n  const parts = range.split('..')\n  const min = Number(parts[0])\n  const max = Number(parts[1])\n\n  /**\n   * The ending status code does not exists\n   */\n  if (parts.length === 1 && !Number.isNaN(min)) {\n    return {\n      [min]: value,\n    }\n  }\n\n  /**\n   * The starting status code is not a number\n   */\n  if (Number.isNaN(min) || Number.isNaN(max)) {\n    return {}\n  }\n\n  /**\n   * Min and max are same\n   */\n  if (min === max) {\n    return {\n      [min]: value,\n    }\n  }\n\n  /**\n   * Max cannot be smaller than min\n   */\n  if (max < min) {\n    throw new InvalidArgumentsException(`Invalid range \"${range}\"`)\n  }\n\n  /**\n   * Loop over the range and create a collection\n   * of status codes\n   */\n  return [...Array(max - min + 1).keys()].reduce(\n    (result, step) => {\n      result[min + step] = value\n      return result\n    },\n    {} as Record<number, T>\n  )\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Macroable from '@poppinss/macroable'\nimport type { Application } from '@adonisjs/application'\n\nimport { Route } from './route.js'\nimport type { ParsedGlobalMiddleware } from '../types/middleware.js'\nimport type { MakeUrlOptions, RouteFn, RouteMatchers } from '../types/route.js'\n\n/**\n * Brisk routes exposes the API to configure the route handler by chaining\n * one of the pre-defined methods.\n *\n * For example: Instead of defining the redirect logic as a callback, one can\n * chain the `.redirect` method.\n *\n * Brisk routes are always registered under the `GET` HTTP method.\n */\nexport class BriskRoute extends Macroable {\n  /**\n   * Route pattern\n   */\n  #pattern: string\n\n  /**\n   * Matchers inherited from the router\n   */\n  #globalMatchers: RouteMatchers\n\n  /**\n   * Reference to the AdonisJS application\n   */\n  #app: Application<any>\n\n  /**\n   * Middleware registered on the router\n   */\n  #routerMiddleware: ParsedGlobalMiddleware[]\n\n  /**\n   * Reference to route instance. Set after `setHandler` is called\n   */\n  route: null | Route = null\n\n  constructor(\n    app: Application<any>,\n    routerMiddleware: ParsedGlobalMiddleware[],\n    options: {\n      pattern: string\n      globalMatchers: RouteMatchers\n    }\n  ) {\n    super()\n    this.#app = app\n    this.#routerMiddleware = routerMiddleware\n    this.#pattern = options.pattern\n    this.#globalMatchers = options.globalMatchers\n  }\n\n  /**\n   * Set handler for the brisk route\n   */\n  setHandler(handler: RouteFn): Route {\n    this.route = new Route(this.#app, this.#routerMiddleware, {\n      pattern: this.#pattern,\n      globalMatchers: this.#globalMatchers,\n      methods: ['GET', 'HEAD'],\n      handler: handler,\n    })\n\n    return this.route\n  }\n\n  /**\n   * Redirects to a given route. Params from the original request will\n   * be used when no custom params are defined.\n   */\n  redirect(\n    identifier: string,\n    params?: any[] | Record<string, any>,\n    options?: MakeUrlOptions & { status: number }\n  ): Route {\n    return this.setHandler(async function redirectsToRoute(ctx) {\n      const redirector = ctx.response.redirect()\n      if (options?.status) {\n        redirector.status(options.status)\n      }\n\n      return redirector.toRoute(identifier, params || ctx.params, options)\n    })\n  }\n\n  /**\n   * Redirect request to a fixed URL\n   */\n  redirectToPath(url: string, options?: { status: number }): Route {\n    return this.setHandler(async function redirectsToPath(ctx) {\n      const redirector = ctx.response.redirect()\n      if (options?.status) {\n        redirector.status(options.status)\n      }\n\n      return redirector.toPath(url)\n    })\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Macroable from '@poppinss/macroable'\nimport type { RouteMatcher, StoreRouteMiddleware } from '../types/route.js'\nimport type { MiddlewareFn, ParsedNamedMiddleware } from '../types/middleware.js'\n\nimport { Route } from './route.js'\nimport { BriskRoute } from './brisk.js'\nimport { RouteResource } from './resource.js'\nimport { OneOrMore } from '../types/base.js'\n\n/**\n * Group class exposes the API to take action on a group of routes.\n * The group routes must be pre-defined using the constructor.\n */\nexport class RouteGroup extends Macroable {\n  /**\n   * Array of middleware registered on the group.\n   */\n  #middleware: StoreRouteMiddleware[] = []\n\n  constructor(public routes: (Route | RouteGroup | RouteResource | BriskRoute)[]) {\n    super()\n  }\n\n  /**\n   * Shares midldeware stack with the routes. The method is invoked recursively\n   * to only register middleware with the route class and not with the\n   * resource or the child group\n   */\n  #shareMiddlewareStackWithRoutes(route: RouteGroup | Route | RouteResource | BriskRoute) {\n    if (route instanceof RouteGroup) {\n      route.routes.forEach((child) => this.#shareMiddlewareStackWithRoutes(child))\n      return\n    }\n\n    if (route instanceof RouteResource) {\n      route.routes.forEach((child) => child.getMiddleware().unshift(this.#middleware))\n      return\n    }\n\n    if (route instanceof BriskRoute) {\n      route.route!.getMiddleware().unshift(this.#middleware)\n      return\n    }\n\n    route.getMiddleware().unshift(this.#middleware)\n  }\n\n  /**\n   * Updates the route name. The method is invoked recursively to only update\n   * the name with the route class and not with the resource or the child\n   * group.\n   */\n  #updateRouteName(route: RouteGroup | Route | RouteResource | BriskRoute, name: string) {\n    if (route instanceof RouteGroup) {\n      route.routes.forEach((child) => this.#updateRouteName(child, name))\n      return\n    }\n\n    if (route instanceof RouteResource) {\n      route.routes.forEach((child) => child.as(name, true))\n      return\n    }\n\n    if (route instanceof BriskRoute) {\n      route.route!.as(name, true)\n      return\n    }\n\n    route.as(name, true)\n  }\n\n  /**\n   * Sets prefix on the route. The method is invoked recursively to only set\n   * the prefix with the route class and not with the resource or the\n   * child group.\n   */\n  #setRoutePrefix(route: RouteGroup | Route | RouteResource | BriskRoute, prefix: string) {\n    if (route instanceof RouteGroup) {\n      route.routes.forEach((child) => this.#setRoutePrefix(child, prefix))\n      return\n    }\n\n    if (route instanceof RouteResource) {\n      route.routes.forEach((child) => child.prefix(prefix))\n      return\n    }\n\n    if (route instanceof BriskRoute) {\n      route.route!.prefix(prefix)\n      return\n    }\n\n    route.prefix(prefix)\n  }\n\n  /**\n   * Updates domain on the route. The method is invoked recursively to only update\n   * the domain with the route class and not with the resource or the child\n   * group.\n   */\n  #updateRouteDomain(route: RouteGroup | Route | RouteResource | BriskRoute, domain: string) {\n    if (route instanceof RouteGroup) {\n      route.routes.forEach((child) => this.#updateRouteDomain(child, domain))\n      return\n    }\n\n    if (route instanceof RouteResource) {\n      route.routes.forEach((child) => child.domain(domain))\n      return\n    }\n\n    if (route instanceof BriskRoute) {\n      route.route!.domain(domain, false)\n      return\n    }\n\n    route.domain(domain, false)\n  }\n\n  /**\n   * Updates matchers on the route. The method is invoked recursively to only update\n   * the matchers with the route class and not with the resource or the child\n   * group.\n   */\n  #updateRouteMatchers(\n    route: RouteGroup | Route | RouteResource | BriskRoute,\n    param: string,\n    matcher: RouteMatcher | string | RegExp\n  ) {\n    if (route instanceof RouteGroup) {\n      route.routes.forEach((child) => this.#updateRouteMatchers(child, param, matcher))\n      return\n    }\n\n    if (route instanceof RouteResource) {\n      route.routes.forEach((child) => child.where(param, matcher))\n      return\n    }\n\n    if (route instanceof BriskRoute) {\n      route.route!.where(param, matcher)\n      return\n    }\n\n    route.where(param, matcher)\n  }\n\n  /**\n   * Define route param matcher\n   *\n   * ```ts\n   * Route.group(() => {\n   * }).where('id', /^[0-9]+/)\n   * ```\n   */\n  where(param: string, matcher: RouteMatcher | string | RegExp): this {\n    this.routes.forEach((route) => this.#updateRouteMatchers(route, param, matcher))\n    return this\n  }\n\n  /**\n   * Define prefix all the routes in the group.\n   *\n   * ```ts\n   * Route.group(() => {\n   * }).prefix('v1')\n   * ```\n   */\n  prefix(prefix: string): this {\n    this.routes.forEach((route) => this.#setRoutePrefix(route, prefix))\n    return this\n  }\n\n  /**\n   * Define domain for all the routes.\n   *\n   * ```ts\n   * Route.group(() => {\n   * }).domain(':name.adonisjs.com')\n   * ```\n   */\n  domain(domain: string): this {\n    this.routes.forEach((route) => this.#updateRouteDomain(route, domain))\n    return this\n  }\n\n  /**\n   * Prepend name to the routes name.\n   *\n   * ```ts\n   * Route.group(() => {\n   * }).as('version1')\n   * ```\n   */\n  as(name: string): this {\n    this.routes.forEach((route) => this.#updateRouteName(route, name))\n    return this\n  }\n  /**\n   * Prepend an array of middleware to all routes middleware.\n   *\n   * ```ts\n   * Route.group(() => {\n   * }).use(middleware.auth())\n   * ```\n   */\n  use(middleware: OneOrMore<MiddlewareFn | ParsedNamedMiddleware>): this {\n    /**\n     * Register middleware with children. We share the group middleware\n     * array by reference, therefore have to register it only for the\n     * first time.\n     */\n    if (!this.#middleware.length) {\n      this.routes.forEach((route) => this.#shareMiddlewareStackWithRoutes(route))\n    }\n\n    if (Array.isArray(middleware)) {\n      for (let one of middleware) {\n        this.#middleware.push(one)\n      }\n    } else {\n      this.#middleware.push(middleware)\n    }\n\n    return this\n  }\n\n  /**\n   * @alias use\n   */\n  middleware(middleware: OneOrMore<MiddlewareFn | ParsedNamedMiddleware>): this {\n    return this.use(middleware)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport string from '@poppinss/utils/string'\nimport Macroable from '@poppinss/macroable'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { Application } from '@adonisjs/application'\n\nimport { Route } from './route.js'\nimport type { Constructor, LazyImport, OneOrMore } from '../types/base.js'\nimport type {\n  MiddlewareFn,\n  ParsedGlobalMiddleware,\n  ParsedNamedMiddleware,\n} from '../types/middleware.js'\nimport type { ResourceActionNames, RouteMatcher, RouteMatchers } from '../types/route.js'\n\n/**\n * Route resource exposes the API to register multiple routes for a resource.\n */\nexport class RouteResource<\n  ActionNames extends ResourceActionNames = ResourceActionNames,\n> extends Macroable {\n  /**\n   * Resource identifier. Nested resources are separated\n   * with a dot notation\n   */\n  #resource: string\n\n  /**\n   * The controller to handle resource routing requests\n   */\n  #controller: string | LazyImport<Constructor<any>> | Constructor<any>\n\n  /**\n   * Is it a shallow resource? Shallow resources URLs do not have parent\n   * resource name and id once they can be identified with the id.\n   */\n  #shallow: boolean = false\n\n  /**\n   * Matchers inherited from the router\n   */\n  #globalMatchers: RouteMatchers\n\n  /**\n   * Reference to the AdonisJS application\n   */\n  #app: Application<any>\n\n  /**\n   * Middleware registered on the router\n   */\n  #routerMiddleware: ParsedGlobalMiddleware[]\n\n  /**\n   * Parameter names for the resources. Defaults to `id` for\n   * a singular resource and `resource_id` for nested\n   * resources.\n   */\n  #params: Record<string, string> = {}\n\n  /**\n   * Base name for the routes. We suffix action names\n   * on top of the base name\n   */\n  #routesBaseName: string\n\n  /**\n   * A collection of routes instances that belongs to this resource\n   */\n  routes: Route[] = []\n\n  constructor(\n    app: Application<any>,\n    routerMiddleware: ParsedGlobalMiddleware[],\n    options: {\n      resource: string\n      controller: string | LazyImport<Constructor<any>> | Constructor<any>\n      globalMatchers: RouteMatchers\n      shallow: boolean\n    }\n  ) {\n    super()\n    this.#validateResourceName(options.resource)\n\n    this.#app = app\n    this.#shallow = options.shallow\n    this.#routerMiddleware = routerMiddleware\n    this.#controller = options.controller\n    this.#globalMatchers = options.globalMatchers\n    this.#resource = this.#normalizeResourceName(options.resource)\n    this.#routesBaseName = this.#getRoutesBaseName()\n    this.#buildRoutes()\n  }\n\n  /**\n   * Normalizes the resource name to dropping leading and trailing\n   * slashes.\n   */\n  #normalizeResourceName(resource: string) {\n    return resource.replace(/^\\//, '').replace(/\\/$/, '')\n  }\n\n  /**\n   * Ensure resource name is not an empty string\n   */\n  #validateResourceName(resource: string) {\n    if (!resource || resource === '/') {\n      throw new RuntimeException(`Invalid resource name \"${resource}\"`)\n    }\n  }\n\n  /**\n   * Converting segments of a resource to snake case to\n   * make the route name.\n   */\n  #getRoutesBaseName() {\n    return this.#resource\n      .split('.')\n      .map((token) => string.snakeCase(token))\n      .join('.')\n  }\n\n  /**\n   * Create a new route for the given pattern, methods and controller action\n   */\n  #createRoute(pattern: string, methods: string[], action: ResourceActionNames) {\n    const route = new Route(this.#app, this.#routerMiddleware, {\n      pattern,\n      methods,\n      handler:\n        typeof this.#controller === 'string'\n          ? `${this.#controller}.${action}`\n          : [this.#controller, action],\n      globalMatchers: this.#globalMatchers,\n    })\n\n    route.as(`${this.#routesBaseName}.${action}`)\n    this.routes.push(route)\n  }\n\n  /**\n   * Returns the `resource_id` name for a given resource. The\n   * resource name is converted to singular form and\n   * transformed to snake case.\n   *\n   * photos becomes photo_id\n   * users becomes user_id\n   */\n  #getResourceId(resource: string) {\n    return `${string.snakeCase(string.singular(resource))}_id`\n  }\n\n  /**\n   * Build routes for the given resource\n   */\n  #buildRoutes() {\n    const resources = this.#resource.split('.')\n\n    const mainResource = resources.pop()!\n    this.#params[mainResource] = ':id'\n\n    const baseURI = `${resources\n      .map((resource) => {\n        const paramName = `:${this.#getResourceId(resource)}`\n        this.#params[resource] = paramName\n\n        return `${resource}/${paramName}`\n      })\n      .join('/')}/${mainResource}`\n\n    this.#createRoute(baseURI, ['GET', 'HEAD'], 'index')\n    this.#createRoute(`${baseURI}/create`, ['GET', 'HEAD'], 'create')\n    this.#createRoute(baseURI, ['POST'], 'store')\n    this.#createRoute(`${this.#shallow ? mainResource : baseURI}/:id`, ['GET', 'HEAD'], 'show')\n    this.#createRoute(`${this.#shallow ? mainResource : baseURI}/:id/edit`, ['GET', 'HEAD'], 'edit')\n    this.#createRoute(`${this.#shallow ? mainResource : baseURI}/:id`, ['PUT', 'PATCH'], 'update')\n    this.#createRoute(`${this.#shallow ? mainResource : baseURI}/:id`, ['DELETE'], 'destroy')\n  }\n\n  /**\n   * Filter the routes based on their partial names\n   */\n  #filter(names: ActionNames | ActionNames[], inverse: boolean) {\n    const actions = Array.isArray(names) ? names : [names]\n    return this.routes.filter((route) => {\n      const match = actions.find((name) => route.getName()!.endsWith(name))\n      return inverse ? !match : match\n    })\n  }\n\n  /**\n   * Register only given routes and remove others\n   */\n  only<Name extends ActionNames>(names: Name[]): RouteResource<Name> {\n    this.#filter(names, true).forEach((route) => route.markAsDeleted())\n    return this\n  }\n\n  /**\n   * Register all routes, except the one's defined\n   */\n  except<Name extends ActionNames>(names: Name[]): RouteResource<Exclude<ActionNames, Name>> {\n    this.#filter(names, false).forEach((route) => route.markAsDeleted())\n    return this\n  }\n\n  /**\n   * Register api only routes. The `create` and `edit` routes, which\n   * are meant to show forms will not be registered\n   */\n  apiOnly(): RouteResource<Exclude<ActionNames, 'create' | 'edit'>> {\n    return this.except(['create', 'edit'] as ActionNames[])\n  }\n\n  /**\n   * Define matcher for params inside the resource\n   */\n  where(key: string, matcher: RouteMatcher | string | RegExp): this {\n    this.routes.forEach((route) => {\n      route.where(key, matcher)\n    })\n\n    return this\n  }\n\n  /**\n   * Tap into multiple routes to configure them by their name\n   */\n  tap(callback: (route: Route) => void): this\n  tap(actions: ActionNames | ActionNames[], callback: (route: Route) => void): this\n  tap(\n    actions: ((route: Route) => void) | ActionNames | ActionNames[],\n    callback?: (route: Route) => void\n  ): this {\n    if (typeof actions === 'function') {\n      this.routes.forEach((route) => {\n        if (!route.isDeleted()) {\n          actions(route)\n        }\n      })\n      return this\n    }\n\n    this.#filter(actions, false).forEach((route) => {\n      if (!route.isDeleted()) {\n        callback!(route)\n      }\n    })\n    return this\n  }\n\n  /**\n   * Set the param name for a given resource\n   */\n  params(resources: { [resource: string]: string }): this {\n    Object.keys(resources).forEach((resource) => {\n      const param = resources[resource]\n      const existingParam = this.#params[resource]\n      this.#params[resource] = `:${param}`\n\n      this.routes.forEach((route) => {\n        route.setPattern(\n          route.getPattern().replace(`${resource}/${existingParam}`, `${resource}/:${param}`)\n        )\n      })\n    })\n\n    return this\n  }\n\n  /**\n   * Define one or more middleware on the routes created by\n   * the resource.\n   *\n   * Calling this method multiple times will append middleware\n   * to existing list.\n   */\n  use(\n    actions: ActionNames | ActionNames[] | '*',\n    middleware: OneOrMore<MiddlewareFn | ParsedNamedMiddleware>\n  ): this {\n    if (actions === '*') {\n      this.tap((route) => route.use(middleware))\n    } else {\n      this.tap(actions, (route) => route.use(middleware))\n    }\n    return this\n  }\n\n  /**\n   * @alias use\n   */\n  middleware(\n    actions: ActionNames | ActionNames[] | '*',\n    middleware: OneOrMore<MiddlewareFn | ParsedNamedMiddleware>\n  ): this {\n    return this.use(actions, middleware)\n  }\n\n  /**\n   * Prepend name to all the routes\n   */\n  as(name: string, normalizeName: boolean = true): this {\n    name = normalizeName ? string.snakeCase(name) : name\n    this.routes.forEach((route) => {\n      route.as(route.getName()!.replace(this.#routesBaseName, name), false)\n    })\n\n    this.#routesBaseName = name\n    return this\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\nexport default debuglog('adonisjs:http')\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { base64, MessageBuilder } from '@poppinss/utils'\n\n/**\n * Encodes a value into a base64 url encoded string to\n * be set as cookie\n */\nexport function pack(value: any): null | string {\n  if (value === undefined || value === null) {\n    return null\n  }\n  return base64.urlEncode(new MessageBuilder().build(value))\n}\n\n/**\n * Returns true when this `unpack` method of this module can attempt\n * to unpack the encode value.\n */\nexport function canUnpack(encodedValue: string) {\n  return typeof encodedValue === 'string'\n}\n\n/**\n * Attempts to unpack the value by decoding it. Make sure to call, `canUnpack`\n * before calling this method\n */\nexport function unpack(encodedValue: string): null | any {\n  return new MessageBuilder().verify(base64.urlDecode(encodedValue, 'utf-8', false))\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Encryption } from '@adonisjs/encryption'\n\n/**\n * Signs a value to be shared as a cookie. The signed output has a\n * hash to verify tampering with the original value\n */\nexport function pack(key: string, value: any, encryption: Encryption): null | string {\n  if (value === undefined || value === null) {\n    return null\n  }\n  return `s:${encryption.verifier.sign(value, undefined, key)}`\n}\n\n/**\n * Returns a boolean, if the unpack method from this module can attempt\n * to unpack the signed value.\n */\nexport function canUnpack(signedValue: string) {\n  return typeof signedValue === 'string' && signedValue.substring(0, 2) === 's:'\n}\n\n/**\n * Attempts to unpack the signed value. Make sure to call `canUnpack` before\n * calling this method.\n */\nexport function unpack(key: string, signedValue: string, encryption: Encryption): null | any {\n  const value = signedValue.slice(2)\n  if (!value) {\n    return null\n  }\n\n  return encryption.verifier.unsign(value, key)\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Encryption } from '@adonisjs/encryption'\n\n/**\n * Encrypt a value to be set as cookie\n */\nexport function pack(key: string, value: any, encryption: Encryption): null | string {\n  if (value === undefined || value === null) {\n    return null\n  }\n  return `e:${encryption.encrypt(value, undefined, key)}`\n}\n\n/**\n * Returns a boolean, if the unpack method from this module can attempt\n * to unpack encrypted value.\n */\nexport function canUnpack(encryptedValue: string) {\n  return typeof encryptedValue === 'string' && encryptedValue.substring(0, 2) === 'e:'\n}\n\n/**\n * Attempts to unpack the encrypted cookie value. Returns null, when fails to do so.\n * Only call this method, when `canUnpack` returns true, otherwise runtime\n * exceptions can be raised.\n */\nexport function unpack(key: string, encryptedValue: string, encryption: Encryption): null | any {\n  const value = encryptedValue.slice(2)\n  if (!value) {\n    return null\n  }\n\n  return encryption.decrypt(value, key)\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Encryption } from '@adonisjs/encryption'\n\nimport * as plainCookiesDriver from './drivers/plain.js'\nimport * as signedCookiesDriver from './drivers/signed.js'\nimport * as encryptedCookiesDriver from './drivers/encrypted.js'\n\n/**\n * Cookie client exposes the API to parse/set AdonisJS cookies\n * as a client.\n */\nexport class CookieClient {\n  #encryption: Encryption\n\n  constructor(encryption: Encryption) {\n    this.#encryption = encryption\n  }\n\n  /**\n   * Encrypt a key value pair to be sent in the cookie header\n   */\n  encrypt(key: string, value: any): string | null {\n    return encryptedCookiesDriver.pack(key, value, this.#encryption)\n  }\n\n  /**\n   * Sign a key value pair to be sent in the cookie header\n   */\n  sign(key: string, value: any): string | null {\n    return signedCookiesDriver.pack(key, value, this.#encryption)\n  }\n\n  /**\n   * Encode a key value pair to be sent in the cookie header\n   */\n  encode(_: string, value: any): string | null {\n    return plainCookiesDriver.pack(value)\n  }\n\n  /**\n   * Unsign a signed cookie value\n   */\n  unsign(key: string, value: string) {\n    return signedCookiesDriver.canUnpack(value)\n      ? signedCookiesDriver.unpack(key, value, this.#encryption)\n      : null\n  }\n\n  /**\n   * Decrypt an encrypted cookie value\n   */\n  decrypt(key: string, value: string) {\n    return encryptedCookiesDriver.canUnpack(value)\n      ? encryptedCookiesDriver.unpack(key, value, this.#encryption)\n      : null\n  }\n\n  /**\n   * Decode an encoded cookie value\n   */\n  decode(_: string, value: string) {\n    return plainCookiesDriver.canUnpack(value) ? plainCookiesDriver.unpack(value) : null\n  }\n\n  /**\n   * Parse response cookie\n   */\n  parse(key: string, value: any) {\n    /**\n     * Unsign signed cookie\n     */\n    if (signedCookiesDriver.canUnpack(value)) {\n      return signedCookiesDriver.unpack(key, value, this.#encryption)\n    }\n\n    /**\n     * Decrypted encrypted cookie\n     */\n    if (encryptedCookiesDriver.canUnpack(value)) {\n      return encryptedCookiesDriver.unpack(key, value, this.#encryption)\n    }\n\n    /**\n     * Decode encoded cookie\n     */\n    if (plainCookiesDriver.canUnpack(value)) {\n      return plainCookiesDriver.unpack(value)\n    }\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport fresh from 'fresh'\nimport typeIs from 'type-is'\nimport accepts from 'accepts'\nimport { isIP } from 'node:net'\nimport is from '@sindresorhus/is'\nimport proxyaddr from 'proxy-addr'\nimport { safeEqual } from '@poppinss/utils'\nimport Macroable from '@poppinss/macroable'\nimport lodash from '@poppinss/utils/lodash'\nimport { createId } from '@paralleldrive/cuid2'\nimport { parse, UrlWithStringQuery } from 'node:url'\nimport type { Encryption } from '@adonisjs/encryption'\nimport { ServerResponse, IncomingMessage, IncomingHttpHeaders } from 'node:http'\n\nimport type { Qs } from './qs.js'\nimport { trustProxy } from './helpers.js'\nimport { CookieParser } from './cookies/parser.js'\nimport { RequestConfig } from './types/request.js'\nimport type { HttpContext } from './http_context/main.js'\n\n/**\n * HTTP Request class exposes the interface to consistently read values\n * related to a given HTTP request. The class is wrapper over\n * [IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n * and has extended API.\n *\n * You can access the original [IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n * using `request.request` property.\n */\nexport class Request extends Macroable {\n  /**\n   * Query string parser\n   */\n  #qsParser: Qs\n\n  /**\n   * Encryption module to verify signed URLs and unsign/decrypt\n   * cookies\n   */\n  #encryption: Encryption\n\n  /**\n   * Request config\n   */\n  #config: RequestConfig\n\n  /**\n   * Request body set using `setBody` method\n   */\n  #requestBody: Record<string, any> = {}\n\n  /**\n   * A merged copy of `request body` and `querystring`\n   */\n  #requestData: Record<string, any> = {}\n\n  /**\n   * Original merged copy of `request body` and `querystring`.\n   * Further mutation to this object are not allowed\n   */\n  #originalRequestData: Record<string, any> = {}\n\n  /**\n   * Parsed query string\n   */\n  #requestQs: Record<string, any> = {}\n\n  /**\n   * Raw request body as text\n   */\n  #rawRequestBody?: string\n\n  /**\n   * Cached copy of `accepts` fn to do content\n   * negotiation.\n   */\n  #lazyAccepts?: any\n\n  /**\n   * Copy of lazily parsed signed and plain cookies.\n   */\n  #cookieParser?: CookieParser\n\n  /**\n   * Parses copy of the URL with query string as a string and not\n   * object. This is done to build URL's with query string without\n   * stringifying the object\n   */\n  parsedUrl: UrlWithStringQuery\n\n  /**\n   * The ctx will be set by the context itself. It creates a circular\n   * reference\n   */\n  ctx?: HttpContext\n\n  constructor(\n    public request: IncomingMessage,\n    public response: ServerResponse,\n    encryption: Encryption,\n    config: RequestConfig,\n    qsParser: Qs\n  ) {\n    super()\n\n    this.#qsParser = qsParser\n    this.#config = config\n    this.#encryption = encryption\n    this.parsedUrl = parse(this.request.url!, false)\n    this.#parseQueryString()\n  }\n\n  /**\n   * Parses the query string\n   */\n  #parseQueryString() {\n    if (this.parsedUrl.query) {\n      this.updateQs(this.#qsParser.parse(this.parsedUrl.query))\n      this.#originalRequestData = { ...this.#requestData }\n    }\n  }\n\n  /**\n   * Initiates the cookie parser lazily\n   */\n  #initiateCookieParser() {\n    if (!this.#cookieParser) {\n      this.#cookieParser = new CookieParser(this.header('cookie')!, this.#encryption)\n    }\n  }\n\n  /**\n   * Lazily initiates the `accepts` module to make sure to parse\n   * the request headers only when one of the content-negotiation\n   * methods are used.\n   */\n  #initiateAccepts() {\n    this.#lazyAccepts = this.#lazyAccepts || accepts(this.request)\n  }\n\n  /**\n   * Returns the request id from the `x-request-id` header. The\n   * header is untouched, if it already exists.\n   */\n  id(): string | undefined {\n    let requestId = this.header('x-request-id')\n    if (!requestId && this.#config.generateRequestId) {\n      requestId = createId()\n      this.request.headers['x-request-id'] = requestId\n    }\n\n    return requestId\n  }\n\n  /**\n   * Set initial request body. A copy of the input will be maintained as the original\n   * request body. Since the request body and query string is subject to mutations, we\n   * keep one original reference to flash old data (whenever required).\n   *\n   * This method is supposed to be invoked by the body parser and must be called only\n   * once. For further mutations make use of `updateBody` method.\n   */\n  setInitialBody(body: Record<string, any>) {\n    if (this.#originalRequestData && Object.isFrozen(this.#originalRequestData)) {\n      throw new Error('Cannot re-set initial body. Use \"request.updateBody\" instead')\n    }\n\n    this.updateBody(body)\n\n    /*\n     * Freeze the original object\n     */\n    this.#originalRequestData = Object.freeze(lodash.cloneDeep(this.#requestData))\n  }\n\n  /**\n   * Update the request body with new data object. The `all` property\n   * will be re-computed by merging the query string and request\n   * body.\n   */\n  updateBody(body: Record<string, any>) {\n    this.#requestBody = body\n    this.#requestData = { ...this.#requestBody, ...this.#requestQs }\n  }\n\n  /**\n   * Update the request raw body. Bodyparser sets this when unable to parse\n   * the request body or when request is multipart/form-data.\n   */\n  updateRawBody(rawBody: string) {\n    this.#rawRequestBody = rawBody\n  }\n\n  /**\n   * Update the query string with the new data object. The `all` property\n   * will be re-computed by merging the query and the request body.\n   */\n  updateQs(data: Record<string, any>) {\n    this.#requestQs = data\n    this.#requestData = { ...this.#requestBody, ...this.#requestQs }\n  }\n\n  /**\n   * Returns route params\n   */\n  params(): Record<string, any> {\n    return this.ctx?.params || {}\n  }\n\n  /**\n   * Returns the query string object by reference\n   */\n  qs(): Record<string, any> {\n    return this.#requestQs\n  }\n\n  /**\n   * Returns reference to the request body\n   */\n  body(): Record<string, any> {\n    return this.#requestBody\n  }\n\n  /**\n   * Returns reference to the merged copy of request body\n   * and query string\n   */\n  all(): Record<string, any> {\n    return this.#requestData\n  }\n\n  /**\n   * Returns reference to the merged copy of original request\n   * query string and body\n   */\n  original(): Record<string, any> {\n    return this.#originalRequestData\n  }\n\n  /**\n   * Returns the request raw body (if exists), or returns `null`.\n   *\n   * Ideally you must be dealing with the parsed body accessed using [[input]], [[all]] or\n   * [[post]] methods. The `raw` body is always a string.\n   */\n  raw(): string | null {\n    return this.#rawRequestBody || null\n  }\n\n  /**\n   * Returns value for a given key from the request body or query string.\n   * The `defaultValue` is used when original value is `undefined`.\n   *\n   * @example\n   * ```js\n   * request.input('username')\n   *\n   * // with default value\n   * request.input('username', 'virk')\n   * ```\n   */\n  input(key: string, defaultValue?: any): any {\n    return lodash.get(this.#requestData, key, defaultValue)\n  }\n\n  /**\n   * Returns value for a given key from route params\n   *\n   * @example\n   * ```js\n   * request.param('id')\n   *\n   * // with default value\n   * request.param('id', 1)\n   * ```\n   */\n  param(key: string, defaultValue?: any): any {\n    return lodash.get(this.params(), key, defaultValue)\n  }\n\n  /**\n   * Get everything from the request body except the given keys.\n   *\n   * @example\n   * ```js\n   * request.except(['_csrf'])\n   * ```\n   */\n  except(keys: string[]): Record<string, any> {\n    return lodash.omit(this.#requestData, keys)\n  }\n\n  /**\n   * Get value for specified keys.\n   *\n   * @example\n   * ```js\n   * request.only(['username', 'age'])\n   * ```\n   */\n  only<T extends string>(keys: T[]): { [K in T]: any } {\n    return lodash.pick(this.#requestData, keys) as { [K in T]: any }\n  }\n\n  /**\n   * Returns the HTTP request method. This is the original\n   * request method. For spoofed request method, make\n   * use of [[method]].\n   *\n   * @example\n   * ```js\n   * request.intended()\n   * ```\n   */\n  intended(): string {\n    return this.request.method!\n  }\n\n  /**\n   * Returns the request HTTP method by taking method spoofing into account.\n   *\n   * Method spoofing works when all of the following are true.\n   *\n   * 1. `app.http.allowMethodSpoofing` config value is true.\n   * 2. request query string has `_method`.\n   * 3. The [[intended]] request method is `POST`.\n   *\n   * @example\n   * ```js\n   * request.method()\n   * ```\n   */\n  method(): string {\n    if (this.#config.allowMethodSpoofing && this.intended() === 'POST') {\n      return this.input('_method', this.intended()).toUpperCase()\n    }\n    return this.intended()\n  }\n\n  /**\n   * Returns a copy of headers as an object\n   */\n  headers(): IncomingHttpHeaders {\n    return this.request.headers\n  }\n\n  /**\n   * Returns value for a given header key. The default value is\n   * used when original value is `undefined`.\n   */\n  header(key: string, defaultValue?: any): string | undefined {\n    key = key.toLowerCase()\n    const headers = this.headers()\n\n    switch (key) {\n      case 'referer':\n      case 'referrer':\n        return headers.referrer || headers.referer || defaultValue\n      default:\n        return headers[key] || defaultValue\n    }\n  }\n\n  /**\n   * Returns the ip address of the user. This method is optimize to fetch\n   * ip address even when running your AdonisJs app behind a proxy.\n   *\n   * You can also define your own custom function to compute the ip address by\n   * defining `app.http.getIp` as a function inside the config file.\n   *\n   * ```js\n   * {\n   *   http: {\n   *     getIp (request) {\n   *       // I am using nginx as a proxy server and want to trust 'x-real-ip'\n   *       return request.header('x-real-ip')\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can control the behavior of trusting the proxy values by defining it\n   * inside the `config/app.js` file.\n   *\n   * ```js\n   * {\n   *   http: {\n   *    trustProxy: '127.0.0.1'\n   *   }\n   * }\n   * ```\n   *\n   * The value of trustProxy is passed directly to [proxy-addr](https://www.npmjs.com/package/proxy-addr)\n   */\n  ip(): string {\n    const ipFn = this.#config.getIp\n    if (typeof ipFn === 'function') {\n      return ipFn(this)\n    }\n\n    return proxyaddr(this.request, this.#config.trustProxy)\n  }\n\n  /**\n   * Returns an array of ip addresses from most to least trusted one.\n   * This method is optimize to fetch ip address even when running\n   * your AdonisJs app behind a proxy.\n   *\n   * You can control the behavior of trusting the proxy values by defining it\n   * inside the `config/app.js` file.\n   *\n   * ```js\n   * {\n   *   http: {\n   *    trustProxy: '127.0.0.1'\n   *   }\n   * }\n   * ```\n   *\n   * The value of trustProxy is passed directly to [proxy-addr](https://www.npmjs.com/package/proxy-addr)\n   */\n  ips(): string[] {\n    return proxyaddr.all(this.request, this.#config.trustProxy)\n  }\n\n  /**\n   * Returns the request protocol by checking for the URL protocol or\n   * `X-Forwarded-Proto` header.\n   *\n   * If the `trust` is evaluated to `false`, then URL protocol is returned,\n   * otherwise `X-Forwarded-Proto` header is used (if exists).\n   *\n   * You can control the behavior of trusting the proxy values by defining it\n   * inside the `config/app.js` file.\n   *\n   * ```js\n   * {\n   *   http: {\n   *    trustProxy: '127.0.0.1'\n   *   }\n   * }\n   * ```\n   *\n   * The value of trustProxy is passed directly to [proxy-addr](https://www.npmjs.com/package/proxy-addr)\n   */\n  protocol(): string {\n    if ('encrypted' in this.request.socket) {\n      return 'https'\n    }\n\n    if (!trustProxy(this.request.socket.remoteAddress!, this.#config.trustProxy)) {\n      return this.parsedUrl.protocol || 'http'\n    }\n\n    const forwardedProtocol = this.header('X-Forwarded-Proto')\n    return forwardedProtocol ? forwardedProtocol.split(/\\s*,\\s*/)[0] : 'http'\n  }\n\n  /**\n   * Returns a boolean telling if request is served over `https`\n   * or not. Check [[protocol]] method to know how protocol is\n   * fetched.\n   */\n  secure(): boolean {\n    return this.protocol() === 'https'\n  }\n\n  /**\n   * Returns the request host. If proxy headers are trusted, then\n   * `X-Forwarded-Host` is given priority over the `Host` header.\n   *\n   * You can control the behavior of trusting the proxy values by defining it\n   * inside the `config/app.js` file.\n   *\n   * ```js\n   * {\n   *   http: {\n   *    trustProxy: '127.0.0.1'\n   *   }\n   * }\n   * ```\n   *\n   * The value of trustProxy is passed directly to [proxy-addr](https://www.npmjs.com/package/proxy-addr)\n   */\n  host(): string | null {\n    let host = this.header('host')\n\n    /*\n     * Use X-Fowarded-Host when we trust the proxy header and it\n     * exists\n     */\n    if (trustProxy(this.request.socket.remoteAddress!, this.#config.trustProxy)) {\n      host = this.header('X-Forwarded-Host') || host\n    }\n\n    if (!host) {\n      return null\n    }\n\n    return host\n  }\n\n  /**\n   * Returns the request hostname. If proxy headers are trusted, then\n   * `X-Forwarded-Host` is given priority over the `Host` header.\n   *\n   * You can control the behavior of trusting the proxy values by defining it\n   * inside the `config/app.js` file.\n   *\n   * ```js\n   * {\n   *   http: {\n   *    trustProxy: '127.0.0.1'\n   *   }\n   * }\n   * ```\n   *\n   * The value of trustProxy is passed directly to [proxy-addr](https://www.npmjs.com/package/proxy-addr)\n   */\n  hostname(): string | null {\n    const host = this.host()\n\n    if (!host) {\n      return null\n    }\n\n    /*\n     * Support for IPv6\n     * https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.2\n     * https://github.com/nodejs/node/pull/5314\n     */\n    const offset = host[0] === '[' ? host.indexOf(']') + 1 : 0\n    const index = host.indexOf(':', offset)\n    return index !== -1 ? host.substring(0, index) : host\n  }\n\n  /**\n   * Returns an array of subdomains for the given host. An empty array is\n   * returned if [[hostname]] is `null` or is an IP address.\n   *\n   * Also `www` is not considered as a subdomain\n   */\n  subdomains(): string[] {\n    const hostname = this.hostname()\n\n    /*\n     * Return empty array when hostname is missing or it's\n     * an IP address\n     */\n    if (!hostname || isIP(hostname)) {\n      return []\n    }\n\n    const offset = this.#config.subdomainOffset\n    const subdomains = hostname.split('.').reverse().slice(offset)\n\n    /*\n     * Remove www from the subdomains list\n     */\n    if (subdomains[subdomains.length - 1] === 'www') {\n      subdomains.splice(subdomains.length - 1, 1)\n    }\n\n    return subdomains\n  }\n\n  /**\n   * Returns a boolean telling, if request `X-Requested-With === 'xmlhttprequest'`\n   * or not.\n   */\n  ajax(): boolean {\n    const xRequestedWith = this.header('X-Requested-With', '')\n    return xRequestedWith!.toLowerCase() === 'xmlhttprequest'\n  }\n\n  /**\n   * Returns a boolean telling, if request has `X-Pjax` header\n   * set or not\n   */\n  pjax(): boolean {\n    return !!this.header('X-Pjax')\n  }\n\n  /**\n   * Returns the request relative URL.\n   *\n   * @example\n   * ```js\n   * request.url()\n   *\n   * // include query string\n   * request.url(true)\n   * ```\n   */\n  url(includeQueryString?: boolean): string {\n    const pathname = this.parsedUrl.pathname!\n    return includeQueryString && this.parsedUrl.query\n      ? `${pathname}?${this.parsedUrl.query}`\n      : pathname\n  }\n\n  /**\n   * Returns the complete HTTP url by combining\n   * [[protocol]]://[[hostname]]/[[url]]\n   *\n   * @example\n   * ```js\n   * request.completeUrl()\n   *\n   * // include query string\n   * request.completeUrl(true)\n   * ```\n   */\n  completeUrl(includeQueryString?: boolean): string {\n    const protocol = this.protocol()\n    const hostname = this.host()\n    return `${protocol}://${hostname}${this.url(includeQueryString)}`\n  }\n\n  /**\n   * Find if the current HTTP request is for the given route or the routes\n   */\n  matchesRoute(routeIdentifier: string | string[]): boolean {\n    /**\n     * The context is missing inside the HTTP server hooks.\n     */\n    if (!this.ctx || !this.ctx.route) {\n      return false\n    }\n\n    const route = this.ctx.route\n\n    /**\n     * Search the identifier(s) against the route \"pattern\", \"name\" and the route handler\n     */\n    return !!(Array.isArray(routeIdentifier) ? routeIdentifier : [routeIdentifier]).find(\n      (identifier) => {\n        if (route.pattern === identifier || route.name === identifier) {\n          return true\n        }\n\n        if (typeof route.handler === 'function') {\n          return false\n        }\n\n        return route.handler.reference === identifier\n      }\n    )\n  }\n\n  /**\n   * Returns the best matching content type of the request by\n   * matching against the given types.\n   *\n   * The content type is picked from the `content-type` header and request\n   * must have body.\n   *\n   * The method response highly depends upon the types array values. Described below:\n   *\n   * | Type(s) | Return value |\n   * |----------|---------------|\n   * | ['json'] | json |\n   * | ['application/*'] | application/json |\n   * | ['vnd+json'] | application/json |\n   *\n   * @example\n   * ```js\n   * const bodyType = request.is(['json', 'xml'])\n   *\n   * if (bodyType === 'json') {\n   *  // process JSON\n   * }\n   *\n   * if (bodyType === 'xml') {\n   *  // process XML\n   * }\n   * ```\n   */\n  is(types: string[]): string | null {\n    return typeIs(this.request, types) || null\n  }\n\n  /**\n   * Returns the best type using `Accept` header and\n   * by matching it against the given types.\n   *\n   * If nothing is matched, then `null` will be returned\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   *\n   * @example\n   * ```js\n   * switch (request.accepts(['json', 'html'])) {\n   *   case 'json':\n   *     return response.json(user)\n   *   case 'html':\n   *     return view.render('user', { user })\n   *   default:\n   *     // decide yourself\n   * }\n   * ```\n   */\n  accepts<T extends string>(types: T[]): T | null {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.type(types) || null\n  }\n\n  /**\n   * Return the types that the request accepts, in the order of the\n   * client's preference (most preferred first).\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   */\n  types(): string[] {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.types()\n  }\n\n  /**\n   * Returns the best language using `Accept-language` header\n   * and by matching it against the given languages.\n   *\n   * If nothing is matched, then `null` will be returned\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   *\n   * @example\n   * ```js\n   * switch (request.language(['fr', 'de'])) {\n   *   case 'fr':\n   *     return view.render('about', { lang: 'fr' })\n   *   case 'de':\n   *     return view.render('about', { lang: 'de' })\n   *   default:\n   *     return view.render('about', { lang: 'en' })\n   * }\n   * ```\n   */\n  language<T extends string>(languages: T[]): T | null {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.language(languages) || null\n  }\n\n  /**\n   * Return the languages that the request accepts, in the order of the\n   * client's preference (most preferred first).\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   */\n  languages(): string[] {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.languages()\n  }\n\n  /**\n   * Returns the best charset using `Accept-charset` header\n   * and by matching it against the given charsets.\n   *\n   * If nothing is matched, then `null` will be returned\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   *\n   * @example\n   * ```js\n   * switch (request.charset(['utf-8', 'ISO-8859-1'])) {\n   *   case 'utf-8':\n   *     // make utf-8 friendly response\n   *   case 'ISO-8859-1':\n   *     // make ISO-8859-1 friendly response\n   * }\n   * ```\n   */\n  charset<T extends string>(charsets: T[]): T | null {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.charset(charsets) || null\n  }\n\n  /**\n   * Return the charsets that the request accepts, in the order of the\n   * client's preference (most preferred first).\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   */\n  charsets(): string[] {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.charsets()\n  }\n\n  /**\n   * Returns the best encoding using `Accept-encoding` header\n   * and by matching it against the given encodings.\n   *\n   * If nothing is matched, then `null` will be returned\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   */\n  encoding<T extends string>(encodings: T[]): T | null {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.encoding(encodings) || null\n  }\n\n  /**\n   * Return the charsets that the request accepts, in the order of the\n   * client's preference (most preferred first).\n   *\n   * Make sure to check [accepts](https://www.npmjs.com/package/accepts) package\n   * docs too.\n   */\n  encodings(): string[] {\n    this.#initiateAccepts()\n    return this.#lazyAccepts.encodings()\n  }\n\n  /**\n   * Returns a boolean telling if request has body\n   */\n  hasBody(): boolean {\n    return typeIs.hasBody(this.request)\n  }\n\n  /**\n   * Returns a boolean telling if the new response etag evaluates same\n   * as the request header `if-none-match`. In case of `true`, the\n   * server must return `304` response, telling the browser to\n   * use the client cache.\n   *\n   * You won't have to deal with this method directly, since AdonisJs will\n   * handle this for you when `http.etag = true` inside `config/app.js` file.\n   *\n   * However, this is how you can use it manually.\n   *\n   * ```js\n   * const responseBody = view.render('some-view')\n   *\n   * // sets the HTTP etag header for response\n   * response.setEtag(responseBody)\n   *\n   * if (request.fresh()) {\n   *   response.sendStatus(304)\n   * } else {\n   *   response.send(responseBody)\n   * }\n   * ```\n   */\n  fresh(): boolean {\n    if (['GET', 'HEAD'].indexOf(this.intended()) === -1) {\n      return false\n    }\n\n    const status = this.response.statusCode\n    if ((status >= 200 && status < 300) || status === 304) {\n      return fresh(this.headers(), this.response.getHeaders())\n    }\n\n    return false\n  }\n\n  /**\n   * Opposite of [[fresh]]\n   */\n  stale(): boolean {\n    return !this.fresh()\n  }\n\n  /**\n   * Returns all parsed and signed cookies. Signed cookies ensures\n   * that their value isn't tampered.\n   */\n  cookiesList() {\n    this.#initiateCookieParser()\n    return this.#cookieParser!.list()\n  }\n\n  /**\n   * Returns value for a given key from signed cookies. Optional\n   * defaultValue is returned when actual value is undefined.\n   */\n  cookie(key: string, defaultValue?: string): any {\n    this.#initiateCookieParser()\n    return this.#cookieParser!.unsign(key) || defaultValue\n  }\n\n  /**\n   * Returns value for a given key from signed cookies. Optional\n   * defaultValue is returned when actual value is undefined.\n   */\n  encryptedCookie(key: string, defaultValue?: string): any {\n    this.#initiateCookieParser()\n    return this.#cookieParser!.decrypt(key) || defaultValue\n  }\n\n  /**\n   * Returns value for a given key from unsigned cookies. Optional\n   * defaultValue is returned when actual value is undefined.\n   */\n  plainCookie(key: string, options?: { defaultValue?: string; encoded?: boolean }): any\n  plainCookie(key: string, defaultValue?: string, encoded?: boolean): any\n  plainCookie(\n    key: string,\n    defaultValueOrOptions?: string | { defaultValue?: string; encoded?: boolean },\n    encoded?: boolean\n  ): any {\n    this.#initiateCookieParser()\n\n    if (is.object(defaultValueOrOptions)) {\n      return (\n        this.#cookieParser!.decode(key, defaultValueOrOptions?.encoded) ||\n        defaultValueOrOptions.defaultValue\n      )\n    }\n\n    return this.#cookieParser!.decode(key, encoded) || defaultValueOrOptions\n  }\n\n  /**\n   * Returns a boolean telling if a signed url as a valid signature\n   * or not.\n   */\n  hasValidSignature(purpose?: string) {\n    const { signature, ...rest } = this.qs()\n    if (!signature) {\n      return false\n    }\n\n    /*\n     * Return false when signature fails\n     */\n    const signedUrl = this.#encryption.verifier.unsign(signature, purpose)\n    if (!signedUrl) {\n      return false\n    }\n\n    const queryString = this.#qsParser.stringify(rest)\n\n    return queryString\n      ? safeEqual(signedUrl, `${this.url()}?${queryString}`)\n      : safeEqual(signedUrl, this.url())\n  }\n\n  /**\n   * Serializes request to JSON format\n   */\n  serialize() {\n    return {\n      id: this.id(),\n      url: this.url(),\n      query: this.parsedUrl.query,\n      body: this.all(),\n      params: this.params(),\n      headers: this.headers(),\n      method: this.method(),\n      protocol: this.protocol(),\n      cookies: this.cookiesList(),\n      hostname: this.hostname(),\n      ip: this.ip(),\n      subdomains: this.ctx?.subdomains || {},\n    }\n  }\n\n  /**\n   * toJSON copy of the request\n   */\n  toJSON() {\n    return this.serialize()\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport cookie from 'cookie'\nimport type { Encryption } from '@adonisjs/encryption'\n\nimport { CookieClient } from './client.js'\n\n/**\n * Cookie parser parses the HTTP `cookie` header and collects all cookies\n * inside an object of `key-value` pair, but doesn't attempt to decrypt\n * or unsign or decode the individual values.\n *\n * The cookie values are lazily decrypted, or unsigned to avoid unncessary\n * processing, which infact can be used as a means to burden the server\n * by sending too many cookies which even doesn't belongs to the\n * server.\n */\nexport class CookieParser {\n  #client: CookieClient\n\n  /**\n   * A copy of cached cookies, they are cached during a request after\n   * initial decoding, unsigning or decrypting.\n   */\n  #cachedCookies: {\n    encryptedCookies: Record<string, any>\n    signedCookies: Record<string, any>\n    plainCookies: Record<string, any>\n  } = {\n    signedCookies: {},\n    plainCookies: {},\n    encryptedCookies: {},\n  }\n\n  /**\n   * An object of key-value pair collected by parsing\n   * the request cookie header.\n   */\n  #cookies: Record<string, any>\n\n  constructor(cookieHeader: string, encryption: Encryption) {\n    this.#client = new CookieClient(encryption)\n    this.#cookies = this.#parse(cookieHeader)\n  }\n\n  /**\n   * Parses the request `cookie` header\n   */\n  #parse(cookieHeader?: string) {\n    /*\n     * Set to empty object when cookie header is empty string\n     */\n    if (!cookieHeader) {\n      return {}\n    }\n\n    /*\n     * Parse and store reference\n     */\n    return cookie.parse(cookieHeader)\n  }\n\n  /**\n   * Attempts to decode a cookie by the name. When calling this method,\n   * you are assuming that the cookie was just encoded in the first\n   * place and not signed or encrypted.\n   */\n  decode(key: string, encoded = true): any | null {\n    /*\n     * Ignore when initial value is not defined or null\n     */\n    const value = this.#cookies[key]\n    if (value === null || value === undefined) {\n      return null\n    }\n\n    /*\n     * Reference to the cache object. Mainly done to avoid typos,\n     * since this object is referenced a handful of times inside\n     * this method.\n     */\n    const cache = this.#cachedCookies.plainCookies\n\n    /*\n     * Return from cache, when already parsed\n     */\n    if (cache[key] !== undefined) {\n      return cache[key]\n    }\n\n    /*\n     * Attempt to unpack and cache it for future. The value is only\n     * when value it is not null.\n     */\n    const parsed = encoded ? this.#client.decode(key, value) : value\n    if (parsed !== null) {\n      cache[key] = parsed\n    }\n\n    return parsed\n  }\n\n  /**\n   * Attempts to unsign a cookie by the name. When calling this method,\n   * you are assuming that the cookie was signed in the first place.\n   */\n  unsign(key: string): null | any {\n    /*\n     * Ignore when initial value is not defined or null\n     */\n    const value = this.#cookies[key]\n    if (value === null || value === undefined) {\n      return null\n    }\n\n    /*\n     * Reference to the cache object. Mainly done to avoid typos,\n     * since this object is referenced a handful of times inside\n     * this method.\n     */\n    const cache = this.#cachedCookies.signedCookies\n\n    /*\n     * Return from cache, when already parsed\n     */\n    if (cache[key] !== undefined) {\n      return cache[key]\n    }\n\n    /*\n     * Attempt to unpack and cache it for future. The value is only\n     * when value it is not null.\n     */\n    const parsed = this.#client.unsign(key, value)\n    if (parsed !== null) {\n      cache[key] = parsed\n    }\n\n    return parsed\n  }\n\n  /**\n   * Attempts to decrypt a cookie by the name. When calling this method,\n   * you are assuming that the cookie was encrypted in the first place.\n   */\n  decrypt(key: string): null | any {\n    /*\n     * Ignore when initial value is not defined or null\n     */\n    const value = this.#cookies[key]\n    if (value === null || value === undefined) {\n      return null\n    }\n\n    /*\n     * Reference to the cache object. Mainly done to avoid typos,\n     * since this object is referenced a handful of times inside\n     * this method.\n     */\n    const cache = this.#cachedCookies.encryptedCookies\n\n    /*\n     * Return from cache, when already parsed\n     */\n    if (cache[key] !== undefined) {\n      return cache[key]\n    }\n\n    /*\n     * Attempt to unpack and cache it for future. The value is only\n     * when value it is not null.\n     */\n    const parsed = this.#client.decrypt(key, value)\n    if (parsed !== null) {\n      cache[key] = parsed\n    }\n\n    return parsed\n  }\n\n  /**\n   * Returns an object of cookies key-value pair. Do note, the\n   * cookies are not decoded, unsigned or decrypted inside this\n   * list.\n   */\n  list() {\n    return this.#cookies\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { parse } from 'node:url'\nimport encodeUrl from 'encodeurl'\nimport type { IncomingMessage } from 'node:http'\n\nimport debug from './debug.js'\nimport type { Qs } from './qs.js'\nimport type { Response } from './response.js'\nimport type { Router } from './router/main.js'\nimport type { MakeUrlOptions } from './types/route.js'\n\n/**\n * Exposes the API to construct redirect routes\n */\nexport class Redirect {\n  /**\n   * A boolean to forward the existing query string\n   */\n  #forwardQueryString = false\n\n  /**\n   * The status code for the redirect\n   */\n  #statusCode = 302\n\n  /**\n   * A custom query string to forward\n   */\n  #queryString: Record<string, any> = {}\n\n  #request: IncomingMessage\n  #response: Response\n  #router: Router\n  #qs: Qs\n\n  constructor(request: IncomingMessage, response: Response, router: Router, qs: Qs) {\n    this.#request = request\n    this.#response = response\n    this.#router = router\n    this.#qs = qs\n  }\n\n  /**\n   * Sends response by setting require headers\n   */\n  #sendResponse(url: string, query: Record<string, any>) {\n    const stringified = this.#qs.stringify(query)\n\n    url = stringified ? `${url}?${stringified}` : url\n    debug('redirecting to url \"%s\"', url)\n\n    this.#response.location(encodeUrl(url))\n    this.#response.safeStatus(this.#statusCode)\n    this.#response.type('text/plain; charset=utf-8')\n    this.#response.send(`Redirecting to ${url}`)\n  }\n\n  /**\n   * Returns the referrer url\n   */\n  #getReferrerUrl(): string {\n    let url = this.#request.headers['referer'] || this.#request.headers['referrer'] || '/'\n    return Array.isArray(url) ? url[0] : url\n  }\n\n  /**\n   * Set a custom status code.\n   */\n  status(statusCode: number): this {\n    this.#statusCode = statusCode\n    return this\n  }\n\n  /**\n   * Clearing query string values added using the\n   * \"withQs\" method\n   */\n  clearQs(): this {\n    this.#forwardQueryString = false\n    this.#queryString = {}\n    return this\n  }\n\n  /**\n   * Define query string for the redirect. Not passing\n   * any value will forward the current request query\n   * string.\n   */\n  withQs(): this\n  withQs(values: Record<string, any>): this\n  withQs(name: string, value: any): this\n  withQs(name?: Record<string, any> | string, value?: any): this {\n    if (typeof name === 'undefined') {\n      this.#forwardQueryString = true\n      return this\n    }\n\n    if (typeof name === 'string') {\n      this.#queryString[name] = value\n      return this\n    }\n\n    Object.assign(this.#queryString, name)\n    return this\n  }\n\n  /**\n   * Redirect to the previous path.\n   */\n  back() {\n    let query: Record<string, any> = {}\n\n    const referrerUrl = this.#getReferrerUrl()\n    const url = parse(referrerUrl)\n\n    debug('referrer url \"%s\"', referrerUrl)\n    debug('referrer base url \"%s\"', url.pathname)\n\n    /**\n     * Parse query string from the referrer url\n     */\n    if (this.#forwardQueryString) {\n      query = this.#qs.parse(url.query || '')\n    }\n\n    /**\n     * Append custom query string\n     */\n    Object.assign(query, this.#queryString)\n\n    /**\n     * Redirect\n     */\n    this.#sendResponse(url.pathname || '', query)\n  }\n\n  /**\n   * Redirect the request using a route identifier.\n   */\n  toRoute(routeIdentifier: string, params?: any[] | Record<string, any>, options?: MakeUrlOptions) {\n    if (options && options.qs) {\n      this.withQs(options.qs)\n      options.qs = undefined\n    }\n\n    const url = this.#router.makeUrl(routeIdentifier, params, options)\n    return this.toPath(url)\n  }\n\n  /**\n   * Redirect the request using a path.\n   */\n  toPath(url: string) {\n    let query: Record<string, any> = {}\n\n    /**\n     * Extract query string from the current URL\n     */\n    if (this.#forwardQueryString) {\n      query = this.#qs.parse(parse(this.#request.url!).query || '')\n    }\n\n    /**\n     * Assign custom query string\n     */\n    Object.assign(query, this.#queryString)\n\n    /**\n     * Redirect\n     */\n    this.#sendResponse(url, query)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { createError, Exception } from '@poppinss/utils'\nimport type { HttpContext } from './http_context/main.js'\n\nexport const E_ROUTE_NOT_FOUND = createError<[method: string, url: string]>(\n  'Cannot %s:%s',\n  'E_ROUTE_NOT_FOUND',\n  404\n)\n\nexport const E_CANNOT_LOOKUP_ROUTE = createError<[routeIdentifier: string]>(\n  'Cannot lookup route \"%s\"',\n  'E_CANNOT_LOOKUP_ROUTE',\n  500\n)\n\nexport const E_HTTP_EXCEPTION = class HttpException extends Exception {\n  body: any\n  static code = 'E_HTTP_EXCEPTION'\n\n  /**\n   * This method returns an instance of the exception class\n   */\n  static invoke(body: any, status: number, code: string = 'E_HTTP_EXCEPTION'): HttpException {\n    if (body === null || body === undefined) {\n      const error = new this('HTTP Exception', { status, code })\n      error.body = 'Internal server error'\n      return error\n    }\n\n    if (typeof body === 'object') {\n      const error = new this(body.message || 'HTTP Exception', { status, code })\n      error.body = body\n      return error\n    }\n\n    const error = new this(body, { status, code })\n    error.body = body\n    return error\n  }\n}\n\nexport const E_HTTP_REQUEST_ABORTED = class AbortException extends E_HTTP_EXCEPTION {\n  handle(error: AbortException, ctx: HttpContext) {\n    ctx.response.status(error.status).send(error.body)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const ResponseStatus = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  IMUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  URITooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HTTPVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n} as const\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport etag from 'etag'\nimport vary from 'vary'\nimport fresh from 'fresh'\nimport mime from 'mime-types'\nimport destroy from 'destroy'\nimport { extname } from 'node:path'\nimport onFinished from 'on-finished'\nimport json from '@poppinss/utils/json'\nimport Macroable from '@poppinss/macroable'\nimport { createReadStream } from 'node:fs'\nimport { stat } from 'node:fs/promises'\nimport { RuntimeException } from '@poppinss/utils'\nimport contentDisposition from 'content-disposition'\nimport type { Encryption } from '@adonisjs/encryption'\nimport { ServerResponse, IncomingMessage, OutgoingHttpHeaders } from 'node:http'\n\nimport type { Qs } from './qs.js'\nimport { Redirect } from './redirect.js'\nimport type { Router } from './router/main.js'\nimport type { HttpContext } from './http_context/main.js'\nimport { CookieSerializer } from './cookies/serializer.js'\nimport { E_HTTP_REQUEST_ABORTED } from './exceptions.js'\nimport type {\n  CastableHeader,\n  CookieOptions,\n  ResponseConfig,\n  ResponseStream,\n} from './types/response.js'\nimport { ResponseStatus } from './response_status.js'\n\nconst CACHEABLE_HTTP_METHODS = ['GET', 'HEAD']\n\n/**\n * The response is a wrapper over [ServerResponse](https://nodejs.org/api/http.html#http_class_http_serverresponse)\n * streamlining the process of writing response body and automatically setting up appropriate headers.\n */\nexport class Response extends Macroable {\n  /**\n   * Query string parser\n   */\n  #qs: Qs\n\n  /**\n   * Outgoing headers\n   */\n  #headers: OutgoingHttpHeaders = {}\n\n  /**\n   * Has explicit status been set\n   */\n  #hasExplicitStatus = false\n\n  /**\n   * Cookies serializer to serialize the outgoing cookies\n   */\n  #cookieSerializer: CookieSerializer\n\n  /**\n   * Router is used to make the redirect URLs from routes\n   */\n  #router: Router\n\n  /**\n   * Response config\n   */\n  #config: ResponseConfig\n\n  /**\n   * Does response has body set that will written to the\n   * response socket at the end of the request\n   */\n  get hasLazyBody(): boolean {\n    return !!(this.lazyBody.content || this.lazyBody.fileToStream || this.lazyBody.stream)\n  }\n\n  /**\n   * Find if the response has non-stream content\n   */\n  get hasContent(): boolean {\n    return !!this.lazyBody.content\n  }\n\n  /**\n   * Returns true when response body is set using \"response.stream\"\n   * method\n   */\n  get hasStream(): boolean {\n    return !!this.lazyBody.stream\n  }\n\n  /**\n   * Returns true when response body is set using \"response.download\"\n   * or \"response.attachment\" methods\n   */\n  get hasFileToStream(): boolean {\n    return !!this.lazyBody.fileToStream\n  }\n\n  /**\n   * Returns the response content. Check if the response\n   * has content using the \"hasContent\" method\n   */\n  get content() {\n    return this.lazyBody.content\n  }\n\n  /**\n   * Returns reference to the stream set using \"response.stream\"\n   * method\n   */\n  get outgoingStream() {\n    return this.lazyBody.stream?.[0]\n  }\n\n  /**\n   * Returns reference to the file path set using \"response.stream\"\n   * method.\n   */\n  get fileToStream() {\n    return this.lazyBody.fileToStream\n      ? {\n          path: this.lazyBody.fileToStream[0],\n          generateEtag: this.lazyBody.fileToStream[1],\n        }\n      : undefined\n  }\n\n  /**\n   * Lazy body is used to set the response body. However, do not\n   * write it on the socket immediately unless `response.finish`\n   * is called.\n   */\n  lazyBody: Partial<{\n    content: [any, boolean, string?]\n    stream: [ResponseStream, ((error: NodeJS.ErrnoException) => [string, number?])?]\n    fileToStream: [string, boolean, ((error: NodeJS.ErrnoException) => [string, number?])?]\n  }> = {}\n\n  /**\n   * The ctx will be set by the context itself. It creates a circular\n   * reference\n   */\n  ctx?: HttpContext\n\n  constructor(\n    public request: IncomingMessage,\n    public response: ServerResponse,\n    encryption: Encryption,\n    config: ResponseConfig,\n    router: Router,\n    qs: Qs\n  ) {\n    super()\n\n    this.#qs = qs\n    this.#config = config\n    this.#router = router\n    this.#cookieSerializer = new CookieSerializer(encryption)\n  }\n\n  /**\n   * Returns a boolean telling if response is finished or not.\n   * Any more attempts to update headers or body will result\n   * in raised exceptions.\n   */\n  get finished(): boolean {\n    return this.response.writableFinished\n  }\n\n  /**\n   * Returns a boolean telling if response headers has been sent or not.\n   * Any more attempts to update headers will result in raised\n   * exceptions.\n   */\n  get headersSent(): boolean {\n    return this.response.headersSent\n  }\n\n  /**\n   * Returns a boolean telling if response headers and body is written\n   * or not. When value is `true`, you can feel free to write headers\n   * and body.\n   */\n  get isPending(): boolean {\n    return !this.headersSent && !this.finished\n  }\n\n  /**\n   * Normalizes header value to a string or an array of string\n   */\n  #castHeaderValue(value: any): string | string[] {\n    return Array.isArray(value) ? value.map(String) : String(value)\n  }\n\n  /**\n   * Ends the response by flushing headers and writing body\n   */\n  #endResponse(body?: any, statusCode?: number) {\n    this.writeHead(statusCode)\n\n    // avoid ArgumentsAdaptorTrampoline from V8 (inspired by fastify)\n    const res = this.response as any\n    res.end(body, null, null)\n  }\n\n  /**\n   * Returns type for the content body. Only following types are allowed\n   *\n   * - Dates\n   * - Arrays\n   * - Booleans\n   * - Objects\n   * - Strings\n   * - Buffer\n   */\n  #getDataType(content: any) {\n    if (Buffer.isBuffer(content)) {\n      return 'buffer'\n    }\n\n    /**\n     * Date instance\n     */\n    if (content instanceof Date) {\n      return 'date'\n    }\n\n    /**\n     * Regular expression\n     */\n    if (content instanceof RegExp) {\n      return 'regexp'\n    }\n\n    const dataType = typeof content\n    if (\n      dataType === 'number' ||\n      dataType === 'boolean' ||\n      dataType === 'string' ||\n      dataType === 'bigint'\n    ) {\n      return dataType\n    }\n\n    /**\n     * Object\n     */\n    if (dataType === 'object') {\n      return 'object'\n    }\n\n    throw new RuntimeException(`Cannot serialize \"${dataType}\" to HTTP response`)\n  }\n\n  /**\n   * Writes the body with appropriate response headers. Etag header is set\n   * when `generateEtag` is set to `true`.\n   *\n   * Empty body results in `204`.\n   */\n  protected writeBody(content: any, generateEtag: boolean, jsonpCallbackName?: string): void {\n    const hasEmptyBody = content === null || content === undefined || content === ''\n\n    /**\n     * Set status to \"204\" when body is empty. The `safeStatus` method only\n     * sets the status when no explicit status has been set already\n     */\n    if (hasEmptyBody) {\n      this.safeStatus(204)\n    }\n\n    const statusCode = this.response.statusCode\n\n    /**\n     * Do not process body when status code is less than 200 or is 204 or 304. As per\n     * https://tools.ietf.org/html/rfc7230#section-3.3.2\n     */\n    if (\n      statusCode &&\n      (statusCode < ResponseStatus.Ok ||\n        statusCode === ResponseStatus.NoContent ||\n        statusCode === ResponseStatus.NotModified)\n    ) {\n      this.removeHeader('Content-Type')\n      this.removeHeader('Content-Length')\n      this.removeHeader('Transfer-Encoding')\n      this.#endResponse()\n      return\n    }\n\n    /**\n     * Body is empty and status code is not \"204\", \"304\" and neither under 200.\n     */\n    if (hasEmptyBody) {\n      this.removeHeader('Content-Length')\n      this.#endResponse()\n      return\n    }\n\n    /**\n     * Javascript data type for the content. We only handle a subset\n     * of data types. Check [[this.getDataType]] method for more\n     * info\n     */\n    const dataType = this.#getDataType(content)\n\n    /**\n     * ----------------------------------------\n     * SERIALIZE CONTENT TO A STRING\n     * ----------------------------------------\n     *\n     * Transforming date, number, boolean and object to a string\n     */\n    if (dataType === 'object') {\n      content = json.safeStringify(content)\n    } else if (\n      dataType === 'number' ||\n      dataType === 'boolean' ||\n      dataType === 'bigint' ||\n      dataType === 'regexp'\n    ) {\n      content = String(content)\n    } else if (dataType === 'date') {\n      content = content.toISOString()\n    }\n\n    /*\n     * ----------------------------------------\n     * MORE MODIFICATIONS FOR JSONP BODY\n     * ----------------------------------------\n     *\n     * If JSONP callback exists, then update the body to be a\n     * valid JSONP response\n     */\n    if (jsonpCallbackName) {\n      /*\n       * replace chars not allowed in JavaScript that are in JSON\n       * https://github.com/rack/rack-contrib/pull/37\n       */\n      content = content.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029')\n\n      // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n      // https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-4671\n      // http://miki.it/blog/2014/7/8/abusing-jsonp-with-rosetta-flash/\n      // http://drops.wooyun.org/tips/2554\n      content = `/**/ typeof ${jsonpCallbackName} === 'function' && ${jsonpCallbackName}(${content});`\n    }\n\n    /*\n     * ----------------------------------------\n     * FINALY GENERATE AN ETAG\n     * ----------------------------------------\n     *\n     * Generate etag if instructed.\n     */\n    if (generateEtag) {\n      this.setEtag(content)\n    }\n\n    /**\n     * End response when cache is fresh\n     */\n    if (generateEtag && this.fresh()) {\n      this.removeHeader('Content-Type')\n      this.removeHeader('Content-Length')\n      this.removeHeader('Transfer-Encoding')\n      this.#endResponse(null, ResponseStatus.NotModified)\n      return\n    }\n\n    /*\n     * ----------------------------------------\n     * SET CONTENT-LENGTH HEADER\n     * ----------------------------------------\n     */\n    this.header('Content-Length', Buffer.byteLength(content))\n\n    /**\n     * ----------------------------------------\n     * SET CONTENT-TYPE HEADER\n     * ----------------------------------------\n     *\n     * - If it is a JSONP response, then we always set the content type\n     *   to \"text/javascript\"\n     *\n     * - String are checked for HTML and \"text/plain\" or \"text/html\" is set\n     *   accordingly.\n     *\n     * - \"text/plain\"  is set for \"numbers\" and \"booleans\" and \"dates\"\n     *\n     * - \"application/octet-stream\" is set for buffers\n     *\n     * - \"application/json\" is set for objects and arrays\n     */\n    if (jsonpCallbackName) {\n      this.header('X-Content-Type-Options', 'nosniff')\n      this.safeHeader('Content-Type', 'text/javascript; charset=utf-8')\n    } else {\n      switch (dataType) {\n        case 'string':\n          const type = /^\\s*</.test(content) ? 'text/html' : 'text/plain'\n          this.safeHeader('Content-Type', `${type}; charset=utf-8`)\n          break\n        case 'number':\n        case 'boolean':\n        case 'date':\n        case 'bigint':\n        case 'regexp':\n          this.safeHeader('Content-Type', 'text/plain; charset=utf-8')\n          break\n        case 'buffer':\n          this.safeHeader('Content-Type', 'application/octet-stream; charset=utf-8')\n          break\n        case 'object':\n          this.safeHeader('Content-Type', 'application/json; charset=utf-8')\n          break\n      }\n    }\n\n    this.#endResponse(content)\n  }\n\n  /**\n   * Stream the body to the response and handles cleaning up the stream\n   */\n  protected streamBody(\n    body: ResponseStream,\n    errorCallback?: (error: NodeJS.ErrnoException) => [string, number?]\n  ): Promise<void> {\n    return new Promise((resolve) => {\n      let finished = false\n\n      /*\n       * Listen for errors on the stream and properly destroy\n       * stream\n       */\n      body.on('error', (error: NodeJS.ErrnoException) => {\n        /* c8 ignore next 3 */\n        if (finished) {\n          return\n        }\n\n        finished = true\n        destroy(body)\n\n        this.type('text')\n\n        if (!this.headersSent) {\n          if (typeof errorCallback === 'function') {\n            this.#endResponse(...errorCallback(error))\n          } else {\n            this.#endResponse(\n              error.code === 'ENOENT' ? 'File not found' : 'Cannot process file',\n              error.code === 'ENOENT' ? ResponseStatus.NotFound : ResponseStatus.InternalServerError\n            )\n          }\n        } else {\n          this.response.destroy()\n        }\n\n        resolve()\n      })\n\n      /*\n       * Listen for end and resolve the promise\n       */\n      body.on('end', () => {\n        if (!this.headersSent) {\n          this.#endResponse()\n        }\n        resolve()\n      })\n\n      /*\n       * Cleanup stream when finishing response\n       */\n      onFinished(this.response, () => {\n        finished = true\n        destroy(body)\n      })\n\n      /*\n       * Pipe stream\n       */\n      this.relayHeaders()\n      body.pipe(this.response)\n    })\n  }\n\n  /**\n   * Downloads a file by streaming it to the response\n   */\n  protected async streamFileForDownload(\n    filePath: string,\n    generateEtag: boolean,\n    errorCallback?: (error: NodeJS.ErrnoException) => [string, number?]\n  ) {\n    try {\n      const stats = await stat(filePath)\n      if (!stats || !stats.isFile()) {\n        throw new TypeError('response.download only accepts path to a file')\n      }\n\n      /*\n       * Set appropriate headers\n       */\n      this.header('Last-Modified', stats.mtime.toUTCString())\n      this.type(extname(filePath))\n\n      /*\n       * Set the etag when instructed.\n       */\n      if (generateEtag) {\n        this.setEtag(stats, true)\n      }\n\n      /*\n       * Do not stream files for HEAD request, but set the appropriate\n       * status code.\n       *\n       * 200: When not using etags or cache is not fresh. This forces browser\n       *      to always make a GET request\n       *\n       * 304: When etags are used and cache is fresh\n       */\n      if (this.request.method === 'HEAD') {\n        this.#endResponse(\n          null,\n          generateEtag && this.fresh() ? ResponseStatus.NotModified : ResponseStatus.Ok\n        )\n        return\n      }\n\n      /*\n       * Regardless of request method, if we are using etags and\n       * cache is fresh, then we must respond with 304\n       */\n      if (generateEtag && this.fresh()) {\n        this.#endResponse(null, ResponseStatus.NotModified)\n        return\n      }\n\n      /*\n       * Fix for https://tools.ietf.org/html/rfc7232#section-4.1. It is\n       * recommended to ignore headers other than Cache-Control,\n       * Content-Location, Date, ETag, Expires, and Vary.\n       */\n      this.header('Content-length', stats.size)\n\n      /*\n       * Finally stream the file\n       */\n      return this.streamBody(createReadStream(filePath), errorCallback)\n    } catch (error) {\n      this.type('text')\n      this.removeHeader('Etag')\n\n      if (typeof errorCallback === 'function') {\n        this.#endResponse(...errorCallback(error))\n      } else {\n        this.#endResponse(\n          error.code === 'ENOENT' ? 'File not found' : 'Cannot process file',\n          error.code === 'ENOENT' ? ResponseStatus.NotFound : ResponseStatus.InternalServerError\n        )\n      }\n    }\n  }\n\n  /**\n   * Listen for the event the response is written\n   * to the TCP socket.\n   *\n   * Under the hood the callback is registered with\n   * the \"https://github.com/jshttp/on-finished\" package\n   */\n  onFinish(callback: (err: Error | null, response: ServerResponse) => void) {\n    onFinished(this.response, callback)\n  }\n\n  /**\n   * Writes headers with the Node.js res object using the\n   * response.setHeader method\n   */\n  relayHeaders() {\n    if (!this.headersSent) {\n      for (let key in this.#headers) {\n        const value = this.#headers[key]\n        if (value) {\n          this.response.setHeader(key, value)\n        }\n      }\n    }\n  }\n\n  /**\n   * Calls res.writeHead on the Node.js res object.\n   */\n  writeHead(statusCode?: number): this {\n    this.response.writeHead(statusCode || this.response.statusCode, this.#headers)\n    return this\n  }\n\n  /**\n   * Returns the existing value for a given HTTP response\n   * header.\n   */\n  getHeader(key: string) {\n    const value = this.#headers[key.toLowerCase()]\n    return value === undefined ? this.response.getHeader(key) : value\n  }\n\n  /**\n   * Get response headers\n   */\n  getHeaders() {\n    return {\n      ...this.response.getHeaders(),\n      ...this.#headers,\n    }\n  }\n\n  /**\n   * Set header on the response. To `append` values to the existing header, we suggest\n   * using [[append]] method.\n   *\n   * If `value` is non existy, then header won't be set.\n   *\n   * @example\n   * ```js\n   * response.header('content-type', 'application/json')\n   * ```\n   */\n  header(key: string, value: CastableHeader): this {\n    if (value === null || value === undefined) {\n      return this\n    }\n\n    this.#headers[key.toLowerCase()] = this.#castHeaderValue(value)\n    return this\n  }\n\n  /**\n   * Append value to an existing header. To replace the value, we suggest using\n   * [[header]] method.\n   *\n   * If `value` is not existy, then header won't be set.\n   *\n   * @example\n   * ```js\n   * response.append('set-cookie', 'username=virk')\n   * ```\n   */\n  append(key: string, value: CastableHeader): this {\n    if (value === null || value === undefined) {\n      return this\n    }\n\n    key = key.toLowerCase()\n\n    let existingHeader = this.getHeader(key)\n    let casted = this.#castHeaderValue(value)\n\n    /**\n     * If there isn't any header, then setHeader right\n     * away\n     */\n    if (!existingHeader) {\n      this.#headers[key] = casted\n      return this\n    }\n\n    existingHeader = this.#castHeaderValue(existingHeader)\n    casted = Array.isArray(existingHeader)\n      ? existingHeader.concat(casted)\n      : [existingHeader].concat(casted)\n\n    this.#headers[key] = casted\n    return this\n  }\n\n  /**\n   * Adds HTTP response header, when it doesn't exists already.\n   */\n  safeHeader(key: string, value: CastableHeader): this {\n    if (!this.getHeader(key)) {\n      this.header(key, value)\n    }\n    return this\n  }\n\n  /**\n   * Removes the existing response header from being sent.\n   */\n  removeHeader(key: string): this {\n    key = key.toLowerCase()\n\n    this.response.removeHeader(key)\n    if (this.#headers[key]) {\n      delete this.#headers[key.toLowerCase()]\n    }\n\n    return this\n  }\n\n  /**\n   * Returns the status code for the response\n   */\n  getStatus(): number {\n    return this.response.statusCode\n  }\n\n  /**\n   * Set HTTP status code\n   */\n  status(code: number): this {\n    this.#hasExplicitStatus = true\n    this.response.statusCode = code\n    return this\n  }\n\n  /**\n   * Set's status code only when it's not explictly\n   * set\n   */\n  safeStatus(code: number): this {\n    if (this.#hasExplicitStatus) {\n      return this\n    }\n\n    this.response.statusCode = code\n    return this\n  }\n\n  /**\n   * Set response type by looking up for the mime-type using\n   * partial types like file extensions.\n   *\n   * Make sure to read [mime-types](https://www.npmjs.com/package/mime-types) docs\n   * too.\n   *\n   * @example\n   * ```js\n   * response.type('.json') // Content-type: application/json\n   * ```\n   */\n  type(type: string, charset?: string): this {\n    type = charset ? `${type}; charset=${charset}` : type\n    this.header('Content-Type', mime.contentType(type))\n\n    return this\n  }\n\n  /**\n   * Set the Vary HTTP header\n   */\n  vary(field: string | string[]): this {\n    vary(this.response, field)\n    return this\n  }\n\n  /**\n   * Set etag by computing hash from the body. This class will set the etag automatically\n   * when `etag = true` in the defined config object.\n   *\n   * Use this function, when you want to compute etag manually for some other resons.\n   */\n  setEtag(body: any, weak: boolean = false): this {\n    this.header('Etag', etag(body, { weak }))\n    return this\n  }\n\n  /**\n   * Returns a boolean telling if the new response etag evaluates same\n   * as the request header `if-none-match`. In case of `true`, the\n   * server must return `304` response, telling the browser to\n   * use the client cache.\n   *\n   * You won't have to deal with this method directly, since AdonisJs will\n   * handle this for you when `http.etag = true` inside `config/app.js` file.\n   *\n   * However, this is how you can use it manually.\n   *\n   * @example\n   * ```js\n   * const responseBody = view.render('some-view')\n   *\n   * // sets the HTTP etag header for response\n   * response.setEtag(responseBody)\n   *\n   * if (response.fresh()) {\n   *   response.sendStatus(304)\n   * } else {\n   *   response.send(responseBody)\n   * }\n   * ```\n   */\n  fresh(): boolean {\n    if (this.request.method && !CACHEABLE_HTTP_METHODS.includes(this.request.method)) {\n      return false\n    }\n\n    const status = this.response.statusCode\n    if (\n      (status >= ResponseStatus.Ok && status < ResponseStatus.MultipleChoices) ||\n      status === ResponseStatus.NotModified\n    ) {\n      return fresh(this.request.headers, this.#headers)\n    }\n\n    return false\n  }\n\n  /**\n   * Returns the response body. Returns null when response\n   * body is a stream\n   */\n  getBody() {\n    if (this.lazyBody.content) {\n      return this.lazyBody.content[0]\n    }\n\n    return null\n  }\n\n  /**\n   * Send the body as response and optionally generate etag. The default value\n   * is read from `config/app.js` file, using `http.etag` property.\n   *\n   * This method buffers the body if `explicitEnd = true`, which is the default\n   * behavior and do not change, unless you know what you are doing.\n   */\n  send(body: any, generateEtag: boolean = this.#config.etag): void {\n    this.lazyBody.content = [body, generateEtag]\n  }\n\n  /**\n   * Alias of [[send]]\n   */\n  json(body: any, generateEtag: boolean = this.#config.etag): void {\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Writes response as JSONP. The callback name is resolved as follows, with priority\n   * from top to bottom.\n   *\n   * 1. Explicitly defined as 2nd Param.\n   * 2. Fetch from request query string.\n   * 3. Use the config value `http.jsonpCallbackName` from `config/app.js`.\n   * 4. Fallback to `callback`.\n   *\n   * This method buffers the body if `explicitEnd = true`, which is the default\n   * behavior and do not change, unless you know what you are doing.\n   */\n  jsonp(\n    body: any,\n    callbackName: string = this.#config.jsonpCallbackName,\n    generateEtag: boolean = this.#config.etag\n  ) {\n    this.lazyBody.content = [body, generateEtag, callbackName]\n  }\n\n  /**\n   * Pipe stream to the response. This method will gracefully destroy\n   * the stream, avoiding memory leaks.\n   *\n   * If `raiseErrors=false`, then this method will self handle all the exceptions by\n   * writing a generic HTTP response. To have more control over the error, it is\n   * recommended to set `raiseErrors=true` and wrap this function inside a\n   * `try/catch` statement.\n   *\n   * Streaming a file from the disk and showing 404 when file is missing.\n   *\n   * @example\n   * ```js\n   * // Errors handled automatically with generic HTTP response\n   * response.stream(fs.createReadStream('file.txt'))\n   *\n   * // Manually handle (note the await call)\n   * try {\n   *   await response.stream(fs.createReadStream('file.txt'))\n   * } catch () {\n   *   response.status(404).send('File not found')\n   * }\n   * ```\n   */\n  stream(\n    body: ResponseStream,\n    errorCallback?: (error: NodeJS.ErrnoException) => [string, number?]\n  ): void {\n    if (typeof body.pipe !== 'function' || !body.readable || typeof body.read !== 'function') {\n      throw new TypeError('response.stream accepts a readable stream only')\n    }\n\n    this.lazyBody.stream = [body, errorCallback]\n  }\n\n  /**\n   * Download file by streaming it from the file path. This method will setup\n   * appropriate `Content-type`, `Content-type` and `Last-modified` headers.\n   *\n   * Unexpected stream errors are handled gracefully to avoid memory leaks.\n   *\n   * If `raiseErrors=false`, then this method will self handle all the exceptions by\n   * writing a generic HTTP response. To have more control over the error, it is\n   * recommended to set `raiseErrors=true` and wrap this function inside a\n   * `try/catch` statement.\n   *\n   * @example\n   * ```js\n   * // Errors handled automatically with generic HTTP response\n   * response.download('somefile.jpg')\n   *\n   * // Manually handle (note the await call)\n   * try {\n   *   await response.download('somefile.jpg')\n   * } catch (error) {\n   *   response.status(error.code === 'ENOENT' ? 404 : 500)\n   *   response.send('Cannot process file')\n   * }\n   * ```\n   */\n  download(\n    filePath: string,\n    generateEtag: boolean = this.#config.etag,\n    errorCallback?: (error: NodeJS.ErrnoException) => [string, number?]\n  ): void {\n    this.lazyBody.fileToStream = [filePath, generateEtag, errorCallback]\n  }\n\n  /**\n   * Download the file by forcing the user to save the file vs displaying it\n   * within the browser.\n   *\n   * Internally calls [[download]]\n   */\n  attachment(\n    filePath: string,\n    name?: string,\n    disposition?: string,\n    generateEtag?: boolean,\n    errorCallback?: (error: NodeJS.ErrnoException) => [string, number?]\n  ) {\n    name = name || filePath\n    this.header('Content-Disposition', contentDisposition(name, { type: disposition }))\n    return this.download(filePath, generateEtag, errorCallback)\n  }\n\n  /**\n   * Set the location header.\n   *\n   * @example\n   * ```js\n   * response.location('/login')\n   * ```\n   */\n  location(url: string): this {\n    this.header('Location', url)\n    return this\n  }\n\n  /**\n   * Redirect the request.\n   *\n   * @example\n   * ```js\n   * response.redirect('/foo')\n   * response.redirect().toRoute('foo.bar')\n   * response.redirect().back()\n   * ```\n   */\n  redirect(): Redirect\n  redirect(path: string, forwardQueryString?: boolean, statusCode?: number): void\n  redirect(\n    path?: string,\n    forwardQueryString: boolean = false,\n    statusCode: number = ResponseStatus.Found\n  ): Redirect | void {\n    const handler = new Redirect(this.request, this, this.#router, this.#qs)\n\n    if (forwardQueryString) {\n      handler.withQs()\n    }\n\n    if (path === 'back') {\n      return handler.status(statusCode).back()\n    }\n\n    if (path) {\n      return handler.status(statusCode).toPath(path)\n    }\n\n    return handler\n  }\n\n  /**\n   * Abort the request with custom body and a status code. 400 is\n   * used when status is not defined\n   */\n  abort(body: any, status?: number): never {\n    throw E_HTTP_REQUEST_ABORTED.invoke(body, status || ResponseStatus.BadRequest)\n  }\n\n  /**\n   * Abort the request with custom body and a status code when\n   * passed condition returns `true`\n   */\n  abortIf(\n    condition: unknown,\n    body: any,\n    status?: number\n  ): asserts condition is undefined | null | false {\n    if (condition) {\n      this.abort(body, status)\n    }\n  }\n\n  /**\n   * Abort the request with custom body and a status code when\n   * passed condition returns `false`\n   */\n  abortUnless<T>(\n    condition: T,\n    body: any,\n    status?: number\n  ): asserts condition is Exclude<T, undefined | null | false> {\n    if (!condition) {\n      this.abort(body, status)\n    }\n  }\n\n  /**\n   * Set signed cookie as the response header. The inline options overrides\n   * all options from the config.\n   */\n  cookie(key: string, value: any, options?: Partial<CookieOptions>): this {\n    options = Object.assign({}, this.#config.cookie, options)\n\n    const serialized = this.#cookieSerializer.sign(key, value, options)\n    if (!serialized) {\n      return this\n    }\n\n    this.append('set-cookie', serialized)\n    return this\n  }\n\n  /**\n   * Set encrypted cookie as the response header. The inline options overrides\n   * all options from the config.\n   */\n  encryptedCookie(key: string, value: any, options?: Partial<CookieOptions>): this {\n    options = Object.assign({}, this.#config.cookie, options)\n\n    const serialized = this.#cookieSerializer.encrypt(key, value, options)\n    if (!serialized) {\n      return this\n    }\n\n    this.append('set-cookie', serialized)\n    return this\n  }\n\n  /**\n   * Set unsigned cookie as the response header. The inline options overrides\n   * all options from the config.\n   */\n  plainCookie(\n    key: string,\n    value: any,\n    options?: Partial<CookieOptions & { encode: boolean }>\n  ): this {\n    options = Object.assign({}, this.#config.cookie, options)\n\n    const serialized = this.#cookieSerializer.encode(key, value, options)\n    if (!serialized) {\n      return this\n    }\n\n    this.append('set-cookie', serialized)\n    return this\n  }\n\n  /**\n   * Clear existing cookie.\n   */\n  clearCookie(key: string, options?: Partial<CookieOptions>): this {\n    options = Object.assign({}, this.#config.cookie, options)\n    options.expires = new Date(1)\n    options.maxAge = -1\n\n    const serialized = this.#cookieSerializer.encode(key, '', { ...options, encode: false })\n    this.append('set-cookie', serialized!)\n    return this\n  }\n\n  /**\n   * Finishes the response by writing the lazy body, when `explicitEnd = true`\n   * and response is already pending.\n   *\n   * Calling this method twice or when `explicitEnd = false` is noop.\n   */\n  finish() {\n    if (!this.isPending) {\n      return\n    }\n\n    if (this.content) {\n      this.writeBody(...this.content)\n      return\n    }\n\n    if (this.lazyBody.stream) {\n      this.streamBody(...this.lazyBody.stream)\n      return\n    }\n\n    if (this.lazyBody.fileToStream) {\n      this.streamFileForDownload(...this.lazyBody.fileToStream)\n      return\n    }\n\n    this.#endResponse()\n  }\n\n  /**\n   * Shorthand method to finish request with \"100\" status code\n   */\n  continue(): void {\n    this.status(ResponseStatus.Continue)\n    return this.send(null, false)\n  }\n\n  /**\n   * Shorthand method to finish request with \"101\" status code\n   */\n  switchingProtocols(): void {\n    this.status(ResponseStatus.SwitchingProtocols)\n    return this.send(null, false)\n  }\n\n  /**\n   * Shorthand method to finish request with \"200\" status code\n   */\n  ok(body: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Ok)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"201\" status code\n   */\n  created(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Created)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"202\" status code\n   */\n  accepted(body: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Accepted)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"203\" status code\n   */\n  nonAuthoritativeInformation(body: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.NonAuthoritativeInformation)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"204\" status code\n   */\n  noContent(): void {\n    this.status(ResponseStatus.NoContent)\n    return this.send(null, false)\n  }\n\n  /**\n   * Shorthand method to finish request with \"205\" status code\n   */\n  resetContent(): void {\n    this.status(ResponseStatus.ResetContent)\n    return this.send(null, false)\n  }\n\n  /**\n   * Shorthand method to finish request with \"206\" status code\n   */\n  partialContent(body: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.PartialContent)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"300\" status code\n   */\n  multipleChoices(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.MultipleChoices)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"301\" status code\n   */\n  movedPermanently(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.MovedPermanently)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"302\" status code\n   */\n  movedTemporarily(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Found)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"303\" status code\n   */\n  seeOther(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.SeeOther)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"304\" status code\n   */\n  notModified(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.NotModified)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"305\" status code\n   */\n  useProxy(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.UseProxy)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"307\" status code\n   */\n  temporaryRedirect(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.TemporaryRedirect)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"400\" status code\n   */\n  badRequest(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.BadRequest)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"401\" status code\n   */\n  unauthorized(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Unauthorized)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"402\" status code\n   */\n  paymentRequired(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.PaymentRequired)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"403\" status code\n   */\n  forbidden(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Forbidden)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"404\" status code\n   */\n  notFound(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.NotFound)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"405\" status code\n   */\n  methodNotAllowed(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.MethodNotAllowed)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"406\" status code\n   */\n  notAcceptable(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.NotAcceptable)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"407\" status code\n   */\n  proxyAuthenticationRequired(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.ProxyAuthenticationRequired)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"408\" status code\n   */\n  requestTimeout(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.RequestTimeout)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"409\" status code\n   */\n  conflict(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Conflict)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"401\" status code\n   */\n  gone(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.Gone)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"411\" status code\n   */\n  lengthRequired(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.LengthRequired)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"412\" status code\n   */\n  preconditionFailed(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.PreconditionFailed)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"413\" status code\n   */\n  requestEntityTooLarge(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.PayloadTooLarge)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"414\" status code\n   */\n  requestUriTooLong(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.URITooLong)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"415\" status code\n   */\n  unsupportedMediaType(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.UnsupportedMediaType)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"416\" status code\n   */\n  requestedRangeNotSatisfiable(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.RangeNotSatisfiable)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"417\" status code\n   */\n  expectationFailed(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.ExpectationFailed)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"422\" status code\n   */\n  unprocessableEntity(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.UnprocessableEntity)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"429\" status code\n   */\n  tooManyRequests(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.TooManyRequests)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"500\" status code\n   */\n  internalServerError(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.InternalServerError)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"501\" status code\n   */\n  notImplemented(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.NotImplemented)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"502\" status code\n   */\n  badGateway(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.BadGateway)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"503\" status code\n   */\n  serviceUnavailable(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.ServiceUnavailable)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"504\" status code\n   */\n  gatewayTimeout(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.GatewayTimeout)\n    return this.send(body, generateEtag)\n  }\n\n  /**\n   * Shorthand method to finish request with \"505\" status code\n   */\n  httpVersionNotSupported(body?: any, generateEtag?: boolean): void {\n    this.status(ResponseStatus.HTTPVersionNotSupported)\n    return this.send(body, generateEtag)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport cookie from 'cookie'\nimport string from '@poppinss/utils/string'\nimport type { Encryption } from '@adonisjs/encryption'\n\nimport { CookieClient } from './client.js'\nimport type { CookieOptions } from '../types/response.js'\n\n/**\n * Cookies serializer is used to serialize a value to be set on the `Set-Cookie`\n * header. You can `encode`, `sign` on `encrypt` cookies using the serializer\n * and then set them individually using the `set-cookie` header.\n */\nexport class CookieSerializer {\n  #client: CookieClient\n\n  constructor(encryption: Encryption) {\n    this.#client = new CookieClient(encryption)\n  }\n\n  /**\n   * Serializes the key-value pair to a string, that can be set on the\n   * `Set-Cookie` header.\n   */\n  #serializeAsCookie(key: string, value: string, options?: Partial<CookieOptions>) {\n    /**\n     * Invoked expires method to get the date\n     */\n    let expires = options?.expires\n    if (typeof expires === 'function') {\n      expires = expires()\n    }\n\n    /**\n     * Parse string based max age to seconds\n     */\n    let maxAge = options?.maxAge ? string.seconds.parse(options?.maxAge) : undefined\n\n    const parsedOptions = Object.assign({}, options, { maxAge, expires })\n    return cookie.serialize(key, value, parsedOptions)\n  }\n\n  /**\n   * Encodes value as a plain cookie. By default, the plain value will be converted\n   * to a string using \"JSON.stringify\" method and then encoded as a base64 string.\n   *\n   * You can disable encoding of the cookie by setting `options.encoded = false`.\n   *\n   * ```ts\n   *  serializer.encode('name', 'virk')\n   * ```\n   */\n  encode(\n    key: string,\n    value: any,\n    options?: Partial<CookieOptions & { encode: boolean }>\n  ): string | null {\n    const packedValue = options?.encode === false ? value : this.#client.encode(key, value)\n    if (packedValue === null || packedValue === undefined) {\n      return null\n    }\n\n    return this.#serializeAsCookie(key, packedValue, options)\n  }\n\n  /**\n   * Sign a key-value pair to a signed cookie. The signed value has a\n   * verification hash attached to it to detect data tampering.\n   */\n  sign(key: string, value: any, options?: Partial<CookieOptions>): string | null {\n    const packedValue = this.#client.sign(key, value)\n    if (packedValue === null) {\n      return null\n    }\n\n    return this.#serializeAsCookie(key, packedValue, options)\n  }\n\n  /**\n   * Encrypts a key-value pair to an encrypted cookie.\n   */\n  encrypt(key: string, value: any, options?: Partial<CookieOptions>): string | null {\n    const packedValue = this.#client.encrypt(key, value)\n    if (packedValue === null) {\n      return null\n    }\n\n    return this.#serializeAsCookie(key, packedValue, options)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport is from '@sindresorhus/is'\nimport { moduleImporter } from '@adonisjs/fold'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { Encryption } from '@adonisjs/encryption'\nimport type { Application } from '@adonisjs/application'\n\nimport type { Qs } from '../qs.js'\nimport { Route } from './route.js'\nimport { RouteGroup } from './group.js'\nimport { BriskRoute } from './brisk.js'\nimport { RoutesStore } from './store.js'\nimport { toRoutesJSON } from '../helpers.js'\nimport { RouteResource } from './resource.js'\nimport { LookupStore } from './lookup_store/main.js'\nimport { RouteMatchers as Matchers } from './matchers.js'\nimport type { Constructor, LazyImport } from '../types/base.js'\nimport { defineNamedMiddleware } from '../define_middleware.js'\nimport type { MiddlewareAsClass, ParsedGlobalMiddleware } from '../types/middleware.js'\n\nimport type {\n  RouteFn,\n  MatchedRoute,\n  RouteMatcher,\n  RouteMatchers,\n  MakeUrlOptions,\n  MakeSignedUrlOptions,\n  GetControllerHandlers,\n} from '../types/route.js'\nimport { parseRoutePattern } from './parser.js'\n\n/**\n * Router class exposes a unified API to register new routes, group them or\n * create route resources.\n *\n * ```ts\n * const router = new Router()\n *\n * router.get('/', async function () {\n *   // handle request\n * })\n * ```\n */\nexport class Router extends LookupStore {\n  /**\n   * Application is needed to resolve string based controller expressions\n   */\n  #app: Application<any>\n\n  /**\n   * Store with tokenized routes\n   */\n  #store: RoutesStore = new RoutesStore()\n\n  /**\n   * Global matchers to test route params against regular expressions.\n   */\n  #globalMatchers: RouteMatchers = {}\n\n  /**\n   * Middleware store to be shared with the routes\n   */\n  #middleware: ParsedGlobalMiddleware[] = []\n\n  /**\n   * A boolean to tell the router that a group is in\n   * open state right now\n   */\n  #openedGroups: RouteGroup[] = []\n\n  /**\n   * Collection of routes, including route resource and route\n   * group. To get a flat list of routes, call `router.toJSON()`\n   */\n  routes: (Route | RouteResource | RouteGroup | BriskRoute)[] = []\n\n  /**\n   * A flag to know if routes for explicit domains have been registered.\n   * The boolean is computed after calling the \"commit\" method.\n   */\n  usingDomains: boolean = false\n\n  /**\n   * Shortcut methods for commonly used route matchers\n   */\n  matchers = new Matchers()\n\n  constructor(app: Application<any>, encryption: Encryption, qsParser: Qs) {\n    super(encryption, qsParser)\n    this.#app = app\n  }\n\n  /**\n   * Push a give router entity to the list of routes or the\n   * recently opened group.\n   */\n  #pushToRoutes(entity: Route | RouteResource | RouteGroup | BriskRoute) {\n    const openedGroup = this.#openedGroups[this.#openedGroups.length - 1]\n    if (openedGroup) {\n      openedGroup.routes.push(entity)\n      return\n    }\n\n    this.routes.push(entity)\n  }\n\n  /**\n   * Parses the route pattern\n   */\n  parsePattern(pattern: string, matchers?: RouteMatchers) {\n    return parseRoutePattern(pattern, matchers)\n  }\n\n  /**\n   * Define an array of middleware to use on all the routes.\n   * Calling this method multiple times pushes to the\n   * existing list of middleware\n   */\n  use(middleware: LazyImport<MiddlewareAsClass>[]): this {\n    middleware.forEach((one) =>\n      this.#middleware.push(moduleImporter(one, 'handle').toHandleMethod())\n    )\n\n    return this\n  }\n\n  /**\n   * Define a collection of named middleware. The defined collection is\n   * not registered anywhere, but instead converted in a new collection\n   * of functions you can apply on the routes, or router groups.\n   */\n  named<NamedMiddleware extends Record<string, LazyImport<MiddlewareAsClass>>>(\n    collection: NamedMiddleware\n  ) {\n    return defineNamedMiddleware<NamedMiddleware>(collection)\n  }\n\n  /**\n   * Add route for a given pattern and methods\n   */\n  route<T extends Constructor<any>>(\n    pattern: string,\n    methods: string[],\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    const route = new Route(this.#app, this.#middleware, {\n      pattern,\n      methods,\n      handler,\n      globalMatchers: this.#globalMatchers,\n    })\n\n    this.#pushToRoutes(route)\n    return route\n  }\n\n  /**\n   * Define a route that handles all common HTTP methods\n   */\n  any<T extends Constructor<any>>(\n    pattern: string,\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    return this.route(\n      pattern,\n      ['HEAD', 'OPTIONS', 'GET', 'POST', 'PUT', 'PATCH', 'DELETE'],\n      handler\n    )\n  }\n\n  /**\n   * Define `GET` route\n   */\n  get<T extends Constructor<any>>(\n    pattern: string,\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    return this.route(pattern, ['GET', 'HEAD'], handler)\n  }\n\n  /**\n   * Define `POST` route\n   */\n  post<T extends Constructor<any>>(\n    pattern: string,\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    return this.route(pattern, ['POST'], handler)\n  }\n\n  /**\n   * Define `PUT` route\n   */\n  put<T extends Constructor<any>>(\n    pattern: string,\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    return this.route(pattern, ['PUT'], handler)\n  }\n\n  /**\n   * Define `PATCH` route\n   */\n  patch<T extends Constructor<any>>(\n    pattern: string,\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    return this.route(pattern, ['PATCH'], handler)\n  }\n\n  /**\n   * Define `DELETE` route\n   */\n  delete<T extends Constructor<any>>(\n    pattern: string,\n    handler: string | RouteFn | [LazyImport<T> | T, GetControllerHandlers<T>?]\n  ) {\n    return this.route(pattern, ['DELETE'], handler)\n  }\n\n  /**\n   * Creates a group of routes. A route group can apply transforms\n   * to routes in bulk\n   */\n  group(callback: () => void) {\n    /*\n     * Create a new group with empty set of routes\n     */\n    const group = new RouteGroup([])\n\n    /**\n     * Track group\n     */\n    this.#pushToRoutes(group)\n\n    /*\n     * Track the group, so that the upcoming calls inside the callback\n     * can use this group\n     */\n    this.#openedGroups.push(group)\n\n    /*\n     * Execute the callback. Now all registered routes will be\n     * collected seperately from the `routes` array\n     */\n    callback()\n\n    /*\n     * Now the callback is over, get rid of the opened group\n     */\n    this.#openedGroups.pop()\n\n    return group\n  }\n\n  /**\n   * Registers a route resource with conventional set of routes\n   */\n  resource(resource: string, controller: string | LazyImport<Constructor<any>> | Constructor<any>) {\n    const resourceInstance = new RouteResource(this.#app, this.#middleware, {\n      resource,\n      controller,\n      shallow: false,\n      globalMatchers: this.#globalMatchers,\n    })\n\n    this.#pushToRoutes(resourceInstance)\n    return resourceInstance\n  }\n\n  /**\n   * Register a route resource with shallow nested routes.\n   */\n  shallowResource(\n    resource: string,\n    controller: string | LazyImport<Constructor<any>> | Constructor<any>\n  ) {\n    const resourceInstance = new RouteResource(this.#app, this.#middleware, {\n      resource,\n      controller,\n      shallow: true,\n      globalMatchers: this.#globalMatchers,\n    })\n\n    this.#pushToRoutes(resourceInstance)\n    return resourceInstance\n  }\n\n  /**\n   * Returns a brisk route instance for a given URL pattern\n   */\n  on(pattern: string) {\n    const briskRoute = new BriskRoute(this.#app, this.#middleware, {\n      pattern,\n      globalMatchers: this.#globalMatchers,\n    })\n\n    this.#pushToRoutes(briskRoute)\n    return briskRoute\n  }\n\n  /**\n   * Define matcher for a given param. The global params are applied\n   * on all the routes (unless overridden at the route level).\n   */\n  where(param: string, matcher: RouteMatcher | string | RegExp): this {\n    if (typeof matcher === 'string') {\n      this.#globalMatchers[param] = { match: new RegExp(matcher) }\n    } else if (is.regExp(matcher)) {\n      this.#globalMatchers[param] = { match: matcher }\n    } else {\n      this.#globalMatchers[param] = matcher\n    }\n\n    return this\n  }\n\n  /**\n   * Commit routes to the store. The router is freezed after the\n   * commit method is called.\n   */\n  commit() {\n    const routeNamesByDomain: Map<string, Set<string>> = new Map()\n\n    toRoutesJSON(this.routes).forEach((route) => {\n      if (!routeNamesByDomain.has(route.domain)) {\n        routeNamesByDomain.set(route.domain, new Set())\n      }\n\n      const routeNames = routeNamesByDomain.get(route.domain)!\n\n      /*\n       * Raise error when route name is already in use. Route names have to be unique\n       * to ensure that only one route is returned during lookup.\n       */\n      if (route.name && routeNames.has(route.name)) {\n        throw new RuntimeException(\n          `Route with duplicate name found. A route with name \"${route.name}\" already exists`\n        )\n      }\n\n      /*\n       * If route has a unique, then track the name for checking duplicates\n       */\n      if (route.name) {\n        routeNames.add(route.name)\n      }\n\n      /**\n       * Register the route with the lookup store\n       */\n      this.register(route)\n      this.#store.add(route)\n    })\n\n    routeNamesByDomain.clear()\n\n    this.usingDomains = this.#store.usingDomains\n    this.routes = []\n    this.#globalMatchers = {}\n    this.#middleware = []\n  }\n\n  /**\n   * Find route for a given URL, method and optionally domain\n   */\n  match(url: string, method: string, hostname?: string | null): null | MatchedRoute {\n    const matchingDomain = this.#store.matchDomain(hostname)\n\n    return matchingDomain.length\n      ? this.#store.match(url, method, {\n          tokens: matchingDomain,\n          hostname: hostname!,\n        })\n      : this.#store.match(url, method)\n  }\n\n  /**\n   * Make URL to a pre-registered route\n   */\n  makeUrl(\n    routeIdentifier: string,\n    params?: any[] | Record<string, any>,\n    options?: MakeUrlOptions\n  ): string {\n    const normalizedOptions = Object.assign({}, options)\n\n    const builder = normalizedOptions.domain\n      ? this.builderForDomain(normalizedOptions.domain)\n      : this.builder()\n\n    builder.params(params)\n    builder.qs(normalizedOptions.qs)\n\n    normalizedOptions.prefixUrl && builder.prefixUrl(normalizedOptions.prefixUrl)\n    normalizedOptions.disableRouteLookup && builder.disableRouteLookup()\n\n    return builder.make(routeIdentifier)\n  }\n\n  /**\n   * Makes a signed URL to a pre-registered route.\n   */\n  makeSignedUrl(\n    routeIdentifier: string,\n    params?: any[] | Record<string, any>,\n    options?: MakeSignedUrlOptions\n  ): string {\n    const normalizedOptions = Object.assign({}, options)\n\n    const builder = normalizedOptions.domain\n      ? this.builderForDomain(normalizedOptions.domain)\n      : this.builder()\n\n    builder.params(params)\n    builder.qs(normalizedOptions.qs)\n\n    normalizedOptions.prefixUrl && builder.prefixUrl(normalizedOptions.prefixUrl)\n    normalizedOptions.disableRouteLookup && builder.disableRouteLookup()\n\n    return builder.makeSigned(routeIdentifier, normalizedOptions)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-expect-error\nimport matchit from '@poppinss/matchit'\nimport lodash from '@poppinss/utils/lodash'\nimport { RuntimeException } from '@poppinss/utils'\nimport type {\n  RouteJSON,\n  MatchedRoute,\n  StoreRouteNode,\n  StoreDomainNode,\n  StoreMethodNode,\n  StoreRoutesTree,\n  MatchItRouteToken,\n} from '../types/route.js'\nimport { parseRoutePattern } from './parser.js'\nimport debug from '../debug.js'\n\n/**\n * Store class is used to store a list of routes, along side with their tokens\n * to match the URLs.\n *\n * ```ts\n * const store = new Store()\n *\n * store.add({\n *  pattern: 'posts/:id',\n *  handler: function onRoute () {},\n *  middleware: [],\n *  matchers: {\n *    id: '^[0-9]$+'\n *  },\n *  meta: {},\n *  methods: ['GET']\n * })\n *\n * store.match('posts/1', 'GET')\n * ```\n */\nexport class RoutesStore {\n  /**\n   * A flag to know if routes for explicit domains\n   * have been registered\n   */\n  usingDomains: boolean = false\n\n  /**\n   * Tree of registered routes and their matchit tokens\n   */\n  tree: StoreRoutesTree = { tokens: [], domains: {} }\n\n  /**\n   * Returns the domain node for a given domain.\n   */\n  #getDomainNode(domain: string): StoreDomainNode {\n    if (!this.tree.domains[domain]) {\n      this.tree.tokens.push(parseRoutePattern(domain))\n      this.tree.domains[domain] = {}\n    }\n\n    return this.tree.domains[domain]\n  }\n\n  /**\n   * Returns the method node for a given domain and method.\n   */\n  #getMethodNode(domain: string, method: string): StoreMethodNode {\n    const domainNode = this.#getDomainNode(domain)\n    if (!domainNode[method]) {\n      domainNode[method] = { tokens: [], routes: {}, routeKeys: {} }\n    }\n\n    return domainNode[method]\n  }\n\n  /**\n   * Collects route params\n   */\n  #collectRouteParams(route: StoreRouteNode, tokens: MatchItRouteToken[]) {\n    const collectedParams: Set<string> = new Set()\n\n    for (let token of tokens) {\n      if ([1, 3].includes(token.type)) {\n        if (collectedParams.has(token.val)) {\n          throw new RuntimeException(`Duplicate param \"${token.val}\" found in \"${route.pattern}\"`)\n        } else {\n          collectedParams.add(token.val)\n        }\n      }\n    }\n\n    const params = [...collectedParams]\n    collectedParams.clear()\n\n    return params\n  }\n\n  /**\n   * Register route for a given domain and method\n   */\n  #registerRoute(\n    domain: string,\n    method: string,\n    tokens: MatchItRouteToken[],\n    route: StoreRouteNode\n  ) {\n    const methodRoutes = this.#getMethodNode(domain, method)\n\n    /*\n     * Check for duplicate route for the same domain and method\n     */\n    if (methodRoutes.routes[route.pattern]) {\n      throw new RuntimeException(\n        `Duplicate route found. \"${method}: ${route.pattern}\" route already exists`\n      )\n    }\n\n    if (debug.enabled) {\n      debug('registering route to the store %O', route)\n      debug('route middleware %O', route.middleware.all().entries())\n    }\n\n    methodRoutes.tokens.push(tokens)\n    methodRoutes.routes[route.pattern] = route\n    methodRoutes.routeKeys[route.pattern] =\n      domain !== 'root' ? `${domain}-${method}-${route.pattern}` : `${method}-${route.pattern}`\n  }\n\n  /**\n   * Add a route to the store\n   *\n   * ```ts\n   * store.add({\n   *   pattern: 'post/:id',\n   *   methods: ['GET'],\n   *   matchers: {},\n   *   meta: {},\n   *   handler: function handler () {\n   *   }\n   * })\n   * ```\n   */\n  add(route: RouteJSON): this {\n    /**\n     * Set flag when a custom domain is used\n     */\n    if (route.domain !== 'root') {\n      this.usingDomains = true\n    }\n\n    /**\n     * Generate tokens for the route\n     */\n    const tokens = parseRoutePattern(route.pattern, route.matchers)\n\n    /**\n     * Create route node object for persistence\n     */\n    const routeNode: StoreRouteNode = lodash.merge(\n      { meta: {} },\n      lodash.pick(route, ['pattern', 'handler', 'meta', 'middleware', 'name', 'execute'])\n    )\n\n    /**\n     * Set route params\n     */\n    routeNode.meta.params = this.#collectRouteParams(routeNode, tokens)\n\n    /**\n     * Register route for every method\n     */\n    route.methods.forEach((method) => {\n      this.#registerRoute(route.domain, method, tokens, routeNode)\n    })\n\n    return this\n  }\n\n  /**\n   * Matches the url, method and optionally domain to pull the matching\n   * route. `null` is returned when unable to match the URL against\n   * registered routes.\n   *\n   * The domain parameter has to be a registered pattern and not the fully\n   * qualified runtime domain. You must call `matchDomain` first to fetch\n   * the pattern for qualified domain\n   */\n  match(\n    url: string,\n    method: string,\n    domain?: { tokens: MatchItRouteToken[]; hostname: string }\n  ): null | MatchedRoute {\n    const domainName = domain?.tokens[0]?.old || 'root'\n\n    const matchedDomain = this.tree.domains[domainName]\n    if (!matchedDomain) {\n      return null\n    }\n\n    /*\n     * Next get the method node for the given method inside the domain. If\n     * method node is missing, means no routes ever got registered for that\n     * method\n     */\n    const matchedMethod = this.tree.domains[domainName][method]\n    if (!matchedMethod) {\n      return null\n    }\n\n    /*\n     * Next, match route for the given url inside the tokens list for the\n     * matchedMethod\n     */\n    const matchedRoute = matchit.match(url, matchedMethod.tokens)\n    if (!matchedRoute.length) {\n      return null\n    }\n\n    const route = matchedMethod.routes[matchedRoute[0].old]\n    return {\n      route: route,\n      routeKey: matchedMethod.routeKeys[route.pattern],\n      params: matchit.exec(url, matchedRoute),\n      subdomains: domain?.hostname ? matchit.exec(domain.hostname, domain.tokens) : {},\n    }\n  }\n\n  /**\n   * Match hostname against registered domains.\n   */\n  matchDomain(hostname?: string | null): MatchItRouteToken[] {\n    if (!hostname || !this.usingDomains) {\n      return []\n    }\n\n    return matchit.match(hostname, this.tree.tokens)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-expect-error\nimport matchit from '@poppinss/matchit'\nimport { MatchItRouteToken, RouteMatchers } from '../types/route.js'\n\n/**\n * Parses the route pattern\n */\nexport function parseRoutePattern(pattern: string, matchers?: RouteMatchers): MatchItRouteToken[] {\n  const tokens = matchit.parse(pattern, matchers)\n  return tokens\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Macroable from '@poppinss/macroable'\nimport type { Encryption } from '@adonisjs/encryption'\n\nimport type { Qs } from '../../qs.js'\nimport { UrlBuilder } from './url_builder.js'\nimport { RouteFinder } from './route_finder.js'\nimport type { RouteJSON } from '../../types/route.js'\nimport { E_CANNOT_LOOKUP_ROUTE } from '../../exceptions.js'\n\n/**\n * Lookup store exposes the API to lookup routes and\n * make URLs for registered routes.\n */\nexport class LookupStore extends Macroable {\n  /**\n   * List of route finders grouped by domains\n   */\n  #routes: { [domain: string]: RouteFinder } = {}\n\n  /**\n   * Encryption for making URLs\n   */\n  #encryption: Encryption\n\n  /**\n   * Query string parser for making URLs\n   */\n  #qsParser: Qs\n\n  constructor(encryption: Encryption, qsParser: Qs) {\n    super()\n    this.#encryption = encryption\n    this.#qsParser = qsParser\n  }\n\n  /**\n   * Register route JSON payload\n   */\n  register(route: RouteJSON) {\n    this.#routes[route.domain] = this.#routes[route.domain] || new RouteFinder()\n    this.#routes[route.domain].register(route)\n  }\n\n  /**\n   * Returns an instance of the URL builder for making\n   * route URIs\n   */\n  builder() {\n    return this.builderForDomain('root')\n  }\n\n  /**\n   * Returns an instance of the URL builder for a specific\n   * domain.\n   */\n  builderForDomain(domain: string) {\n    const finder = this.#routes[domain]\n    return new UrlBuilder(this.#encryption, finder || new RouteFinder(), this.#qsParser)\n  }\n\n  /**\n   * Finds a route by its identifier. The identifier can be the\n   * route name, controller.method name or the route pattern\n   * itself.\n   */\n  find(routeIdentifier: string, domain?: string): RouteJSON | null {\n    const finder = this.#routes[domain || 'root']\n    if (!finder) {\n      return null\n    }\n\n    return finder.find(routeIdentifier)\n  }\n\n  /**\n   * Finds a route by its identifier. The identifier can be the\n   * route name, controller.method name or the route pattern\n   * itself.\n   *\n   * An error is raised when unable to find the route.\n   */\n  findOrFail(routeIdentifier: string, domain?: string): RouteJSON {\n    const finder = this.#routes[domain || 'root']\n    if (!finder) {\n      throw new E_CANNOT_LOOKUP_ROUTE([routeIdentifier])\n    }\n\n    return finder.findOrFail(routeIdentifier)\n  }\n\n  /**\n   * Check if a route exists. The identifier can be the\n   * route name, controller.method name or the route pattern\n   * itself.\n   */\n  has(routeIdentifier: string, domain?: string): boolean {\n    const finder = this.#routes[domain || 'root']\n    if (!finder) {\n      return false\n    }\n\n    return finder.has(routeIdentifier)\n  }\n\n  toJSON() {\n    return Object.keys(this.#routes).reduce<Record<string, RouteJSON[]>>((result, domain) => {\n      result[domain] = this.#routes[domain].toJSON()\n      return result\n    }, {})\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from '@poppinss/utils'\nimport type { Encryption } from '@adonisjs/encryption'\n\nimport type { Qs } from '../../qs.js'\nimport { parseRoutePattern } from '../parser.js'\nimport type { RouteFinder } from './route_finder.js'\n\n/**\n * URL builder class is used to create URIs for pre-registered\n * routes.\n *\n * ```ts\n * const builder = new UrlBuilder(encryption, routeFinder)\n *\n * builder\n *  .qs({ sort: 'id' })\n *  .params([category.id])\n *  .make('categories.posts.index')\n * ```\n */\nexport class UrlBuilder {\n  /**\n   * Query string parser\n   */\n  #qsParser: Qs\n\n  /**\n   * The parameters to apply on the route\n   */\n  #params: any[] | Record<string, any> = {}\n\n  /**\n   * Query string to append to the route\n   */\n  #qs: Record<string, any> = {}\n\n  /**\n   * Should we perform the route lookup or just build the\n   * given pattern as it is.\n   */\n  #shouldPerformLookup = true\n\n  /**\n   * BaseURL to append to the constructored URL\n   */\n  #baseUrl?: string\n\n  /**\n   * Encryption class for making signed URLs\n   */\n  #encryption: Encryption\n\n  /**\n   * Route finder for finding route pattern\n   */\n  #routeFinder: RouteFinder\n\n  constructor(encryption: Encryption, routeFinder: RouteFinder, qsParser: Qs) {\n    this.#qsParser = qsParser\n    this.#encryption = encryption\n    this.#routeFinder = routeFinder\n  }\n\n  /**\n   * Raises exception when wildcard values array is missing or\n   * has length of zero.\n   */\n  #ensureHasWildCardValues(pattern: string, values?: string[]) {\n    if (!values || !Array.isArray(values) || !values.length) {\n      throw new RuntimeException(\n        `Cannot make URL for \"${pattern}\" route. Invalid value provided for wildcard param`\n      )\n    }\n  }\n\n  /*\n   * Raises exception when value is not defined\n   */\n  #ensureHasParamValue(pattern: string, param: string, value: string) {\n    if (value === undefined || value === null) {\n      throw new RuntimeException(\n        `Cannot make URL for \"${pattern}\" route. Missing value for \"${param}\" param`\n      )\n    }\n  }\n\n  /**\n   * Processes the pattern against the params\n   */\n  #processPattern(pattern: string): string {\n    const uriSegments: string[] = []\n    const paramsArray = Array.isArray(this.#params) ? this.#params : null\n    const paramsObject = !Array.isArray(this.#params) ? this.#params : {}\n\n    let paramsIndex = 0\n    const tokens = parseRoutePattern(pattern)\n\n    for (const token of tokens) {\n      /**\n       * Expected wildcard param to be at the end always and hence\n       * we must break out from the loop\n       */\n      if (token.type === 0) {\n        uriSegments.push(token.val === '/' ? '' : `${token.val}${token.end}`)\n      } else if (token.type === 2) {\n        const values: string[] = paramsArray ? paramsArray.slice(paramsIndex) : paramsObject['*']\n        this.#ensureHasWildCardValues(pattern, values)\n        uriSegments.push(`${values.join('/')}${token.end}`)\n        break\n      } else {\n        const paramName = token.val\n        const value = paramsArray ? paramsArray[paramsIndex] : paramsObject[paramName]\n\n        /**\n         * Type = 1 means param is required\n         */\n        if (token.type === 1) {\n          this.#ensureHasParamValue(pattern, paramName, value)\n        }\n\n        paramsIndex++\n        if (value !== undefined && value !== null) {\n          uriSegments.push(`${value}${token.end}`)\n        }\n      }\n    }\n\n    return `/${uriSegments.join('/')}`\n  }\n\n  /**\n   * Suffix the query string to the URL\n   */\n  #suffixQueryString(url: string, qs?: Record<string, any>): string {\n    if (qs) {\n      const queryString = this.#qsParser.stringify(qs)\n      url = queryString ? `${url}?${queryString}` : url\n    }\n\n    return url\n  }\n\n  /**\n   * Prefixes base URL to the uri string\n   */\n  #prefixBaseUrl(uri: string) {\n    return this.#baseUrl ? `${this.#baseUrl}${uri}` : uri\n  }\n\n  /**\n   * Prefix a custom base URL to the final URI\n   */\n  prefixUrl(url: string): this {\n    this.#baseUrl = url\n    return this\n  }\n\n  /**\n   * Disable route lookup. Calling this method considers\n   * the \"identifier\" as the route pattern\n   */\n  disableRouteLookup(): this {\n    this.#shouldPerformLookup = false\n    return this\n  }\n\n  /**\n   * Append query string to the final URI\n   */\n  qs(queryString?: Record<string, any>): this {\n    if (!queryString) {\n      return this\n    }\n\n    this.#qs = queryString\n    return this\n  }\n\n  /**\n   * Specify params to apply to the route pattern\n   */\n  params(params?: any[] | Record<string, any>): this {\n    if (!params) {\n      return this\n    }\n\n    this.#params = params\n    return this\n  }\n\n  /**\n   * Generate URL for the given route identifier. The identifier can be the\n   * route name, controller.method name or the route pattern\n   * itself.\n   */\n  make(identifier: string) {\n    let url: string\n\n    if (this.#shouldPerformLookup) {\n      const route = this.#routeFinder.findOrFail(identifier)\n      url = this.#processPattern(route.pattern)\n    } else {\n      url = this.#processPattern(identifier)\n    }\n\n    return this.#suffixQueryString(this.#prefixBaseUrl(url), this.#qs)\n  }\n\n  /**\n   * Generate a signed URL for the given route identifier. The identifier can be the\n   * route name, controller.method name or the route pattern\n   * itself.\n   */\n  makeSigned(identifier: string, options?: { expiresIn?: string | number; purpose?: string }) {\n    let url: string\n\n    if (this.#shouldPerformLookup) {\n      const route = this.#routeFinder.findOrFail(identifier)\n      url = this.#processPattern(route.pattern)\n    } else {\n      url = this.#processPattern(identifier)\n    }\n\n    /*\n     * Making the signature from the qualified url. We do not prefix the domain when\n     * making signature, since it just makes the signature big.\n     *\n     * There might be a case, when someone wants to generate signature for the same route\n     * on their 2 different domains, but we ignore that case for now and can consider\n     * it later (when someone asks for it)\n     */\n    const signature = this.#encryption.verifier.sign(\n      this.#suffixQueryString(url, this.#qs),\n      options?.expiresIn,\n      options?.purpose\n    )\n\n    const qs = Object.assign({}, this.#qs, { signature })\n    return this.#suffixQueryString(this.#prefixBaseUrl(url), qs)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport * as errors from '../../exceptions.js'\nimport type { RouteJSON } from '../../types/route.js'\n\n/**\n * Route finder is used to find a route by its name, route pattern\n * or the controller.method name.\n */\nexport class RouteFinder {\n  #routes: RouteJSON[] = []\n\n  register(route: RouteJSON) {\n    this.#routes.push(route)\n  }\n\n  /**\n   * Find a route by indentifier\n   */\n  find(routeIdentifier: string): RouteJSON | null {\n    return (\n      this.#routes.find(({ name, pattern, handler }) => {\n        if (name === routeIdentifier || pattern === routeIdentifier) {\n          return true\n        }\n\n        if (typeof handler === 'function') {\n          return false\n        }\n\n        return handler.reference === routeIdentifier\n      }) || null\n    )\n  }\n\n  /**\n   * Find a route by indentifier or fail\n   */\n  findOrFail(routeIdentifier: string): RouteJSON {\n    const route = this.find(routeIdentifier)\n    if (!route) {\n      throw new errors.E_CANNOT_LOOKUP_ROUTE([routeIdentifier])\n    }\n\n    return route\n  }\n\n  /**\n   * Find if a route exists\n   */\n  has(routeIdentifier: string): boolean {\n    return !!this.find(routeIdentifier)\n  }\n\n  /**\n   * Returns an array of registered routes\n   */\n  toJSON() {\n    return this.#routes\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport Macroable from '@poppinss/macroable'\n\n/**\n * Shortcut methods for commonly used route matchers\n */\nexport class RouteMatchers extends Macroable {\n  /**\n   * Enforce value to be a number and also casts it to number data\n   * type\n   */\n  number() {\n    return { match: /^[0-9]+$/, cast: (value: string) => Number(value) }\n  }\n\n  /**\n   * Enforce value to be formatted as uuid\n   */\n  uuid() {\n    return {\n      match: /^[0-9a-zA-F]{8}-[0-9a-zA-F]{4}-[0-9a-zA-F]{4}-[0-9a-zA-F]{4}-[0-9a-zA-F]{12}$/,\n      cast: (value: string) => value.toLowerCase(),\n    }\n  }\n\n  /**\n   * Enforce value to be formatted as slug\n   */\n  slug() {\n    return { match: /^[^\\s-_](?!.*?[-_]{2,})([a-z0-9-\\\\]{1,})[^\\s]*[^-_\\s]$/ }\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { moduleImporter } from '@adonisjs/fold'\nimport type { LazyImport, UnWrapLazyImport } from './types/base.js'\nimport type {\n  GetMiddlewareArgs,\n  MiddlewareAsClass,\n  ParsedGlobalMiddleware,\n} from './types/middleware.js'\n\n/**\n * Converts a middleware name and its lazy import to a factory function. The function\n * can than later be used to reference the middleware with different arguments\n * every time.\n */\nfunction middlewareReferenceBuilder(\n  name: string | number | symbol,\n  middleware: LazyImport<MiddlewareAsClass>\n) {\n  const handler = moduleImporter(middleware, 'handle').toHandleMethod()\n  return function (...args: any[]) {\n    return {\n      ...handler,\n      name,\n      args: args[0],\n    }\n  }\n}\n\n/**\n * Define an collection of named middleware. The collection gets converted\n * into a collection of factory functions. Calling the function returns\n * a reference to the executable middleware.\n */\nexport function defineNamedMiddleware<\n  NamedMiddleware extends Record<string | number | symbol, LazyImport<MiddlewareAsClass>>,\n>(collection: NamedMiddleware) {\n  return Object.keys(collection).reduce(\n    (result, key: keyof NamedMiddleware) => {\n      result[key] = middlewareReferenceBuilder(key, collection[key])\n      return result\n    },\n    {} as {\n      [K in keyof NamedMiddleware]: <\n        Args extends GetMiddlewareArgs<UnWrapLazyImport<NamedMiddleware[K]>>,\n      >(\n        ...args: Args\n      ) => {\n        name: K\n        args: Args[0]\n        handle: ParsedGlobalMiddleware['handle']\n      }\n    }\n  )\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { inspect } from 'node:util'\nimport Macroable from '@poppinss/macroable'\nimport type { Logger } from '@adonisjs/logger'\nimport { RuntimeException } from '@poppinss/utils'\nimport { ContainerResolver } from '@adonisjs/fold'\n\nimport type { Request } from '../request.js'\nimport type { Response } from '../response.js'\nimport { asyncLocalStorage } from './local_storage.js'\nimport type { StoreRouteNode } from '../types/route.js'\n\n/**\n * Http context encapsulates properties for a given HTTP request. The\n * context class can be extended using macros and getters.\n */\nexport class HttpContext extends Macroable {\n  /**\n   * Find if async localstorage is enabled for HTTP requests\n   * or not\n   */\n  static get usingAsyncLocalStorage() {\n    return asyncLocalStorage.isEnabled\n  }\n\n  /**\n   * Get access to the HTTP context. Available only when\n   * \"usingAsyncLocalStorage\" is true\n   */\n  static get(): HttpContext | null {\n    if (!this.usingAsyncLocalStorage || !asyncLocalStorage.storage) {\n      return null\n    }\n\n    return asyncLocalStorage.storage.getStore() || null\n  }\n\n  /**\n   * Get the HttpContext instance or raise an exception if not\n   * available\n   */\n  static getOrFail(): HttpContext {\n    /**\n     * Localstorage is not enabled\n     */\n    if (!this.usingAsyncLocalStorage || !asyncLocalStorage.storage) {\n      throw new RuntimeException(\n        'HTTP context is not available. Enable \"useAsyncLocalStorage\" inside \"config/app.ts\" file'\n      )\n    }\n\n    const store = this.get()\n    if (!store) {\n      throw new RuntimeException('Http context is not available outside of an HTTP request')\n    }\n\n    return store\n  }\n\n  /**\n   * Run a method that doesn't have access to HTTP context from\n   * the async local storage.\n   */\n  static runOutsideContext<T>(callback: (...args: any[]) => T, ...args: any[]): T {\n    if (!asyncLocalStorage.storage) {\n      return callback(...args)\n    }\n\n    return asyncLocalStorage.storage.exit(callback, ...args)\n  }\n\n  /**\n   * Reference to the current route. Not available inside\n   * server middleware\n   */\n  route?: StoreRouteNode\n\n  /**\n   * A unique key for the current route\n   */\n  routeKey?: string\n\n  /**\n   * Route params\n   */\n  params: Record<string, any> = {}\n\n  /**\n   * Route subdomains\n   */\n  subdomains: Record<string, any> = {}\n\n  constructor(\n    public request: Request,\n    public response: Response,\n    public logger: Logger,\n    public containerResolver: ContainerResolver<any>\n  ) {\n    super()\n\n    /*\n     * Creating the circular reference. We do this, since request and response\n     * are meant to be extended and at times people would want to access\n     * other ctx properties like `logger`, `profiler` inside those\n     * extended methods.\n     */\n    this.request.ctx = this\n    this.response.ctx = this\n  }\n\n  /**\n   * A helper to see top level properties on the context object\n   */\n  /* c8 ignore next 3 */\n  inspect() {\n    return inspect(this, false, 1, true)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { AsyncLocalStorage } from 'node:async_hooks'\nimport type { HttpContext } from './main.js'\n\n/**\n * Async local storage for HTTP context\n */\nexport const asyncLocalStorage: {\n  isEnabled: boolean\n  storage: null | AsyncLocalStorage<HttpContext>\n  create(): AsyncLocalStorage<HttpContext>\n  destroy(): void\n} = {\n  /**\n   * Check if the async local storage for the HTTP\n   * context is enabled or not\n   */\n  isEnabled: false,\n\n  /**\n   * HTTP context storage instance for the current scope\n   */\n  storage: null,\n\n  /**\n   * Create the storage instance. This method must be called only\n   * once.\n   */\n  create() {\n    this.isEnabled = true\n    this.storage = new AsyncLocalStorage<HttpContext>()\n    return this.storage\n  },\n\n  /**\n   * Destroy the create storage instance\n   */\n  destroy() {\n    this.isEnabled = false\n    this.storage = null\n  },\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport onFinished from 'on-finished'\nimport Middleware from '@poppinss/middleware'\nimport type { Logger } from '@adonisjs/logger'\nimport type { Encryption } from '@adonisjs/encryption'\nimport type { Server as HttpsServer } from 'node:https'\nimport type { Application } from '@adonisjs/application'\nimport type { EmitterLike } from '@adonisjs/events/types'\nimport { ContainerResolver, moduleCaller, moduleImporter } from '@adonisjs/fold'\nimport type { ServerResponse, IncomingMessage, Server as HttpServer } from 'node:http'\n\nimport type { LazyImport } from '../types/base.js'\nimport type { MiddlewareAsClass, ParsedGlobalMiddleware } from '../types/middleware.js'\nimport type {\n  ServerConfig,\n  HttpServerEvents,\n  ServerErrorHandler,\n  ErrorHandlerAsAClass,\n  TestingMiddlewarePipeline,\n} from '../types/server.js'\n\nimport { Qs } from '../qs.js'\nimport debug from '../debug.js'\nimport { Request } from '../request.js'\nimport { Response } from '../response.js'\nimport { Router } from '../router/main.js'\nimport { HttpContext } from '../http_context/main.js'\nimport { finalHandler } from './factories/final_handler.js'\nimport { writeResponse } from './factories/write_response.js'\nimport { asyncLocalStorage } from '../http_context/local_storage.js'\nimport { middlewareHandler } from './factories/middleware_handler.js'\n\n/**\n * The HTTP server implementation to handle incoming requests and respond using the\n * registered routes.\n */\nexport class Server {\n  /**\n   * The default error handler to use\n   */\n  #defaultErrorHandler: ServerErrorHandler = {\n    report() {},\n    handle(error, ctx) {\n      ctx.response.status(error.status || 500).send(error.message || 'Internal server error')\n    },\n  }\n\n  /**\n   * Logger instance, a child logger is added\n   * to the context to have request specific\n   * logging capabilities.\n   */\n  #logger: Logger\n\n  /**\n   * Registered error handler (if any)\n   */\n  #errorHandler?: LazyImport<ErrorHandlerAsAClass>\n\n  /**\n   * Resolved error handler is an instance of the lazily imported error\n   * handler class.\n   */\n  #resolvedErrorHandler: ServerErrorHandler = this.#defaultErrorHandler\n\n  /**\n   * Emitter is required to notify when a request finishes\n   */\n  #emitter: EmitterLike<HttpServerEvents>\n\n  /**\n   * The application instance to be shared with the router\n   */\n  #app: Application<any>\n\n  /**\n   * The encryption instance to be shared with the router\n   */\n  #encryption: Encryption\n\n  /**\n   * Server config\n   */\n  #config: ServerConfig\n\n  /**\n   * Query string parser used by the server\n   */\n  #qsParser: Qs\n\n  /**\n   * Server middleware stack runs on every incoming HTTP request\n   */\n  #serverMiddlewareStack?: Middleware<ParsedGlobalMiddleware>\n\n  /**\n   * Reference to the router used by the server\n   */\n  #router: Router\n\n  /**\n   * Reference to the underlying Node HTTP server in use\n   */\n  #nodeHttpServer?: HttpServer | HttpsServer\n\n  /**\n   * Middleware store to be shared with the routes\n   */\n  #middleware: ParsedGlobalMiddleware[] = []\n\n  /**\n   * The request error response is attached to the middleware\n   * pipeline to intercept errors and invoke the user\n   * registered error handler.\n   *\n   * We share this with the route middleware pipeline as well,\n   * so that it does not throw any exceptions\n   */\n  #requestErrorResponder: ServerErrorHandler['handle'] = (error, ctx) => {\n    this.#resolvedErrorHandler.report(error, ctx)\n    return this.#resolvedErrorHandler.handle(error, ctx)\n  }\n\n  /**\n   * Know if async local storage is enabled or not.\n   */\n  get usingAsyncLocalStorage() {\n    return asyncLocalStorage.isEnabled\n  }\n\n  constructor(\n    app: Application<any>,\n    encryption: Encryption,\n    emitter: EmitterLike<HttpServerEvents>,\n    logger: Logger,\n    config: ServerConfig\n  ) {\n    this.#app = app\n    this.#emitter = emitter\n    this.#config = config\n    this.#logger = logger\n    this.#encryption = encryption\n    this.#qsParser = new Qs(this.#config.qs)\n    this.#router = new Router(this.#app, this.#encryption, this.#qsParser)\n    this.#createAsyncLocalStore()\n\n    debug('server config: %O', this.#config)\n  }\n\n  /**\n   * Create async local storage store when enabled\n   */\n  #createAsyncLocalStore() {\n    if (this.#config.useAsyncLocalStorage) {\n      debug('creating ALS store for HTTP context')\n      asyncLocalStorage.create()\n    } else {\n      asyncLocalStorage.destroy()\n    }\n  }\n\n  /**\n   * Creates an instance of the server middleware stack\n   */\n  #createServerMiddlewareStack() {\n    this.#serverMiddlewareStack = new Middleware()\n    this.#middleware.forEach((middleware) => this.#serverMiddlewareStack!.add(middleware))\n    this.#serverMiddlewareStack.freeze()\n    this.#middleware = []\n  }\n\n  /**\n   * Handles the HTTP request\n   */\n  #handleRequest(ctx: HttpContext, resolver: ContainerResolver<any>) {\n    return this.#serverMiddlewareStack!.runner()\n      .errorHandler((error) => this.#requestErrorResponder(error, ctx))\n      .finalHandler(finalHandler(this.#router!, resolver, ctx, this.#requestErrorResponder))\n      .run(middlewareHandler(resolver, ctx))\n      .catch((error) => {\n        ctx.logger.fatal({ err: error }, 'Exception raised by error handler')\n        return this.#defaultErrorHandler.handle(error, ctx)\n      })\n      .finally(writeResponse(ctx))\n  }\n\n  /**\n   * Creates a pipeline of middleware.\n   */\n  pipeline(middleware: MiddlewareAsClass[]): TestingMiddlewarePipeline {\n    const middlewareStack = new Middleware<ParsedGlobalMiddleware>()\n    middleware.forEach((one) => {\n      middlewareStack.add(moduleCaller(one, 'handle').toHandleMethod())\n    })\n\n    middlewareStack.freeze()\n    const stackRunner = middlewareStack.runner()\n\n    return {\n      finalHandler(handler) {\n        stackRunner.finalHandler(handler)\n        return this\n      },\n      errorHandler(handler) {\n        stackRunner.errorHandler(handler)\n        return this\n      },\n      run(ctx) {\n        return stackRunner.run((handler, next) => {\n          return handler.handle(ctx.containerResolver, ctx, next)\n        })\n      },\n    }\n  }\n\n  /**\n   * Define an array of middleware to use on all the incoming HTTP request.\n   * Calling this method multiple times pushes to the existing list\n   * of middleware\n   */\n  use(middleware: LazyImport<MiddlewareAsClass>[]): this {\n    middleware.forEach((one) =>\n      this.#middleware.push(moduleImporter(one, 'handle').toHandleMethod())\n    )\n\n    return this\n  }\n\n  /**\n   * Register a custom error handler for HTTP requests.\n   * All errors will be reported to this method\n   */\n  errorHandler(handler: LazyImport<ErrorHandlerAsAClass>): this {\n    this.#errorHandler = handler\n    return this\n  }\n\n  /**\n   * Boot the server. Calling this method performs the following actions.\n   *\n   * - Register routes with the store.\n   * - Resolve and construct the error handler.\n   */\n  async boot() {\n    debug('booting HTTP server')\n\n    /**\n     * Creates the middleware stack for the server\n     */\n    this.#createServerMiddlewareStack()\n\n    /**\n     * Commit routes\n     */\n    this.#router.commit()\n\n    /**\n     * Register custom error handler\n     */\n    if (this.#errorHandler) {\n      if (debug.enabled) {\n        debug('using custom error handler \"%s\"', this.#errorHandler)\n      }\n\n      const moduleExports = await this.#errorHandler()\n      this.#resolvedErrorHandler = await this.#app.container.make(moduleExports.default)\n    }\n  }\n\n  /**\n   * Set the HTTP server instance used to listen for requests.\n   */\n  setNodeServer(server: HttpServer | HttpsServer) {\n    this.#nodeHttpServer = server\n  }\n\n  /**\n   * Returns reference to the underlying HTTP server\n   * in use\n   */\n  getNodeServer() {\n    return this.#nodeHttpServer\n  }\n\n  /**\n   * Returns reference to the router instance used\n   * by the server.\n   */\n  getRouter(): Router {\n    return this.#router\n  }\n\n  /**\n   * Creates an instance of the [[Request]] class\n   */\n  createRequest(req: IncomingMessage, res: ServerResponse) {\n    return new Request(req, res, this.#encryption, this.#config, this.#qsParser)\n  }\n\n  /**\n   * Creates an instance of the [[Response]] class\n   */\n  createResponse(req: IncomingMessage, res: ServerResponse) {\n    return new Response(req, res, this.#encryption, this.#config, this.#router, this.#qsParser)\n  }\n\n  /**\n   * Creates an instance of the [[HttpContext]] class\n   */\n  createHttpContext(request: Request, response: Response, resolver: ContainerResolver<any>) {\n    return new HttpContext(\n      request,\n      response,\n      this.#logger.child({ request_id: request.id() }),\n      resolver\n    )\n  }\n\n  /**\n   * Handle request\n   */\n  handle(req: IncomingMessage, res: ServerResponse) {\n    /**\n     * Setup for the \"http:request_finished\" event\n     */\n    const hasRequestListener = this.#emitter.hasListeners('http:request_completed')\n    const startTime = hasRequestListener ? process.hrtime() : null\n\n    /**\n     * Creating essential instances\n     */\n    const resolver = this.#app.container.createResolver()\n    const ctx = this.createHttpContext(\n      this.createRequest(req, res),\n      this.createResponse(req, res),\n      resolver\n    )\n\n    /**\n     * Emit event when listening for the request_finished event\n     */\n    if (startTime) {\n      onFinished(res, () => {\n        this.#emitter.emit('http:request_completed', {\n          ctx: ctx,\n          duration: process.hrtime(startTime),\n        })\n      })\n    }\n\n    /**\n     * Handle request\n     */\n    if (this.usingAsyncLocalStorage) {\n      return asyncLocalStorage.storage!.run(ctx, () => this.#handleRequest(ctx, resolver))\n    }\n    return this.#handleRequest(ctx, resolver)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { parse, stringify } from 'qs'\nimport { QSParserConfig } from './types/qs.js'\n\n/**\n * Query string parser used to parse and stringify query\n * strings.\n */\nexport class Qs {\n  #config: QSParserConfig\n\n  constructor(config: QSParserConfig) {\n    this.#config = config\n  }\n\n  parse(value: string) {\n    return parse(value, this.#config.parse)\n  }\n\n  stringify(value: any) {\n    return stringify(value, this.#config.stringify)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { ContainerResolver } from '@adonisjs/fold'\n\nimport * as errors from '../../exceptions.js'\nimport type { Router } from '../../router/main.js'\nimport type { HttpContext } from '../../http_context/main.js'\nimport type { ServerErrorHandler } from '../../types/server.js'\n\n/**\n * The final handler is executed after the server middleware stack.\n * It looks for a matching route and executes the route middleware\n * stack.\n */\nexport function finalHandler(\n  router: Router,\n  resolver: ContainerResolver<any>,\n  ctx: HttpContext,\n  errorResponder: ServerErrorHandler['handle']\n) {\n  return function () {\n    const url = ctx.request.url()\n    const method = ctx.request.method()\n    const hostname = router.usingDomains ? ctx.request.hostname() : undefined\n    const route = router.match(url, method, hostname)\n\n    if (route) {\n      ctx.params = route.params\n      ctx.subdomains = route.subdomains\n      ctx.route = route.route\n      ctx.routeKey = route.routeKey\n      return route.route.execute(route.route, resolver, ctx, errorResponder)\n    }\n\n    return Promise.reject(new errors.E_ROUTE_NOT_FOUND([method, url]))\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { HttpContext } from '../../http_context/main.js'\n\n/**\n * Writes the response to the socket. The \"finish\" method can\n * raise error when unable to serialize the response.\n */\nexport function writeResponse(ctx: HttpContext) {\n  return function () {\n    try {\n      ctx.response.finish()\n    } catch (error) {\n      ctx.logger.fatal({ err: error }, 'Response serialization failed')\n      ctx.response.internalServerError(error.message)\n      ctx.response.finish()\n    }\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { NextFn } from '@poppinss/middleware/types'\nimport type { ContainerResolver } from '@adonisjs/fold'\n\nimport type { HttpContext } from '../../http_context/main.js'\nimport { ParsedGlobalMiddleware } from '../../types/middleware.js'\nimport debug from '../../debug.js'\n\n/**\n * The middleware handler invokes the middleware functions.\n */\nexport function middlewareHandler(resolver: ContainerResolver<any>, ctx: HttpContext) {\n  return function (fn: ParsedGlobalMiddleware, next: NextFn) {\n    debug('executing middleware %s', fn.name)\n    return fn.handle(resolver, ctx, next)\n  }\n}\n","/*\n * @adonisjs/http-server\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport proxyAddr from 'proxy-addr'\nimport string from '@poppinss/utils/string'\nimport type { ServerConfig } from './types/server.js'\n\ntype UserDefinedServerConfig = Partial<\n  Omit<ServerConfig, 'trustProxy'> & {\n    trustProxy: ((address: string, distance: number) => boolean) | boolean | string\n  }\n>\n\n/**\n * Define configuration for the HTTP server\n */\nexport function defineConfig(config: UserDefinedServerConfig): ServerConfig {\n  const { trustProxy, ...rest } = config\n\n  const normalizedConfig = {\n    allowMethodSpoofing: false,\n    trustProxy: proxyAddr.compile('loopback'),\n    subdomainOffset: 2,\n    generateRequestId: false,\n    useAsyncLocalStorage: false,\n    etag: false,\n    jsonpCallbackName: 'callback',\n    cookie: {\n      maxAge: '2h',\n      path: '/',\n      httpOnly: true,\n      secure: true,\n      sameSite: 'lax' as const,\n    },\n    qs: {\n      parse: {\n        depth: 5,\n        parameterLimit: 1000,\n        allowSparse: false,\n        arrayLimit: 20,\n        comma: true,\n      },\n      stringify: {\n        encode: true,\n        encodeValuesOnly: false,\n        arrayFormat: 'indices' as const,\n        skipNulls: false,\n      },\n    },\n    ...rest,\n  }\n\n  /**\n   * Normalizing maxAge property on cookies to be a number in\n   * seconds\n   */\n  if (normalizedConfig.cookie.maxAge) {\n    normalizedConfig.cookie.maxAge = string.seconds.parse(normalizedConfig.cookie.maxAge)\n  }\n\n  /**\n   * Normalizing trust proxy setting to allow boolean and\n   * string values\n   */\n  if (typeof trustProxy === 'boolean') {\n    const tpValue = trustProxy\n    normalizedConfig.trustProxy = (_, __) => tpValue\n  } else if (typeof trustProxy === 'string') {\n    const tpValue = trustProxy\n    normalizedConfig.trustProxy = proxyAddr.compile(tpValue)\n  } else if (trustProxy) {\n    normalizedConfig.trustProxy = trustProxy\n  }\n\n  return normalizedConfig\n}\n"],"mappings":"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","names":["Macroable","RuntimeException","Macroable","Macroable","Macroable","Macroable","Macroable","RuntimeException","pack","canUnpack","unpack","pack","canUnpack","unpack","pack","canUnpack","unpack","is","Macroable","Macroable","is","parse","parse","error","fresh","Macroable","RuntimeException","cookie","string","string","cookie","Macroable","RuntimeException","fresh","is","moduleImporter","RuntimeException","matchit","lodash","RuntimeException","RuntimeException","lodash","matchit","Macroable","RuntimeException","RuntimeException","Macroable","Macroable","moduleImporter","moduleImporter","is","RuntimeException","Macroable","RuntimeException","Macroable","RuntimeException","onFinished","Middleware","moduleCaller","moduleImporter","parse","Middleware","moduleCaller","moduleImporter","onFinished","string","trustProxy"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/build/index.js":{"lineLengths":[8,12,20,9,15,19,16,29,29,8,12,20,9,15,19,16,2,33],"data":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/build/chunk-SPSVXECA.js":{"lineLengths":[17,32,39,39,41,43,39,28,73,3,29,74,3,15,1,36,29,18,21,14,4,34,44,52,20,5,45,35,51,62,9,5,33,49,59,7,5,1,33,67,26,64,3,50,1,37,21,55,62,41,6,4,1,0,8,16,10,7,10,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/cliui/src/helpers.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport wordwrap from 'wordwrap'\nimport stringWidth from 'string-width'\nimport cliTruncate from 'cli-truncate'\nimport terminalSize from 'terminal-size'\n\n/**\n * Total number of columns for the terminal\n */\nexport const TERMINAL_SIZE = terminalSize().columns\n\n/**\n * Applies padding to the left or the right of the string by repeating\n * a given char.\n *\n * The method is not same as `padLeft` or `padRight` from JavaScript STD lib,\n * since it repeats a char regardless of the max width.\n */\nfunction applyPadding(\n  value: string,\n  options: { paddingLeft?: number; paddingRight?: number; paddingChar: string }\n) {\n  if (options.paddingLeft) {\n    value = `${options.paddingChar.repeat(options.paddingLeft)}${value}`\n  }\n\n  if (options.paddingRight) {\n    value = `${value}${options.paddingChar.repeat(options.paddingRight)}`\n  }\n\n  return value\n}\n\n/**\n * Justify the columns to have the same width by filling\n * the empty slots with a padding char.\n *\n * Optionally, the column can be aligned left or right.\n */\nexport function justify(\n  columns: string[],\n  options: {\n    maxWidth: number\n    align?: 'left' | 'right'\n    paddingChar?: string\n  }\n) {\n  const normalizedOptions = {\n    align: 'left' as const,\n    paddingChar: ' ',\n    ...options,\n  }\n\n  return columns.map((column) => {\n    const columnWidth = stringWidth(column)\n\n    /**\n     * Column is already same or greater than the maxWidth\n     */\n    if (columnWidth >= normalizedOptions.maxWidth) {\n      return column\n    }\n\n    /**\n     * Fill empty space on the right\n     */\n    if (normalizedOptions.align === 'left') {\n      return applyPadding(column, {\n        paddingChar: normalizedOptions.paddingChar,\n        paddingRight: normalizedOptions.maxWidth - columnWidth,\n      })\n    }\n\n    /**\n     * Fill empty space on the left\n     */\n    return applyPadding(column, {\n      paddingChar: normalizedOptions.paddingChar,\n      paddingLeft: normalizedOptions.maxWidth - columnWidth,\n    })\n  })\n}\n\n/**\n * Wrap the text under the starting and the ending column.\n * The first line will start at 1st column. However, from\n * the 2nd line onwards, the columns before the start\n * column are filled with white space.\n */\nexport function wrap(\n  columns: string[],\n  options: {\n    startColumn: number\n    endColumn: number\n    trimStart?: boolean\n  }\n) {\n  const wrapper = wordwrap(options.startColumn, options.endColumn)\n  if (options.trimStart) {\n    return columns.map((column) => wrapper(column).trimStart())\n  }\n\n  return columns.map((column) => wrapper(column))\n}\n\n/**\n * Truncates the text after a certain width.\n */\nexport function truncate(\n  columns: string[],\n  options: {\n    maxWidth: number\n    truncationChar?: string\n    position?: 'start' | 'middle' | 'end'\n  }\n) {\n  return columns.map((column) =>\n    cliTruncate(column, options.maxWidth, {\n      truncationCharacter: options.truncationChar || '…',\n      position: options.position || 'end',\n    })\n  )\n}\n"],"mappings":";AASA,OAAO,cAAc;AACrB,OAAO,iBAAiB;AACxB,OAAO,iBAAiB;AACxB,OAAO,kBAAkB;AAKlB,IAAM,gBAAgB,aAAa,EAAE;AAS5C,SAAS,aACP,OACA,SACA;AACA,MAAI,QAAQ,aAAa;AACvB,YAAQ,GAAG,QAAQ,YAAY,OAAO,QAAQ,WAAW,CAAC,GAAG,KAAK;AAAA,EACpE;AAEA,MAAI,QAAQ,cAAc;AACxB,YAAQ,GAAG,KAAK,GAAG,QAAQ,YAAY,OAAO,QAAQ,YAAY,CAAC;AAAA,EACrE;AAEA,SAAO;AACT;AAQO,SAAS,QACd,SACA,SAKA;AACA,QAAM,oBAAoB;AAAA,IACxB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,GAAG;AAAA,EACL;AAEA,SAAO,QAAQ,IAAI,CAAC,WAAW;AAC7B,UAAM,cAAc,YAAY,MAAM;AAKtC,QAAI,eAAe,kBAAkB,UAAU;AAC7C,aAAO;AAAA,IACT;AAKA,QAAI,kBAAkB,UAAU,QAAQ;AACtC,aAAO,aAAa,QAAQ;AAAA,QAC1B,aAAa,kBAAkB;AAAA,QAC/B,cAAc,kBAAkB,WAAW;AAAA,MAC7C,CAAC;AAAA,IACH;AAKA,WAAO,aAAa,QAAQ;AAAA,MAC1B,aAAa,kBAAkB;AAAA,MAC/B,aAAa,kBAAkB,WAAW;AAAA,IAC5C,CAAC;AAAA,EACH,CAAC;AACH;AAQO,SAAS,KACd,SACA,SAKA;AACA,QAAM,UAAU,SAAS,QAAQ,aAAa,QAAQ,SAAS;AAC/D,MAAI,QAAQ,WAAW;AACrB,WAAO,QAAQ,IAAI,CAAC,WAAW,QAAQ,MAAM,EAAE,UAAU,CAAC;AAAA,EAC5D;AAEA,SAAO,QAAQ,IAAI,CAAC,WAAW,QAAQ,MAAM,CAAC;AAChD;AAKO,SAAS,SACd,SACA,SAKA;AACA,SAAO,QAAQ;AAAA,IAAI,CAAC,WAClB,YAAY,QAAQ,QAAQ,UAAU;AAAA,MACpC,qBAAqB,QAAQ,kBAAkB;AAAA,MAC/C,UAAU,QAAQ,YAAY;AAAA,IAChC,CAAC;AAAA,EACH;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/build/index.js":{"lineLengths":[14,20,15,41,3,13,39,3,15,41,3,16,42,3,14,40,3,17,43,3,14,40,3,15,41,3,14,40,3,14,40,3,17,43,3,15,41,3,17,43,3,18,44,3,16,42,3,19,45,3,16,42,3,17,43,3,15,41,3,14,40,3,13,39,3,16,42,3,19,45,3,17,43,3,16,42,3,23,49,3,2,0,13,32,24,29,15,17,3,35,47,26,77,84,74,35,9,5,16,3,2,0,15,26,34,9,17,12,25,3,29,15,17,3,35,26,24,71,31,11,7,41,5,22,50,12,44,5,16,3,2,0,16,35,22,26,26,5,16,3,2,0,11,17,5,25,5,10,23,4,5,46,13,5,12,24,4,5,50,35,5,9,21,3,2,31,8,27,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/src/base.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/src/raw.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/src/kleur.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/src/silent.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/colors/index.ts"],"sourcesContent":["/**\n * @poppinss/colors\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Abstract implementation of the colors class.\n */\nexport abstract class Colors {\n  protected abstract transform(transformation: string): this\n  protected abstract transform(transformation: string, text: string | number): string\n  protected abstract transform(transformation: string, text?: string | number): this | string\n\n  black(): this\n  black(text: string): string\n  black(text?: string | number): this | string {\n    return this.transform('black', text)\n  }\n\n  red(): this\n  red(text: string): string\n  red(text?: string | number): this | string {\n    return this.transform('red', text)\n  }\n\n  green(): this\n  green(text: string): string\n  green(text?: string | number): this | string {\n    return this.transform('green', text)\n  }\n\n  yellow(): this\n  yellow(text: string): string\n  yellow(text?: string | number): this | string {\n    return this.transform('yellow', text)\n  }\n\n  blue(): this\n  blue(text: string): string\n  blue(text?: string | number): this | string {\n    return this.transform('blue', text)\n  }\n\n  magenta(): this\n  magenta(text: string): string\n  magenta(text?: string | number): this | string {\n    return this.transform('magenta', text)\n  }\n\n  cyan(): this\n  cyan(text: string): string\n  cyan(text?: string | number): this | string {\n    return this.transform('cyan', text)\n  }\n\n  white(): this\n  white(text: string): string\n  white(text?: string | number): this | string {\n    return this.transform('white', text)\n  }\n\n  gray(): this\n  gray(text: string): string\n  gray(text?: string | number): this | string {\n    return this.transform('gray', text)\n  }\n\n  grey(): this\n  grey(text: string): string\n  grey(text?: string | number): this | string {\n    return this.transform('grey', text)\n  }\n\n  bgBlack(): this\n  bgBlack(text: string): string\n  bgBlack(text?: string | number): this | string {\n    return this.transform('bgBlack', text)\n  }\n\n  bgRed(): this\n  bgRed(text: string): string\n  bgRed(text?: string | number): this | string {\n    return this.transform('bgRed', text)\n  }\n\n  bgGreen(): this\n  bgGreen(text: string): string\n  bgGreen(text?: string | number): this | string {\n    return this.transform('bgGreen', text)\n  }\n\n  bgYellow(): this\n  bgYellow(text: string): string\n  bgYellow(text?: string | number): this | string {\n    return this.transform('bgYellow', text)\n  }\n\n  bgBlue(): this\n  bgBlue(text: string): string\n  bgBlue(text?: string | number): this | string {\n    return this.transform('bgBlue', text)\n  }\n\n  bgMagenta(): this\n  bgMagenta(text: string): string\n  bgMagenta(text?: string | number): this | string {\n    return this.transform('bgMagenta', text)\n  }\n\n  bgCyan(): this\n  bgCyan(text: string): string\n  bgCyan(text?: string | number): this | string {\n    return this.transform('bgCyan', text)\n  }\n\n  bgWhite(): this\n  bgWhite(text: string): string\n  bgWhite(text?: string | number): this | string {\n    return this.transform('bgWhite', text)\n  }\n\n  reset(): this\n  reset(text: string): string\n  reset(text?: string | number): this | string {\n    return this.transform('reset', text)\n  }\n\n  bold(): this\n  bold(text: string): string\n  bold(text?: string | number): this | string {\n    return this.transform('bold', text)\n  }\n\n  dim(): this\n  dim(text: string): string\n  dim(text?: string | number): this | string {\n    return this.transform('dim', text)\n  }\n\n  italic(): this\n  italic(text: string): string\n  italic(text?: string | number): this | string {\n    return this.transform('italic', text)\n  }\n\n  underline(): this\n  underline(text: string): string\n  underline(text?: string | number): this | string {\n    return this.transform('underline', text)\n  }\n\n  inverse(): this\n  inverse(text: string): string\n  inverse(text?: string | number): this | string {\n    return this.transform('inverse', text)\n  }\n\n  hidden(): this\n  hidden(text: string): string\n  hidden(text?: string | number): this | string {\n    return this.transform('hidden', text)\n  }\n\n  strikethrough(): this\n  strikethrough(text: string): string\n  strikethrough(text?: string | number): this | string {\n    return this.transform('strikethrough', text)\n  }\n}\n","/**\n * @poppinss/colors\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Colors } from './base.js'\nimport { ColorTransformations } from './types.js'\n\n/**\n * Concrete implementation of the Colors class that prefixes the\n * applied transformations to the final text as string.\n *\n * This class is meant to be used at the time of testing\n */\nexport class Raw extends Colors {\n  #transformations: string[] = []\n\n  #dispose<T>(value: T, callback: () => void) {\n    callback()\n    return value\n  }\n\n  /**\n   * Perform the given transformation. The base class will\n   * invoke this method\n   */\n  protected transform(transformation: ColorTransformations): this\n  protected transform(transformation: ColorTransformations, text: string | number): string\n  protected transform(transformation: ColorTransformations, text?: string | number): string | this {\n    this.#transformations.push(transformation)\n\n    if (text !== undefined) {\n      const transformations = this.#transformations.concat([text as any]).join('(')\n      const closingWrapping = new Array(this.#transformations.length + 1).join(')')\n\n      return this.#dispose(`${transformations}${closingWrapping}`, () => {\n        this.#transformations = []\n      })\n    }\n\n    return this\n  }\n}\n","/**\n * @poppinss/colors\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport kleur from 'kleur'\nimport { Colors } from './base.js'\nimport { ColorTransformations } from './types.js'\n\n/**\n * Concrete implementation of the Colors class using Kleur\n */\nexport class Kleur extends Colors {\n  #chain?: kleur.Kleur\n\n  constructor() {\n    super()\n    kleur.enabled = true\n  }\n\n  #dispose<T>(value: T, callback: () => void) {\n    callback()\n    return value\n  }\n\n  /**\n   * Perform the given transformation. The abstract Color class calls this\n   * method\n   */\n  protected transform(transformation: ColorTransformations): this\n  protected transform(transformation: ColorTransformations, text: string | number): string\n  protected transform(transformation: ColorTransformations, text?: string | number): string | this {\n    /**\n     * Transform text. If the chain is defined, then transform using\n     * the chain, otherwise use kluer directory\n     */\n    if (text !== undefined) {\n      if (this.#chain) {\n        return this.#dispose(this.#chain[transformation](text), () => {\n          this.#chain = undefined\n        })\n      }\n      return kleur[transformation](text)\n    }\n\n    /**\n     * Apply transformation\n     */\n    if (this.#chain) {\n      this.#chain = this.#chain[transformation]()\n    } else {\n      this.#chain = kleur[transformation]()\n    }\n\n    return this\n  }\n}\n","/**\n * @poppinss/colors\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Colors } from './base.js'\nimport { ColorTransformations } from './types.js'\n\n/**\n * Concrete implementation of the Colors class that returns\n * the value as it is.\n */\nexport class Silent extends Colors {\n  /**\n   * Perform the given transformation. The abstract Color class calls this\n   * method\n   */\n  protected transform(transformation: ColorTransformations): this\n  protected transform(transformation: ColorTransformations, text: string | number): string\n  protected transform(_: ColorTransformations, text?: string | number): string | this {\n    if (text !== undefined) {\n      return String(text)\n    }\n\n    return this\n  }\n}\n","/**\n * @poppinss/colors\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Raw } from './src/raw.js'\nimport { Kleur } from './src/kleur.js'\nimport { Colors } from './src/base.js'\nimport { Silent } from './src/silent.js'\n\nconst useColors: {\n  ansi(): Colors\n  silent(): Colors\n  raw(): Colors\n} = {\n  /**\n   * Kleur implementation\n   */\n  ansi() {\n    return new Kleur()\n  },\n\n  /**\n   * Silent implementation. Returns the string\n   * as it is\n   */\n  silent() {\n    return new Silent()\n  },\n\n  /**\n   * Raw implementation. Wraps string with applied\n   * transformations as plain text.\n   */\n  raw() {\n    return new Raw()\n  },\n}\n\nexport default useColors\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-RRTFLKKC.js":{"lineLengths":[15,44,0,8,21,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/slash.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport { default as slash } from 'slash'\n"],"mappings":";AASA,SAAoB,WAAXA,gBAAwB;","names":["default"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-PNT36FCE.js":{"lineLengths":[8,11,29,0,38,48,38,22,2,0,48,57,48,22,2,0,8,19,27,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/exceptions/runtime_exception.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/exceptions/invalid_arguments_exception.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Exception } from '../exception.js'\n\nexport class RuntimeException extends Exception {\n  static code = 'E_RUNTIME_EXCEPTION'\n  static status = 500\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Exception } from '../exception.js'\n\nexport class InvalidArgumentsException extends Exception {\n  static code = 'E_INVALID_ARGUMENTS_EXCEPTION'\n  static status = 500\n}\n"],"mappings":";;;;;AAWO,IAAM,mBAAN,cAA+B,UAAU;AAAA,EAC9C,OAAO,OAAO;AAAA,EACd,OAAO,SAAS;AAClB;;;ACHO,IAAM,4BAAN,cAAwC,UAAU;AAAA,EACvD,OAAO,OAAO;AAAA,EACd,OAAO,SAAS;AAClB;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-GGIWJLUJ.js":{"lineLengths":[19,35,37,5,49,5,7,5,72,23,5,9,33,28,46,38,61,68,56,26,23,5,39,26,23,5,52,3,30,33,3,14,20,60,5,43,3,2,45,34,29,23,27,32,53,30,5,4,1,0,8,12,13,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/exception.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { format } from 'node:util'\n\n/**\n * Extended Error object with the option to set error `status` and `code`.\n * At AdonisJs, we prefer exceptions with proper error codes to handle\n * them without relying on message pattern matching.\n *\n * ```js\n * new Exception('message', 500, 'E_RUNTIME_EXCEPTION')\n * ```\n */\nexport class Exception extends Error {\n  /**\n   * Static properties to defined on the exception once\n   * and then re-use them\n   */\n  declare static help?: string\n  declare static code?: string\n  declare static status?: number\n  declare static message?: string\n\n  /**\n   * Name of the class that raised the exception.\n   */\n  name: string\n\n  /**\n   * Optional help description for the error. You can use it to define additional\n   * human readable information for the error.\n   */\n  declare help?: string\n\n  /**\n   * A machine readable error code. This will allow the error handling logic\n   * to narrow down exceptions based upon the error code.\n   */\n  declare code?: string\n\n  /**\n   * A status code for the error. Usually helpful when converting errors\n   * to HTTP responses.\n   */\n  status: number\n\n  constructor(message?: string, options?: ErrorOptions & { code?: string; status?: number }) {\n    super(message, options)\n\n    const ErrorConstructor = this.constructor as typeof Exception\n\n    this.name = ErrorConstructor.name\n    this.message = message || ErrorConstructor.message || ''\n    this.status = options?.status || ErrorConstructor.status || 500\n\n    const code = options?.code || ErrorConstructor.code\n    if (code !== undefined) {\n      this.code = code\n    }\n\n    const help = ErrorConstructor.help\n    if (help !== undefined) {\n      this.help = help\n    }\n\n    Error.captureStackTrace(this, ErrorConstructor)\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.constructor.name\n  }\n\n  toString() {\n    if (this.code) {\n      return `${this.name} [${this.code}]: ${this.message}`\n    }\n    return `${this.name}: ${this.message}`\n  }\n}\n\n/**\n * Helper to create anonymous error classes\n */\nexport function createError<T extends any[] = never>(\n  message: string,\n  code: string,\n  status?: number\n): typeof Exception & T extends never\n  ? { new (args?: any, options?: ErrorOptions): Exception }\n  : { new (args: T, options?: ErrorOptions): Exception } {\n  return class extends Exception {\n    static message = message\n    static code = code\n    static status = status\n\n    constructor(args: T, options?: ErrorOptions) {\n      super(format(message, ...(args || [])), options)\n      this.name = 'Exception'\n    }\n  }\n}\n"],"mappings":";AASA,SAAS,cAAc;AAWhB,IAAM,YAAN,cAAwB,MAAM;AAAA;AAAA;AAAA;AAAA,EAanC;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA;AAAA,EAEA,YAAY,SAAkB,SAA6D;AACzF,UAAM,SAAS,OAAO;AAEtB,UAAM,mBAAmB,KAAK;AAE9B,SAAK,OAAO,iBAAiB;AAC7B,SAAK,UAAU,WAAW,iBAAiB,WAAW;AACtD,SAAK,SAAS,SAAS,UAAU,iBAAiB,UAAU;AAE5D,UAAM,OAAO,SAAS,QAAQ,iBAAiB;AAC/C,QAAI,SAAS,QAAW;AACtB,WAAK,OAAO;AAAA,IACd;AAEA,UAAM,OAAO,iBAAiB;AAC9B,QAAI,SAAS,QAAW;AACtB,WAAK,OAAO;AAAA,IACd;AAEA,UAAM,kBAAkB,MAAM,gBAAgB;AAAA,EAChD;AAAA,EAEA,KAAK,OAAO,WAAW,IAAI;AACzB,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA,EAEA,WAAW;AACT,QAAI,KAAK,MAAM;AACb,aAAO,GAAG,KAAK,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA,IACrD;AACA,WAAO,GAAG,KAAK,IAAI,KAAK,KAAK,OAAO;AAAA,EACtC;AACF;AAKO,SAAS,YACd,SACA,MACA,QAGuD;AACvD,SAAO,cAAc,UAAU;AAAA,IAC7B,OAAO,UAAU;AAAA,IACjB,OAAO,OAAO;AAAA,IACd,OAAO,SAAS;AAAA,IAEhB,YAAY,MAAS,SAAwB;AAC3C,YAAM,OAAO,SAAS,GAAI,QAAQ,CAAC,CAAE,GAAG,OAAO;AAC/C,WAAK,OAAO;AAAA,IACd;AAAA,EACF;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-IOBSMUFC.js":{"lineLengths":[25,42,41,37,26,31,5,1,0,29,50,27,16,24,22,3,42,31,67,34,28,5,15,4,1,48,66,1,0,19,12,12,15,2,24,0,8,14,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/json/safe_parse.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/json/safe_stringify.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/json/main.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { parse } from 'secure-json-parse'\nimport { JSONReviver } from '../types.js'\n\n/**\n * A drop-in replacement for JSON.parse with prototype poisoning protection.\n */\nexport function safeParse(jsonString: string, reviver?: JSONReviver): any {\n  return parse(jsonString, reviver, {\n    protoAction: 'remove',\n    constructorAction: 'remove',\n  })\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { configure } from 'safe-stable-stringify'\nimport { JSONReplacer } from '../types.js'\n\nconst stringify = configure({\n  bigint: false,\n  circularValue: undefined,\n  deterministic: false,\n})\n\n/**\n * Replacer to handle custom data types.\n *\n * - Bigints are converted to string\n */\nfunction jsonStringifyReplacer(replacer?: JSONReplacer): JSONReplacer {\n  return function (key, value) {\n    const val = replacer ? replacer.call(this, key, value) : value\n\n    if (typeof val === 'bigint') {\n      return val.toString()\n    }\n\n    return val\n  }\n}\n\n/**\n * String Javascript values to a JSON string. Handles circular\n * references and bigints\n */\nexport function safeStringify(\n  value: any,\n  replacer?: JSONReplacer,\n  space?: string | number\n): string | undefined {\n  return stringify(value, jsonStringifyReplacer(replacer), space)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { safeParse } from './safe_parse.js'\nimport { safeStringify } from './safe_stringify.js'\n\nconst json = {\n  safeParse,\n  safeStringify,\n}\n\nexport default json\n"],"mappings":";AASA,SAAS,aAAa;AAMf,SAAS,UAAU,YAAoB,SAA4B;AACxE,SAAO,MAAM,YAAY,SAAS;AAAA,IAChC,aAAa;AAAA,IACb,mBAAmB;AAAA,EACrB,CAAC;AACH;;;ACXA,SAAS,iBAAiB;AAG1B,IAAM,YAAY,UAAU;AAAA,EAC1B,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,eAAe;AACjB,CAAC;AAOD,SAAS,sBAAsB,UAAuC;AACpE,SAAO,SAAU,KAAK,OAAO;AAC3B,UAAM,MAAM,WAAW,SAAS,KAAK,MAAM,KAAK,KAAK,IAAI;AAEzD,QAAI,OAAO,QAAQ,UAAU;AAC3B,aAAO,IAAI,SAAS;AAAA,IACtB;AAEA,WAAO;AAAA,EACT;AACF;AAMO,SAAS,cACd,OACA,UACA,OACoB;AACpB,SAAO,UAAU,OAAO,sBAAsB,QAAQ,GAAG,KAAK;AAChE;;;ACjCA,IAAM,OAAO;AAAA,EACX;AAAA,EACA;AACF;AAEA,IAAO,eAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-K76IL3UP.js":{"lineLengths":[8,9,22,29,0,22,26,21,33,47,4,5,58,63,28,5,15,35,18,5,29,3,2,0,24,43,23,25,39,4,5,62,63,5,19,39,22,5,41,34,67,5,42,3,2,0,24,48,22,0,23,42,23,30,50,49,1,0,24,36,55,32,36,7,71,14,7,69,20,29,37,5,1,0,24,25,96,77,69,3,41,39,24,3,40,20,11,26,11,26,11,26,12,26,3,1,0,25,37,56,33,36,7,71,14,7,69,21,29,37,5,1,0,25,36,28,14,3,28,21,3,28,74,3,90,116,1,0,28,31,32,25,52,13,5,33,61,3,14,1,35,67,21,26,5,39,5,1,0,26,52,44,46,1,53,57,59,63,33,37,37,41,0,28,44,74,42,173,29,22,38,54,27,18,13,50,39,231,82,15,5,20,3,16,1,28,37,1,28,37,1,35,38,39,3,37,1,29,38,1,30,39,1,30,42,39,22,64,5,18,5,1,34,57,37,42,3,26,1,35,100,54,16,26,41,12,3,43,10,3,107,1,0,21,36,46,1,14,10,11,7,14,9,12,11,11,13,24,28,11,10,9,26,15,24,12,9,11,21,27,37,23,9,2,26,0,8,14,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/bytes.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/seconds.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/slugify.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/random.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/excerpt.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/ordinal.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/truncate.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/sentence.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/interpolate.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/pluralize.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/change_case.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/main.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport bytes, { BytesOptions } from 'bytes'\n\nexport default {\n  format(valueInBytes: number, options?: BytesOptions): string {\n    return bytes.format(valueInBytes, options)\n  },\n\n  /**\n   * Parse the unit expression to bytes. If the unit value\n   * is a number, then it will be returned as it is considering\n   * it is already in bytes.\n   */\n  parse(unit: string | number): number {\n    if (typeof unit === 'number') {\n      return unit\n    }\n\n    return bytes.parse(unit)\n  },\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { parse, format } from '@lukeed/ms'\n\nexport default {\n  format(seconds: number, long?: boolean): string {\n    return format(seconds * 1000, long)\n  },\n\n  /**\n   * Parse time expression string to seconds. The number value\n   * is returned as it is, considering it is already in seconds\n   */\n  parse(duration: string | number): number {\n    if (typeof duration === 'number') {\n      return duration\n    }\n\n    const milliseconds = parse(duration)\n    if (milliseconds === undefined) {\n      throw new Error(`Invalid duration expression \"${duration}\"`)\n    }\n\n    return Math.floor(milliseconds / 1000)\n  },\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { default as slugifyPkg } from 'slugify'\n\n/**\n * Typings of the slugify package are a bit off and therefore we have\n * to do this manual dance of re-assigning types\n */\nexport const slug = slugifyPkg as unknown as (typeof slugifyPkg)['default']\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { randomBytes } from 'node:crypto'\nimport { base64 } from '../base64.js'\n\n/**\n * Generates a random string of a given size\n */\nexport function random(size: number): string {\n  const bits = (size + 1) * 6\n  const buffer = randomBytes(Math.ceil(bits / 8))\n  return base64.urlEncode(buffer).slice(0, size)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-expect-error (Package has no types)\nimport truncatise from 'truncatise'\n\n/**\n * Truncate a sentence to be under a certain characters limit and strip\n * out HTML tags from it.\n *\n * Optionally, you can force the truncate logic to complete words, which\n * may exceed the defined characters limit.\n */\nexport function excerpt(\n  sentence: string,\n  charactersLimit: number,\n  options?: {\n    completeWords?: boolean\n    suffix?: string\n  }\n): string {\n  return truncatise(sentence, {\n    TruncateLength: charactersLimit,\n    /**\n     * Do not complete words when \"completeWords\" is not explicitly set\n     * to true\n     */\n    Strict: options && options.completeWords === true ? false : true,\n    StripHTML: true,\n    TruncateBy: 'characters',\n    Suffix: options && options.suffix,\n  })\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Ordinalize a give number or string\n */\nexport function ordinal(value: string | number): string {\n  const transformedValue = Math.abs(typeof value === 'string' ? Number.parseInt(value) : value)\n  if (!Number.isFinite(transformedValue) || Number.isNaN(transformedValue)) {\n    throw new Error('Cannot ordinalize invalid or infinite numbers')\n  }\n\n  const percent = transformedValue % 100\n  if (percent >= 10 && percent <= 20) {\n    return `${value}th`\n  }\n\n  const decimal = transformedValue % 10\n  switch (decimal) {\n    case 1:\n      return `${value}st`\n    case 2:\n      return `${value}nd`\n    case 3:\n      return `${value}rd`\n    default:\n      return `${value}th`\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-expect-error (Package has no types)\nimport truncatise from 'truncatise'\n\n/**\n * Truncate a sentence to be under a certain characters limit.\n *\n * Optionally, you can force the truncate logic to complete words, which\n * may exceed the defined characters limit.\n */\nexport function truncate(\n  sentence: string,\n  charactersLimit: number,\n  options?: {\n    completeWords?: boolean\n    suffix?: string\n  }\n): string {\n  return truncatise(sentence, {\n    TruncateLength: charactersLimit,\n    /**\n     * Do not complete words when \"completeWords\" is not explicitly set\n     * to true\n     */\n    Strict: options && options.completeWords === true ? false : true,\n    StripHTML: false,\n    TruncateBy: 'characters',\n    Suffix: options && options.suffix,\n  })\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Convert an array of values to a sentence.\n */\nexport function sentence(\n  values: any[],\n  options?: {\n    separator?: string\n    pairSeparator?: string\n    lastSeparator?: string\n  }\n): string {\n  /**\n   * Empty array\n   */\n  if (values.length === 0) {\n    return ''\n  }\n\n  /**\n   * Just one item\n   */\n  if (values.length === 1) {\n    return values[0]\n  }\n\n  /**\n   * Giving some love to two items, so that one can ditch comma with two items\n   */\n  if (values.length === 2) {\n    return `${values[0]}${options?.pairSeparator || ' and '}${values[1]}`\n  }\n\n  const normalized = Object.assign({ separator: ', ', lastSeparator: ', and ' }, options)\n\n  /**\n   * Make sentence\n   */\n  return `${values.slice(0, -1).join(normalized.separator)}${normalized.lastSeparator}${\n    values[values.length - 1]\n  }`\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Parses prop\n */\nfunction parseProp(data: any, key: string) {\n  const tokens = key.split('.')\n  while (tokens.length) {\n    if (data === null || typeof data !== 'object') {\n      return\n    }\n    const token = tokens.shift()!\n    data = Object.hasOwn(data, token) ? data[token] : undefined\n  }\n  return data\n}\n\n/**\n * A simple function interpolate values inside curly braces.\n *\n * ```\n * interpolate('hello {{ username }}', { username: 'virk' })\n * ```\n */\nexport function interpolate(input: string, data: any) {\n  return input.replace(/(\\\\)?{{(.*?)}}/g, (_, escapeChar, key) => {\n    if (escapeChar) {\n      return `{{${key}}}`\n    }\n\n    return parseProp(data, key.trim())\n  })\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { default as pluralizePkg } from 'pluralize'\n\n/**\n * Pluralize a word based upon the count. The method returns the\n * singular form when count is 1.\n */\nexport function pluralize(word: string, count?: number, inclusive?: boolean): string {\n  return pluralizePkg(word, count, inclusive)\n}\npluralize.addPluralRule = pluralizePkg.addPluralRule\npluralize.addSingularRule = pluralizePkg.addSingularRule\npluralize.addIrregularRule = pluralizePkg.addIrregularRule\npluralize.addUncountableRule = pluralizePkg.addUncountableRule\n\nexport const plural = pluralizePkg.plural\nexport const singular = pluralizePkg.singular\nexport const isPlural = pluralizePkg.isPlural\nexport const isSingular = pluralizePkg.isSingular\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport * as changeCase from 'case-anything'\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst NO_CASE_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g]\n\n// Remove all non-word characters.\nconst NO_CASE_STRIP_REGEXP = /[^A-Z0-9]+/gi\n\nconst SMALL_WORDS =\n  /\\b(?:an?d?|a[st]|because|but|by|en|for|i[fn]|neither|nor|o[fnr]|only|over|per|so|some|tha[tn]|the|to|up|upon|vs?\\.?|versus|via|when|with|without|yet)\\b/i\nconst TOKENS = /[^\\s:–—-]+|./g\nconst WHITESPACE = /\\s/\nconst IS_MANUAL_CASE = /.(?=[A-Z]|\\..)/\nconst ALPHANUMERIC_PATTERN = /[A-Za-z0-9\\u00C0-\\u00FF]/\n\n/**\n * The method is a copy/paste from the \"title-case\" package. They have\n * a dependency on \"tslib\", which I don't want.\n */\nexport function titleCase(input: string) {\n  let output = ''\n  let result: RegExpExecArray | null\n\n  while ((result = TOKENS.exec(input)) !== null) {\n    const { 0: token, index } = result\n\n    if (\n      !IS_MANUAL_CASE.test(token) &&\n      (!SMALL_WORDS.test(token) || index === 0 || index + token.length === input.length) &&\n      (input.charAt(index + token.length) !== ':' ||\n        WHITESPACE.test(input.charAt(index + token.length + 1)))\n    ) {\n      output += token.replace(ALPHANUMERIC_PATTERN, (char) => char.toUpperCase())\n      continue\n    }\n\n    output += token\n  }\n\n  return output\n}\n\n/**\n * Convert string to camelcase\n */\nexport function camelCase(value: string): string {\n  return changeCase.camelCase(value)\n}\n\n/**\n * Convert string to snakecase\n */\nexport function snakeCase(value: string): string {\n  return changeCase.snakeCase(value)\n}\n\n/**\n * Convert string to dashcase\n */\nexport function dashCase(value: string, options?: { capitalize?: boolean }): string {\n  if (options && options.capitalize) {\n    return changeCase.trainCase(value)\n  }\n\n  return changeCase.kebabCase(value)\n}\n\n/**\n * Convert string to pascal case\n */\nexport function pascalCase(value: string): string {\n  return changeCase.pascalCase(value)\n}\n\n/**\n * Convert string to capital case\n */\nexport function capitalCase(value: string): string {\n  return changeCase.capitalCase(value)\n}\n\n/**\n * Convert string to sentence case\n */\nexport function sentenceCase(value: string): string {\n  return noCase(value, (input, index) => {\n    const result = input.toLowerCase()\n    if (index === 0) {\n      return input.charAt(0).toUpperCase() + input.substring(1)\n    }\n    return result\n  })\n}\n\n/**\n * Convert string to dot case\n */\nexport function dotCase(value: string, options?: { lowerCase?: boolean }): string {\n  const transformedValue = changeCase.dotNotation(value)\n  if (options && options.lowerCase) {\n    return transformedValue.toLowerCase()\n  }\n\n  return transformedValue\n}\n\n/**\n * Remove all sort of casing from the string. Copy-pasted from\n * \"no-case\" package with slight modifications.\n */\nexport function noCase(\n  value: string,\n  transform?: (part: string, index: number, parts: string[]) => string\n): string {\n  let result = NO_CASE_SPLIT_REGEXP.reduce((input, regex) => input.replace(regex, '$1\\0$2'), value)\n  result = result.replace(NO_CASE_STRIP_REGEXP, '\\0')\n\n  let start = 0\n  let end = result.length\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === '\\0') {\n    start++\n  }\n  while (result.charAt(end - 1) === '\\0') {\n    end--\n  }\n\n  return result\n    .slice(start, end)\n    .split('\\0')\n    .map(transform || ((input) => input.toLowerCase()))\n    .join(' ')\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport bytes from './bytes.js'\nimport seconds from './seconds.js'\nimport { slug } from './slugify.js'\nimport { random } from './random.js'\nimport { excerpt } from './excerpt.js'\nimport { ordinal } from './ordinal.js'\nimport { truncate } from './truncate.js'\nimport milliseconds from './milliseconds.js'\nimport { sentence } from './sentence.js'\nimport { interpolate } from './interpolate.js'\nimport { plural, pluralize, singular, isPlural, isSingular } from './pluralize.js'\nimport {\n  noCase,\n  dotCase,\n  dashCase,\n  camelCase,\n  snakeCase,\n  titleCase,\n  pascalCase,\n  capitalCase,\n  sentenceCase,\n} from './change_case.js'\n\n/**\n * Condense multiple whitespaces from a string\n */\nfunction condenseWhitespace(value: string): string {\n  return value.trim().replace(/\\s{2,}/g, ' ')\n}\n\nconst string = {\n  excerpt,\n  truncate,\n  slug,\n  interpolate,\n  plural,\n  pluralize,\n  singular,\n  isPlural,\n  isSingular,\n  camelCase,\n  capitalCase,\n  dashCase,\n  dotCase,\n  noCase,\n  pascalCase,\n  sentenceCase,\n  snakeCase,\n  titleCase,\n  random,\n  sentence,\n  condenseWhitespace,\n  seconds,\n  milliseconds,\n  bytes,\n  ordinal,\n}\n\nexport default string\n"],"mappings":"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","names":["sentence","truncatise","sentence","camelCase","snakeCase","pascalCase","capitalCase","camelCase","capitalCase","pascalCase","snakeCase"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/chunk-NKGAOHNN.js":{"lineLengths":[16,20,26,35,60,5,48,3,55,35,40,5,70,65,30,55,5,38,3,29,95,78,3,58,35,40,5,70,68,30,58,5,38,3,2,26,0,29,43,28,30,38,4,5,67,68,5,19,39,22,5,41,34,67,5,24,3,2,0,8,9,22,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/base64.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string/milliseconds.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Helper class to base64 encode/decode values with option\n * for url encoding and decoding\n */\nclass Base64 {\n  /**\n   * Base64 encode Buffer or string\n   */\n  encode(arrayBuffer: ArrayBuffer | SharedArrayBuffer): string\n  encode(data: string, encoding?: BufferEncoding): string\n  encode(data: ArrayBuffer | SharedArrayBuffer | string, encoding?: BufferEncoding): string {\n    if (typeof data === 'string') {\n      return Buffer.from(data, encoding).toString('base64')\n    }\n    return Buffer.from(data).toString('base64')\n  }\n\n  /**\n   * Base64 decode a previously encoded string or Buffer.\n   */\n  decode(encode: string, encoding: BufferEncoding, strict: true): string\n  decode(encode: string, encoding: undefined, strict: true): string\n  decode(encode: string, encoding?: BufferEncoding, strict?: false): string | null\n  decode(encode: Buffer, encoding?: BufferEncoding): string\n  decode(\n    encoded: string | Buffer,\n    encoding: BufferEncoding = 'utf-8',\n    strict: boolean = false\n  ): string | null {\n    if (Buffer.isBuffer(encoded)) {\n      return encoded.toString(encoding)\n    }\n\n    const decoded = Buffer.from(encoded, 'base64').toString(encoding)\n    const isInvalid = this.encode(decoded, encoding) !== encoded\n\n    if (strict && isInvalid) {\n      throw new Error('Cannot decode malformed value')\n    }\n\n    return isInvalid ? null : decoded\n  }\n\n  /**\n   * Base64 encode Buffer or string to be URL safe. (RFC 4648)\n   */\n  urlEncode(arrayBuffer: ArrayBuffer | SharedArrayBuffer): string\n  urlEncode(data: string, encoding?: BufferEncoding): string\n  urlEncode(data: ArrayBuffer | SharedArrayBuffer | string, encoding?: BufferEncoding): string {\n    const encoded = typeof data === 'string' ? this.encode(data, encoding) : this.encode(data)\n    return encoded.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '')\n  }\n\n  /**\n   * Base64 URL decode a previously encoded string or Buffer. (RFC 4648)\n   */\n  urlDecode(encode: string, encoding: BufferEncoding, strict: true): string\n  urlDecode(encode: string, encoding: undefined, strict: true): string\n  urlDecode(encode: string, encoding?: BufferEncoding, strict?: false): string | null\n  urlDecode(encode: Buffer, encoding?: BufferEncoding): string\n  urlDecode(\n    encoded: string | Buffer,\n    encoding: BufferEncoding = 'utf-8',\n    strict: boolean = false\n  ): string | null {\n    if (Buffer.isBuffer(encoded)) {\n      return encoded.toString(encoding)\n    }\n\n    const decoded = Buffer.from(encoded, 'base64').toString(encoding)\n    const isInvalid = this.urlEncode(decoded, encoding) !== encoded\n\n    if (strict && isInvalid) {\n      throw new Error('Cannot urlDecode malformed value')\n    }\n\n    return isInvalid ? null : decoded\n  }\n}\n\nexport const base64 = new Base64()\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { parse, format } from '@lukeed/ms'\n\nexport default {\n  format(milliseconds: number, long?: boolean): string {\n    return format(milliseconds, long)\n  },\n\n  /**\n   * Parse time expression string to milliseconds. The number value\n   * is returned as it is, considering it is already in milliseconds\n   */\n  parse(duration: string | number): number {\n    if (typeof duration === 'number') {\n      return duration\n    }\n\n    const milliseconds = parse(duration)\n    if (milliseconds === undefined) {\n      throw new Error(`Invalid duration expression \"${duration}\"`)\n    }\n\n    return milliseconds\n  },\n}\n"],"mappings":";AAaA,IAAM,SAAN,MAAa;AAAA,EAMX,OAAO,MAAgD,UAAmC;AACxF,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,OAAO,KAAK,MAAM,QAAQ,EAAE,SAAS,QAAQ;AAAA,IACtD;AACA,WAAO,OAAO,KAAK,IAAI,EAAE,SAAS,QAAQ;AAAA,EAC5C;AAAA,EASA,OACE,SACA,WAA2B,SAC3B,SAAkB,OACH;AACf,QAAI,OAAO,SAAS,OAAO,GAAG;AAC5B,aAAO,QAAQ,SAAS,QAAQ;AAAA,IAClC;AAEA,UAAM,UAAU,OAAO,KAAK,SAAS,QAAQ,EAAE,SAAS,QAAQ;AAChE,UAAM,YAAY,KAAK,OAAO,SAAS,QAAQ,MAAM;AAErD,QAAI,UAAU,WAAW;AACvB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AAEA,WAAO,YAAY,OAAO;AAAA,EAC5B;AAAA,EAOA,UAAU,MAAgD,UAAmC;AAC3F,UAAM,UAAU,OAAO,SAAS,WAAW,KAAK,OAAO,MAAM,QAAQ,IAAI,KAAK,OAAO,IAAI;AACzF,WAAO,QAAQ,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,EAAE;AAAA,EAC1E;AAAA,EASA,UACE,SACA,WAA2B,SAC3B,SAAkB,OACH;AACf,QAAI,OAAO,SAAS,OAAO,GAAG;AAC5B,aAAO,QAAQ,SAAS,QAAQ;AAAA,IAClC;AAEA,UAAM,UAAU,OAAO,KAAK,SAAS,QAAQ,EAAE,SAAS,QAAQ;AAChE,UAAM,YAAY,KAAK,UAAU,SAAS,QAAQ,MAAM;AAExD,QAAI,UAAU,WAAW;AACvB,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACpD;AAEA,WAAO,YAAY,OAAO;AAAA,EAC5B;AACF;AAEO,IAAM,SAAS,IAAI,OAAO;;;AChFjC,SAAS,OAAO,cAAc;AAE9B,IAAO,uBAAQ;AAAA,EACb,OAAO,cAAsB,MAAwB;AACnD,WAAO,OAAO,cAAc,IAAI;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,UAAmC;AACvC,QAAI,OAAO,aAAa,UAAU;AAChC,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,MAAM,QAAQ;AACnC,QAAI,iBAAiB,QAAW;AAC9B,YAAM,IAAI,MAAM,gCAAgC,QAAQ,GAAG;AAAA,IAC7D;AAEA,WAAO;AAAA,EACT;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/src/string_builder.js":{"lineLengths":[8,14,30,30,0,24,36,27,9,22,71,3,5,37,5,14,53,16,3,5,36,5,13,52,16,3,5,38,5,15,54,16,3,5,39,5,16,55,16,3,5,42,5,15,54,16,3,5,40,5,17,56,16,3,5,38,5,15,54,16,3,5,41,5,18,57,16,3,5,48,5,12,51,16,3,5,38,5,12,54,16,3,5,40,5,14,53,16,3,5,42,5,13,49,16,3,5,43,5,24,78,16,3,5,30,5,18,30,44,16,3,5,43,5,24,78,16,3,5,30,5,18,30,44,16,3,5,37,5,21,82,16,3,5,32,5,18,27,67,16,3,14,23,3,2,8,26,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/src/string_builder.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extname } from 'node:path'\nimport string from './string/main.js'\n\n/**\n * String builder to transform the string using the fluent API\n */\nexport default class StringBuilder {\n  #value: string\n\n  constructor(value: string | StringBuilder) {\n    this.#value = typeof value === 'string' ? value : value.toString()\n  }\n\n  /**\n   * Applies dash case transformation\n   */\n  dashCase(): this {\n    this.#value = string.dashCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies dot case transformation\n   */\n  dotCase(): this {\n    this.#value = string.dotCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies snake case transformation\n   */\n  snakeCase(): this {\n    this.#value = string.snakeCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies pascal case transformation\n   */\n  pascalCase(): this {\n    this.#value = string.pascalCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies camelcase case transformation\n   */\n  camelCase(): this {\n    this.#value = string.camelCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies capital case transformation\n   */\n  capitalCase(): this {\n    this.#value = string.capitalCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies title case transformation\n   */\n  titleCase(): this {\n    this.#value = string.titleCase(this.#value)\n    return this\n  }\n\n  /**\n   * Applies sentence case transformation\n   */\n  sentenceCase(): this {\n    this.#value = string.sentenceCase(this.#value)\n    return this\n  }\n\n  /**\n   * Removes all sorts of casing from the string\n   */\n  noCase(): this {\n    this.#value = string.noCase(this.#value)\n    return this\n  }\n\n  /**\n   * Converts value to its plural form\n   */\n  plural(): this {\n    this.#value = string.pluralize(this.#value)\n    return this\n  }\n\n  /**\n   * Converts value to its singular form\n   */\n  singular(): this {\n    this.#value = string.singular(this.#value)\n    return this\n  }\n\n  /**\n   * Converts value to a URL friendly slug\n   */\n  slugify(): this {\n    this.#value = string.slug(this.#value)\n    return this\n  }\n\n  /**\n   * Removes a given suffix from the string\n   */\n  removeSuffix(suffix: string): this {\n    this.#value = this.#value.replace(new RegExp(`[-_]?${suffix}$`, 'i'), '')\n    return this\n  }\n\n  /**\n   * Adds suffix to the string\n   */\n  suffix(suffix: string): this {\n    this.removeSuffix(suffix)\n    this.#value = `${this.#value}${suffix}`\n    return this\n  }\n\n  /**\n   * Removes a given prefix from the string\n   */\n  removePrefix(prefix: string): this {\n    this.#value = this.#value.replace(new RegExp(`^${prefix}[-_]?`, 'i'), '')\n    return this\n  }\n\n  /**\n   * Adds prefix to the string\n   */\n  prefix(prefix: string): this {\n    this.removePrefix(prefix)\n    this.#value = `${prefix}${this.#value}`\n    return this\n  }\n\n  /**\n   * Removes extension from the value\n   */\n  removeExtension(): this {\n    this.#value = this.#value.replace(new RegExp(`${extname(this.#value)}$`), '')\n    return this\n  }\n\n  /**\n   * Adds extension to the value\n   */\n  ext(extension: string): this {\n    this.removeExtension()\n    this.#value = `${this.#value}.${extension.replace(/^\\./, '')}`\n    return this\n  }\n\n  toString() {\n    return this.#value\n  }\n}\n"],"mappings":";;;;;;AASA,SAAS,eAAe;AAMxB,IAAqB,gBAArB,MAAmC;AAAA,EACjC;AAAA,EAEA,YAAY,OAA+B;AACzC,SAAK,SAAS,OAAO,UAAU,WAAW,QAAQ,MAAM,SAAS;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA,EAKA,WAAiB;AACf,SAAK,SAAS,aAAO,SAAS,KAAK,MAAM;AACzC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,SAAK,SAAS,aAAO,QAAQ,KAAK,MAAM;AACxC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,YAAkB;AAChB,SAAK,SAAS,aAAO,UAAU,KAAK,MAAM;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAmB;AACjB,SAAK,SAAS,aAAO,WAAW,KAAK,MAAM;AAC3C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,YAAkB;AAChB,SAAK,SAAS,aAAO,UAAU,KAAK,MAAM;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,cAAoB;AAClB,SAAK,SAAS,aAAO,YAAY,KAAK,MAAM;AAC5C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,YAAkB;AAChB,SAAK,SAAS,aAAO,UAAU,KAAK,MAAM;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,eAAqB;AACnB,SAAK,SAAS,aAAO,aAAa,KAAK,MAAM;AAC7C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAe;AACb,SAAK,SAAS,aAAO,OAAO,KAAK,MAAM;AACvC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAe;AACb,SAAK,SAAS,aAAO,UAAU,KAAK,MAAM;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,WAAiB;AACf,SAAK,SAAS,aAAO,SAAS,KAAK,MAAM;AACzC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,SAAK,SAAS,aAAO,KAAK,KAAK,MAAM;AACrC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,QAAsB;AACjC,SAAK,SAAS,KAAK,OAAO,QAAQ,IAAI,OAAO,QAAQ,MAAM,KAAK,GAAG,GAAG,EAAE;AACxE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,QAAsB;AAC3B,SAAK,aAAa,MAAM;AACxB,SAAK,SAAS,GAAG,KAAK,MAAM,GAAG,MAAM;AACrC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,QAAsB;AACjC,SAAK,SAAS,KAAK,OAAO,QAAQ,IAAI,OAAO,IAAI,MAAM,SAAS,GAAG,GAAG,EAAE;AACxE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,QAAsB;AAC3B,SAAK,aAAa,MAAM;AACxB,SAAK,SAAS,GAAG,MAAM,GAAG,KAAK,MAAM;AACrC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAwB;AACtB,SAAK,SAAS,KAAK,OAAO,QAAQ,IAAI,OAAO,GAAG,QAAQ,KAAK,MAAM,CAAC,GAAG,GAAG,EAAE;AAC5E,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,WAAyB;AAC3B,SAAK,gBAAgB;AACrB,SAAK,SAAS,GAAG,KAAK,MAAM,IAAI,UAAU,QAAQ,OAAO,EAAE,CAAC;AAC5D,WAAO;AAAA,EACT;AAAA,EAEA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/config/build/index.js":{"lineLengths":[16,44,20,10,28,26,3,5,60,5,9,24,3,5,49,4,10,33,8,5,12,41,3,5,63,34,4,59,20,4,10,33,8,5,26,55,3,5,62,38,5,24,40,35,45,5,25,3,5,60,4,10,45,8,5,19,41,3,2,0,16,46,26,11,24,28,3,5,51,5,10,39,29,7,3,2,8,9,14,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/config/src/config.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/config/src/loader.ts"],"sourcesContent":["/*\n * @adonisjs/config\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport lodash from '@poppinss/utils/lodash'\n\n/**\n * Config module eases the process of using configuration inside your AdonisJS\n * applications.\n *\n * The config files are stored inside a dedicated directory, which are loaded and cached\n * on application boot. Later you can access the values using the `dot` syntax.\n *\n * ## Access values\n *\n * 1. **Given the config file is stored as `config/app.ts` with following content**\n *\n * ```js\n * module.exports = {\n *  appKey: ''\n * }\n * ```\n *\n * 2. **You access the appKey as follows**\n *\n * ```js\n * const config = new Config(configTree)\n * config.get('app.appKey')\n * ```\n */\nexport class Config {\n  #config: Record<any, any>\n\n  constructor(config: Record<any, any> = {}) {\n    this.#config = config\n  }\n\n  /**\n   * Get a tree of config imported from the config directory\n   */\n  all() {\n    return this.#config\n  }\n\n  /**\n   * Check if config value exists for a given key\n   *\n   * ```ts\n   * config.has('database.mysql')\n   * ```\n   */\n  has(key: string): boolean {\n    return lodash.has(this.#config, key)\n  }\n\n  /**\n   * Read value from the config. Make use of the `dot notation`\n   * syntax to read nested values.\n   *\n   * The `defaultValue` is returned when the original value\n   * is `undefined`.\n   *\n   * ```ts\n   * config.get('database.mysql')\n   * ```\n   */\n  get<T>(key: string, defaultValue?: any): T {\n    return lodash.get(this.#config, key, defaultValue)\n  }\n\n  /**\n   * Define defaults for a config key. The defaults are merged\n   * with the value of the config key.\n   */\n  defaults(key: string, value: any): void {\n    const existingValue = this.get(key)\n    if (existingValue !== undefined) {\n      lodash.mergeWith(value, existingValue)\n    }\n\n    this.set(key, value)\n  }\n\n  /**\n   * Update value for a key. No changes are made on the disk\n   *\n   * ```ts\n   * config.set('database.host', '127.0.0.1')\n   * ```\n   */\n  set(key: string, value: any): void {\n    lodash.set(this.#config, key, value)\n  }\n}\n","/*\n * @adonisjs/config\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fsImportAll } from '@poppinss/utils'\n\n/**\n * The config loader imports all the script files from a given directory\n * and returns their exports as a tree of objects.\n *\n * Following file extensions are considered script files.\n *\n * - .js\n * - .ts (without .d.ts)\n * - .json\n * - .cjs\n * - .mjs\n */\nexport class ConfigLoader {\n  #appRoot: string | URL\n\n  constructor(appRoot: string | URL) {\n    this.#appRoot = appRoot\n  }\n\n  /**\n   * Load config files as a tree from a given path.\n   */\n  load() {\n    return fsImportAll(this.#appRoot, {\n      ignoreMissingRoot: true,\n    })\n  }\n}\n"],"mappings":";AASA,OAAO,YAAY;AA0BZ,IAAM,SAAN,MAAa;AAAA,EAClB;AAAA,EAEA,YAAY,SAA2B,CAAC,GAAG;AACzC,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM;AACJ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,KAAsB;AACxB,WAAO,OAAO,IAAI,KAAK,SAAS,GAAG;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,IAAO,KAAa,cAAuB;AACzC,WAAO,OAAO,IAAI,KAAK,SAAS,KAAK,YAAY;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS,KAAa,OAAkB;AACtC,UAAM,gBAAgB,KAAK,IAAI,GAAG;AAClC,QAAI,kBAAkB,QAAW;AAC/B,aAAO,UAAU,OAAO,aAAa;AAAA,IACvC;AAEA,SAAK,IAAI,KAAK,KAAK;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,KAAa,OAAkB;AACjC,WAAO,IAAI,KAAK,SAAS,KAAK,KAAK;AAAA,EACrC;AACF;;;ACzFA,SAAS,mBAAmB;AAcrB,IAAM,eAAN,MAAmB;AAAA,EACxB;AAAA,EAEA,YAAY,SAAuB;AACjC,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACL,WAAO,YAAY,KAAK,UAAU;AAAA,MAChC,mBAAmB;AAAA,IACrB,CAAC;AAAA,EACH;AACF;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/middleware/build/index.js":{"lineLengths":[16,37,44,32,19,22,13,5,23,26,27,3,22,14,1,52,20,5,38,5,14,5,48,5,20,5,55,5,12,5,29,5,40,5,40,5,16,27,34,3,5,69,41,4,71,19,5,17,62,61,22,34,5,64,3,5,40,5,36,62,61,22,60,5,109,3,5,68,5,30,38,16,3,5,69,66,38,5,30,38,16,3,5,67,46,5,17,24,83,29,51,5,30,3,2,0,20,24,42,19,20,5,69,23,5,9,28,3,5,58,13,5,16,41,3,5,49,33,5,16,25,79,5,34,16,3,5,33,5,19,25,78,5,44,3,5,26,5,11,25,77,5,29,3,5,48,40,13,5,16,25,77,5,38,24,7,3,5,59,5,12,25,13,5,26,44,3,5,51,5,12,18,45,3,2,8,23,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/middleware/src/runner.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/middleware/src/middleware.ts"],"sourcesContent":["/*\n * @poppinss/middleware\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\nimport type { ErrorHandler, Executor, FinalHandler } from './types.js'\n\nconst debug = debuglog('poppinss:middleware')\n\n/**\n * Run a function only once. Tightly coupled with the Runner class\n */\nfunction once(scope: Runner<any>, callback: (scope: Runner<any>) => Promise<void> | void) {\n  function next(): Promise<void> | void {\n    if (next.called) {\n      return\n    }\n\n    next.called = true\n    debug('next invoked')\n    return callback(scope)\n  }\n  next.called = false\n\n  return next\n}\n\n/**\n * Default final handler resolves the middleware chain right away\n */\nconst DEFAULT_FINAL_HANDLER = () => Promise.resolve()\n\n/**\n * Runnable to execute an array of functions in sequence. The queue is\n * advanced only when the current function calls `next`.\n *\n * ```js\n * const runner = new Runnable([async function fn1 (params, next) {\n * }])\n * ```\n */\nexport class Runner<MiddlewareFn extends any> {\n  /**\n   * An array of middleware to execute\n   */\n  #middleware: MiddlewareFn[]\n\n  /**\n   * The active index for the middleware handler\n   */\n  #currentIndex = 0\n\n  /**\n   * Executor is responsible for executing a middleware\n   */\n  #executor!: Executor<MiddlewareFn>\n\n  /**\n   * Final handler to execute\n   */\n  #finalHandler: FinalHandler = DEFAULT_FINAL_HANDLER\n\n  /**\n   * Error handler to self handle errors\n   */\n  #errorHandler?: ErrorHandler\n\n  constructor(middleware: MiddlewareFn[]) {\n    this.#middleware = middleware\n  }\n\n  /**\n   * Invoke one middleware at a time. Middleware fns will be executed\n   * recursively until `next` is invoked.\n   *\n   * If one method doesn't call `next`, then the chain will be finished\n   * automatically.\n   */\n  #invoke(self: Runner<MiddlewareFn>): Promise<void> | void {\n    const middleware = self.#middleware[self.#currentIndex++]\n    debug('running middleware at index', self.#currentIndex)\n\n    /**\n     * Empty stack\n     */\n    if (!middleware) {\n      return self.#finalHandler()\n    }\n\n    return self.#executor(middleware, once(self, self.#invoke))\n  }\n\n  /**\n   * Same as invoke, but captures errors\n   */\n  #invokeWithErrorManagement(self: Runner<MiddlewareFn>): Promise<void> | void {\n    const middleware = self.#middleware[self.#currentIndex++]\n    debug('running middleware at index', self.#currentIndex)\n\n    /**\n     * Empty stack\n     */\n    if (!middleware) {\n      return self.#finalHandler().catch(self.#errorHandler)\n    }\n\n    return self\n      .#executor(middleware, once(self, self.#invokeWithErrorManagement))\n      .catch(self.#errorHandler)\n  }\n\n  /**\n   * Final handler to be executed, when the chain ends successfully.\n   */\n  finalHandler(finalHandler: FinalHandler): this {\n    this.#finalHandler = finalHandler\n    return this\n  }\n\n  /**\n   * Specify a custom error handler to use. Defining an error handler\n   * turns will make run method not throw an exception and instead\n   * run the upstream middleware logic\n   */\n  errorHandler(errorHandler: ErrorHandler): this {\n    this.#errorHandler = errorHandler\n    return this\n  }\n\n  /**\n   * Start the middleware queue and pass params to it. The `params`\n   * array will be passed as spread arguments.\n   */\n  async run(cb: Executor<MiddlewareFn>): Promise<void> {\n    this.#executor = cb\n    debug('starting middleware chain with %d middleware', this.#middleware.length)\n\n    if (this.#errorHandler) {\n      return this.#invokeWithErrorManagement(this)\n    }\n\n    return this.#invoke(this)\n  }\n}\n","/*\n * @poppinss/middleware\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Runner } from './runner.js'\n\n/**\n * The middleware class implements the chain of responsibility design pattern\n * and allows executing handlers in series.\n */\nexport class Middleware<MiddlewareFn extends any> {\n  #middleware: Set<MiddlewareFn> = new Set()\n  #middlewareArray?: MiddlewareFn[]\n  #isFrozen: boolean = false\n\n  /**\n   * Get access to all the registered middleware. The return value is\n   * a set of handlers.\n   */\n  all() {\n    return this.#middleware\n  }\n\n  /**\n   * Find if a handler has been registered as a middleware\n   * already.\n   */\n  has(handler: MiddlewareFn): boolean {\n    return this.#middleware.has(handler)\n  }\n\n  /**\n   * Add a middleware. Adding the same middleware\n   * twice will result in a noop.\n   */\n  add(handler: MiddlewareFn): this {\n    if (this.#isFrozen) {\n      throw new Error('Middleware stack is frozen. Cannot add new middleware')\n    }\n\n    this.#middleware.add(handler)\n    return this\n  }\n\n  /**\n   * Remove a specific middleware\n   */\n  remove(handler: MiddlewareFn): boolean {\n    if (this.#isFrozen) {\n      throw new Error('Middleware stack is frozen. Cannot remove middleware')\n    }\n\n    return this.#middleware.delete(handler)\n  }\n\n  /**\n   * Remove all middleware\n   */\n  clear(): void {\n    if (this.#isFrozen) {\n      throw new Error('Middleware stack is frozen. Cannot clear middleware')\n    }\n\n    this.#middleware.clear()\n  }\n\n  /**\n   * Merge middleware from a existing middleware\n   * instance. The merged middleware are\n   * appended\n   */\n  merge(hooks: Middleware<MiddlewareFn>) {\n    if (this.#isFrozen) {\n      throw new Error('Middleware stack is frozen. Cannot merge middleware')\n    }\n\n    hooks.all().forEach((handler) => {\n      this.add(handler)\n    })\n  }\n\n  /**\n   * Freezes the middleware stack for further modifications\n   */\n  freeze() {\n    if (this.#isFrozen) {\n      return\n    }\n\n    this.#isFrozen = true\n    this.#middlewareArray = [...this.all()]\n  }\n\n  /**\n   * Returns an instance of the runner to run hooks\n   */\n  runner(): Runner<MiddlewareFn> {\n    this.freeze()\n    return new Runner(this.#middlewareArray!)\n  }\n}\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/build/chunk-IGHHTAHI.js":{"lineLengths":[8,8,29,0,19,48,90,0,15,37,46,0,17,51,0,26,22,10,29,3,10,9,46,25,27,5,2,0,17,25,78,1,27,43,27,1,33,28,31,23,20,4,23,20,4,17,35,29,35,32,55,15,3,45,34,29,35,32,54,15,3,43,28,34,33,5,34,32,5,27,37,26,29,5,28,45,50,17,16,23,11,25,16,22,11,27,22,30,9,7,4,1,27,54,72,51,31,86,14,28,7,7,3,31,1,41,0,18,36,99,0,18,78,37,79,18,3,72,72,42,32,153,31,23,9,33,10,5,53,29,21,7,42,74,8,3,30,159,37,29,7,23,8,3,59,35,27,5,72,6,1,47,0,18,31,10,38,3,5,77,17,3,54,4,20,5,77,17,3,54,4,31,5,66,17,3,54,4,21,5,66,17,3,64,17,4,26,5,62,31,3,54,4,18,5,36,4,18,5,40,4,45,5,21,4,11,35,49,59,43,43,47,69,28,3,5,50,4,58,17,99,52,19,5,87,3,5,62,4,63,17,103,129,19,5,165,3,5,50,4,32,37,3,5,68,47,4,40,73,26,13,5,56,27,13,5,36,3,5,18,4,25,33,13,5,62,14,11,7,3,5,37,4,36,56,45,13,5,37,34,5,3,23,168,3,28,65,3,5,66,55,16,4,111,38,82,72,5,56,57,56,34,90,7,44,33,19,5,85,29,66,34,107,7,44,33,19,5,43,53,34,94,7,33,19,5,52,62,34,95,7,33,19,5,47,77,16,52,24,59,29,38,14,52,7,34,81,7,25,46,7,33,19,5,19,28,39,73,28,119,14,102,7,58,79,7,49,34,82,7,44,33,19,5,88,3,51,46,100,5,70,3,5,72,71,17,3,9,70,7,4,103,46,85,5,32,70,5,26,38,62,26,100,12,83,5,53,172,5,42,3,29,90,132,5,60,44,3,2,0,37,72,36,10,43,3,5,48,11,4,10,5,35,4,11,5,53,12,4,13,34,26,32,3,5,54,13,4,20,28,16,3,5,55,4,21,25,133,5,77,3,2,0,19,23,10,30,3,5,45,4,39,5,64,35,3,82,44,4,50,5,84,79,74,23,4,37,5,64,38,4,40,5,78,4,45,5,21,4,37,5,21,4,11,24,34,3,5,37,4,23,36,16,3,5,69,3,9,47,42,7,3,72,14,3,9,54,40,7,4,20,34,31,41,25,25,29,50,22,3,23,105,3,28,65,3,45,75,3,5,72,71,17,3,9,72,7,4,51,81,3,5,65,62,47,4,23,65,107,5,36,3,27,90,133,5,63,33,15,24,7,3,29,90,133,5,59,44,3,32,90,133,5,63,33,34,23,7,3,5,70,63,23,4,27,28,124,5,51,39,3,5,40,4,20,51,32,3,5,49,15,4,24,20,42,26,13,5,35,28,5,3,32,52,36,58,5,47,28,3,5,61,4,16,52,3,5,61,65,35,3,16,28,27,37,4,48,28,103,5,27,102,5,73,48,70,5,64,33,14,7,3,2,0,27,94,41,63,49,33,17,20,1,53,67,55,21,23,5,40,16,20,4,1,67,59,66,16,11,3,67,30,106,3,31,69,3,1,67,62,41,74,16,11,3,64,30,124,3,31,69,3,1,57,19,56,49,23,55,13,5,61,3,45,25,1,25,0,23,39,10,7,79,76,45,5,84,5,11,55,29,5,49,19,9,5,73,68,38,5,11,55,20,5,49,49,29,9,6,27,22,40,76,10,7,48,72,8,6,7,81,79,49,5,87,5,11,60,33,5,49,31,9,5,73,71,38,5,11,60,24,5,49,49,41,9,6,31,22,16,43,33,78,11,10,7,14,41,41,74,9,8,5,4,1,37,0,25,48,43,10,7,79,75,75,20,5,84,5,11,86,29,5,49,19,9,5,73,68,38,5,11,86,20,5,49,49,29,9,6,27,31,22,40,55,58,11,83,10,7,48,53,56,9,79,8,6,7,87,79,79,20,5,87,5,11,91,33,5,49,31,9,5,73,71,38,5,11,91,24,5,49,49,41,9,6,31,31,22,16,30,33,57,60,13,85,11,10,7,14,28,41,55,58,11,81,9,8,5,4,1,41,0,27,50,10,7,66,59,5,11,63,52,9,5,17,11,69,51,9,6,13,42,31,16,21,18,10,7,33,14,24,14,8,6,7,74,75,75,20,5,84,5,11,72,29,5,49,19,9,5,73,68,38,5,11,72,20,5,49,49,29,9,6,27,31,48,22,40,55,72,11,83,10,7,48,53,70,9,79,8,6,7,82,79,79,20,5,87,5,11,77,33,5,49,31,9,5,73,71,38,5,11,77,24,5,49,49,41,9,6,31,31,48,22,16,33,57,74,13,85,11,10,7,14,41,55,72,11,81,9,8,5,4,1,45,0,8,17,20,12,9,15,17,18,2,42],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/container.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/debug.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/helpers.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/deferred_promise.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/resolver.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/provider.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/contextual_bindings_builder.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/decorators/inject.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/module_caller.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/module_importer.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/src/module_expression.ts"],"sourcesContent":["/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { inspect } from 'node:util'\nimport { InvalidArgumentsException } from '@poppinss/utils'\n\nimport type {\n  Make,\n  Hooks,\n  Swaps,\n  Bindings,\n  BindingKey,\n  Constructor,\n  ErrorCreator,\n  HookCallback,\n  BindingValues,\n  BindingResolver,\n  ExtractFunctions,\n  ContainerOptions,\n  AbstractConstructor,\n  ContextualBindings,\n} from './types.js'\n\nimport debug from './debug.js'\nimport { enqueue, isClass } from './helpers.js'\nimport { ContainerResolver } from './resolver.js'\nimport { ContextBindingsBuilder } from './contextual_bindings_builder.js'\n\n/**\n * The container class exposes the API to register bindings, values\n * and resolve them.\n *\n * Known bindings types can be defined at the time of the constructing\n * the container.\n *\n * ```ts\n * new Container<{ 'route': Route, encryption: Encryption }>()\n * ```\n *\n * You can resolve bindings and construct classes as follows\n *\n * ```ts\n * await container.make(BINDING_NAME)\n * await container.make(CLASS_CONSTRUCTOR)\n * ```\n */\nexport class Container<KnownBindings extends Record<any, any>> {\n  /**\n   * A set of defined aliases for the bindings\n   */\n  #aliases: Map<Partial<keyof KnownBindings>, keyof KnownBindings | AbstractConstructor<any>> =\n    new Map()\n\n  /**\n   * Contextual bindings are same as binding, but instead defined\n   * for a parent class constructor.\n   *\n   * The contextual bindings can only be registered for class constructors, because\n   * that is what gets injected to the class.\n   */\n  #contextualBindings: Map<Constructor<any>, ContextualBindings> = new Map()\n\n  /**\n   * A collection of bindings with registered swapped implementations. Swaps can only\n   * be define for a class, because the goal is swap the dependency tree defined\n   * using the Inject decorator and inject decorator does not take anything\n   * other than a class.\n   */\n  #swaps: Swaps = new Map()\n\n  /**\n   * Registered bindings. Singleton and normal bindings, both are\n   * registered inside the bindings map\n   */\n  #bindings: Bindings = new Map()\n\n  /**\n   * Registered bindings as values. The values are preferred over the bindings.\n   */\n  #bindingValues: BindingValues = new Map()\n\n  /**\n   * Registered hooks.\n   */\n  #hooks: Hooks = new Map()\n\n  /**\n   * Container options\n   */\n  #options: ContainerOptions\n\n  constructor(options?: ContainerOptions) {\n    this.#options = options || {}\n  }\n\n  /**\n   * Define an emitter instance to use\n   */\n  useEmitter(emitter: Exclude<ContainerOptions['emitter'], undefined>) {\n    this.#options.emitter = emitter\n    return this\n  }\n\n  /**\n   * Create a container resolver to resolve bindings, or make classes.\n   *\n   * ```ts\n   * const resolver = container.createResolver()\n   * await resolver.make(CLASS_CONSTRUCTOR)\n   * ```\n   *\n   * Bind values with the resolver. Resolver values are isolated from the\n   * container.\n   *\n   * ```ts\n   * resolver.bindValue(HttpContext, new HttpContext())\n   * await resolver.make(UsersController)\n   * ```\n   */\n  createResolver() {\n    return new ContainerResolver<KnownBindings>(\n      {\n        bindings: this.#bindings,\n        bindingValues: this.#bindingValues,\n        swaps: this.#swaps,\n        hooks: this.#hooks,\n        aliases: this.#aliases,\n        contextualBindings: this.#contextualBindings,\n      },\n      this.#options\n    )\n  }\n\n  /**\n   * Find if the container has a binding registered using the\n   * \"bind\", the \"singleton\", or the \"bindValue\" methods.\n   */\n  hasBinding<Binding extends keyof KnownBindings>(binding: Binding): boolean\n  hasBinding(binding: BindingKey): boolean\n  hasBinding(binding: BindingKey): boolean {\n    return (\n      this.#aliases.has(binding) || this.#bindingValues.has(binding) || this.#bindings.has(binding)\n    )\n  }\n\n  /**\n   * Find if the container has all the bindings registered using the\n   * \"bind\", the \"singleton\", or the \"bindValue\" methods.\n   */\n  hasAllBindings<Binding extends keyof KnownBindings>(bindings: Binding[]): boolean\n  hasAllBindings(binding: BindingKey[]): boolean\n  hasAllBindings(bindings: BindingKey[]): boolean {\n    return bindings.every((binding) => this.hasBinding(binding))\n  }\n\n  /**\n   * Resolves the binding or constructor a class instance as follows.\n   *\n   * - Resolve the binding from the values (if registered)\n   * - Resolve the binding from the bindings (if registered)\n   * - If binding is a class, then create a instance of it. The constructor\n   *   dependencies are further resolved as well.\n   * - All other values are returned as it is.\n   *\n   * ```ts\n   * await container.make('route')\n   * await container.make(Database)\n   * ```\n   */\n  make<Binding extends keyof KnownBindings>(\n    binding: Binding,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<Binding extends string | symbol ? KnownBindings[Binding] : Make<Binding>>\n  make<Binding>(\n    binding: Binding,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<Make<Binding>>\n  make<Binding>(\n    binding: Binding,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<Make<Binding>> {\n    return this.createResolver().make<Binding>(binding, runtimeValues, createError)\n  }\n\n  /**\n   * Call a method on an object by injecting its dependencies. The method\n   * dependencies are resolved in the same manner as a class constructor\n   * dependencies.\n   *\n   * ```ts\n   * await container.call(await container.make(UsersController), 'index')\n   * ```\n   */\n  call<Value extends Record<any, any>, Method extends ExtractFunctions<Value>>(\n    value: Value,\n    method: Method,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<ReturnType<Value[Method]>> {\n    return this.createResolver().call(value, method, runtimeValues, createError)\n  }\n\n  /**\n   * Register an alias for a binding. The value can be a reference\n   * to an existing binding or to a class constructor that will\n   * instantiate to the same value as the alias.\n   */\n  alias<Alias extends keyof KnownBindings>(\n    /**\n     * An alias must always be defined as a string or a symbol. Classes cannot be\n     * aliases\n     */\n    alias: Alias extends string | symbol ? Alias : never,\n\n    /**\n     * The value should either be the constructor point to the alias value\n     * or reference to binding that has the same value as the alias\n     */\n    value:\n      | AbstractConstructor<KnownBindings[Alias]>\n      | Exclude<\n          {\n            [K in keyof KnownBindings]: KnownBindings[K] extends KnownBindings[Alias] ? K : never\n          }[keyof KnownBindings],\n          Alias\n        >\n  ): void {\n    if (typeof alias !== 'string' && typeof alias !== 'symbol') {\n      throw new InvalidArgumentsException(\n        'The container alias key must be of type \"string\" or \"symbol\"'\n      )\n    }\n\n    this.#aliases.set(alias, value)\n  }\n\n  /**\n   * Register a binding inside the container. The method receives a\n   * key-value pair.\n   *\n   * - Key can be a string, symbol or a constructor.\n   * - The value is always a factory function to construct the dependency.\n   *\n   * ```ts\n   * container.bind('route', () => new Route())\n   * await container.make('route')\n   *\n   * container.bind(Route, () => new Route())\n   * await container.make(Route)\n   *\n   * const routeSymbol = Symbol('route')\n   * container.bind(routeSymbol, () => new Route())\n   * await container.make(routeSymbol)\n   * ```\n   */\n  bind<Binding extends keyof KnownBindings>(\n    /**\n     * Need to narrow down the \"Binding\" for the case where \"KnownBindings\" are <any, any>\n     */\n    binding: Binding extends string | symbol ? Binding : never,\n    resolver: BindingResolver<KnownBindings, KnownBindings[Binding]>\n  ): void\n  bind<Binding extends AbstractConstructor<any>>(\n    binding: Binding,\n    resolver: BindingResolver<KnownBindings, InstanceType<Binding>>\n  ): void\n  bind<Binding>(\n    binding: Binding,\n    resolver: BindingResolver<\n      KnownBindings,\n      Binding extends AbstractConstructor<infer A>\n        ? A\n        : Binding extends keyof KnownBindings\n          ? KnownBindings[Binding]\n          : never\n    >\n  ): void {\n    if (typeof binding !== 'string' && typeof binding !== 'symbol' && !isClass(binding)) {\n      throw new InvalidArgumentsException(\n        'The container binding key must be of type \"string\", \"symbol\", or a \"class constructor\"'\n      )\n    }\n\n    debug('adding binding to container \"%O\"', binding)\n    this.#bindings.set(binding, { resolver, isSingleton: false })\n  }\n\n  /**\n   * Register a binding as a value\n   *\n   * ```ts\n   * container.bindValue(Route, new Route())\n   * ```\n   */\n  bindValue<Binding extends keyof KnownBindings>(\n    /**\n     * Need to narrow down the \"Binding\" for the case where \"KnownBindings\" are <any, any>\n     */\n    binding: Binding extends string | symbol ? Binding : never,\n    value: KnownBindings[Binding]\n  ): void\n  bindValue<Binding extends AbstractConstructor<any>>(\n    binding: Binding,\n    value: InstanceType<Binding>\n  ): void\n  bindValue<Binding>(\n    binding: Binding,\n    value: Binding extends AbstractConstructor<infer A>\n      ? A\n      : Binding extends keyof KnownBindings\n        ? KnownBindings[Binding]\n        : never\n  ): void {\n    if (typeof binding !== 'string' && typeof binding !== 'symbol' && !isClass(binding)) {\n      throw new InvalidArgumentsException(\n        'The container binding key must be of type \"string\", \"symbol\", or a \"class constructor\"'\n      )\n    }\n\n    debug('adding value to container %O', binding)\n    this.#bindingValues.set(binding, value)\n  }\n\n  /**\n   * Register a binding as a single. The singleton method is same\n   * as the bind method, but the factory function is invoked\n   * only once.\n   *\n   * ```ts\n   * container.singleton('route', () => new Route())\n   * await container.make('route')\n   *\n   * container.singleton(Route, () => new Route())\n   * await container.make(Route)\n   *\n   * const routeSymbol = Symbol('route')\n   * container.singleton(routeSymbol, () => new Route())\n   * await container.make(routeSymbol)\n   * ```\n   */\n  singleton<Binding extends keyof KnownBindings>(\n    /**\n     * Need to narrow down the \"Binding\" for the case where \"KnownBindings\" are <any, any>\n     */\n    binding: Binding extends string | symbol ? Binding : never,\n    resolver: BindingResolver<KnownBindings, KnownBindings[Binding]>\n  ): void\n  singleton<Binding extends AbstractConstructor<any>>(\n    binding: Binding,\n    resolver: BindingResolver<KnownBindings, InstanceType<Binding>>\n  ): void\n  singleton<Binding>(\n    binding: Binding,\n    resolver: BindingResolver<\n      KnownBindings,\n      Binding extends AbstractConstructor<infer A>\n        ? A\n        : Binding extends keyof KnownBindings\n          ? KnownBindings[Binding]\n          : never\n    >\n  ): void {\n    if (typeof binding !== 'string' && typeof binding !== 'symbol' && !isClass(binding)) {\n      throw new InvalidArgumentsException(\n        'The container binding key must be of type \"string\", \"symbol\", or a \"class constructor\"'\n      )\n    }\n\n    debug('adding singleton to container %O', binding)\n    this.#bindings.set(binding, { resolver: enqueue(resolver), isSingleton: true })\n  }\n\n  /**\n   * Define a fake implementation for a binding or a class constructor.\n   * Fakes have the highest priority when resolving dependencies\n   * from the container.\n   */\n  swap<Binding extends AbstractConstructor<any>>(\n    binding: Binding,\n    resolver: BindingResolver<KnownBindings, InstanceType<Binding>>\n  ): void {\n    if (!isClass(binding)) {\n      throw new InvalidArgumentsException(\n        `Cannot call swap on value \"${inspect(binding)}\". Only classes can be swapped`\n      )\n    }\n\n    debug('defining swap for %O', binding)\n    this.#swaps.set(binding, resolver)\n  }\n\n  /**\n   * Restore binding by removing its swap\n   */\n  restore(binding: AbstractConstructor<any>) {\n    debug('removing swap for %s', binding)\n    this.#swaps.delete(binding)\n  }\n\n  /**\n   * Restore mentioned or all bindings by removing\n   * their swaps\n   */\n  restoreAll(bindings?: AbstractConstructor<any>[]) {\n    if (!bindings) {\n      debug('removing all swaps')\n      this.#swaps.clear()\n      return\n    }\n\n    for (let binding of bindings) {\n      this.restore(binding)\n    }\n  }\n\n  /**\n   * Define hooks to be executed after a binding has been resolved\n   * from the container.\n   *\n   * The hooks are executed for\n   *\n   * - Bindings\n   * - Only once for singletons\n   * - And class constructor\n   *\n   * In other words, the hooks are not executed for direct values registered\n   * with the container\n   */\n  resolving<Binding extends keyof KnownBindings>(\n    binding: Binding extends string | symbol ? Binding : never,\n    callback: HookCallback<KnownBindings, KnownBindings[Binding]>\n  ): void\n  resolving<Binding extends AbstractConstructor<any>>(\n    binding: Binding,\n    callback: HookCallback<KnownBindings, InstanceType<Binding>>\n  ): void\n  resolving<Binding extends BindingKey>(\n    binding: Binding,\n    callback: Binding extends AbstractConstructor<infer A>\n      ? HookCallback<KnownBindings, A>\n      : Binding extends keyof KnownBindings\n        ? HookCallback<KnownBindings, KnownBindings[Binding]>\n        : never\n  ): void {\n    binding = (this.#aliases.get(binding) as Binding) || binding\n\n    if (!this.#hooks.has(binding)) {\n      this.#hooks.set(binding, new Set())\n    }\n\n    const callbacks = this.#hooks.get(binding)!\n    callbacks.add(callback)\n  }\n\n  /**\n   * Create a contextual builder to define contextual bindings\n   */\n  when(parent: Constructor<any>): ContextBindingsBuilder<KnownBindings, AbstractConstructor<any>> {\n    return new ContextBindingsBuilder(parent, this)\n  }\n\n  /**\n   * Add a contextual binding for a given class constructor. A\n   * contextual takes a parent, parent's dependency and a callback\n   * to self resolve the dependency.\n   *\n   * For example:\n   * - When \"UsersController\"\n   * - Asks for \"Hash class\"\n   * - Provide \"Argon2\" implementation\n   */\n  contextualBinding<Binding extends AbstractConstructor<any>>(\n    parent: Constructor<any>,\n    binding: Binding,\n    resolver: BindingResolver<KnownBindings, Make<Binding>>\n  ): void {\n    if (!isClass(binding)) {\n      throw new InvalidArgumentsException(\n        `The binding value for contextual binding should be class`\n      )\n    }\n    if (!isClass(parent)) {\n      throw new InvalidArgumentsException(`The parent value for contextual binding should be class`)\n    }\n\n    debug('adding contextual binding %O to %O', binding, parent)\n\n    /**\n     * Create map for the parent if doesn't already exists\n     */\n    if (!this.#contextualBindings.has(parent)) {\n      this.#contextualBindings.set(parent, new Map())\n    }\n\n    const parentBindings = this.#contextualBindings.get(parent)!\n    parentBindings.set(binding, { resolver })\n  }\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\nexport default debuglog('adonisjs:fold')\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from '@poppinss/utils'\n\nimport type { Constructor } from './types.js'\nimport { Deferred } from './deferred_promise.js'\n\n/**\n * Type guard and check if value is a class constructor. Plain old\n * functions are not considered as class constructor.\n */\nexport function isClass<T>(value: unknown): value is Constructor<T> {\n  return typeof value === 'function' && value.toString().startsWith('class ')\n}\n\n/**\n * Runs a function inside an async function. This ensure that syncrohonous\n * errors are handled in the same way rejected promise is handled\n */\nasync function runAsAsync(callback: Function, args: any[]) {\n  return callback(...args)\n}\n\n/**\n * Converts a function to a self contained queue, where each call to\n * the function is queued until the first call resolves or rejects.\n *\n * After the first call, the value is cached and used forever.\n */\nexport function enqueue(callback: Function) {\n  /**\n   * A flag to know if we are in the middleware of computing the\n   * value.\n   */\n  let isComputingValue = false\n\n  /**\n   * The computed after the callback resolves\n   */\n  let computedValue: { value?: any; completed: boolean } = { completed: false }\n\n  /**\n   * The computed error the callback resolves\n   */\n  let computedError: { error?: any; completed: boolean } = { completed: false }\n\n  /**\n   * The internal queue of deferred promises.\n   */\n  let queue: Deferred<any>[] = []\n\n  /**\n   * Resolve pending queue promises\n   */\n  function resolvePromises(value: any) {\n    isComputingValue = false\n    computedValue.completed = true\n    computedValue.value = value\n    queue.forEach((promise) => promise.resolve(value))\n    queue = []\n  }\n\n  /**\n   * Reject pending queue promises\n   */\n  function rejectPromises(error: any) {\n    isComputingValue = false\n    computedError.completed = true\n    computedError.error = error\n    queue.forEach((promise) => promise.reject(error))\n    queue = []\n  }\n\n  return function (...args: any): Promise<{ value: any; cached: boolean }> {\n    /**\n     * Already has value\n     */\n    if (computedValue.completed) {\n      return computedValue.value\n    }\n\n    /**\n     * Already ended with error\n     */\n    if (computedError.completed) {\n      throw computedError.error\n    }\n\n    /**\n     * In process, returning a deferred promise\n     */\n    if (isComputingValue) {\n      const promise = new Deferred<{ value: any; cached: true }>()\n      queue.push(promise)\n      return promise.promise\n    }\n\n    isComputingValue = true\n\n    /**\n     * We could have removed this promise in favor of async/await. But then\n     * we will have to call \"resolvePromises\" before returning the value.\n     * However, we want the following promise to resolve first and\n     * then resolve all other deferred promises.\n     */\n    return new Promise((resolve, reject) => {\n      runAsAsync(callback, args)\n        .then((value) => {\n          resolve({ value, cached: false })\n          resolvePromises({ value, cached: true })\n        })\n        .catch((error) => {\n          reject(error)\n          rejectPromises(error)\n        })\n    })\n  }\n}\n\n/**\n * Dynamically import a module and ensure it has a default export\n */\nexport async function resolveDefault(importPath: string, parentURL: URL | string) {\n  const resolvedPath = await import.meta.resolve!(importPath, parentURL)\n  const moduleExports = await import(resolvedPath)\n\n  /**\n   * Make sure a default export exists\n   */\n  if (!moduleExports.default) {\n    throw new RuntimeException(`Missing export default from \"${importPath}\" module`, {\n      cause: {\n        source: resolvedPath,\n      },\n    })\n  }\n\n  return moduleExports.default\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Exports the `resolve` and the reject methods as part of the\n * class public API.\n *\n * It allows resolving and rejecting promises outside of the\n * class constructor.\n */\nexport class Deferred<T> {\n  resolve!: (value: T | PromiseLike<T>) => void\n  reject!: (reason?: any) => void\n  promise: Promise<T> = new Promise<T>((resolve, reject) => {\n    this.reject = reject\n    this.resolve = resolve\n  })\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { inspect } from 'node:util'\nimport { InvalidArgumentsException, RuntimeException } from '@poppinss/utils'\n\nimport type {\n  Make,\n  Hooks,\n  Swaps,\n  Bindings,\n  BindingKey,\n  Constructor,\n  ErrorCreator,\n  BindingValues,\n  BindingResolver,\n  ExtractFunctions,\n  ContainerOptions,\n  ContextualBindings,\n  AbstractConstructor,\n  InspectableConstructor,\n} from './types.js'\nimport debug from './debug.js'\nimport { isClass } from './helpers.js'\nimport { containerProvider } from './provider.js'\n\n/**\n * Container resolver exposes the APIs to resolve bindings. You can think\n * of resolver as an isolated container instance, with only the APIs\n * to resolve bindings.\n *\n * ```ts\n * const container = new Container()\n * const resolver = container.createResolver()\n *\n * await resolver.make(BINDING_NAME)\n * await resolver.make(CLASS_CONSTRUCTOR)\n * ```\n */\nexport class ContainerResolver<KnownBindings extends Record<any, any>> {\n  /**\n   * Reference to the container aliases. They are shared between the container\n   * and resolver.\n   *\n   * We do not mutate this property within the resolver\n   */\n  #containerAliases: Map<\n    Partial<keyof KnownBindings>,\n    keyof KnownBindings | AbstractConstructor<any>\n  >\n\n  /**\n   * Pre-registered contextual bindings. They are shared between the container\n   * and resolver.\n   *\n   * We do not mutate this property within the resolver\n   */\n  #containerContextualBindings: Map<Constructor<any>, ContextualBindings>\n\n  /**\n   * Pre-registered bindings. They are shared between the container\n   * and resolver.\n   *\n   * We do not mutate this property within the resolver\n   */\n  #containerBindings: Bindings\n\n  /**\n   * Pre-registered bindings. They are shared between the container\n   * and resolver.\n   *\n   * We mutate this property within the resolver to set singleton\n   * cached values\n   */\n  #containerBindingValues: BindingValues\n\n  /**\n   * Pre-registered swaps for bindings. They are shared between\n   * the container and resolver.\n   *\n   * We do not mutate this property within the resolver\n   */\n  #containerSwaps: Swaps\n\n  /**\n   * Reference to the container hooks\n   */\n  #containerHooks: Hooks\n\n  /**\n   * Binding values local to the resolver\n   */\n  #bindingValues: BindingValues = new Map()\n\n  /**\n   * Container options\n   */\n  #options: ContainerOptions\n\n  constructor(\n    container: {\n      bindings: Bindings\n      bindingValues: BindingValues\n      swaps: Swaps\n      hooks: Hooks\n      aliases: Map<Partial<keyof KnownBindings>, keyof KnownBindings | AbstractConstructor<any>>\n      contextualBindings: Map<Constructor<any>, ContextualBindings>\n    },\n    options: ContainerOptions\n  ) {\n    this.#containerBindings = container.bindings\n    this.#containerBindingValues = container.bindingValues\n    this.#containerSwaps = container.swaps\n    this.#containerHooks = container.hooks\n    this.#containerAliases = container.aliases\n    this.#containerContextualBindings = container.contextualBindings\n    this.#options = options\n  }\n\n  /**\n   * Constructs exception for invalid binding value\n   */\n  #invalidBindingException(\n    parent: any,\n    binding: any,\n    createError: ErrorCreator\n  ): InvalidArgumentsException {\n    if (parent) {\n      const error = createError(`Cannot inject \"${inspect(binding)}\" in \"[class ${parent.name}]\"`)\n      error.help = 'The value is not a valid class'\n      return error\n    }\n\n    return createError(`Cannot construct value \"${inspect(binding)}\" using container`)\n  }\n\n  /**\n   * Constructs exception for binding with missing dependencies\n   */\n  #missingDependenciesException(parent: any, binding: any, createError: ErrorCreator) {\n    if (parent) {\n      const error = createError(\n        `Cannot inject \"[class ${binding.name}]\" in \"[class ${parent.name}]\"`\n      )\n      error.help = `Container is not able to resolve \"${parent.name}\" class dependencies. Did you mean to use @inject decorator`\n      return error\n    }\n\n    return createError(\n      `Cannot construct \"[class ${binding.name}]\" class. Container is not able to resolve its dependencies. Did you mean to use @inject decorator`\n    )\n  }\n\n  /**\n   * Returns the provider for the class constructor\n   */\n  #getBindingProvider(binding: InspectableConstructor) {\n    return binding.containerProvider\n  }\n\n  /**\n   * Returns the binding resolver for a parent and a binding. Returns\n   * undefined when no contextual binding exists\n   */\n  #getBindingResolver(\n    parent: any,\n    binding: AbstractConstructor<any>\n  ): BindingResolver<KnownBindings, any> | undefined {\n    const parentBindings = this.#containerContextualBindings.get(parent)\n    if (!parentBindings) {\n      return\n    }\n\n    const bindingResolver = parentBindings.get(binding)\n    if (!bindingResolver) {\n      return\n    }\n\n    return bindingResolver.resolver\n  }\n\n  /**\n   * Notify emitter\n   */\n  #emit(binding: BindingKey, value: any) {\n    if (!this.#options.emitter) {\n      return\n    }\n    this.#options.emitter.emit('container_binding:resolved', { binding, value })\n  }\n\n  /**\n   * Execute hooks for a given binding\n   */\n  async #execHooks(binding: BindingKey, value: any) {\n    const callbacks = this.#containerHooks.get(binding)\n    if (!callbacks || callbacks.size === 0) {\n      return\n    }\n\n    for (let callback of callbacks) {\n      await callback(value, this)\n    }\n  }\n\n  /**\n   * Find if the resolver has a binding registered using the\n   * \"bind\", the \"singleton\", or the \"bindValue\" methods.\n   */\n  hasBinding<Binding extends keyof KnownBindings>(binding: Binding): boolean\n  hasBinding(binding: BindingKey): boolean\n  hasBinding(binding: BindingKey): boolean {\n    return (\n      this.#containerAliases.has(binding) ||\n      this.#bindingValues.has(binding) ||\n      this.#containerBindingValues.has(binding) ||\n      this.#containerBindings.has(binding)\n    )\n  }\n\n  /**\n   * Find if the resolver has all the bindings registered using the\n   * \"bind\", the \"singleton\", or the \"bindValue\" methods.\n   */\n  hasAllBindings<Binding extends keyof KnownBindings>(bindings: Binding[]): boolean\n  hasAllBindings(bindings: BindingKey[]): boolean\n  hasAllBindings(bindings: BindingKey[]): boolean {\n    return bindings.every((binding) => this.hasBinding(binding))\n  }\n\n  /**\n   * Resolves binding in context of a parent. The method is same as\n   * the \"make\" method, but instead takes a parent class\n   * constructor.\n   */\n  async resolveFor<Binding>(\n    parent: unknown,\n    binding: Binding,\n    runtimeValues?: any[],\n    createError: ErrorCreator = (message) => new RuntimeException(message)\n  ): Promise<Make<Binding>> {\n    const isAClass = isClass<Binding>(binding)\n\n    /**\n     * Raise exception when the binding is not a string, a class constructor\n     * or a symbol.\n     */\n    if (typeof binding !== 'string' && typeof binding !== 'symbol' && !isAClass) {\n      throw this.#invalidBindingException(parent, binding, createError)\n    }\n\n    /**\n     * Entertain swaps with highest priority. The swaps can only exists for\n     * class constructors.\n     */\n    if (isAClass && this.#containerSwaps.has(binding)) {\n      const resolver = this.#containerSwaps.get(binding)!\n      const value = await resolver(this, runtimeValues)\n\n      if (debug.enabled) {\n        debug('resolved swap for binding %O, resolved value :%O', binding, value)\n      }\n\n      /**\n       * Executing hooks and emitting events for the swaps is\n       * debatable for now\n       */\n      await this.#execHooks(binding, value)\n      this.#emit(binding, value)\n      return value\n    }\n\n    /**\n     * Resolving contextual binding. Contextual bindings can only exists for\n     * class constructors\n     */\n    const contextualResolver = isAClass && this.#getBindingResolver(parent, binding)\n    if (contextualResolver) {\n      const value = await contextualResolver(this, runtimeValues)\n\n      if (debug.enabled) {\n        debug('resolved using contextual resolver binding %O, resolved value :%O', binding, value)\n      }\n\n      await this.#execHooks(binding, value)\n      this.#emit(binding, value)\n\n      return value\n    }\n\n    /**\n     * First priority is given to the RESOLVER binding values\n     */\n    if (this.#bindingValues.has(binding)) {\n      const value = this.#bindingValues.get(binding)\n\n      if (debug.enabled) {\n        debug('resolved from resolver values %O, resolved value :%O', binding, value)\n      }\n\n      this.#emit(binding, value)\n      return value\n    }\n\n    /**\n     * Next priority is given to the CONTAINER binding values\n     */\n    if (this.#containerBindingValues.has(binding)) {\n      const value = this.#containerBindingValues.get(binding)\n\n      if (debug.enabled) {\n        debug('resolved from container values %O, resolved value :%O', binding, value)\n      }\n\n      this.#emit(binding, value)\n      return value\n    }\n\n    /**\n     * Followed by the CONTAINER bindings\n     */\n    if (this.#containerBindings.has(binding)) {\n      const { resolver, isSingleton } = this.#containerBindings.get(binding)!\n      let value\n      let executeHooks = isSingleton ? false : true\n\n      /**\n       * Invoke binding resolver to get the value. In case of singleton,\n       * the \"enqueue\" method returns an object with the value and a\n       * boolean telling if a cached value is resolved.\n       */\n      if (isSingleton) {\n        const result = await resolver(this, runtimeValues)\n        value = result.value\n        executeHooks = !result.cached\n      } else {\n        value = await resolver(this, runtimeValues)\n      }\n\n      if (debug.enabled) {\n        debug('resolved binding %O, resolved value :%O', binding, value)\n      }\n\n      if (executeHooks) {\n        await this.#execHooks(binding, value)\n      }\n      this.#emit(binding, value)\n\n      return value\n    }\n\n    /**\n     * Create an instance of the class with its constructor\n     * dependencies.\n     */\n    if (isAClass) {\n      let dependencies: any[] = []\n      const classConstructor: InspectableConstructor = binding\n\n      const bindingProvider = this.#getBindingProvider(classConstructor)\n      if (bindingProvider) {\n        dependencies = await bindingProvider(\n          classConstructor,\n          '_constructor',\n          this,\n          containerProvider,\n          runtimeValues\n        )\n      } else {\n        dependencies = await containerProvider(\n          classConstructor,\n          '_constructor',\n          this,\n          runtimeValues\n        )\n      }\n\n      /**\n       * Class has dependencies for which we do not have runtime values and neither\n       * we have typehints. Therefore we throw an exception\n       */\n      if (dependencies.length < classConstructor.length) {\n        throw this.#missingDependenciesException(parent, binding, createError)\n      }\n\n      const value = new binding(...dependencies) as Promise<Make<Binding>>\n\n      if (debug.enabled) {\n        debug('constructed class %O, resolved value :%O', binding, value)\n      }\n\n      await this.#execHooks(binding, value)\n      this.#emit(binding, value)\n\n      return value\n    }\n\n    throw createError(`Cannot resolve binding \"${String(binding)}\" from the container`)\n  }\n\n  /**\n   * Resolves the binding or constructor a class instance as follows.\n   *\n   * - Resolve the binding from the values (if registered)\n   * - Resolve the binding from the bindings (if registered)\n   * - If binding is a class, then create a instance of it. The constructor\n   *   dependencies are further resolved as well.\n   * - All other values are returned as it is.\n   *\n   * ```ts\n   * await resolver.make('route')\n   * await resolver.make(Database)\n   * ```\n   */\n  make<Binding extends keyof KnownBindings>(\n    binding: Binding,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<Binding extends string | symbol ? KnownBindings[Binding] : Make<Binding>>\n  make<Binding>(\n    binding: Binding,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<Make<Binding>>\n  async make<Binding>(\n    binding: Binding,\n    runtimeValues?: any[],\n    createError?: ErrorCreator\n  ): Promise<Make<Binding>> {\n    /**\n     * Make alias\n     */\n    if (this.#containerAliases.has(binding)) {\n      return this.resolveFor(null, this.#containerAliases.get(binding), runtimeValues, createError)\n    }\n\n    return this.resolveFor(null, binding, runtimeValues, createError)\n  }\n\n  /**\n   * Call a method on an object by injecting its dependencies. The method\n   * dependencies are resolved in the same manner as a class constructor\n   * dependencies.\n   *\n   * ```ts\n   * await resolver.call(await resolver.make(UsersController), 'index')\n   * ```\n   */\n  async call<Value extends Record<any, any>, Method extends ExtractFunctions<Value>>(\n    value: Value,\n    method: Method,\n    runtimeValues?: any[],\n    createError: ErrorCreator = (message) => new RuntimeException(message)\n  ): Promise<ReturnType<Value[Method]>> {\n    if (typeof value[method] !== 'function') {\n      throw createError(`Missing method \"${String(method)}\" on \"${inspect(value)}\"`)\n    }\n\n    if (debug.enabled) {\n      debug('calling method %s, on value :%O', method, value)\n    }\n\n    let dependencies: any[] = []\n    const binding = value.constructor\n\n    const bindingProvider = this.#getBindingProvider(binding)\n    if (bindingProvider) {\n      dependencies = await bindingProvider(binding, method, this, containerProvider, runtimeValues)\n    } else {\n      dependencies = await containerProvider(binding, method, this, runtimeValues)\n    }\n\n    /**\n     * Method has dependencies for which we do not have runtime values and neither\n     * we have typehints. Therefore we throw an exception\n     */\n    if (dependencies.length < value[method].length) {\n      throw createError(\n        `Cannot call \"${binding.name}.${String(\n          method\n        )}\" method. Container is not able to resolve its dependencies. Did you mean to use @inject decorator`\n      )\n    }\n\n    return value[method](...dependencies)\n  }\n\n  /**\n   * Register a binding as a value\n   *\n   * ```ts\n   * container.bindValue(Route, new Route())\n   * ```\n   */\n  bindValue<Binding extends keyof KnownBindings>(\n    /**\n     * Need to narrow down the \"Binding\" for the case where \"KnownBindings\" are <any, any>\n     */\n    binding: Binding extends string | symbol ? Binding : never,\n    value: KnownBindings[Binding]\n  ): void\n  bindValue<Binding extends AbstractConstructor<any>>(\n    binding: Binding,\n    value: InstanceType<Binding>\n  ): void\n  bindValue<Binding>(\n    binding: Binding,\n    value: Binding extends AbstractConstructor<infer A>\n      ? A\n      : Binding extends keyof KnownBindings\n        ? KnownBindings[Binding]\n        : never\n  ): void {\n    if (typeof binding !== 'string' && typeof binding !== 'symbol' && !isClass(binding)) {\n      throw new InvalidArgumentsException(\n        'The container binding key must be of type \"string\", \"symbol\", or a \"class constructor\"'\n      )\n    }\n\n    debug('adding value to resolver \"%O\"', binding)\n    this.#bindingValues.set(binding, value)\n  }\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport debug from './debug.js'\nimport type { ContainerResolver } from './resolver.js'\nimport type { InspectableConstructor } from './types.js'\n\n/**\n * The default provider for resolving dependencies. It uses the resolver\n * to resolve all the values.\n */\nexport async function containerProvider(\n  binding: InspectableConstructor,\n  property: string | symbol | number,\n  resolver: ContainerResolver<any>,\n  runtimeValues?: any[]\n) {\n  const values = runtimeValues || []\n\n  /**\n   * Return early when the class does not have static \"containerInjections\"\n   * property or if there are no injections for the given property\n   */\n  if (!binding.containerInjections || !binding.containerInjections[property]) {\n    return values\n  }\n\n  const injections = binding.containerInjections[property].dependencies\n  const createError = binding.containerInjections[property].createError\n\n  /**\n   * If the length of runtime values is more than the injections\n   * length, then we make sure to return all the runtime\n   * values and fill undefined slots with container lookup\n   */\n  if (values.length > injections.length) {\n    if (debug.enabled) {\n      debug(\n        'created resolver plan. target: \"[class %s]\", property: \"%s\", injections: %O',\n        binding.name,\n        property,\n        values.map((value, index) => {\n          if (value !== undefined) {\n            return value\n          }\n\n          return injections[index]\n        })\n      )\n    }\n\n    return Promise.all(\n      values.map((value, index) => {\n        if (value !== undefined) {\n          return value\n        }\n\n        const injection = injections[index]\n        return resolver.resolveFor(binding, injection, undefined, createError)\n      })\n    )\n  }\n\n  /**\n   * Otherwise, we go through the injections, giving\n   * priority to the runtime values for a given index.\n   */\n  if (debug.enabled) {\n    debug(\n      'created resolver plan. target: \"[class %s]\", property: \"%s\", injections: %O',\n      binding.name,\n      property,\n      injections.map((injection, index) => {\n        if (values[index] !== undefined) {\n          return values[index]\n        }\n\n        return injection\n      })\n    )\n  }\n\n  return Promise.all(\n    injections.map((injection, index) => {\n      if (values[index] !== undefined) {\n        return values[index]\n      }\n\n      return resolver.resolveFor(binding, injection, undefined, createError)\n    })\n  )\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from '@poppinss/utils'\nimport type { Container } from './container.js'\nimport type { AbstractConstructor, BindingResolver, Constructor, Make } from './types.js'\n\n/**\n * A fluent builder to register contextual bindings with the\n * container.\n */\nexport class ContextBindingsBuilder<\n  KnownBindings extends Record<any, any>,\n  PinnedBinding extends AbstractConstructor<any>,\n> {\n  /**\n   * The parent for whom to define the contextual\n   * binding\n   */\n  #parent: Constructor<any>\n\n  /**\n   * The binding the parent asks for\n   */\n  #binding?: PinnedBinding\n\n  /**\n   * Container instance for registering the contextual\n   * bindings\n   */\n  #container: Container<KnownBindings>\n\n  constructor(parent: Constructor<any>, container: Container<KnownBindings>) {\n    this.#parent = parent\n    this.#container = container\n  }\n\n  /**\n   * Specify the binding for which to register a custom\n   * resolver.\n   */\n  asksFor<Binding extends PinnedBinding>(\n    binding: Binding\n  ): ContextBindingsBuilder<KnownBindings, Binding> {\n    this.#binding = binding\n    return this as unknown as ContextBindingsBuilder<KnownBindings, Binding>\n  }\n\n  /**\n   * Provide a resolver to resolve the parent dependency\n   */\n  provide(resolver: BindingResolver<KnownBindings, Make<PinnedBinding>>): void {\n    if (!this.#binding) {\n      throw new RuntimeException(\n        'Missing value for contextual binding. Call \"asksFor\" method before calling the \"provide\" method'\n      )\n    }\n\n    this.#container.contextualBinding<PinnedBinding>(this.#parent, this.#binding, resolver)\n  }\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { defineStaticProperty, RuntimeException } from '@poppinss/utils'\n\nimport debug from '../debug.js'\nimport { ErrorCreator, InspectableConstructor } from '../types.js'\n\n/**\n * Creating a debugging error that points to the source\n * using the @inject decorator\n */\nfunction createDebuggingError(original: Error) {\n  return function createError(message: string) {\n    const error = new RuntimeException(message)\n    error.stack = original.stack\n    return error\n  }\n}\n\n/**\n * Initiating the \"containerInjections\" property on the target, which is assumed\n * to be the class constructor.\n */\nfunction initiateContainerInjections(\n  target: any,\n  method: string | symbol,\n  createError: ErrorCreator\n) {\n  defineStaticProperty(target, 'containerInjections', { initialValue: {}, strategy: 'inherit' })\n  target.containerInjections[method] = {\n    createError,\n    dependencies: [],\n  }\n}\n\n/**\n * Defining the injections for the constructor of the class using\n * reflection\n */\nfunction defineConstructorInjections(target: InspectableConstructor, createError: ErrorCreator) {\n  const params = Reflect.getMetadata('design:paramtypes', target)\n  /* c8 ignore next 3 */\n  if (!params) {\n    return\n  }\n\n  initiateContainerInjections(target, '_constructor', createError)\n  if (debug.enabled) {\n    debug('defining constructor injections for %O, params %O', `[class: ${target.name}]`, params)\n  }\n\n  for (const param of params) {\n    target.containerInjections!._constructor.dependencies.push(param)\n  }\n}\n\n/**\n * Defining the injections for the class instance method\n */\nfunction defineMethodInjections(target: any, method: string | symbol, createError: ErrorCreator) {\n  const constructor = target.constructor as InspectableConstructor\n  const params = Reflect.getMetadata('design:paramtypes', target, method)\n  /* c8 ignore next 3 */\n  if (!params) {\n    return\n  }\n\n  initiateContainerInjections(constructor, method, createError)\n  if (debug.enabled) {\n    debug(\n      'defining method injections for %O, method %O, params %O',\n      `[class ${constructor.name}]`,\n      method,\n      params\n    )\n  }\n\n  for (const param of params) {\n    constructor.containerInjections![method].dependencies.push(param)\n  }\n}\n\n/**\n * The \"@inject\" decorator uses Reflection to inspect the dependencies of a class\n * or a method and defines them as metaData on the class for the container to\n * discover them.\n */\nexport function inject() {\n  /**\n   * Creating an error builder for the inject decorator, so that\n   * the stack trace can point back to the code that used\n   * the decorator\n   */\n  const createError = createDebuggingError(new Error())\n\n  function injectDecorator<C extends Function>(target: C): void\n  function injectDecorator(target: any, propertyKey: string | symbol): void\n  function injectDecorator(target: any, propertyKey?: string | symbol): void {\n    if (!propertyKey) {\n      defineConstructorInjections(target, createError)\n      return\n    }\n\n    defineMethodInjections(target, propertyKey, createError)\n  }\n\n  return injectDecorator\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Container } from './container.js'\nimport { ContainerResolver } from './resolver.js'\nimport type { ModuleHandler, ModuleCallable, Constructor } from './types.js'\n\n/**\n * The moduleCaller works around a very specific pattern we use with\n * AdonisJS, ie to construct classes and call methods using the\n * container.\n *\n * For example: Controllers of AdonisJS allows defining a controller\n * as follows\n *\n * ```ts\n * route.get('/', [HomeController, 'index'])\n * ```\n *\n * Behind the scenes, we have to run following operations in order to call the\n * handle method on the defined middleware.\n *\n * - Create an instance of the controller class using the container.\n * - Call the method using the container. Hence having the ability to use\n *   DI\n */\nexport function moduleCaller(target: Constructor<any>, method: string) {\n  return {\n    /**\n     * Converts the class reference to a callable function. Invoking this method\n     * internally creates a new instance of the class using the container and\n     * invokes the method using the container.\n     *\n     * You can create a callable function using the container instance as shown below\n     *\n     * ```ts\n     * const fn = moduleCaller(HomeController, 'handle')\n     *  .toCallable(container)\n     *\n     * // Call the function and pass context to it\n     * await fn(ctx)\n     * ```\n     *\n     * Another option is to not pass the container at the time of creating\n     * the callable function, but instead pass a resolver instance at\n     * the time of calling the function\n     *\n     * ```ts\n     * const fn = moduleCaller(HomeController, 'handle')\n     *  .toCallable()\n     *\n     * // Call the function and pass context to it\n     * const resolver = container.createResolver()\n     * await fn(resolver, ctx)\n     * ```\n     */\n    toCallable<\n      T extends Container<any> | ContainerResolver<any> | undefined = undefined,\n      Args extends any[] = any[],\n    >(container?: T): ModuleCallable<T, Args> {\n      /**\n       * When container defined at the time of the calling this function,\n       * we will use it to inside the return function\n       */\n      if (container) {\n        return async function (...args: Args) {\n          return container.call(await container.make(target), method, args)\n        } as ModuleCallable<T, Args>\n      }\n\n      /**\n       * Otherwise the return function asks for the resolver or container\n       */\n      return async function (resolver: ContainerResolver<any> | Container<any>, ...args: Args) {\n        return resolver.call(await resolver.make(target), method, args)\n      } as ModuleCallable<T, Args>\n    },\n\n    /**\n     * Converts the class reference to an object with handle method. Invoking this\n     * method internally creates a new instance of the class using the container\n     * and invokes the method using the container.\n     *\n     * You can create a handle method object using the container instance as shown below\n     *\n     * ```ts\n     * const handler = moduleCaller(HomeController, 'handle')\n     *  .toHandleMethod(container)\n     *\n     * // Call the function and pass context to it\n     * await handler.handle(ctx)\n     * ```\n     *\n     * Another option is to not pass the container at the time of creating\n     * the handle method object, but instead pass a resolver instance at\n     * the time of calling the function\n     *\n     * ```ts\n     * const handler = moduleCaller(HomeController, 'handle')\n     *  .toHandleMethod()\n     *\n     * // Call the function and pass context to it\n     * const resolver = container.createResolver()\n     * await handler.handle(resolver, ctx)\n     * ```\n     */\n    toHandleMethod<\n      T extends Container<any> | ContainerResolver<any> | undefined = undefined,\n      Args extends any[] = any[],\n    >(container?: T): ModuleHandler<T, Args> {\n      if (container) {\n        return {\n          name: `${target.name}.${method}`,\n          async handle(...args: Args) {\n            return container.call(await container.make(target), method, args)\n          },\n        } as ModuleHandler<T, Args>\n      }\n\n      return {\n        name: `${target.name}.${method}`,\n        async handle(resolver: ContainerResolver<any> | Container<any>, ...args: Args) {\n          return resolver.call(await resolver.make(target), method, args)\n        },\n      } as ModuleHandler<T, Args>\n    },\n  }\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { importDefault } from '@poppinss/utils'\n\nimport { Container } from './container.js'\nimport { ContainerResolver } from './resolver.js'\nimport type { ModuleHandler, ModuleCallable, Constructor } from './types.js'\n\n/**\n * The moduleImporter module works around a very specific pattern we use\n * with AdonisJS, ie to lazy load modules by wrapping import calls inside\n * a callback.\n *\n * For example: Middleware of AdonisJS allows registering middleware as an\n * array of import calls.\n *\n * ```ts\n * defineMiddleware([\n *   () => import('#middleware/silent_auth')\n * ])\n *\n * defineMiddleware({\n *   auth: () => import('#middleware/auth')\n * })\n * ```\n *\n * Behind the scenes, we have to run following operations in order to call the\n * handle method on the defined middleware.\n *\n * - Lazily call the registered callbacks to import the middleware.\n * - Check if the module has a default export.\n * - Create an instance of the default export class using the container.\n * - Call the `handle` method on the middleware class using the container.\n */\nexport function moduleImporter(\n  importFn: () => Promise<{ default: Constructor<any> }>,\n  method: string\n) {\n  return {\n    /**\n     * Converts the module import function to a callable function. Invoking this\n     * method run internally import the module, create a new instance of the\n     * default export class using the container and invokes the method using\n     * the container.\n     *\n     * You can create a callable function using the container instance as shown below\n     *\n     * ```ts\n     * const fn = moduleImporter(() => import('#middleware/auth_middleware'), 'handle')\n     *  .toCallable(container)\n     *\n     * // Call the function and pass context to it\n     * await fn(ctx)\n     * ```\n     *\n     * Another option is to not pass the container at the time of creating\n     * the callable function, but instead pass a resolver instance at\n     * the time of calling the function\n     *\n     * ```ts\n     * const fn = moduleImporter(() => import('#middleware/auth_middleware'), 'handle')\n     *  .toCallable()\n     *\n     * // Call the function and pass context to it\n     * const resolver = container.createResolver()\n     * await fn(resolver, ctx)\n     * ```\n     */\n    toCallable<\n      T extends Container<any> | ContainerResolver<any> | undefined = undefined,\n      Args extends any[] = any[],\n    >(container?: T): ModuleCallable<T, Args> {\n      let defaultExport: any = null\n\n      /**\n       * When container defined at the time of the calling this function,\n       * we will use it to inside the return function\n       */\n      if (container) {\n        return async function (...args: Args) {\n          if (!defaultExport || 'hot' in import.meta) {\n            defaultExport = await importDefault(importFn)\n          }\n          return container.call(await container.make(defaultExport), method, args)\n        } as ModuleCallable<T, Args>\n      }\n\n      /**\n       * Otherwise the return function asks for the resolver or container\n       */\n      return async function (resolver: ContainerResolver<any> | Container<any>, ...args: Args) {\n        if (!defaultExport || 'hot' in import.meta) {\n          defaultExport = await importDefault(importFn)\n        }\n        return resolver.call(await resolver.make(defaultExport), method, args)\n      } as ModuleCallable<T, Args>\n    },\n\n    /**\n     * Converts the module import function to an object with handle method. Invoking the\n     * handle method run internally imports the module, create a new instance of\n     * the default export class using the container and invokes the method using\n     * the container.\n     *\n     * You can create a handle method object using the container instance as shown below\n     *\n     * ```ts\n     * const handler = moduleImporter(() => import('#middleware/auth_middleware'), 'handle')\n     *  .toHandleMethod(container)\n     *\n     * // Call the function and pass context to it\n     * await handler.handle(ctx)\n     * ```\n     *\n     * Another option is to not pass the container at the time of creating\n     * the handle method object, but instead pass a resolver instance at\n     * the time of calling the function\n     *\n     * ```ts\n     * const handler = moduleImporter(() => import('#middleware/auth_middleware'), 'handle')\n     *  .toHandleMethod()\n     *\n     * // Call the function and pass context to it\n     * const resolver = container.createResolver()\n     * await handler.handle(resolver, ctx)\n     * ```\n     */\n    toHandleMethod<\n      T extends Container<any> | ContainerResolver<any> | undefined = undefined,\n      Args extends any[] = any[],\n    >(container?: T): ModuleHandler<T, Args> {\n      let defaultExport: any = null\n\n      if (container) {\n        return {\n          name: importFn.name,\n          async handle(...args: Args) {\n            if (!defaultExport || 'hot' in import.meta) {\n              defaultExport = await importDefault(importFn)\n            }\n            return container.call(await container.make(defaultExport), method, args)\n          },\n        } as ModuleHandler<T, Args>\n      }\n\n      return {\n        name: importFn.name,\n        async handle(resolver: ContainerResolver<any> | Container<any>, ...args: Args) {\n          if (!defaultExport || 'hot' in import.meta) {\n            defaultExport = await importDefault(importFn)\n          }\n          return resolver.call(await resolver.make(defaultExport), method, args)\n        },\n      } as ModuleHandler<T, Args>\n    },\n  }\n}\n","/*\n * @adonisjs/fold\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Container } from './container.js'\nimport { resolveDefault } from './helpers.js'\nimport { ContainerResolver } from './resolver.js'\nimport type { ModuleHandler, ModuleCallable } from './types.js'\n\n/**\n * The moduleExpression module works around a very specific pattern we use\n * with AdonisJS, ie to bind modules as string.\n *\n * For example: With the router of AdonisJS, we can bind a controller to a route\n * as follows.\n *\n * ```ts\n * Route.get('users', '#controllers/users_controller.index')\n * ```\n *\n * Behind the scenes, we have to run following operations in order to call a\n * method on the users_controller class.\n *\n * - Dynamic import `#controllers/users_controller` module\n * - Check if the module has a default export.\n * - Create an instance of the default export class using the container.\n * - Call the `index` method on the controller class using the container.\n *\n * Router is just one example, we do this with event listeners, redis pub/sub\n * and so on.\n *\n * So, instead of writing all this parsing logic, we encapsulate it inside the\n * \"moduleExpression\" module.\n */\nexport function moduleExpression(expression: string, parentURL: URL | string) {\n  return {\n    /**\n     * Parses a module expression to extract the module import path\n     * and the method to call on the default exported class.\n     *\n     * ```ts\n     * moduleExpression('#controllers/users_controller').parse()\n     * // ['#controllers/users_controller', 'handle']\n     * ```\n     *\n     * With method\n     * ```ts\n     * moduleExpression('#controllers/users_controller.index').parse()\n     * // ['#controllers/users_controller', 'index']\n     * ```\n     */\n    parse(): [string, string] {\n      const parts = expression.split('.')\n      if (parts.length === 1) {\n        return [expression, 'handle']\n      }\n\n      const method = parts.pop()!\n      return [parts.join('.'), method]\n    },\n\n    /**\n     * Converts the module expression to a callable function. Invoking this\n     * method run internally import the module, create a new instance of the\n     * default export class using the container and invokes the method using\n     * the container.\n     *\n     * You can create a callable function using the container instance as shown below\n     *\n     * ```ts\n     * const fn = moduleExpression('#controllers/users_controller.index')\n     *  .toCallable(container)\n     *\n     * // Call the function and pass context to it\n     * await fn(ctx)\n     * ```\n     *\n     * Another option is to not pass the container at the time of creating\n     * the callable function, but instead pass a resolver instance at\n     * the time of calling the function\n     *\n     * ```ts\n     * const fn = moduleExpression('#controllers/users_controller.index')\n     *  .toCallable()\n     *\n     * // Call the function and pass context to it\n     * const resolver = container.createResolver()\n     * await fn(resolver, ctx)\n     * ```\n     */\n    toCallable<\n      T extends Container<any> | ContainerResolver<any> | undefined = undefined,\n      Args extends any[] = any[],\n    >(container?: T): ModuleCallable<T, Args> {\n      let defaultExport: any = null\n      const [importPath, method] = this.parse()\n\n      /**\n       * When container defined at the time of the calling this function,\n       * we will use it to inside the return function\n       */\n      if (container) {\n        return async function (...args: Args) {\n          if (!defaultExport || 'hot' in import.meta) {\n            defaultExport = await resolveDefault(importPath, parentURL)\n          }\n          return container.call(await container.make(defaultExport), method, args)\n        } as ModuleCallable<T, Args>\n      }\n\n      /**\n       * Otherwise the return function asks for the resolver or container\n       */\n      return async function (resolver: ContainerResolver<any> | Container<any>, ...args: Args) {\n        if (!defaultExport || 'hot' in import.meta) {\n          defaultExport = await resolveDefault(importPath, parentURL)\n        }\n        return resolver.call(await resolver.make(defaultExport), method, args)\n      } as ModuleCallable<T, Args>\n    },\n\n    /**\n     * Converts the module expression to an object with handle method. Invoking the\n     * handle method run internally imports the module, create a new instance of\n     * the default export class using the container and invokes the method using\n     * the container.\n     *\n     * You can create a handle method object using the container instance as shown below\n     *\n     * ```ts\n     * const handler = moduleExpression('#controllers/users_controller.index')\n     *  .toHandleMethod(container)\n     *\n     * // Call the function and pass context to it\n     * await handler.handle(ctx)\n     * ```\n     *\n     * Another option is to not pass the container at the time of creating\n     * the handle method object, but instead pass a resolver instance at\n     * the time of calling the function\n     *\n     * ```ts\n     * const handler = moduleExpression('#controllers/users_controller.index')\n     *  .toHandleMethod()\n     *\n     * // Call the function and pass context to it\n     * const resolver = container.createResolver()\n     * await handler.handle(resolver, ctx)\n     * ```\n     */\n    toHandleMethod<\n      T extends Container<any> | ContainerResolver<any> | undefined = undefined,\n      Args extends any[] = any[],\n    >(container?: T): ModuleHandler<T, Args> {\n      let defaultExport: any = null\n      const [importPath, method] = this.parse()\n\n      if (container) {\n        return {\n          async handle(...args: Args) {\n            if (!defaultExport || 'hot' in import.meta) {\n              defaultExport = await resolveDefault(importPath, parentURL)\n            }\n            return container.call(await container.make(defaultExport), method, args)\n          },\n        } as ModuleHandler<T, Args>\n      }\n\n      return {\n        async handle(resolver: ContainerResolver<any> | Container<any>, ...args: Args) {\n          if (!defaultExport || 'hot' in import.meta) {\n            defaultExport = await resolveDefault(importPath, parentURL)\n          }\n          return resolver.call(await resolver.make(defaultExport), method, args)\n        },\n      } as ModuleHandler<T, Args>\n    },\n  }\n}\n"],"mappings":"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","names":["inspect","InvalidArgumentsException","debuglog","RuntimeException","Deferred","resolve","reject","promise","Promise","isClass","value","toString","startsWith","runAsAsync","callback","args","enqueue","isComputingValue","computedValue","completed","computedError","queue","resolvePromises","forEach","promise","resolve","rejectPromises","error","reject","Deferred","push","Promise","then","cached","catch","resolveDefault","importPath","parentURL","resolvedPath","moduleExports","default","RuntimeException","cause","source","inspect","InvalidArgumentsException","RuntimeException","containerProvider","binding","property","resolver","runtimeValues","values","containerInjections","injections","dependencies","createError","length","debug","enabled","name","map","value","index","undefined","Promise","all","injection","resolveFor","ContainerResolver","Map","constructor","container","options","bindings","bindingValues","swaps","hooks","aliases","contextualBindings","parent","binding","createError","error","inspect","name","help","containerProvider","parentBindings","get","bindingResolver","resolver","value","emitter","emit","callbacks","size","callback","hasBinding","has","hasAllBindings","every","resolveFor","runtimeValues","message","RuntimeException","isAClass","isClass","debug","enabled","contextualResolver","isSingleton","executeHooks","result","cached","dependencies","classConstructor","bindingProvider","length","String","make","call","method","bindValue","InvalidArgumentsException","set","RuntimeException","ContextBindingsBuilder","constructor","parent","container","asksFor","binding","provide","resolver","RuntimeException","contextualBinding","Container","Map","constructor","options","useEmitter","emitter","createResolver","ContainerResolver","bindings","bindingValues","swaps","hooks","aliases","contextualBindings","hasBinding","binding","has","hasAllBindings","every","make","runtimeValues","createError","call","value","method","alias","InvalidArgumentsException","set","bind","resolver","isClass","debug","isSingleton","bindValue","singleton","enqueue","swap","inspect","restore","delete","restoreAll","clear","resolving","callback","get","Set","callbacks","add","when","parent","ContextBindingsBuilder","contextualBinding","parentBindings","defineStaticProperty","RuntimeException","createDebuggingError","original","createError","message","error","RuntimeException","stack","initiateContainerInjections","target","method","defineStaticProperty","initialValue","strategy","containerInjections","dependencies","defineConstructorInjections","params","Reflect","getMetadata","debug","enabled","name","param","_constructor","push","defineMethodInjections","constructor","inject","Error","injectDecorator","propertyKey","moduleCaller","target","method","toCallable","container","args","call","make","resolver","toHandleMethod","name","handle","importDefault","moduleImporter","importFn","method","toCallable","container","defaultExport","args","importDefault","call","make","resolver","toHandleMethod","name","handle","moduleExpression","expression","parentURL","parse","parts","split","length","method","pop","join","toCallable","container","defaultExport","importPath","args","resolveDefault","call","make","resolver","toHandleMethod","handle"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/fold/build/chunk-H736K5TN.js":{"lineLengths":[38,89,0,8,8,2,42],"data":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/utils/build/src/json/main.js":{"lineLengths":[8,14,33,8,25,2,32],"data":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/signal-exit/dist/mjs/index.js":{"lineLengths":[65,63,53,60,39,19,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,36,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,36,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,32,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,15,3,67,39,2,68,29,2,61,3,8,3,66,66,45,2,12,3,6,3,68,66,45,2,12,3,100,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/signal-exit/dist/mjs/signals.js":{"lineLengths":[3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,26,44,35,125,61,14,16,6,1,35,60,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,CAAC,MAAM,OAAO,GAAqB,EAAE,CAAA;AAC3C,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/sha3.js":{"lineLengths":[13,62,222,26,45,39,41,100,33,43,19,21,22,38,38,38,38,42,44,65,9,38,34,17,59,11,16,33,57,20,67,5,23,1,90,36,102,102,54,34,37,98,56,18,36,72,41,38,38,31,35,50,54,46,31,35,13,9,29,24,24,38,39,48,48,34,25,29,23,27,9,18,42,40,32,40,63,9,19,35,35,5,14,1,38,63,78,16,33,29,35,35,29,21,24,30,31,43,44,63,55,72,41,55,5,14,29,53,43,29,53,24,21,5,18,39,41,45,32,39,66,42,49,38,30,9,20,5,14,26,19,29,54,25,29,58,26,36,22,5,20,46,37,22,37,34,57,40,30,69,78,32,24,9,19,5,18,90,28,69,35,5,16,40,51,5,21,44,26,59,28,23,19,5,14,63,5,15,30,27,5,20,72,80,37,26,32,36,27,38,27,33,33,38,18,5,1,24,124,43,3,25,40,3,43,43,42,45,3,53,40,3,45,45,44,195,48,48,32],"data":{"version":3,"file":"sha3.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/src/sha3.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/_assert.js":{"lineLengths":[13,62,26,24,20,22,20,24,24,20,42,63,1,18,31,54,1,20,21,38,85,1,31,20,47,58,95,1,18,66,75,24,23,1,49,27,60,43,65,1,32,15,35,27,88,5,1,61,25,35],"data":{"version":3,"file":"_assert.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/src/_assert.ts"],"names":[],"mappings":";;AASA,0BAKC;AAiCQ,wBAAM;AAAE,oBAAI;AAAE,sBAAK;AAAE,oBAAI;AAAE,wBAAM;AAAE,wBAAM;AA/ClD,SAAS,MAAM,CAAC,CAAS;IACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,EAAE,CAAC,CAAC;AAChG,CAAC;AAED,SAAS,IAAI,CAAC,CAAU;IACtB,IAAI,OAAO,CAAC,KAAK,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;AAC5E,CAAC;AAED,oBAAoB;AACpB,SAAgB,OAAO,CAAC,CAAU;IAChC,OAAO,CACL,CAAC,YAAY,UAAU;QACvB,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,YAAY,CAAC,CAC5E,CAAC;AACJ,CAAC;AAED,SAAS,KAAK,CAAC,CAAyB,EAAE,GAAG,OAAiB;IAC5D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACxD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;QACnD,MAAM,IAAI,KAAK,CAAC,iCAAiC,OAAO,mBAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3F,CAAC;AAQD,SAAS,IAAI,CAAC,CAAO;IACnB,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,UAAU;QAC3D,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;IACrE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACpB,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AACrB,CAAC;AAED,SAAS,MAAM,CAAC,QAAa,EAAE,aAAa,GAAG,IAAI;IACjD,IAAI,QAAQ,CAAC,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAC5E,IAAI,aAAa,IAAI,QAAQ,CAAC,QAAQ;QAAE,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;AACnG,CAAC;AACD,SAAS,MAAM,CAAC,GAAQ,EAAE,QAAa;IACrC,KAAK,CAAC,GAAG,CAAC,CAAC;IACX,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC;IAC/B,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC;QACrB,MAAM,IAAI,KAAK,CAAC,yDAAyD,GAAG,EAAE,CAAC,CAAC;IAClF,CAAC;AACH,CAAC;AAID,MAAM,MAAM,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AAC7D,kBAAe,MAAM,CAAC"},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/_u64.js":{"lineLengths":[13,62,323,26,22,18,55,40,79,33,11,82,86,1,33,41,41,42,45,32,5,20,1,68,22,23,36,22,55,22,36,56,24,56,24,64,63,24,63,24,47,29,26,29,26,35,56,24,56,24,63,63,24,63,24,78,74,30,38,64,1,37,67,22,78,22,84,22,87,22,101,22,96,22,18,13,26,17,35,21,35,50,2,22,32],"data":{"version":3,"file":"_u64.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/src/_u64.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/utils.js":{"lineLengths":[13,70,62,176,26,32,32,32,30,34,26,34,30,42,58,64,34,84,70,66,62,63,75,49,45,42,84,21,38,85,1,31,79,16,97,18,21,85,32,63,72,20,61,80,20,80,37,56,30,29,27,28,54,81,37,26,42,47,5,1,56,101,3,79,3,28,35,40,17,44,31,5,15,1,65,67,30,47,32,47,39,47,39,11,1,3,79,3,26,32,66,26,22,15,88,37,54,53,57,51,47,104,9,33,5,17,1,62,72,73,33,28,61,43,24,37,14,103,37,37,21,38,19,5,1,3,62,3,27,32,74,86,1,3,59,63,46,3,24,33,33,34,16,1,3,39,3,33,16,45,28,35,24,5,36,54,28,24,24,5,15,1,50,12,46,13,33,5,1,20,26,36,69,65,49,18,1,36,68,27,36,34,36,17,1,44,78,29,36,34,44,17,1,47,78,29,36,34,44,17,1,3,66,3,40,83,76,5,35,79,56,5,62,1,33],"data":{"version":3,"file":"utils.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/src/utils.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/cryptoNode.js":{"lineLengths":[13,62,24,74,58,28,13,34,66,18,57,12,20,38],"data":{"version":3,"file":"cryptoNode.js","sourceRoot":"","sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@noble/hashes/src/cryptoNode.ts"],"names":[],"mappings":";;;AAAA,0EAA0E;AAC1E,0DAA0D;AAC1D,4BAA4B;AAC5B,aAAa;AACb,kCAAkC;AACrB,QAAA,MAAM,GACjB,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,WAAW,IAAI,EAAE;IAC/C,CAAC,CAAE,EAAE,CAAC,SAAiB;IACvB,CAAC,CAAC,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,aAAa,IAAI,EAAE;QACnD,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,SAAS,CAAC"},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/adonisrc.ts":{"lineLengths":[50,29,6,77,12,77,3,76,66,3,16,46,47,48,6,6,77,21,77,3,69,15,3,17,60,61,9,71,26,23,22,13,10,63,51,56,57,51,56,6,6,77,12,77,3,62,3,16,36,35,6,6,77,9,77,3,76,30,3,13,17,13,24,51,18,29,29,14,13,24,57,18,35,30,13,10,24,5,3,0,4668],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/adonisrc.ts"],"sourcesContent":["import { defineConfig } from '@adonisjs/core/app'\n\nexport default defineConfig({\n  /*\n  |--------------------------------------------------------------------------\n  | Commands\n  |--------------------------------------------------------------------------\n  |\n  | List of ace commands to register from packages. The application commands\n  | will be scanned automatically from the \"./commands\" directory.\n  |\n  */\n  commands: [\n    () => import('@adonisjs/core/commands'),\n    () => import('@adonisjs/lucid/commands'),\n    () => import('@adonisjs/bouncer/commands'),\n  ],\n\n  /*\n  |--------------------------------------------------------------------------\n  | Service providers\n  |--------------------------------------------------------------------------\n  |\n  | List of service providers to import and register when booting the\n  | application\n  |\n  */\n  providers: [\n    () => import('@adonisjs/core/providers/app_provider'),\n    () => import('@adonisjs/core/providers/hash_provider'),\n    {\n      file: () => import('@adonisjs/core/providers/repl_provider'),\n      environment: ['repl', 'test'],\n    },\n    () => import('@adonisjs/core/providers/vinejs_provider'),\n    () => import('@adonisjs/cors/cors_provider'),\n    () => import('@adonisjs/lucid/database_provider'),\n    () => import('@adonisjs/session/session_provider'),\n    () => import('@adonisjs/auth/auth_provider'),\n    () => import('@adonisjs/bouncer/bouncer_provider'),\n  ],\n\n  /*\n  |--------------------------------------------------------------------------\n  | Preloads\n  |--------------------------------------------------------------------------\n  |\n  | List of modules to import before starting the application.\n  |\n  */\n  preloads: [() => import('#start/routes'), () => import('#start/kernel')],\n\n  /*\n  |--------------------------------------------------------------------------\n  | Tests\n  |--------------------------------------------------------------------------\n  |\n  | List of test suites to organize tests by their type. Feel free to remove\n  | and add additional suites.\n  |\n  */\n  tests: {\n    suites: [\n      {\n        files: ['tests/unit/**/*.spec(.ts|.js)'],\n        name: 'unit',\n        timeout: 2000,\n      },\n      {\n        files: ['tests/functional/**/*.spec(.ts|.js)'],\n        name: 'functional',\n        timeout: 30000,\n      },\n    ],\n    forceExit: false,\n  },\n})\n"],"names":["defineConfig","commands","providers","file","environment","preloads","tests","suites","files","name","timeout","forceExit"],"mappings":"AAAA,SAASA,YAAY,QAAQ,qBAAoB;AAEjD,eAAeA,aAAa;IAC1B;;;;;;;;EAQA,GACAC,UAAU;QACR,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;KACd;IAED;;;;;;;;EAQA,GACAC,WAAW;QACT,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;QACb;YACEC,MAAM,IAAM,MAAM,CAAC;YACnBC,aAAa;gBAAC;gBAAQ;aAAO;QAC/B;QACA,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;QACb,IAAM,MAAM,CAAC;KACd;IAED;;;;;;;EAOA,GACAC,UAAU;QAAC,IAAM,MAAM,CAAC;QAAkB,IAAM,MAAM,CAAC;KAAiB;IAExE;;;;;;;;EAQA,GACAC,OAAO;QACLC,QAAQ;YACN;gBACEC,OAAO;oBAAC;iBAAgC;gBACxCC,MAAM;gBACNC,SAAS;YACX;YACA;gBACEF,OAAO;oBAAC;iBAAsC;gBAC9CC,MAAM;gBACNC,SAAS;YACX;SACD;QACDC,WAAW;IACb;AACF,GAAE","file":"/Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/adonisrc.ts","sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/build/index.js":{"lineLengths":[17,26,28,34,59,65,40,58,0,15,51,36,28,10,23,23,26,3,5,76,5,32,33,27,92,5,27,3,5,78,5,34,23,54,96,8,55,97,7,7,3,5,80,5,30,23,51,93,8,52,94,7,7,3,5,35,5,37,64,3,5,31,5,38,65,3,5,39,5,34,61,3,5,40,5,35,62,3,2,0,17,30,33,37,37,41,41,51,53,62,74,0,15,37,51,0,17,25,56,106,60,24,2,67,66,8,42,1,31,79,14,51,80,11,3,29,51,86,11,3,16,1,32,70,60,22,23,18,8,36,18,38,10,65,20,5,5,22,1,28,66,22,23,18,8,18,38,10,65,20,5,5,22,1,34,38,16,11,3,90,70,31,1,33,28,16,3,36,1,29,25,61,3,48,27,68,28,64,5,3,39,1,46,43,23,44,35,22,7,40,32,7,20,6,31,4,89,97,35,5,75,54,58,50,52,31,5,41,1,0,17,32,10,47,41,4,11,39,47,4,17,68,56,4,11,44,35,4,10,39,46,3,2,17,21,7,11,6,22,9,11,5,52,5,17,36,3,33,20,46,18,28,52,3,5,51,14,5,30,53,3,5,34,5,40,73,3,5,48,5,24,47,34,18,5,9,84,28,25,21,34,38,9,18,13,19,5,3,5,42,5,25,9,28,25,22,40,9,18,13,19,5,3,5,44,5,55,112,54,3,5,51,53,19,5,36,28,22,61,5,22,25,5,70,18,5,48,3,5,48,48,33,5,32,52,34,22,7,9,58,58,59,9,0,38,5,6,56,95,3,5,31,5,21,26,16,3,5,52,5,44,43,52,18,19,5,89,97,46,37,19,5,83,72,54,38,41,48,112,23,93,8,23,25,93,9,8,52,19,5,61,105,68,48,44,25,84,200,24,82,7,60,16,3,2,0,20,34,50,41,59,50,0,27,50,19,29,7,23,11,13,5,52,5,17,36,3,29,20,28,3,5,57,5,34,39,41,73,100,31,26,28,9,9,23,13,5,42,22,37,13,5,29,24,26,7,7,3,5,59,5,36,39,41,29,24,26,7,7,3,5,31,5,21,26,16,3,5,75,72,28,5,11,34,13,5,74,38,32,19,9,68,59,28,9,20,36,7,50,44,44,14,46,7,7,50,44,44,14,46,7,7,38,27,91,8,25,88,32,7,3,5,24,5,10,26,43,38,31,5,3,2,0,20,19,23,7,23,11,5,55,9,5,22,5,48,5,32,5,59,47,5,32,5,59,48,5,33,5,59,28,5,11,11,5,35,5,14,5,29,5,11,5,35,5,16,5,68,5,9,5,52,5,17,36,3,29,20,28,52,28,93,5,51,119,6,52,119,6,3,5,66,5,36,147,3,5,61,5,30,156,3,5,44,5,18,36,36,5,3,5,27,5,32,69,43,31,48,39,19,42,7,55,44,94,57,54,30,75,40,52,61,75,9,7,50,77,187,91,74,31,95,9,32,91,7,7,39,35,41,31,35,14,87,7,25,35,31,31,35,14,85,7,7,3,5,29,5,24,78,47,31,3,5,65,34,5,28,27,44,39,5,44,3,5,41,5,49,37,26,72,36,13,5,59,26,72,36,13,5,60,26,72,5,3,5,42,5,61,102,24,70,34,3,5,31,5,21,26,42,16,3,5,52,11,5,21,29,16,3,5,56,18,5,21,29,16,3,5,47,5,17,33,31,27,44,39,5,3,5,33,5,17,47,24,49,75,30,3,5,47,5,36,47,50,28,24,49,44,30,55,18,25,13,5,36,46,63,7,44,58,32,29,30,7,22,19,83,6,22,22,86,6,22,22,86,6,22,12,77,6,22,15,80,6,22,15,80,6,3,2,0,21,35,50,19,24,7,23,11,5,46,5,30,5,54,42,5,14,5,54,25,5,14,5,49,5,14,5,57,57,56,13,5,22,5,68,66,63,35,5,18,5,59,28,5,11,11,5,47,5,14,5,29,5,11,5,35,5,16,5,52,5,17,36,3,29,20,28,97,34,46,43,67,9,20,44,6,85,81,3,5,48,5,27,20,34,31,51,5,43,29,47,5,31,28,5,43,29,47,5,16,3,5,44,4,70,68,28,5,34,20,25,35,5,24,27,41,5,25,28,42,5,23,26,40,5,24,27,41,5,16,3,5,44,5,18,36,36,5,3,5,15,5,34,24,146,43,31,19,48,39,16,7,39,35,41,21,7,25,35,31,21,7,22,27,7,3,5,59,33,5,30,27,44,39,5,46,3,5,29,5,24,78,47,31,3,5,41,5,49,23,13,5,71,26,72,29,5,3,5,42,5,55,23,13,5,24,70,41,30,33,29,9,13,5,27,3,5,31,5,21,26,42,16,3,5,52,11,5,21,29,16,3,5,56,18,5,21,29,16,3,5,47,5,17,33,31,27,44,39,5,3,5,15,5,15,50,24,30,61,40,3,5,28,5,34,50,24,30,61,37,55,18,25,13,5,36,46,63,7,44,58,32,29,30,7,22,19,83,6,22,22,86,6,22,22,86,6,22,12,77,6,22,15,80,6,22,15,80,6,3,2,8,10,12,12,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/bundler.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/hooks.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/helpers.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/debug.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/dev_server.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/assets_dev_server.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@adonisjs/assembler/src/test_runner.ts"],"sourcesContent":["/*\n * @adonisjs/assembler\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport slash from 'slash'\nimport dedent from 'dedent'\nimport fs from 'node:fs/promises'\nimport type tsStatic from 'typescript'\nimport { fileURLToPath } from 'node:url'\nimport { join, relative } from 'node:path'\nimport { cliui, type Logger } from '@poppinss/cliui'\nimport { detectPackageManager } from '@antfu/install-pkg'\n\nimport { AssemblerHooks } from './hooks.js'\nimport type { BundlerOptions } from './types.js'\nimport { run, parseConfig, copyFiles } from './helpers.js'\n\ntype SupportedPackageManager = 'npm' | 'yarn' | 'yarn@berry' | 'pnpm' | 'bun'\n\n/**\n * List of package managers we support in order to\n * copy lockfiles\n */\nconst SUPPORT_PACKAGE_MANAGERS: {\n  [K in SupportedPackageManager]: {\n    packageManagerFiles: string[]\n    installCommand: string\n  }\n} = {\n  'npm': {\n    packageManagerFiles: ['package-lock.json'],\n    installCommand: 'npm ci --omit=\"dev\"',\n  },\n  'yarn': {\n    packageManagerFiles: ['yarn.lock'],\n    installCommand: 'yarn install --production',\n  },\n  'yarn@berry': {\n    packageManagerFiles: ['yarn.lock', '.yarn/**/*', '.yarnrc.yml'],\n    installCommand: 'yarn workspaces focus --production',\n  },\n  'pnpm': {\n    packageManagerFiles: ['pnpm-lock.yaml'],\n    installCommand: 'pnpm i --prod',\n  },\n  'bun': {\n    packageManagerFiles: ['bun.lockb'],\n    installCommand: 'bun install --production',\n  },\n}\n\n/**\n * Instance of CLIUI\n */\nconst ui = cliui()\n\n/**\n * The bundler class exposes the API to build an AdonisJS project.\n */\nexport class Bundler {\n  #cwd: URL\n  #cwdPath: string\n  #ts: typeof tsStatic\n  #logger = ui.logger\n  #hooks: AssemblerHooks\n  #options: BundlerOptions\n\n  /**\n   * Getting reference to colors library from logger\n   */\n  get #colors() {\n    return this.#logger.getColors()\n  }\n\n  constructor(cwd: URL, ts: typeof tsStatic, options: BundlerOptions) {\n    this.#cwd = cwd\n    this.#cwdPath = fileURLToPath(this.#cwd)\n    this.#ts = ts\n    this.#options = options\n    this.#hooks = new AssemblerHooks(options.hooks)\n  }\n\n  /**\n   * Returns the relative unix path for an absolute\n   * file path\n   */\n  #getRelativeName(filePath: string) {\n    return slash(relative(this.#cwdPath, filePath))\n  }\n\n  /**\n   * Cleans up the build directory\n   */\n  async #cleanupBuildDirectory(outDir: string) {\n    await fs.rm(outDir, { recursive: true, force: true, maxRetries: 5 })\n  }\n\n  /**\n   * Runs assets bundler command to build assets\n   */\n  async #buildAssets(): Promise<boolean> {\n    const assetsBundler = this.#options.assets\n    if (!assetsBundler?.enabled) {\n      return true\n    }\n\n    try {\n      this.#logger.info('compiling frontend assets', { suffix: assetsBundler.cmd })\n      await run(this.#cwd, {\n        stdio: 'inherit',\n        reject: true,\n        script: assetsBundler.cmd,\n        scriptArgs: assetsBundler.args,\n      })\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * Runs tsc command to build the source.\n   */\n  async #runTsc(outDir: string): Promise<boolean> {\n    try {\n      await run(this.#cwd, {\n        stdio: 'inherit',\n        script: 'tsc',\n        scriptArgs: ['--outDir', outDir],\n      })\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * Copy meta files to the output directory\n   */\n  async #copyMetaFiles(outDir: string, additionalFilesToCopy: string[]) {\n    const metaFiles = (this.#options.metaFiles || [])\n      .map((file) => file.pattern)\n      .concat(additionalFilesToCopy)\n\n    await copyFiles(metaFiles, this.#cwdPath, outDir)\n  }\n\n  /**\n   * Detect the package manager used by the project\n   * and return the lockfile name and install command\n   * related to it.\n   */\n  async #getPackageManager(client?: SupportedPackageManager) {\n    let pkgManager: string | null | undefined = client\n\n    if (!pkgManager) {\n      pkgManager = await detectPackageManager(this.#cwdPath)\n    }\n    if (!pkgManager) {\n      pkgManager = 'npm'\n    }\n\n    if (!Object.keys(SUPPORT_PACKAGE_MANAGERS).includes(pkgManager)) {\n      return null\n    }\n\n    return SUPPORT_PACKAGE_MANAGERS[pkgManager as SupportedPackageManager]\n  }\n\n  /**\n   * Rewrite the ace file since the original one\n   * is importing ts-node which is not installed\n   * in a production environment.\n   */\n  async #createAceFile(outDir: string) {\n    const aceFileLocation = join(outDir, 'ace.js')\n    const aceFileContent = dedent(/* JavaScript */ `\n      /**\n       * This file is auto-generated by the build process.\n       * If you had any custom code inside this file, then\n       * instead write it inside the \"bin/console.js\" file.\n       */\n\n      await import('./bin/console.js')\n    `)\n\n    await fs.writeFile(aceFileLocation, aceFileContent)\n    this.#logger.info('rewrited ace file', { suffix: this.#getRelativeName(aceFileLocation) })\n  }\n\n  /**\n   * Set a custom CLI UI logger\n   */\n  setLogger(logger: Logger) {\n    this.#logger = logger\n    return this\n  }\n\n  /**\n   * Bundles the application to be run in production\n   */\n  async bundle(stopOnError: boolean = true, client?: SupportedPackageManager): Promise<boolean> {\n    await this.#hooks.registerBuildHooks()\n\n    /**\n     * Step 1: Parse config file to get the build output directory\n     */\n    const config = parseConfig(this.#cwd, this.#ts)\n    if (!config) {\n      return false\n    }\n\n    /**\n     * Step 2: Cleanup existing build directory (if any)\n     */\n    const outDir = config.options.outDir || fileURLToPath(new URL('build/', this.#cwd))\n    this.#logger.info('cleaning up output directory', { suffix: this.#getRelativeName(outDir) })\n    await this.#cleanupBuildDirectory(outDir)\n\n    /**\n     * Step 3: Build frontend assets\n     */\n    if (!(await this.#buildAssets())) {\n      return false\n    }\n\n    /**\n     * Step 4: Execute build starting hook\n     */\n    await this.#hooks.onBuildStarting({ colors: ui.colors, logger: this.#logger })\n\n    /**\n     * Step 5: Build typescript source code\n     */\n    this.#logger.info('compiling typescript source', { suffix: 'tsc' })\n    const buildCompleted = await this.#runTsc(outDir)\n    await this.#createAceFile(outDir)\n\n    /**\n     * Remove incomplete build directory when tsc build\n     * failed and stopOnError is set to true.\n     */\n    if (!buildCompleted && stopOnError) {\n      await this.#cleanupBuildDirectory(outDir)\n      const instructions = ui\n        .sticker()\n        .fullScreen()\n        .drawBorder((borderChar, colors) => colors.red(borderChar))\n\n      instructions.add(\n        this.#colors.red('Cannot complete the build process as there are TypeScript errors.')\n      )\n      instructions.add(\n        this.#colors.red(\n          'Use \"--ignore-ts-errors\" flag to ignore TypeScript errors and continue the build.'\n        )\n      )\n\n      this.#logger.logError(instructions.prepare())\n      return false\n    }\n\n    /**\n     * Step 6: Copy meta files to the build directory\n     */\n    const pkgManager = await this.#getPackageManager(client)\n    const pkgFiles = pkgManager\n      ? ['package.json', ...pkgManager.packageManagerFiles]\n      : ['package.json']\n    this.#logger.info('copying meta files to the output directory')\n    await this.#copyMetaFiles(outDir, pkgFiles)\n\n    this.#logger.success('build completed')\n    this.#logger.log('')\n\n    /**\n     * Step 7: Execute build completed hook\n     */\n    await this.#hooks.onBuildCompleted({ colors: ui.colors, logger: this.#logger })\n\n    /**\n     * Next steps\n     */\n    ui.instructions()\n      .useRenderer(this.#logger.getRenderer())\n      .heading('Run the following commands to start the server in production')\n      .add(this.#colors.cyan(`cd ${this.#getRelativeName(outDir)}`))\n      .add(\n        this.#colors.cyan(\n          pkgManager ? pkgManager.installCommand : 'Install production dependencies'\n        )\n      )\n      .add(this.#colors.cyan('node bin/server.js'))\n      .render()\n\n    return true\n  }\n}\n","/*\n * @adonisjs/assembler\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport {\n  RcFile,\n  AssemblerHookNode,\n  AssemblerHookHandler,\n  SourceFileChangedHookHandler,\n} from '@adonisjs/application/types'\nimport { RuntimeException } from '@poppinss/utils'\nimport Hooks from '@poppinss/hooks'\n\nexport class AssemblerHooks {\n  #config: RcFile['hooks']\n\n  #hooks = new Hooks<{\n    onBuildStarting: [Parameters<AssemblerHookHandler>, []]\n    onBuildCompleted: [Parameters<AssemblerHookHandler>, []]\n    onDevServerStarted: [Parameters<AssemblerHookHandler>, []]\n    onSourceFileChanged: [Parameters<SourceFileChangedHookHandler>, []]\n  }>()\n\n  constructor(config: RcFile['hooks']) {\n    this.#config = config\n  }\n\n  /**\n   * Resolve the hook by importing the file and returning the default export\n   */\n  async #resolveHookNode(node: AssemblerHookNode<any>) {\n    const exports = await node()\n\n    if (!exports.default) {\n      throw new RuntimeException('Assembler hook must be defined using the default export')\n    }\n\n    return exports.default\n  }\n\n  /**\n   * Resolve hooks needed for dev-time and register them to the Hooks instance\n   */\n  async registerDevServerHooks() {\n    await Promise.all([\n      ...(this.#config?.onDevServerStarted || []).map(async (node) =>\n        this.#hooks.add('onDevServerStarted', await this.#resolveHookNode(node))\n      ),\n      ...(this.#config?.onSourceFileChanged || []).map(async (node) =>\n        this.#hooks.add('onSourceFileChanged', await this.#resolveHookNode(node))\n      ),\n    ])\n  }\n\n  /**\n   * Resolve hooks needed for build-time and register them to the Hooks instance\n   */\n  async registerBuildHooks() {\n    await Promise.all([\n      ...(this.#config?.onBuildStarting || []).map(async (node) =>\n        this.#hooks.add('onBuildStarting', await this.#resolveHookNode(node))\n      ),\n      ...(this.#config?.onBuildCompleted || []).map(async (node) =>\n        this.#hooks.add('onBuildCompleted', await this.#resolveHookNode(node))\n      ),\n    ])\n  }\n\n  /**\n   * When the dev server is started\n   */\n  async onDevServerStarted(...args: Parameters<AssemblerHookHandler>) {\n    await this.#hooks.runner('onDevServerStarted').run(...args)\n  }\n\n  /**\n   * When a source file changes\n   */\n  async onSourceFileChanged(...args: Parameters<SourceFileChangedHookHandler>) {\n    await this.#hooks.runner('onSourceFileChanged').run(...args)\n  }\n\n  /**\n   * When the build process is starting\n   */\n  async onBuildStarting(...args: Parameters<AssemblerHookHandler>) {\n    await this.#hooks.runner('onBuildStarting').run(...args)\n  }\n\n  /**\n   * When the build process is completed\n   */\n  async onBuildCompleted(...args: Parameters<AssemblerHookHandler>) {\n    await this.#hooks.runner('onBuildCompleted').run(...args)\n  }\n}\n","/*\n * @adonisjs/assembler\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { isJunk } from 'junk'\nimport fastGlob from 'fast-glob'\nimport getRandomPort from 'get-port'\nimport { existsSync } from 'node:fs'\nimport type tsStatic from 'typescript'\nimport { fileURLToPath } from 'node:url'\nimport { execaNode, execa } from 'execa'\nimport { copyFile, mkdir } from 'node:fs/promises'\nimport { EnvLoader, EnvParser } from '@adonisjs/env'\nimport { ConfigParser, Watcher } from '@poppinss/chokidar-ts'\nimport { basename, dirname, isAbsolute, join, relative } from 'node:path'\n\nimport type { RunOptions, WatchOptions } from './types.js'\nimport debug from './debug.js'\n\n/**\n * Default set of args to pass in order to run TypeScript\n * source. Used by \"run\" and \"runNode\" scripts\n */\nconst DEFAULT_NODE_ARGS = [\n  // Use ts-node/esm loader. The project must install it\n  process.versions.tsNodeMaintained\n    ? '--import=ts-node-maintained/register/esm'\n    : '--loader=ts-node/esm',\n  // Enable source maps, since TSNode source maps are broken\n  '--enable-source-maps',\n]\n\n/**\n * Disable experimental warnings, since the ts-node loader hook\n * uses an expiremental feature. We are waiting for them to\n * cut a new release and support the newer `--import` flag\n * instead\n */\nif (process.allowedNodeEnvironmentFlags.has('--disable-warning')) {\n  // supported in node>=v21.13.0\n  DEFAULT_NODE_ARGS.push('--disable-warning=ExperimentalWarning')\n} else {\n  DEFAULT_NODE_ARGS.push('--no-warnings')\n}\n\n/**\n * Parses tsconfig.json and prints errors using typescript compiler\n * host\n */\nexport function parseConfig(cwd: string | URL, ts: typeof tsStatic) {\n  const { config, error } = new ConfigParser(cwd, 'tsconfig.json', ts).parse()\n  if (error) {\n    const compilerHost = ts.createCompilerHost({})\n    console.log(ts.formatDiagnosticsWithColorAndContext([error], compilerHost))\n    return\n  }\n\n  if (config!.errors.length) {\n    const compilerHost = ts.createCompilerHost({})\n    console.log(ts.formatDiagnosticsWithColorAndContext(config!.errors, compilerHost))\n    return\n  }\n\n  return config\n}\n\n/**\n * Runs a Node.js script as a child process and inherits the stdio streams\n */\nexport function runNode(cwd: string | URL, options: RunOptions) {\n  const childProcess = execaNode(options.script, options.scriptArgs, {\n    nodeOptions: DEFAULT_NODE_ARGS.concat(options.nodeArgs),\n    preferLocal: true,\n    windowsHide: false,\n    localDir: cwd,\n    cwd,\n    reject: options.reject ?? false,\n    buffer: false,\n    stdio: options.stdio || 'inherit',\n    env: {\n      ...(options.stdio === 'pipe' ? { FORCE_COLOR: 'true' } : {}),\n      ...options.env,\n    },\n  })\n\n  return childProcess\n}\n\n/**\n * Runs a script as a child process and inherits the stdio streams\n */\nexport function run(cwd: string | URL, options: Omit<RunOptions, 'nodeArgs'>) {\n  const childProcess = execa(options.script, options.scriptArgs, {\n    preferLocal: true,\n    windowsHide: false,\n    localDir: cwd,\n    cwd,\n    buffer: false,\n    stdio: options.stdio || 'inherit',\n    env: {\n      ...(options.stdio === 'pipe' ? { FORCE_COLOR: 'true' } : {}),\n      ...options.env,\n    },\n  })\n\n  return childProcess\n}\n\n/**\n * Watches the file system using tsconfig file\n */\nexport function watch(cwd: string | URL, ts: typeof tsStatic, options: WatchOptions) {\n  const config = parseConfig(cwd, ts)\n  if (!config) {\n    return\n  }\n\n  const watcher = new Watcher(typeof cwd === 'string' ? cwd : fileURLToPath(cwd), config!)\n  const chokidar = watcher.watch(['.'], { usePolling: options.poll })\n  return { watcher, chokidar }\n}\n\n/**\n * Check if file is an .env file\n */\nexport function isDotEnvFile(filePath: string) {\n  if (filePath === '.env') {\n    return true\n  }\n\n  return filePath.includes('.env.')\n}\n\n/**\n * Returns the port to use after inspect the dot-env files inside\n * a given directory.\n *\n * A random port is used when the specified port is in use. Following\n * is the logic for finding a specified port.\n *\n * - The \"process.env.PORT\" value is used if exists.\n * - The dot-env files are loaded using the \"EnvLoader\" and the PORT\n *   value is used by iterating over all the loaded files. The\n *   iteration stops after first find.\n */\nexport async function getPort(cwd: URL): Promise<number> {\n  /**\n   * Use existing port if exists\n   */\n  if (process.env.PORT) {\n    return getRandomPort({ port: Number(process.env.PORT) })\n  }\n\n  /**\n   * Loop over files and use the port from their contents. Stops\n   * after first match\n   */\n  const files = await new EnvLoader(cwd).load()\n  for (let file of files) {\n    const envVariables = await new EnvParser(file.contents).parse()\n    if (envVariables.PORT) {\n      return getRandomPort({ port: Number(envVariables.PORT) })\n    }\n  }\n\n  /**\n   * Use 3333 as the port\n   */\n  return getRandomPort({ port: 3333 })\n}\n\n/**\n * Helper function to copy files from relative paths or glob\n * patterns\n */\nexport async function copyFiles(files: string[], cwd: string, outDir: string) {\n  /**\n   * Looping over files and create a new collection with paths\n   * and glob patterns\n   */\n  const { paths, patterns } = files.reduce<{ patterns: string[]; paths: string[] }>(\n    (result, file) => {\n      /**\n       * If file is a glob pattern, then push it to patterns\n       */\n      if (fastGlob.isDynamicPattern(file)) {\n        result.patterns.push(file)\n        return result\n      }\n\n      /**\n       * Otherwise, check if file exists and push it to paths to copy\n       */\n      if (existsSync(join(cwd, file))) {\n        result.paths.push(file)\n      }\n\n      return result\n    },\n    { patterns: [], paths: [] }\n  )\n\n  debug('copyFiles inputs: %O, paths: %O, patterns: %O', files, paths, patterns)\n\n  /**\n   * Getting list of relative paths from glob patterns\n   */\n  const filePaths = paths.concat(await fastGlob(patterns, { cwd, dot: true })).filter((file) => {\n    return !isJunk(basename(file))\n  })\n\n  /**\n   * Finally copy files to the destination by keeping the same\n   * directory structure and ignoring junk files\n   */\n  debug('copying files %O to destination \"%s\"', filePaths, outDir)\n  const copyPromises = filePaths.map(async (file) => {\n    const src = isAbsolute(file) ? file : join(cwd, file)\n    const dest = join(outDir, relative(cwd, src))\n\n    await mkdir(dirname(dest), { recursive: true })\n    return copyFile(src, dest)\n  })\n\n  return await Promise.all(copyPromises)\n}\n","/*\n * @adonisjs/assembler\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\n\nexport default debuglog('adonisjs:assembler')\n","/*\n * @adonisjs/assembler\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport picomatch from 'picomatch'\nimport { relative } from 'node:path'\nimport type tsStatic from 'typescript'\nimport prettyHrtime from 'pretty-hrtime'\nimport { fileURLToPath } from 'node:url'\nimport { type ResultPromise } from 'execa'\nimport { cliui, type Logger } from '@poppinss/cliui'\nimport type { Watcher } from '@poppinss/chokidar-ts'\n\nimport { AssemblerHooks } from './hooks.js'\nimport type { DevServerOptions } from './types.js'\nimport { AssetsDevServer } from './assets_dev_server.js'\nimport { getPort, isDotEnvFile, runNode, watch } from './helpers.js'\n\n/**\n * Instance of CLIUI\n */\nconst ui = cliui()\n\n/**\n * Exposes the API to start the development. Optionally, the watch API can be\n * used to watch for file changes and restart the development server.\n *\n * The Dev server performs the following actions\n *\n * - Assigns a random PORT, when PORT inside .env file is in use.\n * - Uses tsconfig.json file to collect a list of files to watch.\n * - Uses metaFiles from adonisrc.ts file to collect a list of files to watch.\n * - Restart HTTP server on every file change.\n */\nexport class DevServer {\n  #cwd: URL\n  #logger = ui.logger\n  #options: DevServerOptions\n\n  /**\n   * Flag to know if the dev server is running in watch\n   * mode\n   */\n  #isWatching: boolean = false\n\n  /**\n   * Script file to start the development server\n   */\n  #scriptFile: string = 'bin/server.js'\n\n  /**\n   * Picomatch matcher function to know if a file path is a\n   * meta file with reloadServer option enabled\n   */\n  #isMetaFileWithReloadsEnabled: picomatch.Matcher\n\n  /**\n   * Picomatch matcher function to know if a file path is a\n   * meta file with reloadServer option disabled\n   */\n  #isMetaFileWithReloadsDisabled: picomatch.Matcher\n\n  /**\n   * External listeners that are invoked when child process\n   * gets an error or closes\n   */\n  #onError?: (error: any) => any\n  #onClose?: (exitCode: number) => any\n\n  /**\n   * Reference to the child process\n   */\n  #httpServer?: ResultPromise\n\n  /**\n   * Reference to the watcher\n   */\n  #watcher?: ReturnType<Watcher['watch']>\n\n  /**\n   * Reference to the assets server\n   */\n  #assetsServer?: AssetsDevServer\n\n  /**\n   * Hooks to execute custom actions during the dev server lifecycle\n   */\n  #hooks: AssemblerHooks\n\n  /**\n   * Getting reference to colors library from logger\n   */\n  get #colors() {\n    return this.#logger.getColors()\n  }\n\n  constructor(cwd: URL, options: DevServerOptions) {\n    this.#cwd = cwd\n    this.#options = options\n    this.#hooks = new AssemblerHooks(options.hooks)\n    if (this.#options.hmr) {\n      this.#options.nodeArgs = this.#options.nodeArgs.concat(['--import=hot-hook/register'])\n    }\n\n    this.#isMetaFileWithReloadsEnabled = picomatch(\n      (this.#options.metaFiles || [])\n        .filter(({ reloadServer }) => reloadServer === true)\n        .map(({ pattern }) => pattern)\n    )\n\n    this.#isMetaFileWithReloadsDisabled = picomatch(\n      (this.#options.metaFiles || [])\n        .filter(({ reloadServer }) => reloadServer !== true)\n        .map(({ pattern }) => pattern)\n    )\n  }\n\n  /**\n   * Inspect if child process message is from AdonisJS HTTP server\n   */\n  #isAdonisJSReadyMessage(message: unknown): message is {\n    isAdonisJS: true\n    environment: 'web'\n    port: number\n    host: string\n    duration?: [number, number]\n  } {\n    return (\n      message !== null &&\n      typeof message === 'object' &&\n      'isAdonisJS' in message &&\n      'environment' in message &&\n      message.environment === 'web'\n    )\n  }\n\n  /**\n   * Inspect if child process message is coming from Hot Hook\n   */\n  #isHotHookMessage(message: unknown): message is {\n    type: string\n    path: string\n    paths?: string[]\n  } {\n    return (\n      message !== null &&\n      typeof message === 'object' &&\n      'type' in message &&\n      typeof message.type === 'string' &&\n      message.type.startsWith('hot-hook:')\n    )\n  }\n\n  /**\n   * Conditionally clear the terminal screen\n   */\n  #clearScreen() {\n    if (this.#options.clearScreen) {\n      process.stdout.write('\\u001Bc')\n    }\n  }\n\n  /**\n   * Starts the HTTP server\n   */\n  #startHTTPServer(port: string, mode: 'blocking' | 'nonblocking') {\n    const hooksArgs = { colors: this.#colors, logger: this.#logger }\n    this.#httpServer = runNode(this.#cwd, {\n      script: this.#scriptFile,\n      env: { PORT: port, ...this.#options.env },\n      nodeArgs: this.#options.nodeArgs,\n      reject: true,\n      scriptArgs: this.#options.scriptArgs,\n    })\n\n    this.#httpServer.on('message', async (message) => {\n      /**\n       * Handle Hot-Hook messages\n       */\n      if (this.#isHotHookMessage(message)) {\n        const path = relative(fileURLToPath(this.#cwd), message.path || message.paths?.[0]!)\n        this.#hooks.onSourceFileChanged(hooksArgs, path)\n\n        if (message.type === 'hot-hook:full-reload') {\n          this.#clearScreen()\n          this.#logger.log(`${this.#colors.green('full-reload')} ${path}`)\n          this.#restartHTTPServer(port)\n          this.#hooks.onDevServerStarted(hooksArgs)\n        } else if (message.type === 'hot-hook:invalidated') {\n          this.#logger.log(`${this.#colors.green('invalidated')} ${path}`)\n        }\n      }\n\n      /**\n       * Handle AdonisJS ready message\n       */\n      if (this.#isAdonisJSReadyMessage(message)) {\n        const host = message.host === '0.0.0.0' ? '127.0.0.1' : message.host\n\n        const displayMessage = ui\n          .sticker()\n          .useColors(this.#colors)\n          .useRenderer(this.#logger.getRenderer())\n          .add(`Server address: ${this.#colors.cyan(`http://${host}:${message.port}`)}`)\n\n        const watchMode = this.#options.hmr ? 'HMR' : this.#isWatching ? 'Legacy' : 'None'\n        displayMessage.add(`Watch Mode: ${this.#colors.cyan(watchMode)}`)\n\n        if (message.duration) {\n          displayMessage.add(`Ready in: ${this.#colors.cyan(prettyHrtime(message.duration))}`)\n        }\n\n        displayMessage.render()\n\n        await this.#hooks.onDevServerStarted({ colors: ui.colors, logger: this.#logger })\n      }\n    })\n\n    this.#httpServer\n      .then((result) => {\n        if (mode === 'nonblocking') {\n          this.#onClose?.(result.exitCode!)\n          this.#watcher?.close()\n          this.#assetsServer?.stop()\n        } else {\n          this.#logger.info('Underlying HTTP server closed. Still watching for changes')\n        }\n      })\n      .catch((error) => {\n        if (mode === 'nonblocking') {\n          this.#onError?.(error)\n          this.#watcher?.close()\n          this.#assetsServer?.stop()\n        } else {\n          this.#logger.info('Underlying HTTP server died. Still watching for changes')\n        }\n      })\n  }\n\n  /**\n   * Starts the assets server\n   */\n  #startAssetsServer() {\n    this.#assetsServer = new AssetsDevServer(this.#cwd, this.#options.assets)\n    this.#assetsServer.setLogger(this.#logger)\n    this.#assetsServer.start()\n  }\n\n  /**\n   * Restarts the HTTP server in the watch mode. Do not call this\n   * method when not in watch mode\n   */\n  #restartHTTPServer(port: string) {\n    if (this.#httpServer) {\n      this.#httpServer.removeAllListeners()\n      this.#httpServer.kill('SIGKILL')\n    }\n\n    this.#startHTTPServer(port, 'blocking')\n  }\n\n  /**\n   * Handles a non TypeScript file change\n   */\n  #handleFileChange(action: string, port: string, relativePath: string) {\n    if (isDotEnvFile(relativePath)) {\n      this.#clearScreen()\n      this.#logger.log(`${this.#colors.green(action)} ${relativePath}`)\n      this.#restartHTTPServer(port)\n      return\n    }\n\n    if (this.#isMetaFileWithReloadsEnabled(relativePath)) {\n      this.#clearScreen()\n      this.#logger.log(`${this.#colors.green(action)} ${relativePath}`)\n      this.#restartHTTPServer(port)\n      return\n    }\n\n    if (this.#isMetaFileWithReloadsDisabled(relativePath)) {\n      this.#clearScreen()\n      this.#logger.log(`${this.#colors.green(action)} ${relativePath}`)\n    }\n  }\n\n  /**\n   * Handles TypeScript source file change\n   */\n  async #handleSourceFileChange(action: string, port: string, relativePath: string) {\n    await this.#hooks.onSourceFileChanged({ colors: ui.colors, logger: this.#logger }, relativePath)\n\n    this.#clearScreen()\n    this.#logger.log(`${this.#colors.green(action)} ${relativePath}`)\n    this.#restartHTTPServer(port)\n  }\n\n  /**\n   * Set a custom CLI UI logger\n   */\n  setLogger(logger: Logger) {\n    this.#logger = logger\n    this.#assetsServer?.setLogger(logger)\n    return this\n  }\n\n  /**\n   * Add listener to get notified when dev server is\n   * closed\n   */\n  onClose(callback: (exitCode: number) => any): this {\n    this.#onClose = callback\n    return this\n  }\n\n  /**\n   * Add listener to get notified when dev server exists\n   * with an error\n   */\n  onError(callback: (error: any) => any): this {\n    this.#onError = callback\n    return this\n  }\n\n  /**\n   * Close watchers and running child processes\n   */\n  async close() {\n    await this.#watcher?.close()\n    this.#assetsServer?.stop()\n    if (this.#httpServer) {\n      this.#httpServer.removeAllListeners()\n      this.#httpServer.kill('SIGKILL')\n    }\n  }\n\n  /**\n   * Start the development server\n   */\n  async start() {\n    await this.#hooks.registerDevServerHooks()\n\n    this.#clearScreen()\n    this.#logger.info('starting HTTP server...')\n    this.#startHTTPServer(String(await getPort(this.#cwd)), 'nonblocking')\n    this.#startAssetsServer()\n  }\n\n  /**\n   * Start the development server in watch mode\n   */\n  async startAndWatch(ts: typeof tsStatic, options?: { poll: boolean }) {\n    await this.#hooks.registerDevServerHooks()\n\n    const port = String(await getPort(this.#cwd))\n    this.#isWatching = true\n\n    this.#clearScreen()\n\n    this.#logger.info('starting HTTP server...')\n    this.#startHTTPServer(port, 'blocking')\n\n    this.#startAssetsServer()\n\n    /**\n     * Create watcher using tsconfig.json file\n     */\n    const output = watch(this.#cwd, ts, options || {})\n    if (!output) {\n      this.#onClose?.(1)\n      return\n    }\n\n    /**\n     * Storing reference to watcher, so that we can close it\n     * when HTTP server exists with error\n     */\n    this.#watcher = output.chokidar\n\n    /**\n     * Notify the watcher is ready\n     */\n    output.watcher.on('watcher:ready', () => {\n      this.#logger.info('watching file system for changes...')\n    })\n\n    /**\n     * Cleanup when watcher dies\n     */\n    output.chokidar.on('error', (error) => {\n      this.#logger.warning('file system watcher failure')\n      this.#logger.fatal(error)\n      this.#onError?.(error)\n      output.chokidar.close()\n    })\n\n    /**\n     * Changes in TypeScript source file\n     */\n    output.watcher.on('source:add', ({ relativePath }) =>\n      this.#handleSourceFileChange('add', port, relativePath)\n    )\n    output.watcher.on('source:change', ({ relativePath }) =>\n      this.#handleSourceFileChange('update', port, relativePath)\n    )\n    output.watcher.on('source:unlink', ({ relativePath }) =>\n      this.#handleSourceFileChange('delete', port, relativePath)\n    )\n\n    /**\n     * Changes in non-TypeScript source files\n     */\n    output.watcher.on('add', ({ relativePath }) =>\n      this.#handleFileChange('add', port, relativePath)\n    )\n    output.watcher.on('change', ({ relativePath }) =>\n      this.#handleFileChange('update', port, relativePath)\n    )\n    output.watcher.on('unlink', ({ relativePath }) =>\n      this.#handleFileChange('delete', port, relativePath)\n    )\n  }\n}\n","/*\n * @adonisjs/core\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { ResultPromise } from 'execa'\nimport { type Logger, cliui } from '@poppinss/cliui'\n\nimport { run } from './helpers.js'\nimport type { AssetsBundlerOptions } from './types.js'\n\n/**\n * Instance of CLIUI\n */\nconst ui = cliui()\n\n/**\n * Exposes the API to start the development server for processing assets during\n * development.\n *\n * - Here we are running the assets dev server in a child process.\n * - Piping the output from the child process and reformatting it before writing it to\n *   process streams.\n *\n * AssetsDevServer is agnostic and can run any assets dev server. Be it Vite or Encore or\n * even Webpack directly.\n */\nexport class AssetsDevServer {\n  #cwd: URL\n  #logger = ui.logger\n  #options?: AssetsBundlerOptions\n  #devServer?: ResultPromise\n\n  /**\n   * Getting reference to colors library from logger\n   */\n  get #colors() {\n    return this.#logger.getColors()\n  }\n\n  constructor(cwd: URL, options?: AssetsBundlerOptions) {\n    this.#cwd = cwd\n    this.#options = options\n  }\n\n  /**\n   * Logs messages from vite dev server stdout and stderr\n   */\n  #logViteDevServerMessage(data: Buffer) {\n    const dataString = data.toString()\n    const lines = dataString.split('\\n')\n\n    /**\n     * Put a wrapper around vite network address log\n     */\n    if (dataString.includes('Local') && dataString.includes('Network')) {\n      const sticker = ui.sticker().useColors(this.#colors).useRenderer(this.#logger.getRenderer())\n\n      lines.forEach((line: string) => {\n        if (line.trim()) {\n          sticker.add(line)\n        }\n      })\n\n      sticker.render()\n      return\n    }\n\n    /**\n     * Logging VITE ready in message with proper\n     * spaces and newlines\n     */\n    if (dataString.includes('ready in')) {\n      console.log('')\n      console.log(dataString.trim())\n      return\n    }\n\n    /**\n     * Log rest of the lines\n     */\n    lines.forEach((line: string) => {\n      if (line.trim()) {\n        console.log(line)\n      }\n    })\n  }\n\n  /**\n   * Logs messages from assets dev server stdout and stderr\n   */\n  #logAssetsDevServerMessage(data: Buffer) {\n    const dataString = data.toString()\n    const lines = dataString.split('\\n')\n    lines.forEach((line: string) => {\n      if (line.trim()) {\n        console.log(line)\n      }\n    })\n  }\n\n  /**\n   * Set a custom CLI UI logger\n   */\n  setLogger(logger: Logger) {\n    this.#logger = logger\n    return this\n  }\n\n  /**\n   * Starts the assets bundler server. The assets bundler server process is\n   * considered as the secondary process and therefore we do not perform\n   * any cleanup if it dies.\n   */\n  start() {\n    if (!this.#options?.enabled) {\n      return\n    }\n\n    this.#logger.info(`starting \"${this.#options.driver}\" dev server...`)\n\n    /**\n     * Create child process\n     */\n    this.#devServer = run(this.#cwd, {\n      script: this.#options.cmd,\n      reject: true,\n\n      /**\n       * We do not inherit the stdio for vite and encore, because in\n       * inherit mode they own the stdin and interrupts the\n       * `Ctrl + C` command.\n       */\n      stdio: 'pipe',\n      scriptArgs: this.#options.args,\n    })\n\n    /**\n     * Log child process messages\n     */\n    this.#devServer.stdout?.on('data', (data) => {\n      if (this.#options!.driver === 'vite') {\n        this.#logViteDevServerMessage(data)\n      } else {\n        this.#logAssetsDevServerMessage(data)\n      }\n    })\n\n    this.#devServer.stderr?.on('data', (data) => {\n      if (this.#options!.driver === 'vite') {\n        this.#logViteDevServerMessage(data)\n      } else {\n        this.#logAssetsDevServerMessage(data)\n      }\n    })\n\n    this.#devServer\n      .then((result) => {\n        this.#logger.warning(\n          `\"${this.#options!.driver}\" dev server closed with status code \"${result.exitCode}\"`\n        )\n      })\n      .catch((error) => {\n        this.#logger.warning(`unable to connect to \"${this.#options!.driver}\" dev server`)\n        this.#logger.fatal(error)\n      })\n  }\n\n  /**\n   * Stop the dev server\n   */\n  stop() {\n    if (this.#devServer) {\n      this.#devServer.removeAllListeners()\n      this.#devServer.kill('SIGKILL')\n      this.#devServer = undefined\n    }\n  }\n}\n","/*\n * @adonisjs/assembler\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport picomatch from 'picomatch'\nimport type tsStatic from 'typescript'\nimport { type ResultPromise } from 'execa'\nimport { cliui, type Logger } from '@poppinss/cliui'\nimport type { Watcher } from '@poppinss/chokidar-ts'\n\nimport type { TestRunnerOptions } from './types.js'\nimport { AssetsDevServer } from './assets_dev_server.js'\nimport { getPort, isDotEnvFile, runNode, watch } from './helpers.js'\n\n/**\n * Instance of CLIUI\n */\nconst ui = cliui()\n\n/**\n * Exposes the API to run Japa tests and optionally watch for file\n * changes to re-run the tests.\n *\n * The watch mode functions as follows.\n *\n *  - If the changed file is a test file, then only tests for that file\n *    will be re-run.\n *  - Otherwise, all tests will re-run with respect to the initial\n *    filters applied when running the `node ace test` command.\n *\n */\nexport class TestRunner {\n  #cwd: URL\n  #logger = ui.logger\n  #options: TestRunnerOptions\n\n  /**\n   * The script file to run as a child process\n   */\n  #scriptFile: string = 'bin/test.js'\n\n  /**\n   * Pico matcher function to check if the filepath is\n   * part of the `metaFiles` glob patterns\n   */\n  #isMetaFile: picomatch.Matcher\n\n  /**\n   * Pico matcher function to check if the filepath is\n   * part of a test file.\n   */\n  #isTestFile: picomatch.Matcher\n\n  /**\n   * Arguments to pass to the \"bin/test.js\" file.\n   */\n  #scriptArgs: string[]\n\n  /**\n   * Set of initial filters applied when running the test\n   * command. In watch mode, we will append an additional\n   * filter to run tests only for the file that has been\n   * changed.\n   */\n  #initialFiltersArgs: string[]\n\n  /**\n   * In watch mode, after a file is changed, we wait for the current\n   * set of tests to finish before triggering a re-run. Therefore,\n   * we use this flag to know if we are already busy in running\n   * tests and ignore file-changes.\n   */\n  #isBusy: boolean = false\n\n  /**\n   * External listeners that are invoked when child process\n   * gets an error or closes\n   */\n  #onError?: (error: any) => any\n  #onClose?: (exitCode: number) => any\n\n  /**\n   * Reference to the test script child process\n   */\n  #testScript?: ResultPromise\n\n  /**\n   * Reference to the watcher\n   */\n  #watcher?: ReturnType<Watcher['watch']>\n\n  /**\n   * Reference to the assets server\n   */\n  #assetsServer?: AssetsDevServer\n\n  /**\n   * Getting reference to colors library from logger\n   */\n  get #colors() {\n    return this.#logger.getColors()\n  }\n\n  constructor(cwd: URL, options: TestRunnerOptions) {\n    this.#cwd = cwd\n    this.#options = options\n\n    this.#isMetaFile = picomatch((this.#options.metaFiles || []).map(({ pattern }) => pattern))\n\n    /**\n     * Create a test file watch by collection all the globs\n     * used by all the suites. However, if a suite filter\n     * was used, then we only collect glob for the mentioned\n     * suites.\n     */\n    this.#isTestFile = picomatch(\n      this.#options.suites\n        .filter((suite) => {\n          if (this.#options.filters.suites) {\n            return this.#options.filters.suites.includes(suite.name)\n          }\n          return true\n        })\n        .map((suite) => suite.files)\n        .flat(1)\n    )\n\n    this.#scriptArgs = this.#convertOptionsToArgs().concat(this.#options.scriptArgs)\n    this.#initialFiltersArgs = this.#convertFiltersToArgs(this.#options.filters)\n  }\n\n  /**\n   * Convert test runner options to the CLI args\n   */\n  #convertOptionsToArgs() {\n    const args: string[] = []\n\n    if (this.#options.reporters) {\n      args.push('--reporters')\n      args.push(this.#options.reporters.join(','))\n    }\n\n    if (this.#options.timeout !== undefined) {\n      args.push('--timeout')\n      args.push(String(this.#options.timeout))\n    }\n\n    if (this.#options.failed) {\n      args.push('--failed')\n    }\n\n    if (this.#options.retries !== undefined) {\n      args.push('--retries')\n      args.push(String(this.#options.retries))\n    }\n\n    return args\n  }\n\n  /**\n   * Converts all known filters to CLI args.\n   *\n   * The following code snippet may seem like repetitive code. But, it\n   * is done intentionally to have visibility around how each filter\n   * is converted to an arg.\n   */\n  #convertFiltersToArgs(filters: TestRunnerOptions['filters']): string[] {\n    const args: string[] = []\n\n    if (filters.suites) {\n      args.push(...filters.suites)\n    }\n\n    if (filters.files) {\n      args.push('--files')\n      args.push(filters.files.join(','))\n    }\n\n    if (filters.groups) {\n      args.push('--groups')\n      args.push(filters.groups.join(','))\n    }\n\n    if (filters.tags) {\n      args.push('--tags')\n      args.push(filters.tags.join(','))\n    }\n\n    if (filters.tests) {\n      args.push('--tests')\n      args.push(filters.tests.join(','))\n    }\n\n    return args\n  }\n\n  /**\n   * Conditionally clear the terminal screen\n   */\n  #clearScreen() {\n    if (this.#options.clearScreen) {\n      process.stdout.write('\\u001Bc')\n    }\n  }\n\n  /**\n   * Runs tests\n   */\n  #runTests(\n    port: string,\n    mode: 'blocking' | 'nonblocking',\n    filters?: TestRunnerOptions['filters']\n  ) {\n    this.#isBusy = true\n\n    /**\n     * If inline filters are defined, then we ignore the\n     * initial filters\n     */\n    const scriptArgs = filters\n      ? this.#convertFiltersToArgs(filters).concat(this.#scriptArgs)\n      : this.#initialFiltersArgs.concat(this.#scriptArgs)\n\n    this.#testScript = runNode(this.#cwd, {\n      script: this.#scriptFile,\n      reject: true,\n      env: { PORT: port, ...this.#options.env },\n      nodeArgs: this.#options.nodeArgs,\n      scriptArgs,\n    })\n\n    this.#testScript\n      .then((result) => {\n        if (mode === 'nonblocking') {\n          this.#onClose?.(result.exitCode!)\n          this.close()\n        }\n      })\n      .catch((error) => {\n        if (mode === 'nonblocking') {\n          this.#onError?.(error)\n          this.close()\n        }\n      })\n      .finally(() => {\n        this.#isBusy = false\n      })\n  }\n\n  /**\n   * Re-run tests with additional inline filters. Should be\n   * executed in watch mode only.\n   */\n  #rerunTests(port: string, filters?: TestRunnerOptions['filters']) {\n    if (this.#testScript) {\n      this.#testScript.removeAllListeners()\n      this.#testScript.kill('SIGKILL')\n    }\n\n    this.#runTests(port, 'blocking', filters)\n  }\n\n  /**\n   * Starts the assets server\n   */\n  #startAssetsServer() {\n    this.#assetsServer = new AssetsDevServer(this.#cwd, this.#options.assets)\n    this.#assetsServer.setLogger(this.#logger)\n    this.#assetsServer.start()\n  }\n\n  /**\n   * Handles a non TypeScript file change\n   */\n  #handleFileChange(action: string, port: string, relativePath: string) {\n    if (this.#isBusy) {\n      return\n    }\n\n    if (isDotEnvFile(relativePath) || this.#isMetaFile(relativePath)) {\n      this.#clearScreen()\n      this.#logger.log(`${this.#colors.green(action)} ${relativePath}`)\n      this.#rerunTests(port)\n    }\n  }\n\n  /**\n   * Handles TypeScript source file change\n   */\n  #handleSourceFileChange(action: string, port: string, relativePath: string) {\n    if (this.#isBusy) {\n      return\n    }\n\n    this.#clearScreen()\n    this.#logger.log(`${this.#colors.green(action)} ${relativePath}`)\n\n    /**\n     * If changed file is a test file after considering the initial filters,\n     * then only run that file\n     */\n    if (this.#isTestFile(relativePath)) {\n      this.#rerunTests(port, {\n        ...this.#options.filters,\n        files: [relativePath],\n      })\n      return\n    }\n\n    this.#rerunTests(port)\n  }\n\n  /**\n   * Set a custom CLI UI logger\n   */\n  setLogger(logger: Logger) {\n    this.#logger = logger\n    this.#assetsServer?.setLogger(logger)\n    return this\n  }\n\n  /**\n   * Add listener to get notified when dev server is\n   * closed\n   */\n  onClose(callback: (exitCode: number) => any): this {\n    this.#onClose = callback\n    return this\n  }\n\n  /**\n   * Add listener to get notified when dev server exists\n   * with an error\n   */\n  onError(callback: (error: any) => any): this {\n    this.#onError = callback\n    return this\n  }\n\n  /**\n   * Close watchers and running child processes\n   */\n  async close() {\n    await this.#watcher?.close()\n    this.#assetsServer?.stop()\n    if (this.#testScript) {\n      this.#testScript.removeAllListeners()\n      this.#testScript.kill('SIGKILL')\n    }\n  }\n\n  /**\n   * Runs tests\n   */\n  async run() {\n    const port = String(await getPort(this.#cwd))\n\n    this.#clearScreen()\n    this.#startAssetsServer()\n\n    this.#logger.info('booting application to run tests...')\n    this.#runTests(port, 'nonblocking')\n  }\n\n  /**\n   * Run tests in watch mode\n   */\n  async runAndWatch(ts: typeof tsStatic, options?: { poll: boolean }) {\n    const port = String(await getPort(this.#cwd))\n\n    this.#clearScreen()\n    this.#startAssetsServer()\n\n    this.#logger.info('booting application to run tests...')\n    this.#runTests(port, 'blocking')\n\n    /**\n     * Create watcher using tsconfig.json file\n     */\n    const output = watch(this.#cwd, ts, options || {})\n    if (!output) {\n      this.#onClose?.(1)\n      return\n    }\n\n    /**\n     * Storing reference to watcher, so that we can close it\n     * when HTTP server exists with error\n     */\n    this.#watcher = output.chokidar\n\n    /**\n     * Notify the watcher is ready\n     */\n    output.watcher.on('watcher:ready', () => {\n      this.#logger.info('watching file system for changes...')\n    })\n\n    /**\n     * Cleanup when watcher dies\n     */\n    output.chokidar.on('error', (error) => {\n      this.#logger.warning('file system watcher failure')\n      this.#logger.fatal(error)\n      this.#onError?.(error)\n      output.chokidar.close()\n    })\n\n    /**\n     * Changes in TypeScript source file\n     */\n    output.watcher.on('source:add', ({ relativePath }) =>\n      this.#handleSourceFileChange('add', port, relativePath)\n    )\n    output.watcher.on('source:change', ({ relativePath }) =>\n      this.#handleSourceFileChange('update', port, relativePath)\n    )\n    output.watcher.on('source:unlink', ({ relativePath }) =>\n      this.#handleSourceFileChange('delete', port, relativePath)\n    )\n\n    /**\n     * Changes in non-TypeScript source files\n     */\n    output.watcher.on('add', ({ relativePath }) =>\n      this.#handleFileChange('add', port, relativePath)\n    )\n    output.watcher.on('change', ({ relativePath }) =>\n      this.#handleFileChange('update', port, relativePath)\n    )\n    output.watcher.on('unlink', ({ relativePath }) =>\n      this.#handleFileChange('delete', port, relativePath)\n    )\n  }\n}\n"],"mappings":"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","names":["fileURLToPath","join","relative","fileURLToPath","relative","join","relative","fileURLToPath","cliui","cliui","ui","cliui","ui","cliui","relative","fileURLToPath","picomatch","cliui","ui","cliui","picomatch"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/chokidar-ts/build/index.js":{"lineLengths":[17,27,32,32,42,0,15,37,44,0,30,26,30,33,34,32,11,12,12,5,79,66,32,5,21,5,77,23,5,48,31,36,19,5,35,19,5,16,5,33,28,52,31,49,51,8,6,31,49,51,8,6,3,5,72,65,11,5,17,31,82,59,3,5,65,52,5,25,31,53,23,13,5,26,85,3,5,55,5,20,31,57,40,3,5,74,67,5,26,31,81,3,5,43,5,12,30,3,2,0,17,32,86,38,7,10,22,28,54,60,105,100,12,20,26,66,15,15,29,7,3,5,61,4,62,35,5,27,64,18,5,67,18,5,17,3,5,31,5,58,35,7,42,23,27,8,20,6,71,56,3,5,28,5,60,28,44,79,12,52,82,5,3,5,58,5,24,47,91,53,68,13,5,58,54,3,5,60,16,5,23,47,91,51,71,13,5,56,57,3,5,53,5,23,47,91,51,71,13,5,56,45,76,3,5,40,5,47,72,31,37,33,7,55,57,57,19,3,2,0,23,42,41,26,7,18,6,40,67,42,18,3,5,71,5,26,29,68,67,45,28,7,24,40,45,77,7,6,58,3,2,8,15,21,9,2,33],"data":{"version":3,"sources":["file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/chokidar-ts/src/watcher.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/chokidar-ts/src/debug.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/chokidar-ts/src/source_files_manager.ts","file:///Users/liufangchen/Desktop/soft3888/sprint2/soft3888/backend/node_modules/@poppinss/chokidar-ts/src/config_parser.ts"],"sourcesContent":["/*\n * @poppinss/chokidar-ts\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport slash from 'slash'\nimport chokidar from 'chokidar'\nimport Emittery from 'emittery'\nimport { join } from 'node:path'\nimport tsStatic from 'typescript'\n\nimport debug from './debug.js'\nimport type { WatcherEvents } from './types.js'\nimport { SourceFilesManager } from './source_files_manager.js'\n\nconst DEFAULT_INCLUDES = ['**/*']\nconst DEFAULT_EXCLUDES = ['node_modules/**', 'bower_components/**', 'jspm_packages/**']\n\n/**\n * Exposes the API to build the typescript project and then watch it\n * for changes.\n */\nexport class Watcher extends Emittery<WatcherEvents & { 'watcher:ready': undefined }> {\n  #cwd: string\n  #config: tsStatic.ParsedCommandLine\n  #sourceFilesManager: SourceFilesManager\n\n  constructor(cwd: string, config: tsStatic.ParsedCommandLine) {\n    const outDir = config.raw.compilerOptions?.outDir\n    const includes = config.raw.include || DEFAULT_INCLUDES\n    const excludes =\n      config.raw.exclude || (outDir ? DEFAULT_EXCLUDES.concat(outDir) : DEFAULT_EXCLUDES)\n\n    debug('initiating watcher %O', { includes, excludes, outDir, files: config.fileNames })\n\n    super()\n    this.#cwd = cwd\n    this.#config = config\n    this.#sourceFilesManager = new SourceFilesManager(this.#cwd, {\n      includes,\n      excludes,\n      files: config.fileNames,\n    })\n  }\n\n  /**\n   * Returns a boolean telling if it is a script file or not.\n   *\n   * We check for the `compilerOptions.allowJs` before marking\n   * `.js` files as a script files.\n   */\n  #isScriptFile(filePath: string): boolean {\n    if (filePath.endsWith('.ts') || filePath.endsWith('.tsx')) {\n      return true\n    }\n\n    if (this.#config.options.allowJs && filePath.endsWith('.js')) {\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Initiates chokidar watcher\n   */\n  #initiateWatcher(\n    watchPattern: string | string[] = ['.'],\n    watcherOptions?: chokidar.WatchOptions\n  ) {\n    watcherOptions = Object.assign(\n      {\n        ignored: this.#config.raw.exclude,\n        cwd: this.#cwd,\n        ignoreInitial: true,\n      },\n      watcherOptions\n    )\n\n    debug('initating watcher with %j options', watcherOptions)\n    return chokidar.watch(watchPattern, watcherOptions)\n  }\n\n  /**\n   * Process the source file\n   */\n  async #processSourceFile(absPath: string, relativePath: string, trigger: 'add' | 'change') {\n    /**\n     * Update the source files manager to add the new file or\n     * bump it's version.\n     *\n     * Bumping the version is important, so that the typescript compiler\n     * referencing the source files manager should re-read the file\n     * from disk\n     */\n    if (trigger === 'add') {\n      this.#sourceFilesManager.add(absPath)\n      this.emit('source:add', { relativePath: slash(relativePath), absPath })\n    } else {\n      this.#sourceFilesManager.bumpVersion(absPath)\n      this.emit('source:change', { relativePath: slash(relativePath), absPath })\n    }\n  }\n\n  /**\n   * Invoked when chokidar notifies for a new file addtion\n   */\n  #onNewFile(filePath: string) {\n    const absPath = join(this.#cwd, filePath)\n\n    if (!this.#isScriptFile(filePath) || !this.#sourceFilesManager.isSourceFile(absPath)) {\n      debug('new file added \"%s\"', filePath)\n      this.emit('add', { relativePath: slash(filePath), absPath })\n      return\n    }\n\n    debug('new source file added \"%s\"', filePath)\n    this.#processSourceFile(absPath, filePath, 'add')\n  }\n\n  /**\n   * Invoked when chokidar notifies for changes the existing\n   * source file\n   */\n  #onChange(filePath: string) {\n    const absPath = join(this.#cwd, filePath)\n\n    if (!this.#isScriptFile(filePath) || !this.#sourceFilesManager.isSourceFile(absPath)) {\n      debug('file changed \"%s\"', filePath)\n      this.emit('change', { relativePath: slash(filePath), absPath })\n      return\n    }\n\n    debug('source file changed \"%s\"', filePath)\n    this.#processSourceFile(absPath, filePath, 'change')\n  }\n\n  /**\n   * Invoked when chokidar notifies for file deletion\n   */\n  #onRemove(filePath: string) {\n    const absPath = join(this.#cwd, filePath)\n\n    if (!this.#isScriptFile(filePath) || !this.#sourceFilesManager.isSourceFile(absPath)) {\n      debug('file removed \"%s\"', filePath)\n      this.emit('unlink', { relativePath: slash(filePath), absPath })\n      return\n    }\n\n    debug('source file removed \"%s\"', filePath)\n\n    /**\n     * Clean up tracking for a given file\n     */\n    this.#sourceFilesManager.remove(absPath)\n\n    /**\n     * Notify subscribers\n     */\n    this.emit('source:unlink', { relativePath: slash(filePath), absPath })\n  }\n\n  /**\n   * Build and watch project for changes\n   */\n  watch(watchPattern: string | string[] = ['.'], watcherOptions?: chokidar.WatchOptions) {\n    const watcher = this.#initiateWatcher(watchPattern, watcherOptions)\n\n    watcher.on('ready', () => {\n      debug('watcher ready')\n      this.emit('watcher:ready')\n    })\n\n    watcher.on('add', (path: string) => this.#onNewFile(path))\n    watcher.on('change', (path: string) => this.#onChange(path))\n    watcher.on('unlink', (path: string) => this.#onRemove(path))\n\n    return watcher\n  }\n}\n","/*\n * @poppinss/chokidar-ts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { debuglog } from 'node:util'\n\nexport default debuglog('chokidar:ts')\n","/*\n * @poppinss/chokidar-ts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport slash from 'slash'\nimport memoize from 'memoize'\nimport { join } from 'node:path'\nimport picomatch from 'picomatch'\nimport type tsStatic from 'typescript'\n\nimport debug from './debug.js'\nimport type { SourceFilesManagerOptions } from './types.js'\n\n/**\n * Exposes the API to manage the source files for a typescript project.\n * All paths are stored with unix paths\n */\nexport class SourceFilesManager {\n  #appRoot: string\n  #included: picomatch.Matcher\n  #excluded: picomatch.Matcher\n\n  /**\n   * A collection of project files collected as part of the first scan. We need\n   * an object here, so that we can share it by reference with the\n   * typescript language server.\n   */\n  #projectFiles: tsStatic.MapLike<{ version: number }> = {}\n\n  /**\n   * A memoized function to match the file path against included and excluded\n   * picomatch patterns\n   */\n  #matchAgainstPattern = memoize((filePath: string) => {\n    filePath = slash(filePath)\n\n    if (!this.#included(filePath)) {\n      return false\n    }\n\n    if (this.#excluded(filePath)) {\n      return false\n    }\n\n    return true\n  })\n\n  constructor(appRoot: string, options: SourceFilesManagerOptions) {\n    this.#appRoot = appRoot\n\n    options.files.forEach((file) => this.add(file))\n\n    this.#included = picomatch(\n      (options.includes || []).map((pattern) => {\n        return slash(join(this.#appRoot, pattern))\n      })\n    )\n\n    this.#excluded = picomatch(\n      (options.excludes || []).map((pattern) => {\n        return slash(join(this.#appRoot, pattern))\n      })\n    )\n  }\n\n  /**\n   * Add a new source file to the list of project files. This is helpful\n   * when new source files are added after the initial typescript\n   * build.\n   */\n  add(filePath: string): void {\n    filePath = slash(filePath)\n    this.#projectFiles[filePath] = this.#projectFiles[filePath] || { version: 1 }\n    debug('adding new source file \"%s\"', filePath)\n  }\n\n  /**\n   * Bumps the project file version. This is required to tell the\n   * typescript compiler that file has been changed.\n   */\n  bumpVersion(filePath: string) {\n    filePath = slash(filePath)\n    const projectFile = this.#projectFiles[filePath]\n    if (!projectFile) {\n      return\n    }\n\n    projectFile.version++\n    debug('source file version bump \"%s:%d\"', filePath, projectFile.version)\n  }\n\n  /**\n   * Remove file from the list of existing source files\n   */\n  remove(filePath: string) {\n    filePath = slash(filePath)\n    debug('removing source file \"%s\"', filePath)\n    delete this.#projectFiles[filePath]\n  }\n\n  /**\n   * Returns true when filePath is part of the source files after checking\n   * them against `includes`, `excludes` and custom set of `files`.\n   */\n  isSourceFile(filePath: string): boolean {\n    filePath = slash(filePath)\n    return !!this.#projectFiles[filePath] || this.#matchAgainstPattern(filePath)\n  }\n\n  /**\n   * Returns a copy of project source files\n   */\n  toJSON() {\n    return this.#projectFiles\n  }\n}\n","/*\n * @poppinss/chokidar-ts\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { join } from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport type tsStatic from 'typescript'\n\nimport debug from './debug.js'\n\n/**\n * Exposes the API to parse typescript config file using the\n * TypeScript's official compiler.\n */\nexport class ConfigParser {\n  #cwd: string\n  #configFileName: string\n  #ts: typeof tsStatic\n\n  constructor(cwd: string | URL, configFileName: string, ts: typeof tsStatic) {\n    this.#cwd = typeof cwd === 'string' ? cwd : fileURLToPath(cwd)\n    this.#configFileName = configFileName\n    this.#ts = ts\n  }\n\n  /**\n   * Parse file. The errors the return back inside the `error` property\n   */\n  parse(optionsToExtend?: tsStatic.CompilerOptions): {\n    error: tsStatic.Diagnostic | null\n    config?: tsStatic.ParsedCommandLine\n  } {\n    let hardException: null | tsStatic.Diagnostic = null\n    debug('parsing config file \"%s\"', this.#configFileName)\n\n    const parsedConfig = this.#ts.getParsedCommandLineOfConfigFile(\n      join(this.#cwd, this.#configFileName),\n      optionsToExtend || {},\n      {\n        ...this.#ts.sys,\n        useCaseSensitiveFileNames: true,\n        getCurrentDirectory: () => this.#cwd,\n        onUnRecoverableConfigFileDiagnostic: (error) => (hardException = error),\n      }\n    )\n\n    return { config: parsedConfig, error: hardException }\n  }\n}\n"],"mappings":"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","names":["slash","join","slash","join","join","join"],"sourceRoot":""},"url":null,"sourceURL":null}}}
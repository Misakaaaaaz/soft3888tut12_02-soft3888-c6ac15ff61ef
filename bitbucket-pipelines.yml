# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: node:lts-alpine

pipelines:
  default:
    - parallel:
      - step:
          name: 'Build and Test the Frontend'
          script:
            - cd frontend
            - corepack enable
            - corepack prepare yarn@stable --activate
            - yarn install
            - yarn run build
            - yarn run coverage
      - step:
          name: 'Lint Frontend'
          script:
            - cd frontend
            - corepack enable
            - corepack prepare yarn@stable --activate
            - yarn install
            - yarn run lint
      - step:
          name: 'Build and Test the Backend'
          script:
            - cd backend
            - corepack enable
            - corepack prepare yarn@stable --activate
            - yarn install
            - yarn run build
            - node ace migration:fresh
            - yarn run coverage
      - step:
          name: 'Lint Backend'
          script:
            - cd backend
            - corepack enable
            - corepack prepare yarn@stable --activate
            - yarn install
            - yarn run lint
      # - step:
      #     name: 'Security scan'
      #     script:
      #       - echo "Your security scan goes here..."

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    # - step:
    #     name: 'Deployment to Staging'
    #     deployment: staging
    #     script:
    #       - echo "Your deployment to staging script goes here..."
    # - step:
    #     name: 'Deployment to Production'
    #     deployment: production
    #     trigger: 'manual'
    #     script:
    #       - echo "Your deployment to production script goes here..."
